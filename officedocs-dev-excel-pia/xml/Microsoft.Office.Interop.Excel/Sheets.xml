<Type Name="Sheets" FullName="Microsoft.Office.Interop.Excel.Sheets">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db6b3bb11f3b424395c8a07057d1712212b447b0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Sheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Sheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Sheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Sheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Sheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0bb94-101">指定されたブックまたは作業中のブックにあるすべてのシートのコレクションです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bb94-101">A collection of all the sheets in the specified or active workbook.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="0bb94-102">
          <b>Sheets</b>コレクションを含めることができます<see cref="T:Microsoft.Office.Interop.Excel.Chart" />または<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />のオブジェクトです。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-102">The <b>Sheets</b> collection can contain <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects.</span>
        </span>
        <span data-ttu-id="0bb94-103">
          <b>Sheets</b>コレクションは、任意の種類のシートを取得するときに便利です。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-103">The <b>Sheets</b> collection is useful when you want to return sheets of any type.</span>
        </span>
        <span data-ttu-id="0bb94-104">1 つだけの種類のシートで作業をする場合は、その種類のシートのオブジェクトのトピックを参照してください。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-104">If you need to work with sheets of only one type, see the object topic for that sheet type.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="0bb94-105">使用して、 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> 、 <b>Sheets</b>コレクションを返すプロパティです。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-105">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> property to return the <b>Sheets</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="0bb94-106">使用して、<see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" />新しいシートを作成し、コレクションに追加する方法です。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new sheet and add it to the collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="0bb94-107">
          <b>シート</b>を使用して (<paramref name="index" />)、<paramref name="index" />シートの名前またはインデックス番号を 1 つを返すには、<see cref="T:Microsoft.Office.Interop.Excel.Chart" />または<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />オブジェクトです。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-107">Use <b>Sheets</b>(<paramref name="index" />), where <paramref name="index" /> is the sheet name or index number, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="0bb94-108">
          <b>シート</b>を使用して (<paramref name="array" />) を複数のシートを指定します。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bb94-108">Use <b>Sheets</b>(<paramref name="array" />) to specify more than one sheet.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="0bb94-109">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-109">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="0bb94-110">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="0bb94-111">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-112">指定したオブジェクトのシートの直前に、新しいグラフ シートを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-112">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0bb94-113">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-114">指定したオブジェクトのシートの直後に、新しいグラフ シートを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-114">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="0bb94-115">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-116">追加するシートの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-116">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="0bb94-117">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-117">The default value is one.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0bb94-118">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-119">シートの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-119">Specifies the sheet type.</span>
          </span>
          <span data-ttu-id="0bb94-120">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />定数: <b>xlWorksheet</b>、 <b>xlChart</b>、 <b>xlExcel4MacroSheet</b>、 <b>xlExcel4IntlMacroSheet</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-120">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span>
          </span>
          <span data-ttu-id="0bb94-121">既存のテンプレートに基いたシートを挿入する場合は、テンプレートへのパスを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-121">If you are inserting a sheet based on an existing template, specify the path to the template.</span>
          </span>
          <span data-ttu-id="0bb94-122">既定値は<b>xlWorksheet</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-122">The default value is <b>xlWorksheet</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-p106">新しいワークシート、グラフ シート、またはマクロ シートを作成します。新しいワークシートがアクティブ シートになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-p106">Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-125">場合<paramref name="Before" />と<paramref name="After" />は、両方とも省略すると、新しいシートがアクティブ シートの直前に挿入します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-125">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <param name="Count">To be added.</param>
        <param name="NewLayout">To be added.</param>
        <summary>
          <span data-ttu-id="0bb94-126">このメソッドは、<b>グラフ</b>は、コレクション オブジェクトの実装は、のみ、<b>シート</b>や<b>ワークシート</b>のオブジェクトで使用する場合は、実行時エラーが生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-126">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on the <b>Sheets</b> and <b>Worksheets</b> objects.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-127">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-127">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="0bb94-128">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="0bb94-129">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-130">コピーしたシートを配置する前にあるシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-130">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="0bb94-131">指定することはできません<paramref name="Before" />を指定する場合は、 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-131">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0bb94-132">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-133">その後、コピーしたシートを配置するシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-133">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="0bb94-134">指定することはできません<paramref name="After" />を指定する場合は、 <paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-134">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-135">シートをブック内の他の場所にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-135">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-136">いずれかの方法を指定しない場合は、<paramref name="Before" />または<paramref name="After" />、コピーしたシートを含む新しいブックを作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-136">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-137">コレクション内にあるオブジェクトの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-137">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="0bb94-138">整数型 ( <b>Integer</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-138">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-139">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-139">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="0bb94-140">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-140">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="0bb94-141">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-141">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-142">
              <b>Creator</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-142">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="0bb94-143">たとえば、Microsoft Excel は、クリエーター コードを持っています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-143">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-144">オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-144">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="0bb94-145">必要な<b>Range</b>オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-145">Required <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="0bb94-146">コレクション内のすべてのワークシート上のセル範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-146">The range to fill on all the worksheets in the collection.</span>
          </span>
          <span data-ttu-id="0bb94-147">コレクション内のワークシートの範囲でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-147">The range must be from a worksheet within the collection.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0bb94-148">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-148">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          </span>
          <span data-ttu-id="0bb94-149">セル範囲のコピー方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-149">Specifies how to copy the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-150">指定されたセル範囲を、コレクション内の他のすべてのワークシートの同じ領域にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-150">Copies a range to the same area on all other worksheets in a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-151">返します、<see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" />シートの水平方向のページを表すコレクションを中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-151">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="0bb94-152">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-152">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-153">1 つのシートに使用できる水平な改ページの数は 1026 です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-153">There is a limit of 1,026 horizontal page breaks per sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0bb94-154">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-154">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-155">オブジェクトの名前またはインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-155">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-156">コレクションから単一のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-156">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="0bb94-157">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-158">移動したシートを配置する前にあるシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-158">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="0bb94-159">指定することはできません<paramref name="Before" />を指定する場合は、 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-159">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0bb94-160">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-161">配置移動したシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-161">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="0bb94-162">指定することはできません<paramref name="After" />を指定する場合は、 <paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-162">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-163">シートをブック内の他の場所に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-163">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-164">いずれかの方法を指定しない場合は、<paramref name="Before" />または<paramref name="After" />、移動するワークシートを含む新しいブックを作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-164">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-p119">指定されたオブジェクトの親オブジェクトを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-p119">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="0bb94-167">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-167">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-168">印刷を開始するページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-168">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="0bb94-169">この引数を省略すると、印刷は先頭から開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-169">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0bb94-170">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-171">印刷する最終ページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-171">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="0bb94-172">この引数を省略すると、最後のページで印刷が終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-172">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="0bb94-173">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-174">印刷部数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-174">The number of copies to print.</span>
          </span>
          <span data-ttu-id="0bb94-175">この引数を省略すると、1 つのコピーが印刷されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-175">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="0bb94-176">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-177">
            <b>True</b>オブジェクトを印刷する前に印刷プレビューを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-177">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="0bb94-178">
            <b>False</b>(または省略した場合)、オブジェクトをすぐに印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-178">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="0bb94-179">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-180">アクティブなプリンターの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-180">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="0bb94-181">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-182">
            <b>True</b>ファイルに出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-182">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="0bb94-183">場合<paramref name="PrToFileName" />が指定されていない、Microsoft Excel には、出力ファイルの名前を入力するように求めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-183">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="0bb94-184">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-185">
            <b>True</b> の場合、部単位で印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-185">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="0bb94-186">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-186">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-187">場合<paramref name="PrintToFile" />は、設定に<b>は True</b>、この引数を指定して印刷しファイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-187">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-188">オブジェクトを印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-188">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0bb94-189">説明における「ページ」<paramref name="From" />と<paramref name="To" />印刷されるページを参照して、ない全体のページでは、シートまたはブックです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bb94-189">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="0bb94-190">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-190">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="0bb94-191">オブジェクトへの変更を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-191">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-192">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-192">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="0bb94-193">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-193">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0bb94-194">置換するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-194">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bb94-195">オブジェクトを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-195">Selects the object</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-196">オブジェクトを表示するかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-196">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="0bb94-197">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-197">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bb94-198">返します、<see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" />シートの垂直方向のページを表すコレクションを中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="0bb94-199">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bb94-199">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>