<Type Name="CellFormat" FullName="Microsoft.Office.Interop.Excel.CellFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb607767f33cbf4ea76bfc37821ee59c522eeb21" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50006007" /></Metadata><TypeSignature Language="C#" Value="public interface CellFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CellFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CellFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface CellFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class CellFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024450-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cce2c-101">セルの書式の検索条件を表します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-101">Represents the search criteria for the cell format.</span></span></summary>
    <remarks><para><span data-ttu-id="cce2c-102"><see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> CellFormat オブジェクトを取得 <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> するには、オブジェクトのプロパティ<b>を使用</b>します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> object to return a <b>CellFormat</b> object.</span></span></para>
      <para><span data-ttu-id="cce2c-103">CellFormat オブジェクトの , またはプロパティを使用して、セルの書式の <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" /> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" /> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> 検索条件を定義できます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="cce2c-103">You can use the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, or <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> properties of the <b>CellFormat</b> object to define the search criteria for the cell format.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-104"><b>True</b> の 場合は、セル内のテキストの配置が水平方向または垂直方向に均等に配置に設定されている場合、テキストが自動的にインデントされます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-104"><b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-105">テキストの配置を均等分布に設定するには、プロパティの値が xlVertical の場合にプロパティを <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> <b>xlVAlignDistributed</b>に設定し、Orientation プロパティの値が <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> <b>xlHorizontal</b>のときに<b></b>プロパティを<b>xlHAlignDistributed</b>に設定できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-105">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-106">Microsoft Excel アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); void set(Microsoft::Office::Interop::Excel::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-107">セルの罫線の書式に基づいて検索条件を設定または取得できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-107">Allows the user to set or return the search criteria based on the cell's border format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CellFormat.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cce2c-108">プロパティに設定されている条件を <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> クリア <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-108">Clears the criteria set in the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> and <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-109">このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-109">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-110">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="cce2c-111"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="cce2c-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="cce2c-112">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="cce2c-112">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); void set(Microsoft::Office::Interop::Excel::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-113">セルのフォント形式に基づいて検索条件を設定または取得できるオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Font" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object, allowing the user to set or return the search criteria based on the cell's font format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-114"><b>True</b> の 場合は、ワークシートが保護されているときに数式が非表示になります。</span><span class="sxs-lookup"><span data-stu-id="cce2c-114"><b>True</b> if the formula will be hidden when the worksheet is protected.</span></span> <span data-ttu-id="cce2c-115">指定した<b>範囲に数式Hidden</b>が<b>True</b>に等しいセルとFalseHidden が False に等しいいくつかのセルが含まれている場合は、Null を返<b>します</b>。 <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="cce2c-115">Returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-116">このプロパティとプロパティを混同 <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> して使用してください。</span><span class="sxs-lookup"><span data-stu-id="cce2c-116">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="cce2c-117">ブックが保護され、ワークシートが保護されていない場合、数式は非表示にされません。ワークシートが保護されている場合にのみ非表示になります。</span><span class="sxs-lookup"><span data-stu-id="cce2c-117">The formula will not be hidden if the workbook is protected and the worksheet is not; it will be hidden only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-118">指定したオブジェクトの水平方向の配置を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-118">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-119">使用できる定数は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cce2c-119">The following constants can be used:</span></span></para>
          <para><span data-ttu-id="cce2c-120">
            <b>xlCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-120">
            <b>xlCenter</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-121">
            <b>xlDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-121">
            <b>xlDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-122">
            <b>xlJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-122">
            <b>xlJustify</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-123">
            <b>xlLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-123">
            <b>xlLeft</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-124">
            <b>xlRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-124">
            <b>xlRight</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-125">[!メモ] 選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="cce2c-125">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-126">セルまたはセル範囲のインデント レベルを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-126">Returns or sets the indent level for the cell or range.</span></span> <span data-ttu-id="cce2c-127">インデントのレベルの範囲は、0 ～ 15 の整数です。</span><span class="sxs-lookup"><span data-stu-id="cce2c-127">Can be an integer from 0 to 15.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-128">インデントのレベルに 0 未満または 15 を超える値を設定すると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-128">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" />
      <MemberSignature Language="VB.NET" Value="Public Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); void set(Microsoft::Office::Interop::Excel::Interior ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-129">ユーザーがセルの内部の書式に基づいて検索条件を設定または取得することを許可するオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object allowing the user to set or return the search criteria based on the cell's interior format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-130"><b>True</b> の 場合は、オブジェクトがロックされています。 <b>False</b> の 場合は、シートが保護されているときにオブジェクトを変更できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-130"><b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span></span> <span data-ttu-id="cce2c-131">指定した <b>範囲にロック</b> されたセルとロック解除されたセルの両方が含まれている場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-131">Returns <b>Null</b> if the specified range contains both locked and unlocked cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-132">範囲またはスタイルに結合されたセルが含まれている場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="cce2c-132"><b>True</b> if the range or style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-133">結合されたセルが含まれるセル範囲を選択すると、指定したセル範囲と実際のセル範囲が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cce2c-133">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="cce2c-134">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> を使用して、選択した範囲のアドレスを確認します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-134">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-135">オブジェクトの書式設定コードを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-135">Returns or sets the format code for the object.</span></span> <span data-ttu-id="cce2c-136">指定した <b>範囲内のすべての</b> セルの数値書式が同じ場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-136">Returns <b>Null</b> if all cells in the specified range don't have the same number format.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-137">表示形式を示す文字列は、[ セルの書式設定] ダイアログ ボックスの [ 表示形式] の文字列と同じです。</span><span class="sxs-lookup"><span data-stu-id="cce2c-137">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="cce2c-138">The Visual Basic <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span><span class="sxs-lookup"><span data-stu-id="cce2c-138">The Visual Basic <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-139">ユーザーの言語で文字列としてオブジェクトの書式設定コードを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-139">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-140">The Visual Basic <b>Format</b> function uses different format code strings than do <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> the and <b>NumberFormatLocal</b> properties.</span><span class="sxs-lookup"><span data-stu-id="cce2c-140">The Visual Basic <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-141">テキストの向きを指定します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-141">The text orientation.</span></span> <span data-ttu-id="cce2c-142">-90 ~ 90°の整数値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-142">Can be an integer value from –90 to 90 degrees.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-143"><b>Orientation プロパティ</b>には、次の定数のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-143">The <b>Orientation</b> property can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="cce2c-144">
            <b>xlDownward</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-144">
            <b>xlDownward</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-145">
            <b>xlHorizontal</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-145">
            <b>xlHorizontal</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-146">
            <b>xlUpward</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-146">
            <b>xlUpward</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-147">
            <b>xlVertical</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-147">
            <b>xlVertical</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-p110">OLAP データ ソースの場合、ある階層の 1 つのフィールドに対してこのプロパティを設定すると、同じ階層のその他のフィールドにも同じ値が設定されます。ディメンション フィールドは、ピボットテーブル レポートの行フィールド、列フィールド、またはページ フィールドの各領域にのみ配置できます。メジャー フィールドは、データ エリアにのみ配置できます。階層、またはデータ フィールドに <b>xlHidden</b> を設定すると、ピボットテーブル レポートから削除されます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-p110">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-152">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-152">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-153"><b>True の</b> 場合は、使用可能な列の幅に収まるテキストが自動的に縮小します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-153"><b>True</b> if text automatically shrinks to fit in the available column width.</span></span> <span data-ttu-id="cce2c-154">指定した <b>範囲内のすべての</b> セルに対してこのプロパティが同じ値に設定されていない場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-154">Returns <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-155">指定したオブジェクトの垂直方向の配置を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-155">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-156"><b>VerticalAlignment</b>プロパティには、次の定数のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-156">The <b>VerticalAlignment</b> property can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="cce2c-157">
            <b>xlBottom</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-157">
            <b>xlBottom</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-158">
            <b>xlCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-158">
            <b>xlCenter</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-159">
            <b>xlDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-159">
            <b>xlDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-160">
            <b>xlJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-160">
            <b>xlJustify</b>
          </span></span></para>
          <para><span data-ttu-id="cce2c-161">
            <b>xlTop</b>
          </span><span class="sxs-lookup"><span data-stu-id="cce2c-161">
            <b>xlTop</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cce2c-162"><b>True の</b> 場合は、Microsoft Excel は、オブジェクト内のテキストをラップします。</span><span class="sxs-lookup"><span data-stu-id="cce2c-162"><b>True</b> if Microsoft Excel wraps the text in the object.</span></span> <span data-ttu-id="cce2c-163">指定した <b>範囲に、</b> テキストを折り返すセルと、折り返されていないセルが含まれている場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="cce2c-163">Returns <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="cce2c-164">文字列をセル内に表示するために、行の高さは必要に応じて自動的に調節されます。</span><span class="sxs-lookup"><span data-stu-id="cce2c-164">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>