<Type Name="_QueryTable" FullName="Microsoft.Office.Interop.Excel._QueryTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="249f2de0b7c9698a20aab3d689ca0d60d9e16373" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20587844" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _QueryTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _QueryTable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._QueryTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface _QueryTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class _QueryTable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024428-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3642a-101">これは、対応する COM オブジェクトと相互運用するためのマネージ コードで必要とされる COM コクラス内のプライマリ インターフェイスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3642a-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="3642a-102">メソッドを使用する COM オブジェクトのイベントと同じ名前を共有する場合にのみ、この主要なインタ フェースを使用します。メソッドを呼び出すには、このインターフェイスにこの例では、キャストし、イベントに接続するための最新のイベント インターフェイスにキャストします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3642a-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="3642a-103">それ以外の場合、メソッド、プロパティ、および COM オブジェクトのイベントにアクセスする COM コクラスから派生した .NET インターフェイスを使用します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3642a-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="3642a-104">COM オブジェクトの詳細についてを参照してください<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3642a-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-105">
            <b>True の</b>場合の最適な列幅を自動的に調整に合わせて、指定されたクエリ テーブルまたは XML の対応付けを更新するたびにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-105">
              <b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span>
          </span>
          <span data-ttu-id="3642a-106">
            <b>False</b>の列の幅は、更新ごとに自動的に調整されていない場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-106">
              <b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span>
          </span>
          <span data-ttu-id="3642a-107">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-107">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="3642a-108">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-108">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-109">列幅の最大値は、画面幅の 3 分の 2 です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-109">The maximum column width is two-thirds the width of the screen.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-110">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-110">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="3642a-111">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-111">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundQuery">
      <MemberSignature Language="C#" Value="public bool BackgroundQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundQuery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundQuery { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-112">
            <b>True の</b>ピボット テーブル レポートまたはクエリ テーブルのクエリが非同期 (バック グラウンド) で実行される場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-112">
              <b>True</b> if queries for the PivotTable report or query table are performed asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="3642a-113">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-113">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRefresh">
      <MemberSignature Language="C#" Value="public void CancelRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelRefresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._QueryTable.CancelRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRefresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3642a-114">指定されたクエリ テーブルに対するバック グラウンド クエリをキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-114">Cancels all background queries for the specified query table.</span>
          </span>
          <span data-ttu-id="3642a-115">使用して、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Refreshing" />バック グラウンド クエリが現在進行中かどうかを確認するにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-115">Use the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Refreshing" /> property to determine whether a background query is currently in progress.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public object CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-116">指定したデータ ソースにコマンド文字列を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-116">Returns or sets the command string for the specified data source.</span>
          </span>
          <span data-ttu-id="3642a-117">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-117">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-118">OLE DB ソースの場合、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.CommandType" />プロパティは、 <b>CommandText</b>プロパティの値を説明します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-118">For OLE DB sources, the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.CommandType" /> property describes the value of the <b>CommandText</b> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCmdType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCmdType CommandType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As XlCmdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCmdType CommandType { Microsoft::Office::Interop::Excel::XlCmdType get(); void set(Microsoft::Office::Interop::Excel::XlCmdType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCmdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-119">値を取得または設定、<see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />にコマンドの種類を記述する定数に関連付けられている、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.CommandText" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-119">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" /> constant that describes the command type associated with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.CommandText" /> property.</span>
          </span>
          <span data-ttu-id="3642a-120">既定値は、 <b>xlCmdSQL</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-120">The default value is <b>xlCmdSQL</b>.</span>
          </span>
          <span data-ttu-id="3642a-121">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-121">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCmdType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-122">
              <b>CommandType</b>プロパティのみの場合、クエリ テーブルの<b>QueryType</b>プロパティの値を設定できますか、ピボット テーブル キャッシュが<b>xlOLEDBQuery</b>の場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-122">You can set the <b>CommandType</b> property only if the value of the <b>QueryType</b> property for the query table or PivotTable cache is <b>xlOLEDBQuery</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-123">
              <b>XlCmdCube</b>の<b>CommandType</b>プロパティの値が表示された場合は、クエリ テーブルに関連付けられているピボット テーブル レポートがある場合にこの値を変更できません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-123">If the value of the <b>CommandType</b> property is <b>xlCmdCube</b>, you cannot change this value if there is a PivotTable report associated with the query table.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-124">取得またはクエリ テーブルの接続情報を格納する文字列を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-124">Returns or sets a string that contains connection information for the query table.</span>
          </span>
          <span data-ttu-id="3642a-125">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-125">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-126">
              <b>接続</b>のプロパティには、次のいずれかを指定できます: ソースの ODBC データへの接続に Microsoft Excel を有効にする設定を ODBC、OLE DB データ ソースに接続できるようにする OLE DB 設定、URL への接続に Microsoft Excel を有効にする、Web のデータ ソースへのパス、テキスト ファイルへのパスや、データベースまたは Web クエリを指定するファイルのファイル名のファイル名です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-126">The <b>Connection</b> property can be one of the following: OLE DB settings that enable Microsoft Excel to connect to an OLE DB data source, ODBC settings that enable Microsoft Excel to connect to an ODBC data source, a URL that enables Microsoft Excel to connect to a Web data source, the path to and file name of a text file, or the path to and file name of a file that specifies a database or Web query.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-127">
              <b>接続</b>プロパティを設定すると、データ ソースへの接続はすぐに開始します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-127">Setting the <b>Connection</b> property doesn’t immediately initiate the connection to the data source.</span>
            </span>
            <span data-ttu-id="3642a-128">使用する必要があります、<see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" />の接続を行い、データを取得するメソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-128">You must use the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> method to make the connection and retrieve the data.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-129">オフライン キューブ ファイルを使用して、設定、<see cref="P:Microsoft.Office.Interop.Excel.PivotCache.UseLocalConnection" />プロパティに<b>true を指定</b>し、使用して、 <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.LocalConnection" /><b>接続</b>プロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-129">When using an offline cube file, set the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.UseLocalConnection" /> property to <b>True</b> and use the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.LocalConnection" /> property instead of the <b>Connection</b> property.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-130">接続文字列の構文の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.QueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)" />のメソッド、<see cref="T:Microsoft.Office.Interop.Excel.QueryTables" />コレクションと<see cref="M:Microsoft.Office.Interop.Excel.PivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)" />のメソッド、<see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" />コレクションです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-130">For more information about the connection string syntax, see the <see cref="M:Microsoft.Office.Interop.Excel.QueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection and the <see cref="M:Microsoft.Office.Interop.Excel.PivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-131">または、Microsoft ActiveX データ オブジェクト (ADO) を使用して直接データ ソースにアクセスすることができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-131">Alternatively, you may choose to access a data source directly by using the Microsoft ActiveX Data Objects (ADO).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-132">定数、<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />をこのオブジェクトの作成元アプリケーションを示す列挙型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-132">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="3642a-133">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-133">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="3642a-134">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-134">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-135">
              <b>Creator</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-135">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="3642a-136">たとえば、Microsoft Excel は、クリエーター コードを持っています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-136">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._QueryTable.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3642a-137">オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-137">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destination">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Destination { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Destination" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Destination" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Destination As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Destination { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(681)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-138">クエリ テーブルの配置先範囲 (結果のクエリ テーブルが配置される場所の範囲) の左上隅のセルを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-138">Returns the cell in the upper-left corner of the query table destination range (the range where the resulting query table will be placed).</span>
          </span>
          <span data-ttu-id="3642a-139">貼り付け先の範囲が含まれているワークシートにする必要があります、<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-139">The destination range must be on the worksheet that contains the <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
          <span data-ttu-id="3642a-140">読み取り専用の <b>範囲</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-140">Read-only <b>Range</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditWebPage">
      <MemberSignature Language="C#" Value="public object EditWebPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditWebPage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.EditWebPage" />
      <MemberSignature Language="VB.NET" Value="Public Property EditWebPage As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditWebPage { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2163)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-141">Web ページの統一リソース ロケーター (URL) web クエリを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-141">Returns or sets the web page uniform resource locator (URL) for a web query.</span>
          </span>
          <span data-ttu-id="3642a-142">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-142">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-143">
              <b>EditWebPage</b>プロパティは<b>Null</b>を返しますそうでない場合に設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-143">The <b>EditWebPage</b> property returns <b>Null</b> if not set.</span>
            </span>
            <span data-ttu-id="3642a-144">
              <b>EditWebPage</b>プロパティは、意味のあるクエリの種類が<b>xlWebQuery</b>または<b>xlOLEDBQuery</b>の場合のみです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-144">The <b>EditWebPage</b> property is only meaningful if the query type is <b>xlWebQuery</b> or <b>xlOLEDBQuery</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-145">
              <b>EditWebPage</b>が null でない場合は無視して、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables" />を更新するためのプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-145">If the <b>EditWebPage</b> is not null, ignore the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables" /> property for refreshing.</span>
            </span>
            <span data-ttu-id="3642a-146">結果として XML クエリ<b>WebTable</b>プロパティ元の Web ページにテーブルを参照し、[Web クエリ] ダイアログ ボックスを事前に設定するのには編集の場合のみ使用しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-146">As a result an XML query and the <b>WebTable</b> property refers to the table in the original Web page and should only be used in the edit case to pre-populate the Web Query dialog box.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEditing">
      <MemberSignature Language="C#" Value="public bool EnableEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.EnableEditing" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEditing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1595)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1595)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1595)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p116">
            <b>True</b> の場合、ユーザーは指定したクエリ テーブルを編集できます。 <b>False</b> の場合、クエリ テーブルの更新のみ可能です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p116">
              <b>True</b> if the user can edit the specified query table. <b>False</b> if the user can only refresh the query table. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRefresh">
      <MemberSignature Language="C#" Value="public bool EnableRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.EnableRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p117">
            <b>True</b> の場合、ユーザーはピボットテーブルのキャッシュまたはクエリ テーブルを更新することができます。既定値は <b>True</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p117">
              <b>True</b> if the PivotTable cache or query table can be refreshed by the user. The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-153">
              <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshOnFileOpen" /> 、 <b>EnableRefresh</b>プロパティが<b>False</b>に設定する場合、プロパティは無視されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-153">The <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshOnFileOpen" /> property is ignored if the <b>EnableRefresh</b> property is set to <b>False</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-154">OLAP データ ソースの場合、このプロパティを<b>False</b>に設定により、更新が無効にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-154">For OLAP data sources, setting this property to <b>False</b> disables updates.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchedRowOverflow">
      <MemberSignature Language="C#" Value="public bool FetchedRowOverflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FetchedRowOverflow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FetchedRowOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FetchedRowOverflow { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-155">
            <b>真</b>の最後に使用して、行の数が返された場合、<see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" />メソッドは、ワークシートで使用可能な行数よりも大きい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-155">
              <b>True</b> if the number of rows returned by the last use of the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> method is greater than the number of rows available on the worksheet.</span>
          </span>
          <span data-ttu-id="3642a-156">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-156">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldNames">
      <MemberSignature Language="C#" Value="public bool FieldNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.FieldNames" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FieldNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1584)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1584)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1584)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p119">
            <b>True</b> の場合、データ ソースのフィールド名は、返されるデータの列見出しとして表示されます。既定値は <b>True</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p119">
              <b>True</b> if field names from the data source appear as column headings for the returned data. The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAdjacentFormulas">
      <MemberSignature Language="C#" Value="public bool FillAdjacentFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FillAdjacentFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.FillAdjacentFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property FillAdjacentFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FillAdjacentFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p120">
            <b>True</b> の場合、クエリ テーブルを更新するとき、指定されたクエリ テーブルの右側の数式を自動的に更新します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p120">
              <b>True</b> if formulas to the right of the specified query table are automatically updated whenever the query table is refreshed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAutoFormat">
      <MemberSignature Language="C#" Value="public bool HasAutoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAutoFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.HasAutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAutoFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAutoFormat { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-162">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-162">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-163">返します、<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />のオブジェクトの<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトまたは<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
          <span data-ttu-id="3642a-164">
            <b>ListObject</b>オブジェクトの読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-164">Read-only <b>ListObject</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaintainConnection">
      <MemberSignature Language="C#" Value="public bool MaintainConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.MaintainConnection" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainConnection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1832)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p122">
            <b>True</b> の場合、指定されたデータ ソースとの接続を、更新後もブックが閉じられるまで維持します。既定値は <b>True</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p122">
              <b>True</b> if the connection to the specified data source is maintained after the refresh and until the workbook is closed. The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-168">
              <b>MaintainConnection</b>プロパティのみの場合を設定することができます、 <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> 、クエリ テーブルまたはピボット テーブル キャッシュのプロパティが<b>xlOLEDBQuery</b>に設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-168">You can set the <b>MaintainConnection</b> property only if the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property of the query table or PivotTable cache is set to <b>xlOLEDBQuery</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-169">サーバーに対して頻繁にクエリする場合、このプロパティを<b>True</b>に設定可能性がありますパフォーマンス向上再接続時間が短縮します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-169">If you anticipate frequent queries to a server, setting this property to <b>True</b> might improve performance by reducing reconnection time.</span>
            </span>
            <span data-ttu-id="3642a-170">プロパティを<b>False</b>に設定すると、未処理の接続が閉じられます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-170">Setting the property to <b>False</b> causes an open connection to be closed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p124">指定されたオブジェクトの名前を設定します。値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p124">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-173">次の表は、 <b>Name</b>プロパティと関連するプロパティの一意の名前] [ヨーロッパ] データ ソースを指定の値の例を示します。[東京都] です。[東京]"OLAP 以外のデータ ソースのアイテム名が「東京」とします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-173">The following table shows example values of the <b>Name</b> property and related properties given a data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-174">
                  <b>キャプション</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-174">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-175">東京</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-175">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-176">東京</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-176">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-177">
                  <b>名</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-177">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-178">[都道府県].[東京都].[東京] (読み取り専用)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-178">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-179">東京</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-179">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-180">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-180">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-181">[都道府県].[東京都].[東京] (読み取り専用)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-181">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-182">(SQL プロパティと同じ値、読み取り専用)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-182">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-183">
                  <b>値</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-183">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-184">[都道府県].[東京都].[東京] (読み取り専用)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-184">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-185">東京</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-185">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="3642a-186">インデックスを指定する場合、<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />コレクションでは、次の表に示すように構文を使用することができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-186">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-187">式です。返すプロパティ (「[ヨーロッパ]。 [東京都] です。[東京]")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-187">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-188">Expression.PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-188">Expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="3642a-189">使用する場合、<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />プロパティ、コレクションの特定のメンバーを参照するには、次の表に示すようにテキストをインデックス名を使用することができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-189">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-190">[ヨーロッパ] です。[東京都] です。[東京]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-190">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-191">東京</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-191">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Parameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Parameters Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As Parameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Parameters ^ Parameters { Microsoft::Office::Interop::Excel::Parameters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1593)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1593)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Parameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-192">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> 、クエリ テーブルのパラメーターを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-192">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection that represents the query table parameters.</span>
          </span>
          <span data-ttu-id="3642a-193">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-193">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p126">指定されたオブジェクトの親オブジェクトを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p126">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostText">
      <MemberSignature Language="C#" Value="public string PostText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.PostText" />
      <MemberSignature Language="VB.NET" Value="Public Property PostText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PostText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1591)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1591)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1591)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-196">Web クエリからデータを取得するのには Web サーバーにデータを入力の post メソッドで使用される文字列を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-196">Returns or sets the string used with the post method of inputting data into a Web server to return data from a Web query.</span>
          </span>
          <span data-ttu-id="3642a-197">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-197">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-198">このトピックの内容の一部をいくつかの言語には適用できないがあります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-198">Some of the content in this topic may not be applicable to some languages.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-p128">Excel には、WordPad または別のテキスト エディターを使用して HTML コードを変更することにより、変更できるサンプル Web クエリが用意されています。Office をセットアップしたフォルダーにある [Queries] フォルダーに、これらのサンプルがあります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-p128">Microsoft Excel includes sample Web queries that you can modify by changing the HTML code by using WordPad or another text editor. You can find these samples in the Queries folder where you installed Microsoft Office.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnInfo">
      <MemberSignature Language="C#" Value="public bool PreserveColumnInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.PreserveColumnInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-201">
            <b>True の</b>場合、クエリ テーブルが更新されるたびに、列の並べ替え、フィルター、およびレイアウト情報が保持されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-201">
              <b>True</b> if column sorting, filtering, and layout information is preserved whenever a query table is refreshed.</span>
          </span>
          <span data-ttu-id="3642a-202">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-202">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="3642a-203">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-203">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-204">このプロパティが有効になるのは、クエリ テーブルがデータベース接続を使用しているときだけです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-204">This property has an effect only when the query table is using a database connection.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-205">
              <b>False</b>にこのプロパティを設定するには Microsoft Excel の以前のバージョンとの互換性のためです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-205">You can set this property to <b>False</b> for compatibility with earlier versions of Microsoft Excel.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.PreserveFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-206">このプロパティが<b>True</b>の場合、最初の 5 行のデータに共通する書式をクエリ テーブル内のデータの新しい行に適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-206">This property is <b>True</b> if any formatting common to the first five rows of data are applied to new rows of data in the query table.</span>
          </span>
          <span data-ttu-id="3642a-207">使用されていないセルの書式が設定されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-207">Unused cells aren’t formatted.</span>
          </span>
          <span data-ttu-id="3642a-208">プロパティは、 <b>False</b>最後のオート フォーマットがクエリ テーブルに適用されている場合データの新しい行に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-208">The property is <b>False</b> if the last AutoFormat applied to the query table is applied to new rows of data.</span>
          </span>
          <span data-ttu-id="3642a-209">既定値は<b>True</b> (クエリ テーブルは、Microsoft Excel 97 で作成した場合を除きと<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.HasAutoFormat" />プロパティが<b>True の</b>場合<b>PreserveFormatting</b>が<b>False</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-209">The default value is <b>True</b> (unless the query table was created in Microsoft Excel 97 and the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.HasAutoFormat" /> property is <b>True</b>, in which case <b>PreserveFormatting</b> is <b>False</b>).</span>
          </span>
          <span data-ttu-id="3642a-210">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-210">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-211">データベース クエリ テーブルでは、既定の書式設定は<b>xlSimple</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-211">For database query tables, the default formatting setting is <b>xlSimple</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-p131">新しいオートフォーマットの形式は、テーブルが更新されたときにクエリ テーブルに適用されます。<b>PreserveFormatting</b> プロパティに <b>False</b> を設定すると、オートフォーマットには "なし<b></b>" が設定されます。このため、<b>PreserveFormatting</b> プロパティに <b>False</b> を設定する前、およびクエリ テーブルを更新する前に設定したオートフォーマットは無効になります。また、生成されるクエリ テーブルにもオートフォーマットは適用されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-p131">The new AutoFormat style is applied to the query table when the table is refreshed. The AutoFormat is reset to <b>None</b> whenever <b>PreserveFormatting</b> is set to <b>False</b>. As a result, any AutoFormat that’s set before <b>PreserveFormatting</b> is set to <b>False</b> and before the query table is refreshed doesn’t take effect, and the resulting query table has no formatting applied to it.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlQueryType QueryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlQueryType QueryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryType As XlQueryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlQueryType QueryType { Microsoft::Office::Interop::Excel::XlQueryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1831)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1831)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlQueryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-215">クエリ テーブルまたはピボット テーブル キャッシュを作成する Excel で使用されるクエリの種類を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-215">Indicates the type of query used by Microsoft Excel to populate the query table or PivotTable cache.</span>
          </span>
          <span data-ttu-id="3642a-216">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlQueryType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-216">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlQueryType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-217">接頭辞にデータ ソースを指定する、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" />プロパティの値です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-217">You specify the data source in the prefix for the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" /> property’s value.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recordset">
      <MemberSignature Language="C#" Value="public object Recordset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Recordset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Recordset" />
      <MemberSignature Language="VB.NET" Value="Public Property Recordset As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Recordset { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1165)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-218">取得または指定されたクエリ テーブルまたはピボット テーブル キャッシュのデータ ソースとして使用する<b>Recordset</b>オブジェクトを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-218">Returns or sets a <b>Recordset</b> object that’s used as the data source for the specified query table or PivotTable cache.</span>
          </span>
          <span data-ttu-id="3642a-219">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-219">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-220">変更は有効である場合はこのプロパティを使用して、既存のレコード セットを上書きする、ときに、<see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" />メソッドを実行します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-220">If this property is used to overwrite an existing recordset, the change takes effect when the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> method is run.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public bool Refresh (object BackgroundQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Refresh([in]object BackgroundQuery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Refresh (Optional BackgroundQuery As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BackgroundQuery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BackgroundQuery">
          <span data-ttu-id="3642a-221">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3642a-222">SQL クエリの結果に基づく<b>クエリ テーブルで使用</b>の場合にのみ使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-222">Used only with <b>QueryTables</b> that are based on the results of a SQL query.</span>
          </span>
          <span data-ttu-id="3642a-223">
            <b>True</b>に制御を返すプロシージャのデータベース接続を確立するとすぐに、クエリが送信されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-223">
              <b>True</b> to return control to the procedure as soon as a database connection is made and the query is submitted.</span>
          </span>
          <span data-ttu-id="3642a-224">バック グラウンドで<b>クエリ テーブル</b>が更新されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-224">The <b>QueryTable</b> is updated in the background.</span>
          </span>
          <span data-ttu-id="3642a-225">
            <b>False を指定</b>するすべてのデータの後にのみ、プロシージャに制御を返すがフェッチされるワークシートにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-225">
              <b>False</b> to return control to the procedure only after all data has been fetched to the worksheet.</span>
          </span>
          <span data-ttu-id="3642a-226">この引数を指定しない場合の設定、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery" />プロパティは、クエリ モードを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-226">If this argument isn't specified, the setting of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery" /> property determines the query mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3642a-227">外部データ範囲を更新 (<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-227">Updates an external data range (<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />).</span>
          </span>
          <span data-ttu-id="3642a-228">
            <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-228">
              <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="3642a-229">次の「解説」では、SQL クエリの結果を基にした<b>QueryTable</b>オブジェクトに適用されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-229">The following remarks apply to <b>QueryTable</b> objects that are based on the results of a SQL query.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-230">
              <b>Refresh</b>メソッドは、 <b>QueryTable</b>オブジェクトのデータ ソースへの接続、SQL クエリを実行し、 <b>QueryTable</b>オブジェクトに基づいた範囲にデータを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-230">The <b>Refresh</b> method causes Microsoft Excel to connect to the data source of the <b>QueryTable</b> object, execute the SQL query, and return data to the range that is based on the <b>QueryTable</b> object.</span>
            </span>
            <span data-ttu-id="3642a-231">しない限り、このメソッドが呼び出されると、 <b>QueryTable</b>オブジェクトはデータ ソースと通信しません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-231">Unless this method is called, the <b>QueryTable</b> object doesn't communicate with the data source.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-232">Microsoft Excel がで指定された接続文字列を使用して、OLE DB または ODBC データ ソースへの接続を行う場合、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-232">When making the connection to the OLE DB or ODBC data source, Microsoft Excel uses the connection string specified by the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" /> property.</span>
            </span>
            <span data-ttu-id="3642a-233">指定した接続文字列には、必要な値がない、ユーザーに必要な情報の入力を求めるダイアログ ボックスが表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-233">If the specified connection string is missing required values, dialog boxes will be displayed to prompt the user for the required information.</span>
            </span>
            <span data-ttu-id="3642a-234">場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティが<b>False</b>、ダイアログ ボックスが表示されていないし、 <b>Refresh</b>メソッドは例外で失敗が不足している接続情報です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-234">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is <b>False</b>, dialog boxes aren't displayed and the <b>Refresh</b> method fails with the Insufficient Connection Information exception.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-235">成功した接続を Excel は、同じ編集セッション中に、 <b>Refresh</b>メソッドを呼び出すのためのプロンプトは表示されませんように、完全な接続文字列を格納します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-235">After Microsoft Excel makes a successful connection, it stores the completed connection string so that prompts won't be displayed for subsequent calls to the <b>Refresh</b> method during the same editing session.</span>
            </span>
            <span data-ttu-id="3642a-236">値を調べることによって完全な接続文字列を取得することができます、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-236">You can obtain the completed connection string by examining the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" /> property.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-237">データベース接続が行われると、SQL クエリが検証されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-237">After the database connection is made, the SQL query is validated.</span>
            </span>
            <span data-ttu-id="3642a-238">クエリが無効の場合、 <b>Refresh</b>メソッドは、SQL 構文エラー例外で失敗します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-238">If the query isn't valid, the <b>Refresh</b> method fails with the SQL Syntax Error exception.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-239">クエリのパラメーターを必要とする場合、 <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> 、 <b>Refresh</b>メソッドが呼び出される前に、パラメーターのバインド情報を使用してコレクションを初期化する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-239">If the query requires parameters, the <see cref="T:Microsoft.Office.Interop.Excel.Parameters" /> collection must be initialized with parameter binding information before the <b>Refresh</b> method is called.</span>
            </span>
            <span data-ttu-id="3642a-240">かどうかは、十分なパラメーターがバインドされている、 <b>Refresh</b>メソッドはパラメーター エラー例外で失敗します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-240">If not enough parameters have been bound, the <b>Refresh</b> method fails with the Parameter Error exception.</span>
            </span>
            <span data-ttu-id="3642a-241">設定に関係なくユーザーにダイアログ ボックスを表示、値の入力を求めるパラメーターを設定した場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-241">If parameters are set to prompt for their values, dialog boxes are displayed to the user regardless of the setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property.</span>
            </span>
            <span data-ttu-id="3642a-242">ユーザーは、[パラメーター] ダイアログ ボックスをキャンセルした場合、 <b>Refresh</b>メソッドは停止し、 <b>False</b>を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-242">If the user cancels a parameter dialog box, the <b>Refresh</b> method halts and returns <b>False</b>.</span>
            </span>
            <span data-ttu-id="3642a-243">余分なパラメーターが<b>Parameters</b>コレクションにバインドされている、これらの余分なパラメーターは無視されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-243">If extra parameters are bound with the <b>Parameters</b> collection, these extra parameters are ignored.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-244">
              <b>更新</b>メソッドを返します。 <b>True の</b>場合、クエリが正常に完了または開始します。ユーザー接続またはパラメーターを指定するダイアログ ボックスをキャンセルする場合は<b>False</b>を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-244">The <b>Refresh</b> method returns <b>True</b> if the query is successfully completed or started; it returns <b>False</b> if the user cancels a connection or parameter dialog box.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-245">フェッチされたローの数が、ワークシート上の行の数を超えたかどうかを確認するには、確認、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-245">To see whether the number of fetched rows exceeded the number of available rows on the worksheet, examine the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.FetchedRowOverflow" /> property.</span>
            </span>
            <span data-ttu-id="3642a-246">このプロパティは、 <b>Refresh</b>メソッドが呼び出されるたびに初期化します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-246">This property is initialized every time the <b>Refresh</b> method is called.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refreshing">
      <MemberSignature Language="C#" Value="public bool Refreshing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Refreshing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Refreshing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Refreshing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Refreshing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1587)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-247">
            <b>True</b>指定されたクエリ テーブルに対して進行中のバック グラウンド クエリがある場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-247">
              <b>True</b> if there’s a background query in progress for the specified query table.</span>
          </span>
          <span data-ttu-id="3642a-248">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-248">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-249">使用して、<see cref="M:Microsoft.Office.Interop.Excel._QueryTable.CancelRefresh" />バック グラウンド クエリをキャンセルするメソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-249">Use the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.CancelRefresh" /> method to cancel background queries.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshOnFileOpen">
      <MemberSignature Language="C#" Value="public bool RefreshOnFileOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshOnFileOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshOnFileOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshOnFileOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshOnFileOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1479)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p143">
            <b>True</b> の場合、ブックを開くたびにピボットテーブルのキャッシュまたはクエリ テーブルを自動的に更新します。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p143">
              <b>True</b> if the PivotTable cache or query table is automatically updated each time the workbook is opened. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-253">クエリ テーブルやピボット テーブル レポートは自動的に更新されませんを使用してブックを開くと、<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-253">Query tables and PivotTable reports are not automatically refreshed when you open the workbook by using the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="3642a-254">使用して、 <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> 、ブックを開いた後にデータを更新する方法です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-254">Use the <see cref="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)" /> method to refresh the data after the workbook is open.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshPeriod">
      <MemberSignature Language="C#" Value="public int RefreshPeriod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RefreshPeriod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshPeriod" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshPeriod As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RefreshPeriod { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-255">返すまたは、更新間隔を分単位の数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-255">Returns or sets the number of minutes between refreshes.</span>
          </span>
          <span data-ttu-id="3642a-256">値の取得および設定が可能です。整数型 ( <b>Integer</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-256">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-257">期間を 0 (ゼロ) に設定、自動タイマー更新が無効になります、、このプロパティを<b>Null</b>に設定するのと同じです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-257">Setting the period to 0 (zero) disables automatic timed refreshes and is equivalent to setting this property to <b>Null</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-258">
              <b>RefreshPeriod</b>プロパティの値は 0 ~ 32,767 の整数にできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-258">The value of the <b>RefreshPeriod</b> property can be an integer from 0 through 32,767.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCellInsertionMode RefreshStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCellInsertionMode RefreshStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshStyle As XlCellInsertionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCellInsertionMode RefreshStyle { Microsoft::Office::Interop::Excel::XlCellInsertionMode get(); void set(Microsoft::Office::Interop::Excel::XlCellInsertionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1590)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1590)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1590)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCellInsertionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-259">指定されたワークシートに行を追加または削除、クエリによって返されるレコード セット内の行の数に対応するための方法を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-259">Returns or sets the way rows on the specified worksheet are added or deleted to accommodate the number of rows in a recordset returned by a query.</span>
          </span>
          <span data-ttu-id="3642a-260">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlCellInsertionMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-260">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCellInsertionMode" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTimer">
      <MemberSignature Language="C#" Value="public void ResetTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTimer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._QueryTable.ResetTimer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTimer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTimer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1834)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3642a-261">設定した間隔に指定されたクエリ テーブルまたはピボット テーブル レポートの更新タイマーをリセットします<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshPeriod" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-261">Resets the refresh timer for the specified query table or PivotTable report to the last interval you set using the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.RefreshPeriod" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ResultRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ResultRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.ResultRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResultRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ResultRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1592)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1592)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-262">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />指定されたクエリ テーブルが占有するワークシートの領域を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-262">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the area of the worksheet occupied by the specified query table.</span>
          </span>
          <span data-ttu-id="3642a-263">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-263">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-264">範囲には、フィールド名の行または行番号の列は含まれません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-264">The range doesn’t include the field name row or the row number column.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RobustConnect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRobustConnect RobustConnect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.RobustConnect" />
      <MemberSignature Language="VB.NET" Value="Public Property RobustConnect As XlRobustConnect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRobustConnect RobustConnect { Microsoft::Office::Interop::Excel::XlRobustConnect get(); void set(Microsoft::Office::Interop::Excel::XlRobustConnect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2081)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRobustConnect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-265">ピボット テーブル キャッシュがデータ ソースに接続する方法を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-265">Returns or sets how the PivotTable cache connects to its data source.</span>
          </span>
          <span data-ttu-id="3642a-266">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-266">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlRobustConnect" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowNumbers">
      <MemberSignature Language="C#" Value="public bool RowNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowNumbers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.RowNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Property RowNumbers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowNumbers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p149">
            <b>True</b> の場合、行番号は指定されたクエリ テーブルの最初の列として追加されます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p149">
              <b>True</b> if row numbers are added as the first column of the specified query table. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-269">
              <b>True</b>にこのプロパティを設定してもすぐに行われない行番号を表示します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-269">Setting this property to <b>True</b> doesn’t immediately cause row numbers to appear.</span>
            </span>
            <span data-ttu-id="3642a-270">行番号は、クエリ テーブルを更新すると、次の時間を表示し、クエリ テーブルが更新されるたびに、再構成しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-270">The row numbers appear the next time the query table is refreshed, and they’re reconfigured every time the query table is refreshed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsODC">
      <MemberSignature Language="C#" Value="public void SaveAsODC (string ODCFileName, object Description, object Keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsODC([in]string ODCFileName, [in]object Description, [in]object Keywords) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._QueryTable.SaveAsODC(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsODC (ODCFileName As String, Optional Description As Object, Optional Keywords As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2082)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ODCFileName" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="Keywords" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ODCFileName">
          <span data-ttu-id="3642a-271">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-271">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3642a-272">ファイルの保存先となる場所です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-272">Location to which the file is saved.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="3642a-273">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-273">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3642a-274">ファイルに保存する説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-274">Description that will be saved in the file.</span>
          </span>
        </param>
        <param name="Keywords">
          <span data-ttu-id="3642a-275">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3642a-276">ファイルの検索に使用するキーワード。各キーワードを空白で区切って指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-276">Space-separated keywords that can be used to search for this file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3642a-277">ピボット テーブル キャッシュ ソースを Microsoft Office データ接続ファイルとして保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-277">Saves the PivotTable cache source as a Microsoft Office Data Connection file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveData">
      <MemberSignature Language="C#" Value="public bool SaveData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p154">
            <b>True</b> の場合、ピボットテーブル レポートのデータをブックと共に保存します。 <b>False</b> の場合、レポートの定義のみを保存します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p154">
              <b>True</b> if data for the PivotTable report is saved with the workbook. <b>False</b> if only the report definition is saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-281">OLAP データ ソースの場合、このプロパティは常に<b>False</b>に設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-281">For OLAP data sources, this property is always set to <b>False</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public bool SavePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SavePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.SavePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property SavePassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SavePassword { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p155">
            <b>True</b> の場合、ODBC 接続文字列のパスワード情報は指定されたクエリと共に保存されます。 <b>False</b> の場合、パスワードは削除されます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p155">
              <b>True</b> if password information in an ODBC connection string is saved with the specified query. <b>False</b> if the password is removed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-285">このプロパティは、ODBC クエリにのみ影響します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-285">This property affects only ODBC queries.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p156">クエリ テーブルの範囲に対する並べ替え条件を返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p156">Returns the sort criteria for the query table range. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-288">Web クエリ] または [テキストのクエリからのデータとしてインポートは、ユーザー ・ インタ フェースを使用してデータをインポートする場合、<see cref="T:Microsoft.Office.Interop.Excel._QueryTable" />として他のすべての外部データをインポート中に、オブジェクトの<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />オブジェクトです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-288">If you import data using the user interface, data from Web queries or text queries is imported as a <see cref="T:Microsoft.Office.Interop.Excel._QueryTable" /> object, while all other external data is imported as a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-289">
              <b>ListObject</b>または、<b>クエリ テーブル</b>のいずれかとして他のすべての外部データをインポートすることができます中に、オブジェクト モデルを使用してデータをインポートする場合として<b>クエリ テーブル</b>では、Web クエリ] または [テキストのクエリからのデータをインポートする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-289">If you import data using the object model, data from Web queries or text queries must be imported as a <b>QueryTable</b>, while all other external data can be imported as either a <b>ListObject</b> or a <b>QueryTable</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-290">
              <b>ListObject</b>の<b>QueryTable</b>プロパティを使用するには、 <b>Sort</b>プロパティにアクセスします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-290">You can use the <b>QueryTable</b> property of the <b>ListObject</b> to access the <b>Sort</b> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceConnectionFile">
      <MemberSignature Language="C#" Value="public string SourceConnectionFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceConnectionFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.SourceConnectionFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceConnectionFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceConnectionFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2079)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-291">Microsoft Office データ接続ファイルまたはピボット テーブルの作成に使用した同様のファイルを示す<b>文字列</b>を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-291">Returns or sets a <b>String</b> indicating the Microsoft Office Data Connection file or similar file that was used to create the PivotTable.</span>
          </span>
          <span data-ttu-id="3642a-292">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-292">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceDataFile">
      <MemberSignature Language="C#" Value="public string SourceDataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceDataFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.SourceDataFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceDataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceDataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2080)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-293">クエリ テーブルのソース データ ファイルを示す<b>文字列</b>を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-293">Returns or sets a <b>String</b> indicating the source data file for a query table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-294">ファイル ・ ベースのデータ ソース (Access など) には、 <b>SourceDataFile</b>プロパティにはソース データ ファイルへの完全修飾パスが含まれています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-294">For file-based data sources (e.g. Access) the <b>SourceDataFile</b> property contains a fully qualified path to the source data file.</span>
            </span>
            <span data-ttu-id="3642a-295">(たとえば、SQL Server) のサーバ ・ ベースのデータ ソースの null であります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-295">It is null for server-based data sources (e.g. SQL Server).</span>
            </span>
            <span data-ttu-id="3642a-296">
              <b>SourceDataFile</b>プロパティが null の場合に、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" />プロパティをプログラムで変更します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-296">The <b>SourceDataFile</b> property is set to null if the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection" /> property is changed programmatically.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sql">
      <MemberSignature Language="C#" Value="public object Sql { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Sql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.Sql" />
      <MemberSignature Language="VB.NET" Value="Public Property Sql As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Sql { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1480)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1480)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1480)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-297">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-297">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TablesOnlyFromHTML">
      <MemberSignature Language="C#" Value="public bool TablesOnlyFromHTML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TablesOnlyFromHTML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TablesOnlyFromHTML" />
      <MemberSignature Language="VB.NET" Value="Public Property TablesOnlyFromHTML As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TablesOnlyFromHTML { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1594)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1594)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1594)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-298">ワークシートで定義した入力値と数式に基づいて、データ テーブルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-298">Creates a data table based on input values and formulas that you define on a worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3642a-299">バリアント型 (Variant)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-299">Variant</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-300">このデータ テーブルは、ワークシートの特定の定数を変化させて、ほかのセルの値への影響を調べるケース スタディのために使います。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-300">Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
        <example>
          <para>
            <span data-ttu-id="3642a-301">次の使用例は、シート 1 のセル範囲 A1:K11 に書式設定された乗算表を作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-301">This example creates a formatted multiplication table in cells A1:K11 on Sheet1.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set dataTableRange = Worksheets("Sheet1").Range("A1:K11")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set rowInputCell = Worksheets("Sheet1").Range("A12")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set columnInputCell = Worksheets("Sheet1").Range("A13")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Worksheets("Sheet1").Range("A1").Formula = "=A12*A13"  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
For i = 2 To 11  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(i, 1) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(1, i) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Next i  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
dataTableRange.&lt;/span&gt;
&lt;i&gt;Table&lt;/i&gt;
&lt;span class="label"&gt;rowInputCell, columnInputCell With Worksheets("Sheet1").Range("A1").CurrentRegion     .Rows(1).Font.Bold = True     .Columns(1).Font.Bold = True     .Columns.AutoFit End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="3642a-302">次の使用例は、シート 1 のセル範囲 A1:K11 に書式設定された乗算表を作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-302">This example creates a formatted multiplication table in cells A1:K11 on Sheet1.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set dataTableRange = Worksheets("Sheet1").Range("A1:K11")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set rowInputCell = Worksheets("Sheet1").Range("A12")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set columnInputCell = Worksheets("Sheet1").Range("A13")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Worksheets("Sheet1").Range("A1").Formula = "=A12*A13"  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
For i = 2 To 11  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(i, 1) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(1, i) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Next i  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
dataTableRange.&lt;/span&gt;
&lt;i&gt;Table&lt;/i&gt;
&lt;span class="label"&gt;rowInputCell, columnInputCell With Worksheets("Sheet1").Range("A1").CurrentRegion     .Rows(1).Font.Bold = True     .Columns(1).Font.Bold = True     .Columns.AutoFit End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="3642a-303">次の使用例は、シート 1 のセル範囲 A1:K11 に書式設定された乗算表を作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-303">This example creates a formatted multiplication table in cells A1:K11 on Sheet1.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set dataTableRange = Worksheets("Sheet1").Range("A1:K11")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set rowInputCell = Worksheets("Sheet1").Range("A12")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Set columnInputCell = Worksheets("Sheet1").Range("A13")  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Worksheets("Sheet1").Range("A1").Formula = "=A12*A13"  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
For i = 2 To 11  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(i, 1) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    Worksheets("Sheet1").Cells(1, i) = i - 1  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Next i  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
dataTableRange.&lt;/span&gt;
&lt;i&gt;Table&lt;/i&gt;
&lt;span class="label"&gt;rowInputCell, columnInputCell With Worksheets("Sheet1").Range("A1").CurrentRegion     .Rows(1).Font.Bold = True     .Columns(1).Font.Bold = True     .Columns.AutoFit End With&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="TextFileColumnDataTypes">
      <MemberSignature Language="C#" Value="public object TextFileColumnDataTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileColumnDataTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileColumnDataTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileColumnDataTypes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileColumnDataTypes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-304">クエリ テーブルにインポートするテキスト ファイル内の対応する列に適用されるデータ型を指定する定数の配列を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-304">Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="3642a-305">各列の既定の定数は<b>xlGeneral</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-305">The default constant for each column is <b>xlGeneral</b>.</span>
          </span>
          <span data-ttu-id="3642a-306">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-306">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-307">使用することができます、<see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />定数を使用する列のデータ型またはデータのインポート中に実行されるアクションを指定するのには次の表に記載されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-307">You can use the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants listed in the following table to specify the column data types used or the actions taken during the data import.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-308">
                  <b>xlGeneralFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-308">
                    <b>xlGeneralFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-309">全般</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-309">General</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-310">
                  <b>xlTextFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-310">
                    <b>xlTextFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-311">テキスト</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-311">Text</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-312">
                  <b>xlSkipColumn</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-312">
                    <b>xlSkipColumn</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-313">スキップ列</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-313">Skip column</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-314">
                  <b>xlDMYFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-314">
                    <b>xlDMYFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-315">DMY (日月年) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-315">Day-Month-Year date format</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-316">
                  <b>xlDYMFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-316">
                    <b>xlDYMFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-317">DYM (日年月) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-317">Day-Year-Month date format</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-318">
                  <b>xlEMDFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-318">
                    <b>xlEMDFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-319">EMD (台湾年月日) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-319">EMD date</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-320">
                  <b>xlMDYFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-320">
                    <b>xlMDYFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-321">MDY (月日年) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-321">Month-Day-Year date format</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-322">
                  <b>xlMYDFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-322">
                    <b>xlMYDFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-323">MYD (月年日) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-323">Month-Year-Day date format</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-324">
                  <b>xlYDMFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-324">
                    <b>xlYDMFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-325">YDM (年日月) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-325">Year-Day-Month date format</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-326">
                  <b>xlYMDFormat</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-326">
                    <b>xlYMDFormat</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-327">YMD (年月日) 形式の日付</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-327">Year-Month-Day date format</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="3642a-328">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-328">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-329">列の数よりも配列の要素を指定すると、これらの値は無視されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-329">If you specify more elements in the array than there are columns, those values are ignored.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-330">
              <b>XlEMDFormat</b>は、台湾語の言語サポートがインストールされ、選択されている場合にのみ使用できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-330">You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span>
            </span>
            <span data-ttu-id="3642a-331">定数<b>xlEMDFormat</b>は、台湾が使用されていることを指定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-331">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileCommaDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileCommaDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileCommaDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileCommaDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileCommaDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileCommaDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p161">
            <b>True</b> の場合、クエリ テーブルにテキスト ファイルをインポートするときにカンマを区切り文字に使用します。 <b>False</b> の場合、区切り文字に別の文字を使用します。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p161">
              <b>True</b> if the comma is the delimiter when you import a text file into a query table. <b>False</b> if you want to use some other character as the delimiter. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-336">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-336">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileConsecutiveDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileConsecutiveDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileConsecutiveDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileConsecutiveDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileConsecutiveDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileConsecutiveDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-337">
            <b>True の</b>場合、クエリ テーブルにテキスト ファイルをインポートするとき、連続した区切り文字が 1 つの区切り文字として扱われます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-337">
              <b>True</b> if consecutive delimiters are treated as a single delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-338">既定値は、 <b>Fals</b>e です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-338">The default value is <b>Fals</b>e.</span>
          </span>
          <span data-ttu-id="3642a-339">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-339">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-340">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-340">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileDecimalSeparator">
      <MemberSignature Language="C#" Value="public string TextFileDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-341">クエリ テーブルにテキスト ファイルをインポートするときに使われる 10 進数の区切り文字を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-341">Returns or sets the decimal separator character that Microsoft Excel uses when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-342">既定ではシステムの桁区切り記号文字です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-342">The default is the system decimal separator character.</span>
          </span>
          <span data-ttu-id="3642a-343">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-343">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-344">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) 小数点と桁を含む別の言語のため、コンピューターで使用されているものとは異なる区切り記号設定が使用されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-344">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>)that contains decimal and thousands separators that are different from those used on the computer, due to a different language setting being used.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-p164">異なる記号を使用して Excel にテキストをインポートした場合の結果を次に示します。結果の数値は最も右の列に表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-p164">The following table shows the results when you import text into Microsoft Excel using various separators. Numeric results are displayed in the rightmost column.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-347">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-347">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-348">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-348">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-349">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-349">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-350">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-350">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-351">123.123,45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-351">123.123,45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-352">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-352">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-353">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-353">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-354">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-354">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-355">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-355">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-356">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-356">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-357">123.123,45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-357">123.123,45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-358">123.123,45 (文字列)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-358">123.123,45 (text)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-359">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-359">Comma</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-360">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-360">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-361">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-361">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-362">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-362">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-363">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-363">123,123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-364">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-364">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-365">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-365">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-366">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-366">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-367">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-367">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-368">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-368">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-369">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-369">123 123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-370">123 123.45 (文字列)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-370">123 123.45 (text)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-371">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-371">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-372">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-372">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-373">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-373">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-374">スペース</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-374">Space</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-375">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-375">123 123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-376">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-376">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileFixedColumnWidths">
      <MemberSignature Language="C#" Value="public object TextFileFixedColumnWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileFixedColumnWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileFixedColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileFixedColumnWidths As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileFixedColumnWidths { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-377">クエリ テーブルにインポートするテキスト ファイルの文字数) 単位での列の幅に対応する整数の配列を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-377">Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="3642a-378">有効な幅は、1 から 32,767 文字までです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-378">Valid widths are from 1 through 32,767 characters.</span>
          </span>
          <span data-ttu-id="3642a-379">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-379">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-380">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlFixedWidth</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-380">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlFixedWidth</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-p166">正または 0 の有効な列幅を指定してください。テキスト ファイルの幅を超える列を指定した場合、それらの値は無視されます。指定の列幅の合計よりもテキスト ファイルの幅の方が広い場合、テキスト ファイルの残りの部分は追加された列にインポートされます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-p166">You must specify a valid, nonnegative column width. If you specify columns that exceed the width of the text file, those values are ignored. If the width of the text file is greater than the total width of columns you specify, the balance of the text file is imported into an additional column.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileOtherDelimiter">
      <MemberSignature Language="C#" Value="public string TextFileOtherDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileOtherDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileOtherDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileOtherDelimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileOtherDelimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-384">クエリ テーブルにテキスト ファイルをインポートするときに区切り記号として使用する文字を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-384">Returns or sets the character used as the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-385">既定値は <b>Null</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-385">The default value is <b>Null</b>.</span>
          </span>
          <span data-ttu-id="3642a-386">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-386">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-387">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-387">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-388">文字列中に複数の文字を指定すると、先頭の文字のみが使用されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-388">If you specify more than one character in the string, only the first character is used.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileParseType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileParseType As XlTextParsingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextParsingType TextFileParseType { Microsoft::Office::Interop::Excel::XlTextParsingType get(); void set(Microsoft::Office::Interop::Excel::XlTextParsingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextParsingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-389">取得またはクエリ テーブルにインポートするテキスト ファイルのデータの列形式を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-389">Returns or sets the column format for the data in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="3642a-390">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-390">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-391">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-391">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePlatform">
      <MemberSignature Language="C#" Value="public int TextFilePlatform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextFilePlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFilePlatform" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePlatform As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextFilePlatform { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-392">クエリ テーブルにインポートするテキスト ファイルの原点を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-392">Returns or sets the origin of the text file you’re importing into the query table.</span>
          </span>
          <span data-ttu-id="3642a-393">このプロパティは、データのインポート中に使用されるコード ページを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-393">This property determines which code page is used during the data import.</span>
          </span>
          <span data-ttu-id="3642a-394">既定値は、テキスト ファイルのインポート ウィザードで [元のファイル オプションの現在の設定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-394">The default value is the current setting of the File Origin option in the Text File Import Wizard.</span>
          </span>
          <span data-ttu-id="3642a-395">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-395">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-396">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-396">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePromptOnRefresh">
      <MemberSignature Language="C#" Value="public bool TextFilePromptOnRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFilePromptOnRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFilePromptOnRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePromptOnRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFilePromptOnRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-397">
            <b>True</b>クエリ テーブルが更新されるたびにインポートするテキスト ファイルの名前を指定する場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-397">
              <b>True</b> if you want to specify the name of the imported text file each time the query table is refreshed.</span>
          </span>
          <span data-ttu-id="3642a-398">テキスト ファイルのインポート] ダイアログ ボックスを使用すると、パスとファイル名を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-398">The Import Text File dialog box allows you to specify the path and file name.</span>
          </span>
          <span data-ttu-id="3642a-399">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-399">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="3642a-400">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-400">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-401">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-401">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-402">このプロパティの値が<b>True</b>の場合は、ダイアログ ボックスがクエリ テーブルの最初の更新では表示されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-402">If the value of this property is <b>True</b>, the dialog box doesn’t appear the first time a query table is refreshed.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-403">既定値は<b>True</b>ユーザー ・ インタ フェースで。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-403">The default value is <b>True</b> in the user interface.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSemicolonDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSemicolonDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSemicolonDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileSemicolonDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSemicolonDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSemicolonDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-404">
            <b>True の</b>場合は、クエリ テーブルにテキスト ファイルをインポートする場合と、セミコロンは区切り記号の値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-404">
              <b>True</b> if the semicolon is the delimiter when you import a text file into a query table, and if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
          </span>
          <span data-ttu-id="3642a-405">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-405">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="3642a-406">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-406">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-407">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-407">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSpaceDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSpaceDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSpaceDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileSpaceDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSpaceDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSpaceDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p172">
            <b>True</b> の場合、テキスト ファイルをクエリ テーブルにインポートするときの区切り文字にスペースを設定します。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p172">
              <b>True</b> if the space character is the delimiter when you import a text file into a query table. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-411">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-411">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileStartRow">
      <MemberSignature Language="C#" Value="public int TextFileStartRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextFileStartRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileStartRow" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileStartRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextFileStartRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-412">テキストの解析が開始されます、クエリ テーブルにテキスト ファイルをインポートする行の番号を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-412">Returns or sets the row number at which text parsing will begin when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-413">有効な値は、1 から 32,767 までの整数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-413">Valid values are integers from 1 through 32,767.</span>
          </span>
          <span data-ttu-id="3642a-414">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-414">The default value is 1.</span>
          </span>
          <span data-ttu-id="3642a-415">値の取得および設定が可能です。整数型 ( <b>Integer</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-415">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-416">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-416">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTabDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileTabDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTabDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTabDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTabDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTabDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p174">
            <b>True</b> の場合、テキスト ファイルをクエリ テーブルにインポートするときの区切り文字にタブ記号を設定します。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p174">
              <b>True</b> if the tab character is the delimiter when you import a text file into a query table. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-420">クエリ テーブルがテキスト ファイルからのデータに基づく場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) と場合にのみの値、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" />プロパティが<b>xlDelimited</b>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-420">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), and only if the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTextQualifier">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTextQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTextQualifier As XlTextQualifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextQualifier TextFileTextQualifier { Microsoft::Office::Interop::Excel::XlTextQualifier get(); void set(Microsoft::Office::Interop::Excel::XlTextQualifier value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextQualifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-421">クエリ テーブルにテキスト ファイルをインポートするときに、テキスト区切り記号を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-421">Returns or sets the text qualifier when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-422">テキスト修飾子は、かっこで囲まれたデータが、テキスト形式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-422">The text qualifier specifies that the enclosed data is in text format.</span>
          </span>
          <span data-ttu-id="3642a-423">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-423">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-424">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-424">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileThousandsSeparator">
      <MemberSignature Language="C#" Value="public string TextFileThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-425">何千ものクエリ テーブルにテキスト ファイルをインポートするときに使用する区切り文字を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-425">Returns or sets the thousands separator character that Microsoft Excel uses when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="3642a-426">既定ではシステムの桁区切り記号です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-426">The default is the system thousands separator character.</span>
          </span>
          <span data-ttu-id="3642a-427">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-427">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-428">テキスト ファイルからのデータに基づいて、クエリ テーブルの場合にのみ、このプロパティを使用する (と、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xltextimport</b>) ファイルには、小数点と桁が含まれている場合は特に、区切り記号は異なるため、コンピューター上で使われる、別の言語設定が使用されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-428">Use this property only when your query table is based on data from a text file (with the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property set to <b>xlTextImport</b>), especially when the file contains decimal and thousands separators that are different from those used on the computer, due to a different language setting being used.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-p177">異なる記号を使用して Excel にテキストをインポートした場合の結果を次に示します。結果の数値は最も右の列に表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-p177">The following table shows the results when you import text into Microsoft Excel using various separators. Numeric results are displayed in the rightmost column.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="3642a-431">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-431">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-432">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-432">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-433">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-433">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-434">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-434">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-435">123.123,45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-435">123.123,45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-436">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-436">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-437">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-437">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-438">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-438">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-439">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-439">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-440">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-440">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-441">123.123,45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-441">123.123,45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-442">123.123,45 (文字列)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-442">123.123,45 (text)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-443">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-443">Comma</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-444">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-444">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-445">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-445">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-446">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-446">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-447">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-447">123,123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-448">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-448">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-449">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-449">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-450">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-450">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-451">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-451">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-452">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-452">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-453">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-453">123 123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-454">123 123.45 (文字列)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-454">123 123.45 (text)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="3642a-455">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-455">Period</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3642a-456">カンマ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-456">Comma</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-457">ピリオド</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-457">Period</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-458">スペース</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-458">Space</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-459">123,123.45</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-459">123 123.45</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="3642a-460">123,123.45 (数値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3642a-460">123,123.45 (numeric)</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTrailingMinusNumbers">
      <MemberSignature Language="C#" Value="public bool TextFileTrailingMinusNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTrailingMinusNumbers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileTrailingMinusNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTrailingMinusNumbers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTrailingMinusNumbers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-461">
            <b>True</b>で始まる、テキストとしてインポートされた数値を扱うには Microsoft Excel の"-"記号、負の数をします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-461">
              <b>True</b> for Microsoft Excel to treat numbers imported as text that begin with a "-" symbol as a negative number.</span>
          </span>
          <span data-ttu-id="3642a-462">
            <b>False</b>で始まる、テキストとしてインポートされた数値を扱うには Excel の「-」記号をテキストとして。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-462">
              <b>False</b> for Excel to treat numbers imported as text that begin with a "-" symbol as text.</span>
          </span>
          <span data-ttu-id="3642a-463">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-463">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileVisualLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.TextFileVisualLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileVisualLayout As XlTextVisualLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextVisualLayoutType TextFileVisualLayout { Microsoft::Office::Interop::Excel::XlTextVisualLayoutType get(); void set(Microsoft::Office::Interop::Excel::XlTextVisualLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextVisualLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-464">値を取得または設定、<see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" />をインポートするテキストのレイアウトは、左から右または右から左にするかどうかを示す定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-464">Returns or sets a <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> constant that indicates whether the visual layout of the text being imported is left-to-right or right-to-left.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebConsecutiveDelimitersAsOne">
      <MemberSignature Language="C#" Value="public bool WebConsecutiveDelimitersAsOne { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebConsecutiveDelimitersAsOne" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebConsecutiveDelimitersAsOne" />
      <MemberSignature Language="VB.NET" Value="Public Property WebConsecutiveDelimitersAsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebConsecutiveDelimitersAsOne { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1878)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1878)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-465">
            <b>True の</b>場合、連続する区切り文字は、HTML からデータをインポートする場合、1 つの区切り文字として扱われます。&lt;より前のバージョン&gt;クエリ テーブルに Web ページ内のタグ データの列を解析する場合とします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-465">
              <b>True</b> if consecutive delimiters are treated as a single delimiter when you import data from HTML &lt;PRE&gt; tags in a Web page into a query table, and if the data is to be parsed into columns.</span>
          </span>
          <span data-ttu-id="3642a-466">
            <b>False</b>を複数の区切り記号として、連続する区切り文字を扱う場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-466">
              <b>False</b> if you want to treat consecutive delimiters as multiple delimiters.</span>
          </span>
          <span data-ttu-id="3642a-467">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-467">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="3642a-468">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-468">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-469">このプロパティを使用して場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>で、クエリは、HTML ドキュメントを返しますと<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebPreFormattedTextToColumns" />プロパティが<b>True</b>に設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-469">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b>, the query returns an HTML document, and the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebPreFormattedTextToColumns" /> property is set to <b>True</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebDisableDateRecognition">
      <MemberSignature Language="C#" Value="public bool WebDisableDateRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebDisableDateRecognition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebDisableDateRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property WebDisableDateRecognition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebDisableDateRecognition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1877)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1877)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-p180">
            <b>True</b> の場合、Web ページをクエリ テーブルにインポートするときに、日付形式のデータをテキストとして解析します。 <b>False</b> の場合、日付認識を有効にします。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-p180">
              <b>True</b> if data that resembles dates is parsed as text when you import a Web page into a query table. <b>False</b> if date recognition is used. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-474">このプロパティを使用して場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>に設定し、クエリには、HTML ドキュメントが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-474">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b> and the query returns an HTML document.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebDisableRedirections">
      <MemberSignature Language="C#" Value="public bool WebDisableRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebDisableRedirections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebDisableRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property WebDisableRedirections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebDisableRedirections { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2162)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-475">
            <b>True の</b>場合、Web クエリのリダイレクトが無効になって、<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-475">
              <b>True</b> if Web query redirections are disabled for a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
          <span data-ttu-id="3642a-476">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-476">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="3642a-477">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-477">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebFormatting">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWebFormatting WebFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWebFormatting WebFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property WebFormatting As XlWebFormatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWebFormatting WebFormatting { Microsoft::Office::Interop::Excel::XlWebFormatting get(); void set(Microsoft::Office::Interop::Excel::XlWebFormatting value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWebFormatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-478">返すまたは、どの程度存在する場合に、Web ページでは、書式設定、適用ページをクエリ テーブルにインポートするときを決定する値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-478">Returns or sets a value that determines how much formatting from a Web page, if any, is applied when you import the page into a query table.</span>
          </span>
          <span data-ttu-id="3642a-479">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlWebFormatting" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-479">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWebFormatting" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-480">このプロパティを使用して場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>に設定し、クエリには、HTML ドキュメントが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-480">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b> and the query returns an HTML document.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPreFormattedTextToColumns">
      <MemberSignature Language="C#" Value="public bool WebPreFormattedTextToColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebPreFormattedTextToColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebPreFormattedTextToColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPreFormattedTextToColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebPreFormattedTextToColumns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-481">データが HTML に含まれているかどうかを設定を取得または&lt;より前のバージョン&gt;ページをクエリ テーブルにインポートすると、列に、Web ページ内のタグを解析します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-481">Returns or sets whether data contained within HTML &lt;PRE&gt; tags in the Web page is parsed into columns when you import the page into a query table.</span>
          </span>
          <span data-ttu-id="3642a-482">既定では <b>True です</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-482">The default is <b>True</b>.</span>
          </span>
          <span data-ttu-id="3642a-483">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-483">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-484">このプロパティが使用される場合にのみ、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />クエリ テーブルのプロパティが<b>xlWebQuery</b>で、クエリには、HTML ドキュメントが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-484">This property is used only when the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property of the query table is <b>xlWebQuery</b> and the query returns an HTML document.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSelectionType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWebSelectionType WebSelectionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWebSelectionType WebSelectionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebSelectionType" />
      <MemberSignature Language="VB.NET" Value="Public Property WebSelectionType As XlWebSelectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWebSelectionType WebSelectionType { Microsoft::Office::Interop::Excel::XlWebSelectionType get(); void set(Microsoft::Office::Interop::Excel::XlWebSelectionType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWebSelectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-485">返すまたは、Web ページ全体、すべての Web ページで、テーブルまたは Web ページ上の特定のテーブルのみがクエリ テーブルにインポートするかどうかを決定する値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-485">Returns or sets a value that determines whether an entire Web page, all tables on the Web page, or only specific tables on the Web page are imported into a query table.</span>
          </span>
          <span data-ttu-id="3642a-486">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlWebSelectionType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-486">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWebSelectionType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-487">このプロパティを使用して場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>に設定し、クエリには、HTML ドキュメントが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-487">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b> and the query returns an HTML document.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-488">このプロパティの値が<b>xlSpecifiedTables</b>の場合は、使用できます、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables" />をインポートするテーブルを指定するプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-488">If the value of this property is <b>xlSpecifiedTables</b>, you can use the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables" /> property to specify the tables to be imported.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSingleBlockTextImport">
      <MemberSignature Language="C#" Value="public bool WebSingleBlockTextImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebSingleBlockTextImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebSingleBlockTextImport" />
      <MemberSignature Language="VB.NET" Value="Public Property WebSingleBlockTextImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebSingleBlockTextImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-489">
            <b>True</b>の場合 HTML からデータを&lt;より前のバージョン&gt;ページをクエリ テーブルにインポートすると、指定した Web ページ内のタグがすべてを一度に処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-489">
              <b>True</b> if data from the HTML &lt;PRE&gt; tags in the specified Web page is processed all at once when you import the page into a query table.</span>
          </span>
          <span data-ttu-id="3642a-490">
            <b>偽</b>ヘッダー行が次のように認識されるように、連続した行のブロックにデータがインポートされた場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-490">
              <b>False</b> if the data is imported in blocks of contiguous rows so that header rows will be recognized as such.</span>
          </span>
          <span data-ttu-id="3642a-491">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-491">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="3642a-492">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-492">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-493">このプロパティを使用して場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>に設定し、クエリには、HTML ドキュメントが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-493">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b> and the query returns an HTML document.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebTables">
      <MemberSignature Language="C#" Value="public string WebTables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WebTables" />
      <MemberSignature Language="VB.NET" Value="Public Property WebTables As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebTables { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-494">取得または Web ページをクエリ テーブルにインポートするときにテーブル名またはインデックス番号のカンマ区切りリストを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-494">Returns or sets a comma-delimited list of table names or table index numbers when you import a Web page into a query table.</span>
          </span>
          <span data-ttu-id="3642a-495">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-495">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-496">このプロパティを使用する場合にのみ、クエリ テーブルの<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" />プロパティが<b>xlWebQuery</b>で、クエリは、HTML ドキュメントとの値を返します、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebSelectionType" />プロパティは、 <b>xlSpecifiedTables</b>。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-496">Use this property only when the query table’s <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.QueryType" /> property is set to <b>xlWebQuery</b>, the query returns an HTML document, and the value of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.WebSelectionType" /> property is <b>xlSpecifiedTables</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._QueryTable.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3642a-497">返します、 <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> 、クエリ テーブルを使用するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-497">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object that the query table uses.</span>
          </span>
          <span data-ttu-id="3642a-498">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-498">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3642a-499">
            <b>WorkbookConnection</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3642a-499">
              <b>WorkbookConnection</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="3642a-500">として Web クエリ、またはテキストのクエリからデータをインポートするユーザー インターフェイスを使用してデータをインポートする場合、<see cref="T:Microsoft.Office.Interop.Excel._QueryTable" />として他のすべての外部データをインポート中に、オブジェクトの<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />オブジェクトです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-500">If you import  data using the user interface, data from a Web query or a text query is imported as a <see cref="T:Microsoft.Office.Interop.Excel._QueryTable" /> object, while all other external data is imported as a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-501">
              <b>ListObject</b>または、<b>クエリ テーブル</b>のいずれかとして他のすべての外部データをインポートすることができます中に、オブジェクト モデルを使用してデータをインポートする場合として<b>クエリ テーブル</b>では、Web クエリまたはテキストのクエリからのデータをインポートする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-501">If you import data using the object model, data from a Web query or a text query must be  imported as a <b>QueryTable</b>, while all other external data can be imported as either a <b>ListObject</b> or a <b>QueryTable</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3642a-502">
              <b>WorkbookConnection</b>プロパティは、<b>クエリ テーブル</b>オブジェクトにのみ適用されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3642a-502">The <b>WorkbookConnection</b> property applies only to <b>QueryTable</b> objects.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>