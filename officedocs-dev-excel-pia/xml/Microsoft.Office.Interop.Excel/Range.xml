<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e87541caefc40cd684f69da1a8301eb9348e7fbc" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20584967" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0b4ae-101">セル、行、列、1 つ以上のセル範囲を含む選択範囲、または 3-D 範囲を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b4ae-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary>
          <span data-ttu-id="0b4ae-102">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-102">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary>
          <span data-ttu-id="0b4ae-103">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="0b4ae-104">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-104">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-105">現在の選択範囲内にある必要があります 1 つのセルをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-105">Activates a single cell, which must be inside the current selection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-106">
            <para>セル範囲を選択するには、<see cref="M:Microsoft.Office.Interop.Excel.Range.Select" />メソッドです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-106">
              <para>To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="0b4ae-107">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-108">コメント テキストを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-108">The comment text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-109">範囲にコメントを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-109">Adds a comment to the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-110">水平方向または垂直方向に均等にセル内の文字列の配置を設定するとかどうかのテキストを自動的にインデントを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-111">
            <para>テキストを水平方向または垂直方向に均等にセル内の文字列の配置を設定すると自動的にインデントする場合、このプロパティが<b>True</b>を返します</para>。均等割り付け、テキストの配置を設定するのには
          <para>を設定すること、<see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />プロパティを<b>xlVAlignDistributed</b>ときの値、<see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" />プロパティが<b>xlVertical</b>を設定すること、<see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />プロパティを<b>xlHAlignDistributed</b>とOrientation プロパティの値は、 <b>xlHorizontal</b></para> 。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-111">
              <para>This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</para>
              <para>To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="0b4ae-112">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-113">
            <b>True</b>を返す行部分の参照を絶対参照として。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-113">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="0b4ae-114">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-114">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="0b4ae-115">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-116">
            <b>True</b>を返す列部分の参照を絶対参照として。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-116">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="0b4ae-117">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="0b4ae-118">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-118">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="0b4ae-119">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-119">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-120">
            <b>True を指定</b>する外部参照。<b>False</b>ローカルの参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-120">
              <b>True</b> to return an external reference; <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="0b4ae-121">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-121">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="0b4ae-122">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-123">場合<paramref name="RowAbsolute" />と<paramref name="ColumnAbsolute" />が<b>False</b>、および<paramref name="ReferenceStyle" /><b>xlR1C1</b>は、相対参照の開始点を含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-123">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="0b4ae-124">この引数は、<see cref="T:Microsoft.Office.Interop.Excel.Range" />の開始点を定義するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-124">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-125">範囲の参照を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-125">Returns the range reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-126">
            <para>参照に複数のセルが含まれている場合<paramref name="RowAbsolute" />と<paramref name="ColumnAbsolute" />すべての行と列に適用します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-126">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">
          <span data-ttu-id="0b4ae-127">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-127">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-128">
            <b>True</b>を返す行部分の参照を絶対参照として。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-128">
              <b>True</b> to return the row part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="0b4ae-129">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-129">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ColumnAbsolute">
          <span data-ttu-id="0b4ae-130">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-131">
            <b>True</b>を返す列部分の参照を絶対参照として。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-131">
              <b>True</b> to return the column part of the reference as an absolute reference.</span>
          </span>
          <span data-ttu-id="0b4ae-132">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-132">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="ReferenceStyle">
          <span data-ttu-id="0b4ae-133">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-133">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </param>
        <param name="External">
          <span data-ttu-id="0b4ae-134">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-135">
            <b>True を指定</b>する外部参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-135">
              <b>True</b> to return an external reference.</span>
          </span>
          <span data-ttu-id="0b4ae-136">
            <b>False</b>ローカルの参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-136">
              <b>False</b> to return a local reference.</span>
          </span>
          <span data-ttu-id="0b4ae-137">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-137">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="0b4ae-138">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-139">場合<paramref name="RowAbsolute" />と<paramref name="ColumnAbsolute" />両方が<b>False</b>に設定し、<paramref name="ReferenceStyle" />が設定<b>xlR1C1</b>をするには、相対参照の開始点を含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-139">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span>
          </span>
          <span data-ttu-id="0b4ae-140">この引数は、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、参照の開始点を定義するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-140">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-141">ユーザーの言語で指定された範囲の範囲の参照を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-141">Returns the range reference for the specified range in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-142">
            <para>参照に複数のセルが含まれている場合<paramref name="RowAbsolute" />と<paramref name="ColumnAbsolute" />のすべての行とすべての列にそれぞれ適用します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-142">
              <para>If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action">
          <span data-ttu-id="0b4ae-143">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-143">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span>
          </span>
          <span data-ttu-id="0b4ae-144">
            <b>Xlfilteraction クラス</b>の定数は次のいずれか:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-144">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span>
          </span>
        </param>
        <param name="CriteriaRange">
          <span data-ttu-id="0b4ae-145">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-145">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-146">条件の範囲です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-146">The criteria range.</span>
          </span>
          <span data-ttu-id="0b4ae-147">この引数を省略すると、条件はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-147">If this argument is omitted, there are no criteria.</span>
          </span>
        </param>
        <param name="CopyToRange">
          <span data-ttu-id="0b4ae-148">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-149">アクションの場合は、コピーした行を変換先の範囲<paramref name="xlFilterCopy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-149">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span>
          </span>
          <span data-ttu-id="0b4ae-150">それ以外の場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-150">Otherwise, this argument is ignored.</span>
          </span>
        </param>
        <param name="Unique">
          <span data-ttu-id="0b4ae-151">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-151">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-152">
            <b>True の</b>一意のレコードのみをフィルター処理するには<b>False</b>の条件を満たすすべてのレコードにフィルターを適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-152">
              <b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span>
          </span>
          <span data-ttu-id="0b4ae-153">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-153">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-154">フィルター処理するか、検索条件範囲に基づいて、リストからデータをコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-154">Filters or copies data from a list based on a criteria range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-155">
            <para>初期選択範囲が単一のセルの場合は、そのセルの現在の領域が使用されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-155">
              <para>If the initial selection is a single cell, that cell's current region is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-156">OLAP データ ソースに基づく範囲内の編集されたすべてのセルに書き戻し操作を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-156">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-157">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />メソッドはすべての変更の範囲の最後の適用の変更操作がコミットされた後に、UPDATE CUBE ステートメントを実行します。非 OLAP データ ソースに基づく範囲で実行される場合、このメソッドは、実行時エラーを生成します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-157">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed. This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-158">保護されたワークシートで範囲を編集できるかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-158">Determines if the range can be edited on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-159">
            <para>このプロパティは、保護されたワークシートで範囲を編集できる場合は<b>True</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-159">
              <para>This property returns <b>True</b> if the range can be edited on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-160">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-160">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names">
          <span data-ttu-id="0b4ae-161">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-162">適用する名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-162">An array of the names to be applied.</span>
          </span>
          <span data-ttu-id="0b4ae-163">この引数を省略した場合は、シート上のすべての名前が範囲に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-163">If this argument is omitted, all names on the sheet are applied to the range.</span>
          </span>
        </param>
        <param name="IgnoreRelativeAbsolute">
          <span data-ttu-id="0b4ae-164">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-164">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-165">
            <b>True の</b>名前または参照のいずれかの種類に関係なく、名前の参照を置換するには<b>False</b>と交換して絶対参照を絶対名、相対参照を相対名に、複合参照を複合名にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-165">
              <b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span>
          </span>
          <span data-ttu-id="0b4ae-166">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-166">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UseRowColumnNames">
          <span data-ttu-id="0b4ae-167">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-167">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-168">
            <b>該当</b>範囲に対する名前が見つからない場合は、指定した範囲を含む範囲が行と列の名前を使用するには<b>False</b>を無視する、<paramref name="OmitColumn" />と<paramref name="OmitRow" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-168">
              <b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span>
          </span>
          <span data-ttu-id="0b4ae-169">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-169">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitColumn">
          <span data-ttu-id="0b4ae-170">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-171">
            <b>True を指定</b>する参照全体を行方向の名前に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-171">
              <b>True</b> to replace the entire reference with the row-oriented name.</span>
          </span>
          <span data-ttu-id="0b4ae-172">参照先のセルが数式と同じ列には、行方向の名前付き範囲に含まれる場合にのみ、列方向の名前を省略できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-172">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span>
          </span>
          <span data-ttu-id="0b4ae-173">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-173">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="OmitRow">
          <span data-ttu-id="0b4ae-174">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-175">
            <b>True を指定</b>する参照全体を列方向の名前に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-175">
              <b>True</b> to replace the entire reference with the column-oriented name.</span>
          </span>
          <span data-ttu-id="0b4ae-176">参照先のセルが数式と同じ行には、列方向の名前付き範囲に含まれる場合にのみ、行方向の名前を省略できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-176">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span>
          </span>
          <span data-ttu-id="0b4ae-177">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-177">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Order">
          <span data-ttu-id="0b4ae-178">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-178">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-179">セル参照が行方向と列方向の範囲名で置き換えられるとき、行と列のどちらの名前を先に表示するかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-179">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span>
          </span>
          <span data-ttu-id="0b4ae-180">
            <b>XlApplyNamesOrder</b>定数のいずれか:<b>xlColumnThenRow</b><b>xlRowThenColumn</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-180">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span>
          </span>
        </param>
        <param name="AppendLast">
          <span data-ttu-id="0b4ae-181">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-182">
            <b>True</b>内の名前の定義を置換するのには<paramref name="Names" />とも最後には定義された名前の定義を置換<b>False を指定</b>する [名前の定義を置き換える<paramref name="Names" />のみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-182">
              <b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span>
          </span>
          <span data-ttu-id="0b4ae-183">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-183">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-184">指定したセル範囲のセルに名前を付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-184">Applies names to the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-185">
            <para>
              <b>Array</b>関数を使用するにはの名のリストを作成するのには、<paramref name="Names" />の引数です</para>。
          <para>シート全体に名前を適用する場合にを使用します</para>。
          <para>することはできません「を反映しない」の名前です名前を削除するには、<see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" />メソッドです。</para> 。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-185">
              <para>You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</para>
              <para>If you want to apply names to the entire sheet, use Cells.ApplyNames.</para>
              <para>You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-186">指定された対象セル範囲にアウトラインの既定のスタイルを適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-186">Applies outlining styles to the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-187">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 、複数の選択範囲のすべての範囲を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-187">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-188">
            <para>単一選択の場合は、 <b>Areas</b>プロパティは、1 つのオブジェクトを含むコレクションを返します-元の<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト自体です。複数領域選択の場合、 <b>Areas</b>プロパティは各選択範囲を 1 つのオブジェクトを含むコレクションを返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-188">
              <para>For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself. For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="0b4ae-189">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-189">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-190">オートコンプリートの対象となる文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-190">The string to complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-191">一覧から、オートコンプリートの一致を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-191">Returns an AutoComplete match from the list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-192">
            <para>オートコンプリートの一致がないかどうか、またはリスト内の複数のエントリには、完了するのには文字列が一致すると、このメソッドは空の文字列を返します</para>。
          <para>このメソッドは、オートコンプリート機能が無効になっている場合でも機能します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-192">
              <para>If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</para>
              <para>This method works even if the AutoComplete feature is disabled.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="0b4ae-193">必要な<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-193">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="0b4ae-194">入力するセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-194">The cells to be filled.</span>
          </span>
          <span data-ttu-id="0b4ae-195">先には、元データの範囲を含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-195">The destination must include the source range.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0b4ae-196">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-196">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-197">オートフィルの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-197">Specifies the fill type.</span>
          </span>
          <span data-ttu-id="0b4ae-198">
            <b>XlAutoFillType</b>定数のいずれか:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>は、この引数に<b>xlFillDefault</b>または省略すると、Microsoft Excel が、最も適切な種類、選択範囲に基づいたソースです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-198">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-199">指定された対象セル範囲内のセルに対してオートフィルを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-199">Performs an autofill on the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field">
          <span data-ttu-id="0b4ae-200">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-201">フィルターの対象となるフィールド番号を整数で指定します。フィールド番号は、リストの左側から始まります。つまり、最も左側にあるフィールドはフィールド番号 1 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-201">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span>
          </span>
        </param>
        <param name="Criteria1">
          <span data-ttu-id="0b4ae-202">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-203">抽出条件 ("101" などの文字列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-203">The criteria (a string; for example, "101").</span>
          </span>
          <span data-ttu-id="0b4ae-204">「=」を使用して、空白のフィールドを検索またはを使用して、"&lt;&gt;"空白でないフィールドを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-204">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span>
          </span>
          <span data-ttu-id="0b4ae-205">この引数を省略すると、条件が<b>すべて</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-205">If this argument is omitted, the criteria is <b>All</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-206">場合<paramref name="Operator" />は<b>xlTop10Items</b>、<paramref name="Criteria1" />アイテム (たとえば、「10」) の数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-206">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="0b4ae-207">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-207">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span>
          </span>
          <span data-ttu-id="0b4ae-208">
            <b>XlAutoFilterOperator</b>定数は、次のいずれか:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>使用<b>xlAnd</b>と<b>xlOr</b><paramref name="Criteria1" />と<paramref name="Criteria2" />複合抽出条件を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-208">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span>
          </span>
        </param>
        <param name="Criteria2">
          <span data-ttu-id="0b4ae-209">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-209">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-210">2 番目の条件 (文字列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-210">The second criteria (a string).</span>
          </span>
          <span data-ttu-id="0b4ae-211">複合条件を作成する抽出条件 1 および演算子で使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-211">Used with Criteria1 and Operator to construct compound criteria.</span>
          </span>
        </param>
        <param name="VisibleDropDown">
          <span data-ttu-id="0b4ae-212">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-212">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-213">
            <b>True</b>フィルターのフィールドにオート フィルターのドロップダウン矢印を表示するには<b>False</b>フィルターのフィールドにオート フィルターのドロップダウン矢印を非表示にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-213">
              <b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span>
          </span>
          <span data-ttu-id="0b4ae-214">
            <b>True の</b>既定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-214">
              <b>True</b> by default.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-215">オートフィルターを使ってリストにフィルターをかけます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-215">Filters a list using the AutoFilter.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-216">
            <para>適用、<see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />を<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />オブジェクトを返す、<see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />オブジェクトです</para>。
          <para>すべての引数を省略すると、このメソッドに切り替えるだけ指定した範囲にオート フィルターのドロップダウン矢印を表示します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-216">
              <para>Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</para>
              <para>If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-217">対象セル範囲の列の幅や行の高さを内容に合わせて調節します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-217">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-218">
            <para>式は、行または行の範囲または列、または列の範囲である必要があります。それ以外の場合、このメソッドはエラーを生成します</para>。
          <para>列の幅の 1 単位は標準スタイルの 1 つの文字の幅に相当します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-218">
              <para>The expression must be a row or a range of rows, or a column or a range of columns. Otherwise, this method generates an error.</para>
              <para>One unit of column width is equal to the width of one character in the Normal style.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="0b4ae-219">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-219">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span>
          </span>
          <span data-ttu-id="0b4ae-220">
            <b>XlRangeAutoFormat</b>定数の指定された AutoFormat.Some は、選択またはインストールされている言語サポート (たとえば、日本語) によっては使用しない場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-220">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="0b4ae-221">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-222">
            <b>True の</b>番号を追加するオート フォーマットで書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-222">
              <b>True</b> to include number formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-223">既定値は、 <b>は True です</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-223">The default value is <b>True.</b></span>
          </span>
        </param>
        <param name="Font">
          <span data-ttu-id="0b4ae-224">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-225">の<b>場合は true</b>オート フォーマットにフォントの書式を含めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-225">
              <b>True</b> to include font formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-226">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-226">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Alignment">
          <span data-ttu-id="0b4ae-227">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-228">
            <b>True</b>をオート フォーマットに配置を含めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-228">
              <b>True</b> to include alignment in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-229">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-229">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Border">
          <span data-ttu-id="0b4ae-230">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-231">
            <b>True</b>をオート フォーマットに罫線の書式が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-231">
              <b>True</b> to include border formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-232">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-232">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="0b4ae-233">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-233">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-234">
            <b>True</b>をオート フォーマットにパターンの書式を含めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-234">
              <b>True</b> to include pattern formats in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-235">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-235">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="0b4ae-236">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-237">
            <b>True</b>をオート フォーマットに列の幅と行の高さを含めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-237">
              <b>True</b> to include column width and row height in the AutoFormat.</span>
          </span>
          <span data-ttu-id="0b4ae-238">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-238">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-239">定義済みの書式を使用して、指定された範囲を自動的に書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-239">Automatically formats the specified range, using a predefined format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-240">
            <para>範囲が単一のセルの場合は、このメソッドは、セルを囲むアクティブな領域もフォーマットします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-240">
              <para>If the range is a single cell, this method also formats the active region surrounding the cell. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-241">指定された範囲のアウトラインが自動的に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-241">Automatically creates an outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-242">
            <para>範囲が単一のセルの場合は、Microsoft Excel はシート全体にアウトラインを作成します。新しいアウトラインには、既存のアウトラインが置き換えられます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-242">
              <para>If the range is a single cell, Microsoft Excel creates an outline for the entire sheet. The new outline replaces any existing outline.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">
          <span data-ttu-id="0b4ae-243">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-243">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span>
          </span>
          <span data-ttu-id="0b4ae-244">境界線の線のスタイル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-244">The line style for the border.</span>
          </span>
          <span data-ttu-id="0b4ae-245">
            <b>XlLineStyle</b>定数は、次のいずれか:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-245">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span>
          </span>
        </param>
        <param name="Weight">
          <span data-ttu-id="0b4ae-246">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-246">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span>
          </span>
          <span data-ttu-id="0b4ae-247">罫線の太さを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-247">The border weight.</span>
          </span>
          <span data-ttu-id="0b4ae-248">
            <b>XlBorderWeight</b>定数は、次のいずれか:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-248">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="ColorIndex">
          <span data-ttu-id="0b4ae-249">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-249">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
          <span data-ttu-id="0b4ae-250">罫線の色を現在のカラー パレットのインデックス、または<b>XlColorIndex</b>定数として。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-250">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span>
          </span>
          <span data-ttu-id="0b4ae-251">
            <b>定数</b>のいずれか:<b>番号</b><paramref name="default" /><b>定数</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-251">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span>
          </span>
        </param>
        <param name="Color">
          <span data-ttu-id="0b4ae-252">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-252">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-253">罫線の色を示す RGB 値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-253">The border color, as an RGB value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-254">範囲に罫線を追加し、設定、 <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />、 <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />、および<see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" />新しい罫線のプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-254">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-255">
            <para>どちらかを指定する必要があります<paramref name="ColorIndex" />または<paramref name="Color" />、両方ではありません</para>。どちらかを指定することができます
          <para><paramref name="LineStyle" />または<paramref name="Weight" />、両方ではありません。Microsoft Excel を使用して、デフォルトの線種と太さ、いずれかの引数を指定しない場合です</para>。
          <para>このメソッドは、範囲全体の概要について説明します。すべてのセルの罫線を設定するに設定する必要があります、 <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />、 <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />、および<see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" />Borders コレクションのプロパティ。枠線をオフにするには、範囲内のすべてのセルを<b>xlLineStyleNone</b>に<b>LineStyle</b>プロパティを設定する必要があります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-255">
              <para>You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</para>
              <para>You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both. If you don't specify either argument, Microsoft Excel uses the default line style and weight.</para>
              <para>This method outlines the entire range without filling it in. To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection. To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary>
          <span data-ttu-id="0b4ae-256">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-256">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b4ae-257">返します。 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-257">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-258">返します、<see cref="T:Microsoft.Office.Interop.Excel.Borders" />スタイルの枠線または、セル範囲 (条件付き書式の一部として定義されている範囲を含む) を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-258">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-259">ワークシート上のセルの指定した範囲を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-259">Calculates a specified range of cells on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-260">指定したセル範囲を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-260">Calculates a specfied range of cells.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b4ae-261">
            <b>オブジェクト</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-261">
              <b>Object</b>
            </span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="0b4ae-262">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />メソッドは、指定範囲の範囲--セルごとに一番上の左上隅から、計算の右下隅に行優先順にします。これは、範囲を計算する Excel 2000 およびそれ以前のバージョンで使用される同じプロセスです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-262">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order. This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-263">指定した範囲内のセルを表す<b>Range</b>オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-263">Returns a <b>Range</b> object that represents the cells in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="0b4ae-264">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-265">返す先頭文字を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-265">The first character to be returned.</span>
          </span>
          <span data-ttu-id="0b4ae-266">この引数に 1 を指定するか、省略すると、このプロパティは先頭文字から始まる文字列範囲を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-266">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="0b4ae-267">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-268">返す文字数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-268">The number of characters to be returned.</span>
          </span>
          <span data-ttu-id="0b4ae-269">この引数を省略した場合、このプロパティは、文字列の残りの部分を返します (以降後のすべての<paramref name="Start" />の文字)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-269">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-270">返します、<see cref="T:Microsoft.Office.Interop.Excel.Characters" />オブジェクトのテキスト内の文字の範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-270">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-271">
            <para>テキスト文字列内の書式指定文字を<b>文字</b>オブジェクトを使用することができます</para>。
          <para>、<b>文字</b>オブジェクトは、コレクションはありません</para>。
          <para>の<see cref="T:Microsoft.Office.Interop.Excel.TextFrame" />オブジェクト、<see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" />は、メソッドです</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-271">
              <para>You can use the <b>Characters</b> object to format characters within a text string.</para>
              <para>The <b>Characters</b> object isn't a collection.</para>
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="0b4ae-272">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-272">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-273">メイン辞書で単語が見つからない場合に調べるカスタム辞書のファイル名を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-273">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="0b4ae-274">この引数を省略すると、現在指定されている辞書が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-274">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="0b4ae-275">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-276">
            <b>True を指定</b>して、すべて大文字の単語を無視します。<b>False を指定</b>して、Microsoft Excel チェック単語がすべて大文字であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-276">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="0b4ae-277">この引数を省略した場合は、現在の設定が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-277">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="0b4ae-278">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-278">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-279">
            <b>True の</b>スペルの誤りが見つかった場合は、候補の一覧を表示するのには<b>False を指定</b>すると正しいスペルを入力するときに一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-279">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span>
          </span>
          <span data-ttu-id="0b4ae-280">この引数を省略した場合は、現在の設定が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-280">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="0b4ae-281">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-281">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-282">使用されている辞書の言語です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-282">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="0b4ae-283">使用される<b>MsoLanguageID</b>の値のいずれかの<see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-283">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-284">オブジェクトのスペルをチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-284">Checks the spelling of an object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-285">
            <para>このメソッドは戻り値を持たないMicrosoft Excel には、[スペル チェック] ダイアログ ボックスが表示されます</para>。
          <para>確認するにはヘッダー、フッター、およびワークシート上のオブジェクトでこのメソッドを使用する<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />オブジェクトです</para>。
          <para>セルとコメントだけをチェックするには、によって返されるオブジェクトにこのメソッドを使用します<see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" />プロパティ</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-285">
              <para>This method has no return value; Microsoft Excel displays the Spelling dialog box.</para>
              <para>To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</para>
              <para>To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-286">オブジェクト全体をクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-286">Clears the entire object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-287">指定されたセル範囲からすべてのコメントを消去します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-287">Clears all cell comments from the specified range.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-288">セル範囲から数式と文字をクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-288">Clears the formulas from the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-289">
            <para>このメソッドは、グラフからデータは削除されますが、書式を残したまま。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-289">
              <para>This method clears the data from a chart but leaves the formatting.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-290">オブジェクトの書式設定をクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-290">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-291">指定された範囲からすべてのハイパーリンクを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-291">Removes all hyperlinks from the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-292">
            <para>呼び出す、<see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />は指定した範囲のメソッドは、クリアから、[ハイパーリンクのクリア] コマンドを使用して、[ホーム] タブの [編集] セクションのドロップダウン リスト。ハイパーリンクだけが削除されます。コンテンツのテキストの書式設定など、他のすべてのセルは影響を受けません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-292">
              <para>Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-293">指定されたセル範囲内のすべてのセルからコメントを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-293">Clears notes and sound notes from all the cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-294">指定した範囲のアウトラインを消去します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-294">Clears the outline for the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-295">指定範囲内の最初の領域の最初の列の数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-295">Returns the number of the first column in the first area in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-296">
            <para>A 列 1 を 2 というように、列 B が返されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-296">
              <para>Column A returns 1, column B returns 2, and so on.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="0b4ae-297">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-297">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-298">指定したセルと比較する単一セルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-298">A single cell to compare to the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-299">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />の内容が、各列の比較対象セルと異なるすべてのセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-299">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-300">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を指定した範囲内の列を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-301">
            <para>複数の選択範囲を<b>Range</b>オブジェクトに適用する場合、このプロパティは、範囲の最初の領域の列を返します。例では、 <b>Range</b>オブジェクトに 2 つの領域がある場合、a1: b2 および C3:D4-、<see cref="P:Microsoft.Office.Interop.Excel.Range.Count" />プロパティは、2、4 がありませんを返します。このプロパティを使用して、複数の選択範囲を含めることができる範囲で、テスト、<see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" />のプロパティ、 <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 、範囲に複数の領域が含まれているかどうかを決定するオブジェクトです。そのような場合は、範囲内の領域ごとにループします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-301">
              <para>When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4. To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area. If it does, loop over each area in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-302">取得または指定範囲内のすべての列の幅を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-302">Returns or sets the width of all columns in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-303">
            <para>列の幅の単位は、標準スタイルの 1 つの文字の幅と同じです。プロポーショナル フォントでは、0 (ゼロ) の文字の幅を使用します</para>。
          <para>使用して、<see cref="P:Microsoft.Office.Interop.Excel.Range.Width" />プロパティを列の幅をポイント単位で取得します</para>。
          <para>の範囲内のすべての列の幅が同じであれば、<b>その</b>値は、幅を返します。範囲内の列の幅が異なる場合は、このプロパティは<b>Null</b>を返します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-303">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</para>
              <para>If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width. If columns in the range have different widths, this property returns <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-304">返します、<see cref="T:Microsoft.Office.Interop.Excel.Comment" />の範囲の左上隅のセルに関連付けられているコメントを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources">
          <span data-ttu-id="0b4ae-305">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-305">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-306">R1c1 形式の表記法で参照の文字列の配列としての統合のソースです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-306">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span>
          </span>
          <span data-ttu-id="0b4ae-307">参照には、必ず統合するシートの完全パスを含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-307">The references must include the full path of sheets to be consolidated.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="0b4ae-308">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-308">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="0b4ae-309">
            <b>XlConsilidationFunction</b>定数は、次のいずれか:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-309">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TopRow">
          <span data-ttu-id="0b4ae-310">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-311">
            <b>真</b>の統合範囲の上端行の列見出しに基づいてデータを統合するには<b>False を指定</b>の位置でデータを統合します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-311">
              <b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="0b4ae-312">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-312">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="LeftColumn">
          <span data-ttu-id="0b4ae-313">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-313">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-314">
            <b>真</b>の統合範囲の左の列の行見出しに基づいてデータを統合するには<b>False を指定</b>の位置でデータを統合します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-314">
              <b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span>
          </span>
          <span data-ttu-id="0b4ae-315">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-315">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="CreateLinks">
          <span data-ttu-id="0b4ae-316">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-316">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-317">の<b>場合は true</b>統合はワークシート リンクを使用。<b>False</b>の統合にデータをコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-317">
              <b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span>
          </span>
          <span data-ttu-id="0b4ae-318">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-318">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-319">1 つのワークシート上の 1 つの範囲に複数のワークシート上の複数のセル範囲からデータを統合します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-319">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="0b4ae-320">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-320">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-321">指定した範囲のコピー先となる新しい範囲を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-321">Specifies the new range to which the specified range will be copied.</span>
          </span>
          <span data-ttu-id="0b4ae-322">この引数を省略すると、Microsoft Excel は、範囲をクリップボードにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-322">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-323">範囲を、指定の範囲またはクリップボードにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-323">Copies the range to the specified range or to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="0b4ae-324">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-324">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-325">範囲にコピーする<b>レコード セット</b>オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-325">The <b>Recordset</b> object to copy into the range.</span>
          </span>
        </param>
        <param name="MaxRows">
          <span data-ttu-id="0b4ae-326">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-326">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-327">ワークシートにコピーするレコードの最大数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-327">The maximum number of records to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="0b4ae-328">この引数を省略した場合は、 <b>Recordset</b>オブジェクト内のすべてのレコードがコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-328">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <param name="MaxColumns">
          <span data-ttu-id="0b4ae-329">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-329">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-330">ワークシートにコピーするフィールドの最大数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-330">The maximum number of fields to copy onto the worksheet.</span>
          </span>
          <span data-ttu-id="0b4ae-331">この引数を省略した場合は、 <b>Recordset</b>オブジェクト内のすべてのフィールドがコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-331">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-332">ADO または DAO<b>レコード セット</b>オブジェクトを指定された範囲の左上隅から始まり、ワークシートの内容をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-332">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-333">
            <para>
              <b>レコード セット</b>オブジェクトには、OLE オブジェクトを含むフィールドが含まれている、このメソッドは失敗します</para>。
          <para>コピーは、<b>レコード セット</b>オブジェクトの現在の行から開始されます。<b>レコード セット</b>オブジェクトの<b>EOF</b>プロパティが<b>True</b>のコピーが完了した後です</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-333">
              <para>If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</para>
              <para>Copying begins at the current row of the <b>Recordset</b> object. After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="0b4ae-334">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-334">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="0b4ae-335">図をコピーする方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-335">Specifies how the picture should be copied.</span>
          </span>
          <span data-ttu-id="0b4ae-336">
            <b>XlCopyPictureFormat</b>定数は、次のいずれか:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-336">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="0b4ae-337">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-337">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="0b4ae-338">画像の形式です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-338">The format of the picture.</span>
          </span>
          <span data-ttu-id="0b4ae-339">
            <b>XlPictureAppearance</b>定数は、次のいずれか:<b>xlPrinter</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-339">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-340">図をコピーするように、印刷時に表示されます。<b>xlScreen</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-340">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-341">ピクチャは画面の表示にできる限り近い形でコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-341">The picture is copied to resemble its display on the screen as closely as possible.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-342">選択しているオブジェクトを図としてクリップボードにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-342">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-343">コレクション内にあるオブジェクトの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-343">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-344">値の指定された範囲内の最大値をカウントします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-344">Counts the largest value in a given Range of values.</span>
          </span>
          <span data-ttu-id="0b4ae-345">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-345">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b4ae-346">
            <b>オブジェクト</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-346">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top">
          <span data-ttu-id="0b4ae-347">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-347">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-348">
            <b>True の</b>一番上の行のラベルを使用して名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-348">
              <b>True</b> to create names by using labels in the top row.</span>
          </span>
          <span data-ttu-id="0b4ae-349">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-349">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="0b4ae-350">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-350">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-351">
            <b>真</b>左の列のラベルを使用して名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-351">
              <b>True</b> to create names by using labels in the left column.</span>
          </span>
          <span data-ttu-id="0b4ae-352">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-352">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Bottom">
          <span data-ttu-id="0b4ae-353">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-354">
            <b>True の</b>一番下の行のラベルを使用して名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-354">
              <b>True</b> to create names by using labels in the bottom row.</span>
          </span>
          <span data-ttu-id="0b4ae-355">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-355">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="0b4ae-356">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-356">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-357">
            <b>True</b>右側の列のラベルを使用して名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-357">
              <b>True</b> to create names by using labels in the right column.</span>
          </span>
          <span data-ttu-id="0b4ae-358">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-358">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-359">シートの対象セル範囲内の文字列を使って、その指定された範囲の名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-359">Creates names in the specified range, based on text labels in the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-360">
            <para>いずれかを指定しない場合は<paramref name="Top" />、 <paramref name="Left" />、 <paramref name="Bottom" />、または<paramref name="Right" />、Microsoft Excel は、指定した範囲の形状に基づいて、テキスト ラベルの位置を推測します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-360">
              <para>If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="0b4ae-361">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-361">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="0b4ae-362">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-362">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="0b4ae-363">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-363">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="0b4ae-364">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-364">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="0b4ae-365">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-365">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="0b4ae-366">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-366">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-367">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-367">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="0b4ae-368">このキーワードの詳細については、Microsoft Office Macintosh Edition に含まれているヘルプの言語リファレンスを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-368">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-369">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-369">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-370">
            <para>指定されたオブジェクトは、Microsoft excel で作成された場合、このプロパティは文字列 XCEL を 16 進数の番号 5843454 C を返します</para>
            <para>
              <b>作成者</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Excel では、クリエーター コード</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-370">
              <para>If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-371">指定したセルが配列の一部である場合は、取得、<see cref="T:Microsoft.Office.Interop.Excel.Range" />全体の配列を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-371">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-372">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、現在の領域を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-372">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-373">
            <para>現在の領域は、空白行と空白列の任意の組み合わせによって囲まれた範囲</para>。
          <para>このプロパティは次のように全体の現在の領域を含むように選択範囲を自動的に展開するさまざまな処理に便利ですが、<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです</para>。
          <para>このプロパティは、保護されたワークシートでは使用できません</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-373">
              <para>The current region is a range bounded by any combination of blank rows and blank columns.</para>
              <para>This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>This property cannot be used on a protected worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="0b4ae-374">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-375">オブジェクトの貼り付け先の範囲です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-375">The range where the object should be pasted.</span>
          </span>
          <span data-ttu-id="0b4ae-376">この引数を省略すると、オブジェクトはクリップボードに切り取られます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-376">If this argument is omitted, the object is cut to the Clipboard.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-377">オブジェクトを切り取り、クリップボードまたは指定された範囲に貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-377">Cuts the object to the Clipboard or pastes it into a specified destination.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-378">
            <para>の隣接するセル、セル範囲を切り取る行う必要があります</para>。
          <para>埋め込みグラフのみを切り取ることができます</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-378">
              <para>The cut range must be made up of adjacent cells.</para>
              <para>Only embedded charts can be cut.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol">
          <span data-ttu-id="0b4ae-379">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-379">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-380">
            <b>XlRows</b>または<b>xlColumns</b>は、それぞれの行または列に入力されたデータの連続です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-380">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span>
          </span>
          <span data-ttu-id="0b4ae-381">この引数を省略すると、サイズと範囲の図形が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-381">If this argument is omitted, the size and shape of the range is used.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0b4ae-382">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-382">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-383">
            <b>XlDataSeriesType</b>定数は、次のいずれか:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-383">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span>
          </span>
        </param>
        <param name="Date">
          <span data-ttu-id="0b4ae-384">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-384">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span>
          </span>
          <span data-ttu-id="0b4ae-385">型引数が<b>xlChronological</b>の場合は、引数<b>Date</b>は、日付単位を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-385">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span>
          </span>
          <span data-ttu-id="0b4ae-386">
            <b>XlDataSeriesDate</b>定数は、次のいずれか:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-386">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span>
          </span>
        </param>
        <param name="Step">
          <span data-ttu-id="0b4ae-387">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-387">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-388">一連のステップの値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-388">The step value for the series.</span>
          </span>
          <span data-ttu-id="0b4ae-389">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-389">The default value is 1.</span>
          </span>
        </param>
        <param name="Stop">
          <span data-ttu-id="0b4ae-390">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-390">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-391">系列の停止値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-391">The stop value for the series.</span>
          </span>
          <span data-ttu-id="0b4ae-392">この引数を省略すると、Microsoft excel の範囲の末尾にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-392">If this argument is omitted, Microsoft Excel fills to the end of the range.</span>
          </span>
        </param>
        <param name="Trend">
          <span data-ttu-id="0b4ae-393">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-393">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-394">
            <b>True を指定</b>すると、直線的な傾向や指数曲線です。<b>False</b>標準の連続データを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-394">
              <b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span>
          </span>
          <span data-ttu-id="0b4ae-395">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-395">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-396">指定した範囲のデータ系列を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-396">Creates a data series in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="0b4ae-397">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-397">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-398">セルを削除した後でセルをどのようにシフトするかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-398">Specifies how to shift cells to replace deleted cells.</span>
          </span>
          <span data-ttu-id="0b4ae-399">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" />定数: <b>xlShiftToLeft</b>または<b>方向にシフト</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-399">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-400">この引数を省略すると、Microsoft Excel によって判断する範囲の形にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-400">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-401">オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-401">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-402">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、セルのすべての依存ファイルが含まれているセル範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-402">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-403">
            <para>これは、複数の選択範囲 ( <b>Range</b>オブジェクトの和集合) 1 つ以上を使用する必要がある場合は、依存している</para>。
          <para><b>依存関係</b>プロパティだけなは、アクティブなシートのリモート参照をトレースできないことができます</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-403">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-404">Microsoft Excel 4.0 マクロ シートのダイアログ ボックス定義テーブルで定義されているダイアログ ボックスが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-404">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-405">
            <para>このメソッドは、選択したコントロールの数を返しますまたは、ユーザーが [キャンセル] ボタンをクリックした場合は<b>False</b>を返します。</para> 。
          <para>、返された<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトは、Microsoft Excel 4.0 マクロ シートのダイアログ ボックス定義テーブルを参照する必要があります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-405">
              <para>This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</para>
              <para>The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-406">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を含むすべての直接の参照先セルの範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-406">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-407">
            <para>これは、複数の選択範囲 ( <b>Range</b>オブジェクトの和集合) 1 つ以上を使用する必要がある場合は、依存している</para>。
          <para>のみなは、アクティブなシートのリモート参照をトレースできないことの<b>直接の依存関係</b>プロパティ</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-407">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</para>
              <para>The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-408">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を含むすべての直接の参照元セルの範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-408">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-409">
            <para>作業中で<b>の直接参照先</b>のプロパティのみの機能は、シートし、リモート参照をトレースできないことができます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-409">
              <para>The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-410">次の再計算が発生したときに再計算する範囲を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-410">Designates a range to be recalculated when the next recalculation occurs.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-411">
            <para>
              <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" />メソッドを強制的に指定した範囲を再計算、再計算を必要とするとセルの Microsoft Excel が理解している</para>。アプリケーションが手動計算モードの場合は
          <para>を使用して、<see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" />メソッドを再計算するのには、指定したセルを Excel に指示します。アプリケーションが自動再計算モードの場合、 <b>Dirty</b>メソッドを使用して Excel が再計算を実行するに指示します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-411">
              <para>The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</para>
              <para>If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated. If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-412">編集されたセル範囲内のすべての変更を破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-412">Discards all changes in the edited cells of the range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-413">
            <para>OLAP データ ソースに基づく範囲では、このメソッドは、すべての値と、それらのセルに数式を入力を削除し、データ ソースから最新の値を取得するために更新操作が実行されます。Null 参照 (Visual Basic では Nothing) を編集したし、も、OLAP サーバーに対してトランザクションをロールバック ステートメントを実行するすべての値のセルのデータ ソースの値を設定します。非 OLAP データ ソースに基づく範囲では、このメソッドは単に編集したすべてのセルをクリアします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-413">
              <para>For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source. It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server. For ranges based on non-OLAP data sources, this method simply clears all edited cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-414">取得、<see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" />を指定した範囲の表示の設定を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-414">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b4ae-415">A<see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" />を指定した範囲の表示の設定を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-415">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="0b4ae-416">
            <para>読み取り専用です。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-416">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0b4ae-417">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-417">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Option">
          <span data-ttu-id="0b4ae-418">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-418">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="0b4ae-419">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-419">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Reference">
          <span data-ttu-id="0b4ae-420">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-420">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="0b4ae-421">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-421">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ChartSize">
          <span data-ttu-id="0b4ae-422">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-422">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="0b4ae-423">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-423">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-424">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-424">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="0b4ae-425">このキーワードの詳細については、Microsoft Office Macintosh Edition に含まれているヘルプの言語リファレンスを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-425">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="0b4ae-426">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-426">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
          <span data-ttu-id="0b4ae-427">移動する方向を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-427">The direction in which to move.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-428">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />元の範囲を含む領域の末尾のセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-428">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-429">
            <para>終了 + 上方向キー、END + ↓、エンド + 左向き矢印、またはエンド + 右方向キーを押したときと同じです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-429">
              <para>Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-430">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />は指定した範囲を含む列全体 (または列) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-430">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-431">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />全体 (行または列) を表すオブジェクトを指定された範囲が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-431">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-432">エラー チェック オプションにアクセスすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-432">Allows the user to access error checking options.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-433">
            <para>参照、<see cref="T:Microsoft.Office.Interop.Excel.Errors" />エラー チェック オプションに関連付けられたインデックス値の一覧を表示するオブジェクトです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-433">
              <para>Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0b4ae-434">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" />にエクスポートするファイル形式の種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-434">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="0b4ae-435">省略可能な<b>オブジェクト</b>ファイルのファイル名を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-435">Optional <b>Object</b> The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0b4ae-436">完全パスを含めることができます。 または short_excel2007 では、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-436">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="0b4ae-437">省略可能な<b>オブジェクト</b>は通常として書式設定、 <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-437">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="0b4ae-438">パブリッシュされたファイルの品質を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-438">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="0b4ae-439">文書のプロパティを含むように、省略可能な<b>オブジェクト</b>が<b>True</b>に設定それ以外の場合は<b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-439">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="0b4ae-440">に発行する場合に印刷範囲を無視するように、省略可能な<b>オブジェクト</b>が<b>True</b>に設定それ以外の場合は<b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-440">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="0b4ae-441">省略可能な<b>オブジェクト</b>の公開を開始するページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-441">Optional <b>Object</b> The number of the page at which to start publishing.</span>
          </span>
          <span data-ttu-id="0b4ae-442">この引数を省略すると、最初に発行を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-442">If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0b4ae-443">省略可能な<b>オブジェクト</b>の最後のページ番号を発行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-443">Optional <b>Object</b> The number of the last page to publish.</span>
          </span>
          <span data-ttu-id="0b4ae-444">この引数を省略すると、最後のページをまで発行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-444">If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="0b4ae-445">省略可能な<b>オブジェクト</b>がパブリッシュされた後に、ビューアーでファイルを表示するのには<b>True</b>に設定それ以外の場合は<b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-445">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="0b4ae-446">
            <b>FixedFormatExt</b>クラスに<b>オブジェクト</b>のポインターを省略します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-446">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-447">指定された形式のファイルにエクスポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-447">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-448">
            <para>このメソッドでは、ファイルを固定形式ファイルにエクスポートするアドインの初期化もサポートしています。コンバーターが存在する場合に、Excel で、ファイル形式の変換が実行されますか。変換は通常ユーザーによって開始されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-448">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-449">下方向に複写から一番上のセルまたは指定された範囲内のセル範囲の一番下にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-449">Fills down from the top cell or cells in the specified range to the bottom of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-450">
            <para>内容と書式のセルまたはセル範囲の上端行では、範囲内の行の残りの部分にコピーされます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-450">
              <para>The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-451">塗りつぶしの右端のセルまたは指定された範囲内のセルから左です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-451">Fills left from the rightmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-452">
            <para>内容とセルまたはセル範囲の右端の列の書式は、範囲内の列の残りの部分にコピーされます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-452">
              <para>The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-453">左端のセルまたは指定された範囲内のセルから右方向に複写します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-453">Fills right from the leftmost cell or cells in the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-454">
            <para>内容とセルまたは範囲の左端の列内のセルの書式は、範囲内の列の残りの部分にコピーされます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-454">
              <para>The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-455">下のセルまたはセル範囲を指定した範囲の一番上に塗りつぶされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-455">Fills up from the bottom cell or cells in the specified range to the top of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-456">
            <para>内容とセルまたは範囲の一番下の行のセルの書式は、範囲内の行の残りの部分にコピーされます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-456">
              <para>The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="0b4ae-457">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-457">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-458">検索するデータです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-458">The data to search for.</span>
          </span>
          <span data-ttu-id="0b4ae-459">文字列または、Microsoft Excel のデータ型を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-459">Can be a string or any Microsoft Excel data type.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="0b4ae-460">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-460">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-461">その後、検索を開始するセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-461">The cell after which you want the search to begin.</span>
          </span>
          <span data-ttu-id="0b4ae-462">これにより、ユーザー インターフェイスから検索を行うとき、アクティブ セルの位置に対応しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-462">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="0b4ae-463">
            <b>後</b>は、範囲内の単一セルである必要があります注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-463">Note that <b>After</b> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="0b4ae-464">検索を開始することを忘れないでください<paramref name="after" />このセルです。指定したセルがないメソッドがラップしてこのセルに戻ってきたまで検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-464">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="0b4ae-465">この引数を指定しない場合は、範囲の左上隅のセルの後、検索が開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-465">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <param name="LookIn">
          <span data-ttu-id="0b4ae-466">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-466">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-467">情報の種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-467">The type of information.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="0b4ae-468">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-469">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" />定数: <b>xlWhole</b>または<b>xlPart</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-469">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="0b4ae-470">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-471">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" />定数: <b>xlByRows</b>または<b>xlByColumns</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="SearchDirection">
          <span data-ttu-id="0b4ae-472">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-472">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span>
          </span>
          <span data-ttu-id="0b4ae-473">検索の方向を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-473">The search direction.</span>
          </span>
          <span data-ttu-id="0b4ae-474">XlSearchDirection 定数のいずれか:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-474">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="0b4ae-475">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-476">大文字と小文字を区別して検索するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-476">
              <b>True</b> to make the search case sensitive.</span>
          </span>
          <span data-ttu-id="0b4ae-477">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-477">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="0b4ae-478">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-478">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-479">選択または 2 バイト言語サポートがインストールされている場合にのみ使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-479">Used only if you’ve selected or installed double-byte language support.</span>
          </span>
          <span data-ttu-id="0b4ae-480">
            <b>True を指定</b>して、2 バイトのみ 2 バイト文字に一致させる。<b>False を指定</b>すると一致してそれに対応する 1 バイト、2 バイト文字があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-480">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="0b4ae-481">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-482">検索の書式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-482">The search format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-483">範囲内の特定の情報を検索して返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />情報が見つかった最初のセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-483">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-484">
            <para>このメソッドを返します<b>Nothing</b>が一致しない場合です</para>。
          <para>このメソッドは、選択範囲またはアクティブ セルに影響しません</para>。
          <para>の設定<paramref name="LookIn" />、 <paramref name="LookAt" />、 <paramref name="SearchOrder" />、および<paramref name="MatchByte" />このメソッドを使用するたびに保存されます。次回メソッドを呼び出すと、これらの引数の値を指定しない、保存されている値が使用されます。[検索] ダイアログ ボックスで設定を変更するこれらの引数を設定し、引数を省略した場合に使用されている保存済みの値を変更する、[検索] ダイアログ ボックスで設定を変更します。問題を回避するには、これらの引数を明示的に設定するたびにこのメソッドを使用しています</para>。
          <para>を使用することができます、<see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />検索を繰り返す方法です</para>。
          <para>の検索が、指定した検索範囲の末尾に到達すると、周りの文字の範囲の先頭にします。このラップアラウンドが発生したときに検索を停止するのには、最初に見つかったセルのアドレスを保存し、テスト各連続して見つかったセルのアドレスに対するこのアドレスを保存します</para>。ごとに、<b>より複雑なパターンに一致するセルを検索するのには
          <para>.次ステートメント<b>と同じように</b>演算子を使用します</para></b>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-484">
              <para>This method returns <b>Nothing</b> if no match is found.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para>You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para>To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="0b4ae-485">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-486">その後に検索するセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-486">The cell after which you want to search.</span>
          </span>
          <span data-ttu-id="0b4ae-487">これにより、ユーザー インターフェイスから検索を行うとき、アクティブ セルの位置に対応しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-487">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="0b4ae-488">注意してください<paramref name="After" />の範囲の 1 つのセルである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-488">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="0b4ae-489">検索を開始することを忘れないでください<paramref name="after" />このセルです。指定したセルがないメソッドがラップしてこのセルに戻ってきたまで検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-489">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="0b4ae-490">この引数を指定しない場合は、範囲の左上隅のセルの後、検索が開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-490">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-491">によって開始された検索を続行します<see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-491">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-492">
            <para>And 条件を返します一致する次のセルを検索する<see cref="T:Microsoft.Office.Interop.Excel.Range" />セルを表すオブジェクト。</para> 。
          <para>このメソッドは、選択範囲またはアクティブ セルに影響しません</para>。
          <para>の検索が、指定した検索範囲の末尾に到達すると、周りの文字の範囲の先頭にします。このラップアラウンドが発生したときに検索を停止するのには、最初に見つかったセルのアドレスを保存し、テスト各連続して見つかったセルのアドレスに対するこのアドレスを保存します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-492">
              <para>Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">
          <span data-ttu-id="0b4ae-493">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-494">検索する前にあるセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-494">The cell before which you want to search.</span>
          </span>
          <span data-ttu-id="0b4ae-495">これにより、ユーザー インターフェイスから検索を行うとき、アクティブ セルの位置に対応しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-495">This corresponds to the position of the active cell when a search is done from the user interface.</span>
          </span>
          <span data-ttu-id="0b4ae-496">注意してください<paramref name="After" />の範囲の 1 つのセルである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-496">Note that <paramref name="After" /> must be a single cell in the range.</span>
          </span>
          <span data-ttu-id="0b4ae-497">検索を開始することを忘れないでください<paramref name="before" />このセルです。指定したセルがないメソッドがラップしてこのセルに戻ってきたまで検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-497">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span>
          </span>
          <span data-ttu-id="0b4ae-498">この引数を指定しない場合は、範囲の左上隅のセルの前に、検索が開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-498">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-499">によって開始された検索を続行します<see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-499">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-500">
            <para>検索の前のセルと一致しているを返す同じ and 条件を<see cref="T:Microsoft.Office.Interop.Excel.Range" />セルを表すオブジェクト</para>。
          <para>このメソッドは、選択範囲またはアクティブ セルに影響しません</para>。
          <para>の検索が、指定した検索範囲の先頭に達したとき、周りの文字の範囲の末尾にします。このラップアラウンドが発生したときに検索を停止するのには、最初に見つかったセルのアドレスを保存し、テスト各連続して見つかったセルのアドレスに対するこのアドレスを保存します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-500">
              <para>Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</para>
              <para>This method doesn’t affect the selection or the active cell.</para>
              <para>When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-501">TRUE は、Excel のフラッシュフィル機能が有効で、アクティブになっていることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-501">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-502">返します、<see cref="T:Microsoft.Office.Interop.Excel.Font" />を指定したオブジェクトのフォントを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-503">返します、<see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" />は指定した範囲のすべての条件付き書式を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-503">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-504">A1 スタイルの表記では、マクロの言語では、オブジェクトの数式を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-504">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-505">
            <para>このプロパティは OLAP データ ソースに対しては利用できません</para>。
          <para>セルに定数が含まれている場合、このプロパティは、定数を返します。セルが空の場合は、<b>このプロパティ</b>は空の文字列を返します。セルに数式が含まれている場合の<b>Formula</b>プロパティは数式バー (等号 (=) を含む) での表示と同じ形式で文字列として数式を返します</para>。
          <para>値またはセルの数式を日付に設定する場合、Microsoft Excel はそのセルの書式が既に日付または時刻の表示形式のいずれかどうかを確認します。Microsoft Excel 形式に変更、既定の日付の形式です</para>。
          <para>の範囲が 1 つまたは 2 次元範囲の場合、数式を同じ次元の配列に設定できます。同様に、基本的な配列数式を入力します</para>。
          <para>複数のセル範囲の入力、数式のセル範囲のすべてのセルの数式を設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-505">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into a Basic array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-506">範囲の配列数式を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-506">Returns or sets the array formula of a range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-507">
            <para>このプロパティを返します (またはに設定することができます)、1 つの数式または配列です</para>。
          <para>指定した範囲に配列数式が含まれていない場合は、このプロパティは<b>Null</b>を返します</para>。
          <para>配列数式を入力するのにはこのプロパティを使用する場合数式は R1C1 参照形式を A1 参照ではなくを使用する必要があります (2 番目の例を参照してください) のスタイルを設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-507">
              <para>This property returns (or can be set to) a single formula or an array.</para>
              <para>If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</para>
              <para>If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-508">ワークシートが保護されている場合、数式を非表示にするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-508">Determines if the formula will be hidden when the worksheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-509">
            <para>このプロパティは、ワークシートが保護されている場合、数式を非表示する場合に<b>True</b>を返します。<b>Null</b>が返されます場合は、指定した範囲に等しい<b>場合は True</b>に<b>なるとき</b>に一部のセルが含まれているし、いくつかになる<b>とき</b>に<b>false を指定</b>します</para>。
          <para>このプロパティとを混同しないで、<see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" />プロパティ。ブックが保護されているし、ワークシートではありませんが、ワークシートが保護されている場合にのみ、数式は表示されません</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-509">
              <para>This property returns <b>True</b> if the formula will be hidden when the worksheet is protected. It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</para>
              <para>Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property. The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-510">取得または指定された範囲の数式ラベルの種類を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-510">Returns or sets the formula label type for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-511">
            <para>範囲には、ラベル、または<b>XlFormulaLabel</b>定数は、次のいずれかが含まれている場合、このプロパティの戻り値は<b>xlNone</b>をすることができます:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlColumnLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlMixedLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlNoLabels</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowLabels</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-511">
              <para>The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlColumnLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlMixedLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlNoLabels</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowLabels</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-512">指定したオブジェクトの数式を A1 参照形式で、コード実行時の言語で示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-512">Returns or sets the formula for the object, using A1-style references in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-513">
            <para>セルに定数が含まれている場合、このプロパティはその定数を返します。セルが空の場合は、プロパティは空の文字列を返します。セルに数式が含まれている場合は、数式を文字列として返しますでの表示と、数式バーの (等号 (=) を含む) に同じ形式で</para>。
          <para>値またはセルの数式を日付に設定する場合、Microsoft Excel はそのセルの書式が既に日付または時刻の表示形式のいずれかどうかを確認します。、数値の表示形式は変更されません、既定の日付の形式にします。</para><para>の範囲が 1 つまたは 2 次元範囲の場合、数式を同じ次元の配列に設定できます。同様に、配列数式を入力します</para>。
          <para>、数式のセル範囲のすべてのセルを格納する複数のセル範囲の数式を設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-513">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-514">指定したオブジェクトの数式を R1C1 参照形式で、コード記述時の言語で示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-514">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-515">
            <para>セルに定数が含まれている場合、このプロパティは、定数を返します。セルが空の場合は、プロパティは空の文字列を返します。セルに数式が含まれている場合は、数式を文字列として返しますでの表示と、数式バーの (等号 (=) を含む) に同じ形式で</para>。
          <para>値またはセルの数式を日付に設定する場合、Microsoft Excel はそのセルの書式が既に日付または時刻の表示形式のいずれかどうかを確認します。、数値の表示形式は変更されません、既定の日付の形式にします。</para><para>の範囲が 1 つまたは 2 次元範囲の場合、数式を同じ次元の配列に設定できます。同様に、配列数式を入力します</para>。
          <para>、数式のセル範囲のすべてのセルを格納する複数のセル範囲の数式を設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-515">
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-516">指定したオブジェクトの数式を R1C1 参照形式で、コード実行時の言語で示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-516">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-517">
            <para>セルに定数が含まれている場合、このプロパティはその定数を返します。セルが空の場合は、プロパティは空の文字列を返します。セルに数式が含まれている場合は、数式を文字列として返しますでの表示と、数式バーの (等号 (=) を含む) に同じ形式で</para>。
          <para>値またはセルの数式を日付に設定する場合、Microsoft Excel はそのセルの書式が既に日付または時刻の表示形式のいずれかどうかを確認します。、数値の表示形式は変更されません、既定の日付の形式にします。</para><para>の範囲が 1 つまたは 2 次元範囲の場合、数式を同じ次元の配列に設定できます。同様に、配列数式を入力します</para>。
          <para>、数式のセル範囲のすべてのセルを格納する複数のセル範囲の数式を設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-517">
              <para>If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula of a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-518">選択されたセル範囲の左上端のセルで関数ウィザードを起動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-518">Starts the Function Wizard for the upper-left cell of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal">
          <span data-ttu-id="0b4ae-519">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-519">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-520">セルに返される必要のある目標値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-520">The value you want returned in this cell.</span>
          </span>
        </param>
        <param name="ChangingCell">
          <span data-ttu-id="0b4ae-521">必要な<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-521">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="0b4ae-522">目標値を達成するために変更するセル (Range オブジェクト) を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-522">Specifies which cell should be changed to achieve the target value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-523">特定の目標を達成するために必要な値を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-523">Calculates the values necessary to achieve a specific goal.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-524">
            <para>の値を算出式が返す値が、目標である場合、数式に指定する場合は、数値を返す数式</para>。
          <para>ゴール シークに成功した場合、このメソッドが<b>True</b>を返します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-524">
              <para>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</para>
              <para>This method returns <b>True</b> if the goal seek is successful.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="0b4ae-525">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-525">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-526">グループ化する最初の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-526">The first value to be grouped.</span>
          </span>
          <span data-ttu-id="0b4ae-527">この引数を省略した<b>場合は True</b>フィールドの最初の値が使用される場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-527">If this argument is omitted or <b>True</b>, the first value in the field is used.</span>
          </span>
        </param>
        <param name="End">
          <span data-ttu-id="0b4ae-528">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-529">グループ化する最後の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-529">The last value to be grouped.</span>
          </span>
          <span data-ttu-id="0b4ae-530">この引数を省略した<b>場合は True</b>フィールドの最後の値が使用される場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-530">If this argument is omitted or <b>True</b>, the last value in the field is used.</span>
          </span>
        </param>
        <param name="By">
          <span data-ttu-id="0b4ae-531">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-532">フィールドが数値の場合、この引数は各グループのサイズを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-532">If the field is numeric, this argument specifies the size of each group.</span>
          </span>
          <span data-ttu-id="0b4ae-533">場合、この引数が各グループの日数を指定フィールドが日付の場合で、 <paramref name="Periods" /><b>配列には</b>、他のすべての要素は<b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-533">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-534">それ以外の場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-534">Otherwise, this argument is ignored.</span>
          </span>
          <span data-ttu-id="0b4ae-535">この引数を省略すると、Excel は既定のグループのサイズを自動的に選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-535">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span>
          </span>
        </param>
        <param name="Periods">
          <span data-ttu-id="0b4ae-536">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-537">次の表に示すように、グループの期間を指定するブール値の配列。期間に対応するグループを作成する場合は、配列内の要素が<b>True</b>の場合要素が<b>False</b>の場合は、グループは作成されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-537">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span>
          </span>
          <span data-ttu-id="0b4ae-538">フィールドには、日付フィールドがない場合は、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-538">If the field isn’t a date field, this argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-539">
            <see cref="T:Microsoft.Office.Interop.Excel.Range" />がピボット テーブル フィールドのデータ範囲内の単一セルを表すオブジェクト、<b>グループ</b>メソッドは、そのフィールドで数値または日付のグループ化を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-539">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-540">
            <para>
              <b>Range</b>オブジェクトは、ピボット テーブル フィールドのデータ範囲内の単一セルである必要があります。このメソッドを複数のセルに適用しようとする場合は失敗しますが、エラー メッセージは表示されません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-540">
              <para>The <b>Range</b> object must be a single cell in the PivotTable field’s data range. If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-541">指定したセルが配列数式の一部かを調べます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-541">Determines if the specified cell is part of an array formula.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-542">
            <para>このプロパティは、指定したセルが配列数式の一部である場合に<b>True</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-542">
              <para>This property returns <b>True</b> if the specified cell is part of an array formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-543">範囲内のすべてのセルに数式が含まれているかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-543">Determines if all cells in the range contain formulas.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-544">
            <para>
              <b>範囲内のすべてのセルに数式が含まれている場合、このプロパティが true</b> 、 <b>False</b>場合は、範囲内のセルの [なし] を含む<b>数式、および</b>それ以外の場合。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-544">
              <para>This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-545">範囲の高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-545">The height of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-546">行または列が非表示かを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-546">Determines if the rows or columns are hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-547">
            <para>行または列が非表示の場合、このプロパティは<b>True</b>を返します。指定した範囲には、列全体または行をカバーする必要があります</para>。
          <para>このプロパティとを混同しないで、<see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />プロパティ</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-547">
              <para>This property returns <b>True</b> if the rows or columns are hidden. The specified range must span an entire column or row.</para>
              <para>Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-548">指定したオブジェクトの水平方向の配置を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-548">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-549">返します、<see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" />の範囲のハイパーリンクを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-549">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-550">ページを Web ページとして保存するときに指定したセルを識別するラベルを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-550">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-551">
            <para>ID ラベルは、他の HTML 文書または同一の Web ページにハイパーリンクの参照として使用できます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-551">
              <para>You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-552">セルまたはセル範囲のインデント レベルを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-552">Returns or sets the indent level for the cell or range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-553">
            <para>インデントのレベルは、0 ~ 15 の整数です</para>。
          <para>インデント レベルを 0 (ゼロ) より小さい数値に設定するのにはこのプロパティを使用するかそれ以上を指定すると 15、エラーが発生します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-553">
              <para>The indent level can be an integer from 0 to 15.</para>
              <para>Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">
          <span data-ttu-id="0b4ae-554">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-555">セルをシフトする方向を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-555">Specifies which way to shift the cells.</span>
          </span>
          <span data-ttu-id="0b4ae-556">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" />定数: <b>xlShiftToRight</b>または<b>xlShiftDown</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-556">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-557">この引数を省略すると、Microsoft Excel によって判断する範囲の形にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-557">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span>
          </span>
        </param>
        <param name="CopyOrigin">
          <span data-ttu-id="0b4ae-558">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-559">コピー元を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-559">The copy origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-560">ワークシートまたはマクロ シートの指定された範囲に、空白のセルまたはセル範囲を挿入します。指定された範囲にあったセルはシフトされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-560">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount">
          <span data-ttu-id="0b4ae-561">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-561">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-562">現在のインデントに追加するレベルを指定します。インデントのレベルの範囲は 0 ～ 15 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-562">The amount to be added to the current indent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-563">指定した範囲のインデントを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-563">Adds an indent to the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-564">
            <para>インデント レベルを 0 (ゼロ) より小さい数値に設定するのにはこのメソッドを使用するかそれ以上を指定すると 15、エラーが発生します</para>。
          <para>使用して、<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />範囲のインデント レベルを返すプロパティです</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-564">
              <para>Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</para>
              <para>Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-565">返します、<see cref="T:Microsoft.Office.Interop.Excel.Interior" />を指定したオブジェクトの内部を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-565">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">
          <span data-ttu-id="0b4ae-566">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-566">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-567">左から右に、次に上から下に数えて、アクセスするセルのインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-567">The index number of the cell you want to access, in order from left to right, then down.</span>
          </span>
          <span data-ttu-id="0b4ae-568">Range.Item(1) 範囲の左上隅のセルを返します。Range.Item(2) は、左上隅のセルの右側にすぐにセルを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-568">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span>
          </span>
        </param>
        <param name="ColumnIndex">
          <span data-ttu-id="0b4ae-569">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-570">範囲の最初の列を 1 または "A" として、アクセスするセルの列番号を示す数字または列文字を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-570">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-571">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />は指定した範囲へのオフセットで指定される範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-571">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-572">
            <para>
              <paramref name="RowIndex" />と<paramref name="ColumnIndex" />の引数は、相対オフセット。つまりを指定する、<paramref name="RowIndex" />を 1 には、ワークシートの最初の行ではなく、範囲の最初の行のセルを返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-572">
              <para>The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets. In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-573">対象セル範囲内の文字列を、そのセル範囲に合わせて割り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-573">Rearranges the text in a range so that it fills the range evenly.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-574">
            <para>範囲が十分でない場合、Excel には、範囲の下のセルに上書きするかを示すメッセージが表示されます。[Ok] ボタンをクリックすると、両端揃えのテキストは、選択した範囲外のセルの内容に置き換えられます。このメッセージが表示されないようにするのには、設定、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティを<b>False</b>にします。このプロパティを設定すると、テキストは常に範囲の下のセルの内容を置き換えます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-574">
              <para>If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range. If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range. To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. After you set this property, text will always replace the contents in cells below the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-575">列 A の左端から範囲の左端までの距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-575">The distance from the left edge of column A to the left edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-576">
            <para>の範囲が連続していない場合は、最初の領域が使用されます。範囲が複数の列の幅の場合は、範囲の左端の列が使用されます</para>。
          <para>ウィンドウが最大化されている場合、このプロパティは、ウィンドウの境界線の幅に基づいて、変化する負の数を返します。このプロパティを 0 (ゼロ) に設定すると、ウィンドウがアプリケーション ウィンドウを最大表示したかどうかはそれよりも少し小さくなります。つまり、このプロパティが 0 (ゼロ) の場合は、Microsoft Excel のメイン ウィンドウの左枠線だけではほとんど表示されません、画面にします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-576">
              <para>If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</para>
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-577">指定した範囲で見出し行の数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-577">Returns the number of header rows for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-578">
            <para>このプロパティを使用する前に使用して、<see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />の範囲の境界を検索するプロパティです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-578">
              <para>Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-579">ワークシートの最初のセル範囲内のすべての表示名の一覧を貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-579">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-580">
            <para>使用して、 <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> 、ワークシート上のすべての名前のコレクションを取得するプロパティです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-580">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-581">返します、<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />のオブジェクトの<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトまたは<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-581">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-582">クラスの定数の一部を説明する、<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />は指定した範囲の左上隅を含むレポートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-582">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-583">
            <para>
              <b>XlLocationInTable</b>には、次のいずれかを指定できます<see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" />定数:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlRowHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataHeader</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlRowItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlColumnItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDataItem</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlTableBody</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-583">
              <para>
                <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlRowHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataHeader</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlRowItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlColumnItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDataItem</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTableBody</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-584">オブジェクトがロックされているかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-584">Determines if the object is locked.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-585">
            <para>このプロパティは、指定した範囲には、ロックとロックされていないセルの両方が含まれている場合<b>は True</b>オブジェクトがロックされている場合<b>False</b>場合は、シートが保護されている場合、オブジェクトを変更することができ、 <b>Null</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-585">
              <para>This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-586">指定した MDX 名を返します<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-586">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
          <span data-ttu-id="0b4ae-587">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-587">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b4ae-588">String</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-588">String</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across">
          <span data-ttu-id="0b4ae-589">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-589">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-590">
            <b>True</b>を別のセルとして指定した範囲の各行のセルを結合します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-590">
              <b>True</b> to merge cells in each row of the specified range as separate merged cells.</span>
          </span>
          <span data-ttu-id="0b4ae-591">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-591">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-592">指定した結合されたセルを作成する<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-592">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-593">
            <para>範囲の左上隅のセルに結合された範囲の値を指定します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-593">
              <para>The value of a merged range is specified in the cell of the range's upper-left corner.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-594">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を指定したセルが含まれている結合セル範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-595">
            <para>指定したセルが結合セル範囲にない場合は、このプロパティは指定したセルを返します</para>。
          <para><b>MergeArea</b>プロパティは、1 つのセル範囲でのみ機能します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-595">
              <para>If the specified cell isn’t in a merged range, this property returns the specified cell.</para>
              <para>The <b>MergeArea</b> property only works on a single-cell range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-596">セル範囲またはスタイルに結合セルが含まれているかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-596">Determines if the range or style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-597">
            <para>セル範囲またはスタイルに結合セルが含まれている場合、このプロパティが<b>True</b>を返します</para>。
          <para>の結合されたセルを含む範囲を選択すると、選択範囲は、目的の選択範囲とは異なる可能性があります。使用して、<see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />プロパティを選択した範囲のアドレスを確認します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-597">
              <para>This property returns <b>True</b> if the range or style contains merged cells.</para>
              <para>When you select a range that contains merged cells, the resulting selection may be different from the intended selection. Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-598">オブジェクトの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-598">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-599">
            <para>
              <b>Range</b>オブジェクトの名前は、<see cref="T:Microsoft.Office.Interop.Excel.Name" />オブジェクトです。その他のオブジェクトの型がすべて、名前の<b>文字列</b>です</para>。
          <para>、次の表の例の値の<b>Name</b>プロパティと関連するプロパティの指定、OLAP データ ソースの一意の名前] [ヨーロッパ] です。[東京都] です。[東京]"OLAP 以外のデータ ソースのアイテム名が「東京」とします</para>。
          <list type="table"><item><term>キャプション</term><description>パリ</description><description>パリ</description></item><item><term>名</term><description>[ヨーロッパ]. [東京都] です。[東京](読み取り専用)</description><description>パリ</description></item><item><term>SourceName</term><description>[ヨーロッパ]. [東京都] です。[東京](読み取り専用)</description><description>(SQL プロパティの値が読み取り専用と同じ)</description></item><item><term>値</term><description>[ヨーロッパ]. [東京都] です。[東京](読み取り専用)</description><description>パリ</description></item></list><para>へのインデックスを指定する場合、<see cref="T:Microsoft.Office.Interop.Excel.PivotItems" />コレクションでは、次の表に示すように構文を使用することができます</para>。
          <list type="table"><item><term>式です。返すプロパティ (「[ヨーロッパ]。 [東京都] です。[東京]")</term><description>式です。PivotItems("Paris")</description></item></list><para>を使用する場合、<see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" />プロパティ、コレクションの特定のメンバーを参照するには、次の表に示すようにテキストをインデックス名を使用することができます</para>。
          <list type="table"><item><term>[ヨーロッパ]. [東京都] です。[東京]</term><description>パリ</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-599">
              <para>The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object. For every other type of object, the name is a <b>String</b>.</para>
              <para>The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</para>
              <list type="table">
                <item>
                  <term>Caption</term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>Name</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>SourceName</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(Same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>Value</term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent">
          <span data-ttu-id="0b4ae-600">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-600">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-601">移動する方向を指定します<b>True</b> (参照元) の方向に移動するには。<b>False を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-601">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span>
          </span>
        </param>
        <param name="ArrowNumber">
          <span data-ttu-id="0b4ae-602">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-603">対象となるトレース矢印の番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-603">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span>
          </span>
        </param>
        <param name="LinkNumber">
          <span data-ttu-id="0b4ae-604">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-604">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-605">矢印が外部参照矢印の場合は、この引数は、次の対象の外部参照を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-605">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span>
          </span>
          <span data-ttu-id="0b4ae-606">この引数を省略すると、最初の外部参照が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-606">If this argument is omitted, the first external reference is followed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-607">参照、依存する、またはエラーの発生のセルまたはセルを指定した範囲のトレース矢印を移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-607">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-608">
            <para>参照元セル、相互に依存する、またはエラー セルを選択し、返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、新しい選択範囲を表すオブジェクト。このメソッドでは、表示されているトレース矢印のないセルに適用される場合にエラーが発生します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-608">
              <para>Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection. This method causes an error if it's applied to a cell without visible tracer arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-609">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、次のセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-609">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-610">
            <para>プロパティは、それを選択せずに次のセルを返しますが、このプロパティは TAB キーをエミュレート</para>
            <para>、保護されたシートには、このプロパティは次のロックされていないセルを返します。保護されていないシートでは、常に返しますセル直後に指定したセルの右側にします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-610">
              <para>This property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="0b4ae-611">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-611">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-612">注 (最大 255 文字) に追加するテキストです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-612">The text to add to the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="0b4ae-613">テキストの挿入位置から始まる<paramref name="Start" />交換、 <paramref name="Length" /> 、既存のコメントの文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-613">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span>
          </span>
          <span data-ttu-id="0b4ae-614">この引数を省略すると、この文字列が返されます、現在の位置からの<paramref name="Start" />の<paramref name="Length" />の文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-614">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="0b4ae-615">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-615">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-616">設定または返すテキストの開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-616">The starting position for the text that’s set or returned.</span>
          </span>
          <span data-ttu-id="0b4ae-617">この引数を省略した場合、このメソッドは、最初の文字で開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-617">If this argument is omitted, this method starts at the first character.</span>
          </span>
          <span data-ttu-id="0b4ae-618">メモにテキストを追加するには、既存のメモに文字数より大きい値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-618">To append text to the note, specify a number larger than the number of characters in the existing note.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="0b4ae-619">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-619">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-620">設定または取得する文字の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-620">The number of characters to be set or returned.</span>
          </span>
          <span data-ttu-id="0b4ae-621">この引数を省略すると、Microsoft Excel を設定またはノート (最大 255 文字) の最後に、開始位置から文字を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-621">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span>
          </span>
          <span data-ttu-id="0b4ae-622">255 を超える文字が含まれる場合は、 <paramref name="Start" /> 、メモの最後には、このメソッドは 255 文字だけを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-622">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-623">範囲の左上隅のセルに関連付けられているセルのメモを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-623">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-624">
            <para>セルのメモは、範囲のコメントによって置き換えられました。詳細についてを参照してください、<see cref="T:Microsoft.Office.Interop.Excel.Comment" />オブジェクトです</para>。
          <para>255 を超える文字を含むメモを追加するのには、最初の 255 文字を指定するのには 1 回、このメソッドを使用し、注 (同時に 255 を超える文字) の残りの部分を追加するのにはもう一度使用します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-624">
              <para>Cell notes have been replaced by range comments. For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</para>
              <para>To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-625">オブジェクトの書式設定コードを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-625">Returns or sets the format code for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-626">
            <para>指定範囲内のすべてのセルが同じ表示形式を持っていない場合、このプロパティが<b>Null</b>を返します</para>。
          <para>形式は、[表示形式]、[セルの書式設定] ダイアログ ボックスと同じ文字列です。<b>Format</b>関数は、<b>数字</b>よりもコードの文字列を別の形式を使用して、<see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />プロパティ</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-626">
              <para>This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</para>
              <para>The format code is the same string as the Format Codes option in the Format Cells dialog box. The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-627">ユーザーの言語で文字列としてオブジェクトの書式設定コードを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-627">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-628">
            <para>
              <b>Format</b>関数は、コードの文字列を別の形式を使用して、<see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />と<b>NumberFormatLocal</b>プロパティです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-628">
              <para>The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset">
          <span data-ttu-id="0b4ae-629">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-629">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-630">行数 (正、負、または 0 (ゼロ)) でオフセットする範囲であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-630">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="0b4ae-631">正の値のオフセットを表し、および負の値を上方向にオフセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-631">Positive values are offset downward, and negative values are offset upward.</span>
          </span>
          <span data-ttu-id="0b4ae-632">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-632">The default value is 0.</span>
          </span>
        </param>
        <param name="ColumnOffset">
          <span data-ttu-id="0b4ae-633">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-633">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-634">列数 (正、負、または 0 (ゼロ)) でオフセットする範囲であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-634">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span>
          </span>
          <span data-ttu-id="0b4ae-635">正の値は、右側にオフセットし、負の値が左側にオフセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-635">Positive values are offset to the right, and negative values are offset to the left.</span>
          </span>
          <span data-ttu-id="0b4ae-636">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-636">The default value is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-637">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を指定した範囲からのオフセット範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-637">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-638">テキストの方向を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-638">Returns the text orientation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-639">
            <para>この方向の値は、90 から 90 度の整数値が返されます</para>。
          <para>Olap データベースのデータ ソースの場合は、階層内で 1 つのフィールドに対してこのプロパティを設定同じ階層に他のフィールドの方向を設定します。ディメンション フィールドは、行、列、およびピボット テーブル レポートのページ フィールド エリアにのみ配置できます。メジャー フィールドは、データ エリアにのみ配置できます。階層またはフィールドをピボット テーブル レポートから削除階層、またはデータ フィールドに<b>xlHidden</b>を設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-639">
              <para>This returned orientation value can be an integer value from 90 to 90 degrees.</para>
              <para>For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-640">指定した行または列の現在のアウトライン レベルを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-640">Returns or sets the current outline level of the specified row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-641">
            <para>レベル 1 は、最上位のレベルです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-641">
              <para>Level one is the outermost summary level.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-642">改ページの場所を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-642">Returns or sets the location of a page break.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-643">
            <para>戻り値には、次のいずれかを指定できます<see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />定数:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlPageBreakAutomatic</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakManual</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlPageBreakNone</b>
                </description>
              </item>
            </list>
            <para>このプロパティは、自動または手動のいずれかのページの場所を返すことができます区切りですが、のみを設定できます (にのみ設定できます<b>xlPageBreakManual</b>または<b>xlPageBreakNone</b>) 改の場所です</para>。
          <para>ワークシート上のすべての手動ページ区切りを削除するのには、Cells.PageBreak を<b>xlPageBreakNone</b>に設定します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-643">
              <para>The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlPageBreakAutomatic</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakManual</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlPageBreakNone</b>
                  </description>
                </item>
              </list>
              <para>This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</para>
              <para>To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-644">指定されたオブジェクトの親オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-644">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine">
          <span data-ttu-id="0b4ae-645">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-645">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-646">セルを分割する位置を示すために左と右の角かっこを含む文字列です。たとえば、"[xxx] [xxx]"は変換先の範囲の最初の列に最初の 3 文字を挿入すると、2 番目の列に次の 3 つの文字を挿入します。この引数を省略すると、区切り位置の範囲の左上のセルの間隔に基づいて列を分割します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-646">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span>
          </span>
          <span data-ttu-id="0b4ae-647">入力ラインを推測する別の範囲を使用する場合は、 <b>Range</b>オブジェクトとしてを使用して、<paramref name="ParseLine" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-647">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span>
          </span>
          <span data-ttu-id="0b4ae-648">その範囲は、解析されるセルの 1 つである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-648">That range must be one of the cells that's being parsed.</span>
          </span>
          <span data-ttu-id="0b4ae-649">
            <paramref name="ParseLine" />引数は、角かっことスペースを含めて 255 文字より長くすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-649">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="0b4ae-650">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-651">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />解析されたデータの変換先の範囲の左上隅を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-651">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span>
          </span>
          <span data-ttu-id="0b4ae-652">この引数を省略すると、Microsoft Excel で解析します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-652">If this argument is omitted, Microsoft Excel parses in place.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-653">範囲のデータを解析し、複数のセルに分割します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-653">Parses a range of data and breaks it into multiple cells.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-654">
            <para>いくつかの隣接する列のセル範囲の内容を配布しています。範囲は、複数の列の幅であることができます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-654">
              <para>Distributes the contents of the range to fill several adjacent columns. The range can be no more than one column wide.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">
          <span data-ttu-id="0b4ae-655">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-655">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-656">貼り付ける範囲の一部です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-656">The part of the range to be pasted.</span>
          </span>
          <span data-ttu-id="0b4ae-657">
            <b>XlPasteType</b>定数は、次のいずれか:<b>xlPasteAll 既定</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-657">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span>
          </span>
        </param>
        <param name="Operation">
          <span data-ttu-id="0b4ae-658">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span>
          </span>
          <span data-ttu-id="0b4ae-659">貼り付け操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-659">The paste operation.</span>
          </span>
          <span data-ttu-id="0b4ae-660">
            <b>XlPasteSpecialOperation</b>定数は、次のいずれか:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-660">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span>
          </span>
        </param>
        <param name="SkipBlanks">
          <span data-ttu-id="0b4ae-661">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-661">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-662">
            <b>True を指定</b>先の範囲に貼り付けクリップボード上の範囲内の空白セルがいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-662">
              <b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span>
          </span>
          <span data-ttu-id="0b4ae-663">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-663">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Transpose">
          <span data-ttu-id="0b4ae-664">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-665">
            <b>True の</b>範囲を貼り付けるときに行と列を入れ替えをします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-665">
              <b>True</b> to transpose rows and columns when the range is pasted.</span>
          </span>
          <span data-ttu-id="0b4ae-666">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-666">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-667">ペースト、<see cref="T:Microsoft.Office.Interop.Excel.Range" />は指定した範囲をクリップボードからです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-667">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-668">返します、<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />のセル内の特定のふりがな文字列に関する情報を含むオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-668">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-669">
            <para>このプロパティは、Microsoft Excel の以前のバージョンとの互換性を提供します。<b>[ふりがな]</b>を使用する必要があります (<paramref name="index" />)、インデックスは 1 つを取得するのには、ふりがなテキストのインデックス番号を<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />オブジェクトです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-669">
              <para>This property provides compatibility with earlier versions of Microsoft Excel. You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-670">返します、<see cref="T:Microsoft.Office.Interop.Excel.Phonetics" />の範囲のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-670">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-671">返します、 <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 、ピボット テーブル レポート内のセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-672">返します、<see cref="T:Microsoft.Office.Interop.Excel.PivotField" />を指定した範囲の左上隅を含むピボット テーブル フィールドを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-673">返します、<see cref="T:Microsoft.Office.Interop.Excel.PivotItem" />を指定した範囲の左上隅を含むピボット テーブル アイテムを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-674">返します、 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 、指定範囲、またはピボット グラフ レポートに関連付けられたピボット テーブル レポートの左上隅を含むピボット テーブル レポートを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-674">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-675">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、セルのすべての参照元を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-675">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-676">
            <para>1 つ以上の参照元セルがある場合は、複数の選択範囲 ( <b>Range</b>オブジェクトの和集合) にできます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-676">
              <para>This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-677">セルの接頭辞を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-677">Returns the prefix character for the cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-678">
            <para>場合、 <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /><b>プロパティは</b>、この接頭辞は ' のラベルのテキストまたは空白です。<b>TransitionNavigKeys</b>プロパティが<b>True</b>の場合は、この文字になります ' 左揃えのラベルに、"右揃えのラベルに、^ 中央揃えのラベル付け、繰り返しのラベルに、\ または、空白です。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-678">
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank. If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-679">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、前のセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-679">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-680">
            <para>このプロパティはオブジェクトが一定の範囲である場合に SHIFT キーを押しながら TAB キーを押すとエミュレート; キーの組み合わせとは異なり、プロパティが返されますそれを選択しない場合は、前のセル</para>
            <para>、保護されたシートには、このプロパティは前のロックされていないセルを返します。保護されていないシートでは、常に返しますセル直後に指定したセルの左側にします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-680">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="0b4ae-681">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-681">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-682">印刷を開始するページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-682">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="0b4ae-683">この引数を省略すると、印刷は先頭から開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-683">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0b4ae-684">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-684">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-685">印刷する最終ページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-685">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="0b4ae-686">この引数を省略すると、最後のページで印刷が終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-686">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="0b4ae-687">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-687">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-688">印刷部数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-688">The number of copies to print.</span>
          </span>
          <span data-ttu-id="0b4ae-689">この引数を省略すると、1 つのコピーが印刷されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-689">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="0b4ae-690">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-690">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-691">
            <b>True を指定</b>して、Microsoft Excel のオブジェクトを印刷する前に印刷プレビューを実行<b>False</b>(または省略した場合)、オブジェクトをすぐに印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-691">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="0b4ae-692">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-692">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-693">アクティブなプリンターの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-693">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="0b4ae-694">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-695">
            <b>True</b>ファイルに出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-695">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="0b4ae-696">
            <b>PrToFileName</b>が指定されていない場合は、Microsoft Excel 出力ファイルの名前を入力するように求めるプロンプトを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-696">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="0b4ae-697">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-697">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-698">
            <b>True</b> の場合、部単位で印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-698">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="0b4ae-699">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-699">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-700">
            <b>PrintToFile</b>が<b>True</b>に設定されている場合に印刷しファイルの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-700">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-701">オブジェクトを印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-701">Prints the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-702">
            <para>説明における「ページ」<paramref name="From" />と<paramref name="To" />印刷されるページを参照して、ない全体のページでは、シートまたはブックです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-702">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="0b4ae-703">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-703">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b4ae-704">返します。 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-704">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="0b4ae-705">
            <b>True</b>の変更を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-705">
              <b>True</b> to enable changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-706">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-706">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-707">返します、<see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />を指定したと交差するクエリ テーブルを表すオブジェクト<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-707">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="0b4ae-708">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-708">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-709">範囲の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-709">The name of the range.</span>
          </span>
          <span data-ttu-id="0b4ae-710">マクロの言語での A1 形式の参照でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-710">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="0b4ae-711">それは、範囲演算子 (コロン)、交差演算子 (スペース)、または union 演算子 (コンマ) を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-711">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="0b4ae-712">ドル記号 ($) を含めることもできますが、無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-712">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="0b4ae-713">範囲の任意の部分でローカルに定義された名前を使用することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-713">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="0b4ae-714">名を使用する場合、名前は、マクロの言語であると見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-714">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="0b4ae-715">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-715">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-716">範囲の左上隅と右下隅のセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-716">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="0b4ae-717">
            <b>Range</b>オブジェクトを含む、1 つのセル、列全体、または全体の行、またはマクロの言語で単一のセルの名前を示す文字列にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-717">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-718">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、セルまたはセル範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-718">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-719">
            <para>このプロパティは、 <b>Range</b>オブジェクトを基準とします。たとえば、選択範囲がセル C3 の場合は、Selection.Range("B1") を返します。 セル D3 から返された<b>Range</b>オブジェクトを基準にすることがあるため、<see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" />プロパティ。一方、ActiveSheet.Range("B1") は、セル B1 を常に返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-719">
              <para>This property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, ActiveSheet.Range("B1") always returns cell B1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-720">指定したオブジェクトの読み取り順序を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-720">Returns or sets the reading order for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-721">
            <para>戻り値には、以下の定数のいずれかを指定できます: <b>xlRTL</b> (右から左へ)、 <b>xlLTR</b> (左から右)、または<b>xlContext</b></para> 。
          <para>が選択またはインストールされている言語サポート (たとえば、日本語) によっては使用ができないこれらの定数のいくつかがあります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-721">
              <para>The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</para>
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns">
          <span data-ttu-id="0b4ae-722">重複する情報を含む列のインデックスのオプションの<b>オブジェクト</b>の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-722">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span>
          </span>
          <span data-ttu-id="0b4ae-723">何も指定しない場合は、すべての列に重複する情報が含まれていることと仮定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-723">If nothing is passed then it assumes all columns contain duplicate information.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="0b4ae-724">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />最初の行にヘッダー情報が含まれているかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-724">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span>
          </span>
          <span data-ttu-id="0b4ae-725">
            <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" />既定値です。指定<see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" />する場合は Excel でヘッダーを確認しようとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-725">
              <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-726">値の範囲から重複した値を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-726">Removes duplicate values from a range of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-727">リストから小計を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-727">Removes subtotals from a list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">
          <span data-ttu-id="0b4ae-728">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-728">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-729">Excel で検索する文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-729">The string you want Microsoft Excel to search for.</span>
          </span>
        </param>
        <param name="Replacement">
          <span data-ttu-id="0b4ae-730">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-730">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-731">置き換える文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-731">The replacement string.</span>
          </span>
        </param>
        <param name="LookAt">
          <span data-ttu-id="0b4ae-732">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-732">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-733">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" />定数: <b>xlWhole</b>または<b>xlPart</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-733">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span>
          </span>
        </param>
        <param name="SearchOrder">
          <span data-ttu-id="0b4ae-734">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-735">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" />定数: <b>xlByRows</b>または<b>xlByColumns</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-735">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="0b4ae-736">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-736">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-737">大文字と小文字を区別して検索するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-737">
              <b>True</b> to make the search case sensitive.</span>
          </span>
        </param>
        <param name="MatchByte">
          <span data-ttu-id="0b4ae-738">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-738">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-739">選択または Microsoft Excel で 2 バイト言語サポートがインストールされている場合にのみ、この引数を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-739">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="0b4ae-740">
            <b>True を指定</b>して、2 バイトのみ 2 バイト文字に一致させる。<b>False を指定</b>すると一致してそれに対応する 1 バイト、2 バイト文字があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-740">
              <b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span>
          </span>
        </param>
        <param name="SearchFormat">
          <span data-ttu-id="0b4ae-741">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-741">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-742">メソッドの検索書式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-742">The search format for the method.</span>
          </span>
        </param>
        <param name="ReplaceFormat">
          <span data-ttu-id="0b4ae-743">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-743">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-744">メソッドの置換書式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-744">The replace format for the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-745">
            <b>ブール値</b>で指定した範囲内のセルの文字を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-745">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-746">
            <para>このメソッドを使用して、選択範囲またはアクティブ セルは変更されません</para>。
          <para>の設定<paramref name="LookAt" />、 <paramref name="SearchOrder" />、 <paramref name="MatchCase" />、および<paramref name="MatchByte" />このメソッドを使用するたびに保存されます。次回メソッドを呼び出すと、これらの引数の値を指定しない、保存されている値が使用されます。[検索] ダイアログ ボックスで設定を変更するこれらの引数を設定し、引数を省略した場合に使用されている保存済みの値を変更する、[検索] ダイアログ ボックスで設定を変更します。問題を回避するには、これらの引数を明示的に設定するたびにこのメソッドを使用しています</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-746">
              <para>Using this method doesn’t change either the selection or the active cell.</para>
              <para>The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize">
          <span data-ttu-id="0b4ae-747">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-747">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-748">新しい範囲内の行の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-748">The number of rows in the new range.</span>
          </span>
          <span data-ttu-id="0b4ae-749">この引数を省略すると、範囲内の行の数は変わりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-749">If this argument is omitted, the number of rows in the range remains the same.</span>
          </span>
        </param>
        <param name="ColumnSize">
          <span data-ttu-id="0b4ae-750">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-750">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-751">新しい範囲の列の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-751">The number of columns in the new range.</span>
          </span>
          <span data-ttu-id="0b4ae-752">この引数を省略すると、範囲内の列の数は変わりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-752">If this argument is omitted, the number of columns in the range remains the same.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-753">指定した範囲のサイズを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-753">Resizes the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-754">範囲の最初の領域の最初の行の数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-754">Returns the number of the first row of the first area in the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">
          <span data-ttu-id="0b4ae-755">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-755">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-756">指定したセル範囲と比較する単一セルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-756">A single cell to compare with the specified range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-757">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />の内容が、各行の比較セルの内容と異なるすべてのセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-757">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-758">指定された範囲内のすべての行の高さをポイント単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-758">Returns the height of all the rows in the range specified, measured in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-759">
            <para>指定した範囲内の行すべて高さが同じでない場合、このプロパティが<b>Null</b>を返します</para>。
          <para>、1 つの行の値は、<see cref="P:Microsoft.Office.Interop.Excel.Range.Height" />プロパティは、 <b>RowHeight</b>プロパティの値と等しい。ただし、ことができますも、<b>高さ</b>プロパティを使用するセルの範囲全体の高さを返します</para>。
          <para><b>RowHeight</b>と<b>高さ</b>間の相違点には次が含まれます:</para><list type="bullet"><item><description><b>の高さ</b>は、読み取り専用</description></item>。複数行の<b>RowHeight</b>プロパティを取得する場合は、 
            <item><description>、かが表示されます<b>すべての行が同じ高さ) の</b>それぞれの行の高さ (ある場合の高さ)。いくつかの行の<b>Height</b>プロパティを取得する場合は、すべての行全体の高さが表示されます</description></item></list>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-759">
              <para>This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</para>
              <para>For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property. However, you can also use the <b>Height</b> property to return the total height of a range of cells.</para>
              <para>Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>Height</b> is read-only.</description>
                </item>
                <item>
                  <description>If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights). If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-760">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を指定した範囲内の行を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-760">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-761">
            <para>複数の選択範囲を<b>Range</b>オブジェクトに適用する場合、このプロパティは、範囲の最初の領域の行を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-761">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="0b4ae-762">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-762">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-763">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-763">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="0b4ae-764">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-764">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-765">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-765">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="0b4ae-766">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-766">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-767">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-767">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="0b4ae-768">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-768">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-769">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-769">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="0b4ae-770">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-770">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-771">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-771">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="0b4ae-772">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-772">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-773">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-773">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="0b4ae-774">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-774">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-775">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-775">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="0b4ae-776">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-776">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-777">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-777">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="0b4ae-778">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-778">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-779">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-779">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="0b4ae-780">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-780">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-781">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-781">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="0b4ae-782">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-782">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-783">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-783">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="0b4ae-784">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-784">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-785">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-785">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="0b4ae-786">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-787">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-787">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="0b4ae-788">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-789">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-789">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="0b4ae-790">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-790">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-791">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-791">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="0b4ae-792">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-792">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-793">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-793">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="0b4ae-794">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-794">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-795">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-795">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="0b4ae-796">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-797">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-797">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="0b4ae-798">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-798">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-799">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-799">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="0b4ae-800">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-800">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-801">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-801">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="0b4ae-802">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-802">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-803">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-803">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="0b4ae-804">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-804">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-805">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-805">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="0b4ae-806">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-806">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-807">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-807">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="0b4ae-808">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-808">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-809">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-809">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="0b4ae-810">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-811">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-811">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="0b4ae-812">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-812">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-813">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-813">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="0b4ae-814">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-814">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-815">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-815">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="0b4ae-816">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-816">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-817">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-817">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="0b4ae-818">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-818">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-819">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-819">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="0b4ae-820">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-820">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-821">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-821">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-822">この場所には、Microsoft Excel のマクロを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-822">Runs the Microsoft Excel macro at this location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-823">
            <para>の範囲はマクロ シートである必要があります</para>。
          <para>はこのメソッドを使用して名前付き引数を使用することはできません。位置による引数を渡す必要があります</para>。
          <para><b>Run</b>メソッドが呼び出されるマクロを返しますを返します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-823">
              <para>The range must be on a macro sheet.</para>
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-824">オブジェクトを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-824">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-825">
            <para>セルまたはセル範囲を選択するには、Select メソッドを使用します。1 つのセルをアクティブ セルにするを使用して、<see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" />メソッドです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-825">
              <para>To select a cell or a range of cells, use the Select method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-826">SharePoint サーバー上で実行できるアクションを指定する<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-826">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Actions" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-827">作成<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />オブジェクトの指定した範囲内のすべてのセル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-827">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0b4ae-828">
            <para>指定範囲内の既存の<b>Phonetic</b>オブジェクトは、このメソッドを使用してを追加する新しいオブジェクトでは、(削除) に自動的に上書きします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-828">
              <para>Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-829">表示範囲を移動するのには、作業中のウィンドウの内容をスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-829">Scrolls through the contents of the active window to move the range into view.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-830">
            <para>作業中の文書内の単一セルの範囲には。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-830">
              <para>The range must consist of a single cell in the active document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="0b4ae-831">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-831">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-832">
            <b>True を指定</b>する直接の参照先のトレース矢印を 1 つのレベルを削除するのには<b>False</b>トレース矢印を 1 レベル展開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-832">
              <b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="0b4ae-833">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-833">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-834">アクティブ セル (参照元) から、その値を直接参照しているセル (参照先) に向けてトレース矢印を引きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-834">Draws tracer arrows to the direct dependents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-835">(列または行の詳細が見えるように) に、指定した範囲のアウトラインが展開されている場合は<b>True</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-835">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-836">
            <para>指定された範囲は、1 つの集計列または行のアウトラインをする必要があります</para>。
          <para>、アイテムの詳細を表示する場合に、このプロパティが<b>True</b>に設定が場合は、範囲は、ピボット テーブル レポートでは、.</para><para>次のステートメントに該当する場合は、指定された範囲は、ピボット テーブル レポートでない場合は、:</para><list type="bullet"><item><description>の範囲は、1 つのサマリー行または列にする必要があります</description></item>。
            <item><description>の行または列の子のいずれかが表示されない場合、このプロパティが<b>False</b>を返します</description></item>。
            <item><description>、サマリー行または列のすべての子を表示するのにはこのプロパティを<b>True</b>に設定します</description></item>。
            <item><description>、サマリー行または列のすべての子を非表示にするのと同じではこのプロパティを<b>False</b>に設定します</description></item>。
            <item><description>場合は、指定された範囲は、ピボット テーブル レポートでは、範囲が連続している場合、一度に複数のセルに対してこのプロパティを設定することができます。範囲が単一のセルである場合にのみ、このプロパティが返されることができます</description></item></list>。
          <para>このプロパティは、OLAP データ ソースに対して使用します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-836">
              <para>The specified range must be a single summary column or row in an outline.</para>
              <para>If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</para>
              <para>If the specified range isn’t in a PivotTable report, the following statements are true:</para>
              <list type="bullet">
                <item>
                  <description>The range must be in a single summary row or column.</description>
                </item>
                <item>
                  <description>This property returns <b>False</b> if any of the children of the row or column are hidden.</description>
                </item>
                <item>
                  <description>Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</description>
                </item>
                <item>
                  <description>If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</description>
                </item>
              </list>
              <para>This property isn’t available for OLAP data sources.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-837">エラーの原因は、そのセルを含む範囲を取得するセルを参照元ツリーをトレース矢印を描画します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-837">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">
          <span data-ttu-id="0b4ae-838">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-838">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-839">
            <b>True を指定</b>する直接の参照元のトレース矢印を 1 つのレベルを削除するのには<b>False</b>トレース矢印を 1 レベル展開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-839">
              <b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span>
          </span>
          <span data-ttu-id="0b4ae-840">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-840">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-841">対象セルが直接参照しているセル (参照元) から、対象セルに向けて矢印を引きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-841">Draws tracer arrows to the direct precedents of the range.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-842">テキストが使用可能な列幅に収まるように自動的に縮小するかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-842">Determines if text automatically shrinks to fit in the available column width.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-843">
            <para>このプロパティは、テキストが自動的にこのプロパティは、指定範囲内のすべてのセルに同じ値に設定されていない場合は、<b>使用可能な列の幅と</b>に収まるように縮小する場合に<b>True</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-843">
              <para>This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-844">返します、<see cref="T:Microsoft.Office.Interop.Excel.SmartTags" />指定されたセルの識別子を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-844">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1">
          <span data-ttu-id="0b4ae-845">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-845">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-846">最初の並べ替えフィールドのいずれかのテキスト (ピボット テーブル フィールドまたは範囲名) または<see cref="T:Microsoft.Office.Interop.Excel.Range" />("Dept"または Cells (1, 1) など) のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-846">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="0b4ae-847">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-847">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-848">並べ替え順序で指定した範囲の<paramref name="Key1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-848">The sort order for the field or range specified in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="0b4ae-849">
            <b>XlSortOrder</b>定数は、次のいずれか:<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-849">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-850">並べ替え<paramref name="Key1" />の降順に並べ替えします。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-850">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-851">並べ替え<paramref name="Key1" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-851">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="0b4ae-852">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-852">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-853">2 番目の並べ替えフィールドをテキスト (ピボット テーブル フィールドまたは範囲名) または<b>Range</b>オブジェクトのいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-853">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="0b4ae-854">この引数を省略した場合、2 番目の並べ替えフィールドはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-854">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="0b4ae-855">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-855">Cannot be used when sorting Pivot Table reports.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0b4ae-856">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-856">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-857">並べ替える要素を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-857">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="0b4ae-858">ピボット テーブル レポートを並べ替えるときにのみ、この引数を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-858">Use this argument only when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-859">
            <b>XlSortType</b>定数は、次のいずれか:<b>xlSortLabels</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-859">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-860">ピボット テーブル レポートをラベルによって並べ替えます。<b>xlSortValues</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-860">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-861">ピボットテーブル レポートを値で並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-861">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="0b4ae-862">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-862">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-863">並べ替え順序で指定した範囲の<paramref name="Key2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-863">The sort order for the field or range specified in <paramref name="Key2" />.</span>
          </span>
          <span data-ttu-id="0b4ae-864">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-864">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-865">
            <b>XlSortOrder</b>定数は、次のいずれか:<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-865">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-866">並べ替え<paramref name="Key2" />の降順に並べ替えします。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-866">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-867">並べ替え<paramref name="Key2" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-867">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="0b4ae-868">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-868">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-869">3 番目の並べ替えフィールドをテキスト (範囲名) または<b>Range</b>オブジェクトのいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-869">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="0b4ae-870">この引数を省略した場合、3 番目の並べ替えフィールドはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-870">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="0b4ae-871">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-871">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="0b4ae-872">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-872">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-873">並べ替え順序で指定した範囲の<paramref name="Key3" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-873">The sort order for the field or range specified in <paramref name="Key3" />.</span>
          </span>
          <span data-ttu-id="0b4ae-874">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-874">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-875">
            <b>XlSortOrder</b>定数は、次のいずれか:<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-875">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-876">並べ替え<paramref name="Key3" />の降順に並べ替えします。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-876">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-877">並べ替え<paramref name="Key3" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-877">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="0b4ae-878">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-878">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="0b4ae-879">最初の行にヘッダーが含まれているかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-879">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="0b4ae-880">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-880">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-881">
            <b>可能</b>定数は、次のいずれか:<b>xlGuess</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-881">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-882">Microsoft excel が、ヘッダーがあるかどうかを判断し、位置を確認して 1 つを使用する必要がある場合。<b>xlno という</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-882">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-883">(範囲全体が並べ替えられます)。<b>ある xlYes</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-883">(The entire range should be sorted).<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-884">(範囲全体が並べ替えられません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-884">(The entire range should not be sorted).</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="0b4ae-885">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-885">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-886">この引数は、カスタム並べ替え順の一覧に 1 から始まる整数オフセットです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-886">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="0b4ae-887">省略した場合は、 <paramref name="OrderCustom" />、通常の並べ替えを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-887">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="0b4ae-888">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-888">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-889">
            <b>True</b>は、大文字小文字を区別して並べ替えを行います<b>False</b>は大文字小文字を区別する並べ替えを行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-889">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="0b4ae-890">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-890">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="0b4ae-891">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-891">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="0b4ae-892">並べ替えの方向を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-892">The sort orientation.</span>
          </span>
          <span data-ttu-id="0b4ae-893">
            <b>可能</b>定数は、次のいずれか:<b>xlSortRows</b><paramref name="default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-893">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-894">行単位で並べ替えます。<b>xlSortColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-894">Sorts by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-895">列単位で並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-895">Sorts by column.</span>
          </span>
        </param>
        <param name="SortMethod">
          <span data-ttu-id="0b4ae-896">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-896">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="0b4ae-897">並べ替えの種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-897">The type of sort.</span>
          </span>
          <span data-ttu-id="0b4ae-898">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-898">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="0b4ae-899">
            <b>可能です</b>定数は、次のいずれかの:<b>xlStroke</b>の各文字の画数による並べ替え。<b>xlPinYin</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-899">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-900">中国語の発音文字の並べ替え順です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-900">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="0b4ae-901">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-901">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-902">テキストを並べ替える方法を指定する<paramref name="Key 1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-902">Specifies how to sort text in <paramref name="Key 1" />.</span>
          </span>
          <span data-ttu-id="0b4ae-903">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-903">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-904">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-904">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-905">並べ替えには、数値データとしてテキストを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-905">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-906">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-906">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="0b4ae-907">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-907">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-908">テキストを並べ替える方法を指定する<paramref name="Key 2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-908">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="0b4ae-909">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-909">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-910">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-910">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-911">並べ替えには、数値データとしてテキストを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-911">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-912">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-912">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="0b4ae-913">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-913">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-914">3 のキーのテキストを並べ替える方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-914">Specifies how to sort text in key 3.</span>
          </span>
          <span data-ttu-id="0b4ae-915">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-915">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-916">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-916">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-917">並べ替えには、数値データとしてテキストを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-917">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-918">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-918">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-919">指定した範囲には、1 つだけのセルが含まれている場合は、ピボット テーブル レポート、範囲、またはアクティブな領域を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-919">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-920">
            <para>設定<paramref name="Header" />、 <paramref name="Order1" />、 <paramref name="Order2" />、 <paramref name="Order3" />、 <paramref name="OrderCustom" />、および<paramref name="Orientation" />用に保存されます、特定のワークシートでは、このメソッドを使用するたびにします。次回メソッドを呼び出すと、これらの引数の値を指定しない、保存されている値が使用されます。明示的に保存されている値を使用しないことを選択した場合、 <b>Sort</b>メソッドを使用するたびにこれらの引数を設定します</para>。
          <para>数値データに変換されていない文字列は、通常どおりに並べ替えします</para>。
          <para>Microsoft Excel が昇順で並べ替えられますを選択している範囲を並べ替える<b>Sort</b>メソッドで引数が定義されていない場合です</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-920">
              <para>The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method. If you don’t specify values for these arguments the next time you call the method, the saved values are used. Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</para>
              <para>Text strings which are not convertible to numeric data are sorted normally.</para>
              <para>If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod">
          <span data-ttu-id="0b4ae-921">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-921">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span>
          </span>
          <span data-ttu-id="0b4ae-922">並べ替えの種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-922">The type of sort.</span>
          </span>
          <span data-ttu-id="0b4ae-923">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-923">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
          </span>
          <span data-ttu-id="0b4ae-924">
            <b>可能です</b>定数は、次のいずれか:<b>xlStroke</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-924">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-925">各文字の画数によって並べ替えます。<b>xlPinYin</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-925">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-926">中国語の発音文字の並べ替え順です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-926">Phonetic Chinese sort order for characters.</span>
          </span>
        </param>
        <param name="Key1">
          <span data-ttu-id="0b4ae-927">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-928">最初の並べ替えフィールドをテキスト (ピボット テーブル フィールドまたは範囲名) または<b>Range</b>オブジェクト ("Dept"または Cells (1, 1) など) のいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-928">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span>
          </span>
        </param>
        <param name="Order1">
          <span data-ttu-id="0b4ae-929">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-929">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-930">フィールドまたはで指定された範囲の並べ替え順序、<paramref name="Key1" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-930">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span>
          </span>
          <span data-ttu-id="0b4ae-931">
            <b>XlSortOrder</b>定数は、次のいずれか:<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-931">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-932">並べ替え<paramref name="Key1" />の降順に並べ替えします。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-932">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-933">並べ替え<paramref name="Key1" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-933">Sorts <paramref name="Key1" /> in ascending order.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0b4ae-934">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-934">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-935">並べ替える要素を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-935">Specifies which elements are to be sorted.</span>
          </span>
          <span data-ttu-id="0b4ae-936">ピボット テーブル レポートを並べ替えるときにのみ、この引数を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-936">Use this argument only when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Key2">
          <span data-ttu-id="0b4ae-937">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-938">2 番目の並べ替えフィールドをテキスト (ピボット テーブル フィールドまたは範囲名) または<b>Range</b>オブジェクトのいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-938">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="0b4ae-939">この引数を省略した場合、2 番目の並べ替えフィールドはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-939">If you omit this argument, there’s no second sort field.</span>
          </span>
          <span data-ttu-id="0b4ae-940">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-940">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-941">
            <b>XlSortType</b>定数は、次のいずれか:<b>xlSortLabels</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-941">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-942">ピボット テーブル レポートをラベルによって並べ替えます。<b>xlSortValues</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-942">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-943">ピボットテーブル レポートを値で並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-943">Sorts the PivotTable report by values.</span>
          </span>
        </param>
        <param name="Order2">
          <span data-ttu-id="0b4ae-944">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-944">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-945">フィールドまたはで指定された範囲の並べ替え順序、<paramref name="Key2" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-945">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span>
          </span>
          <span data-ttu-id="0b4ae-946">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-946">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-947">
            <b>XlSortOrder</b>定数は、次のいずれか:<b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-947">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-948">並べ替え<paramref name="Key2" /><b>xlAscending</b>既定の順序を降順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-948">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span>
          </span>
          <span data-ttu-id="0b4ae-949">並べ替え<paramref name="Key2" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-949">Sorts <paramref name="Key2" /> in ascending order.</span>
          </span>
        </param>
        <param name="Key3">
          <span data-ttu-id="0b4ae-950">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-950">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-951">3 番目の並べ替えフィールドをテキスト (範囲名) または<b>Range</b>オブジェクトのいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-951">The third sort field, as either text (a range name) or a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="0b4ae-952">この引数を省略した場合、3 番目の並べ替えフィールドはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-952">If you omit this argument, there’s no third sort field.</span>
          </span>
          <span data-ttu-id="0b4ae-953">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-953">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Order3">
          <span data-ttu-id="0b4ae-954">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-954">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span>
          </span>
          <span data-ttu-id="0b4ae-955">フィールドまたはで指定された範囲の並べ替え順序、<paramref name="Key3" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-955">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span>
          </span>
          <span data-ttu-id="0b4ae-956">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-956">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-957">
            <b>XlSortOrder</b>定数は、次のいずれか: <b>xlDescending</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-957">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-958">並べ替え<paramref name="Key3" />の降順に並べ替えします。<b>xlAscending</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-958">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-959">並べ替え<paramref name="Key3" />の順序を昇順にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-959">Sorts <paramref name="Key3" /> in ascending order.</span>
          </span>
        </param>
        <param name="Header">
          <span data-ttu-id="0b4ae-960">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-960">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span>
          </span>
          <span data-ttu-id="0b4ae-961">最初の行にヘッダーが含まれているかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-961">Specifies whether or not the first row contains headers.</span>
          </span>
          <span data-ttu-id="0b4ae-962">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-962">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-963">
            <b>可能</b>定数は、次のいずれか:<b>xlGuess</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-963">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-964">ヘッダーがあるかどうかを判断し、位置を確認して、Microsoft Excel では、1 つを使用する必要がある場合。<b>xlno という</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-964">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-965">範囲全体を並べ替える必要があります。<b>ある xlYes</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-965">The entire range should be sorted.<b>xlYes</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-966">範囲全体が並べ替えられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-966">The entire range should not be sorted.</span>
          </span>
        </param>
        <param name="OrderCustom">
          <span data-ttu-id="0b4ae-967">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-967">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-968">この引数は、カスタム並べ替え順の一覧に 1 から始まる整数オフセットです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-968">This argument is a one-based integer offset to the list of custom sort orders.</span>
          </span>
          <span data-ttu-id="0b4ae-969">省略した場合は、 <paramref name="OrderCustom" />、(標準の並べ替え順序) を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-969">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span>
          </span>
        </param>
        <param name="MatchCase">
          <span data-ttu-id="0b4ae-970">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-970">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-971">
            <b>True</b>は、大文字小文字を区別して並べ替えを行います<b>False</b>は大文字小文字を区別する並べ替えを行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-971">
              <b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span>
          </span>
          <span data-ttu-id="0b4ae-972">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-972">Cannot be used when sorting PivotTable reports.</span>
          </span>
        </param>
        <param name="Orientation">
          <span data-ttu-id="0b4ae-973">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-973">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span>
          </span>
          <span data-ttu-id="0b4ae-974">並べ替えの方向を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-974">The sort orientation.</span>
          </span>
          <span data-ttu-id="0b4ae-975">
            <b>可能</b>定数は、次のいずれか:<b>xlSortRows</b><paramref name="default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-975">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-976">行の並べ替えを行います。<b>xlSortColumns</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-976">The sort is done by row.<b>xlSortColumns</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-977">列での並べ替えを行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-977">The sort is done by column.</span>
          </span>
        </param>
        <param name="DataOption1">
          <span data-ttu-id="0b4ae-978">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-978">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-979">テキストを並べ替える方法を指定する<paramref name="Key1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-979">Specifies how to sort text in <paramref name="Key1" />.</span>
          </span>
          <span data-ttu-id="0b4ae-980">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-980">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-981">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-981">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-982">並べ替えには、数値データとしてテキストを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-982">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-983">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-983">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption2">
          <span data-ttu-id="0b4ae-984">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-984">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-985">テキストを並べ替える方法を指定する<paramref name="Key 2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-985">Specifies how to sort text in <paramref name="Key 2" />.</span>
          </span>
          <span data-ttu-id="0b4ae-986">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-986">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-987">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-987">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-988">並べ替えには、数値データとしてテキストを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-988">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-989">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-989">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <param name="DataOption3">
          <span data-ttu-id="0b4ae-990">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-990">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span>
          </span>
          <span data-ttu-id="0b4ae-991">テキストを並べ替える方法を指定する<paramref name="Key 3" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-991">Specifies how to sort text in <paramref name="Key 3" />.</span>
          </span>
          <span data-ttu-id="0b4ae-992">ピボット テーブル レポートの並べ替えには使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-992">Cannot be used when sorting PivotTable reports.</span>
          </span>
          <span data-ttu-id="0b4ae-993">
            <b>可能</b>定数は、次のいずれか:<b>xlSortTextAsNumbers</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-993">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-994">並べ替えのテキストの数値データを処理します。<b>xlSortNormal</b><paramref name="default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-994">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span>
          </span>
          <span data-ttu-id="0b4ae-995">数値データとテキスト データを個別に並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-995">Sorts numeric and text data separately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-996">範囲またはピボット テーブル レポートを並べ替えるには東アジアの並べ替え方法を使用して、または 1 つだけのセルが範囲に含まれている場合は、アクティブな領域のメソッドを使用しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-996">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span>
          </span>
          <span data-ttu-id="0b4ae-997">などの日本語を五十音順で並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-997">For example, Japanese sorts in the order of the Kana syllabary.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-998">
            <para>
              <b>SortSpecial</b>メソッドで引数を何も定義しない場合 Microsoft Excel には昇順でソートするように選択、選択範囲が並べ替えられます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-998">
              <para>If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-p302">このプロパティは、使用しないでください。サウンド メモは Excel から削除されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-p302">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1001">取得、<see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" />を指定した範囲から既存のスパーク ラインのグループを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1001">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b4ae-1002">A<see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" />を指定した範囲から既存のスパーク ラインのグループを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1002">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="0b4ae-1003">
            <para>読み取り専用です。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1003">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection">
          <span data-ttu-id="0b4ae-1004">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1004">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1005">行順に読み上げるか、列順に読み上げるか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1005">The speak direction, by rows or columns.</span>
          </span>
        </param>
        <param name="SpeakFormulas">
          <span data-ttu-id="0b4ae-1006">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1006">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1007">
            <b>真</b>の数式が数式を含むセルの音声合成 (TTS) エンジンに送信されますが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1007">
              <b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span>
          </span>
          <span data-ttu-id="0b4ae-1008">セルの数式があるない場合、値が送信されます。<b>False</b>(既定値) には、常に、TTS エンジンに送られる値が発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1008">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1009">範囲内のセルを、行順または列順に読み上げます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1009">Causes the cells of the range to be spoken in row order or column order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0b4ae-1010">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1010">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1011">取得するセルの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1011">The cells to include.</span>
          </span>
          <span data-ttu-id="0b4ae-1012">
            <b>XlCellType</b>定数は、次のいずれか:<b>xlCellTypeAllFormatConditions</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1012">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1013">任意の形式のセルです。<b>xlCellTypeAllValidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1013">Cells of any format.<b>xlCellTypeAllValidation</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1014">入力規則の条件を持つセルです。<b>xlCellTypeBlanks</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1014">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1015">空白セルです。<b>xlCellTypeComments</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1015">Empty cells.<b>xlCellTypeComments</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1016">ノートが含まれているセルです。<b>xlCellTypeConstants</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1016">Cells containing notes.<b>xlCellTypeConstants</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1017">定数が含まれているセルです。<b>xlCellTypeFormulas</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1017">Cells containing constants.<b>xlCellTypeFormulas</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1018">数式を含むセル。<b>xlCellTypeLastCell</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1018">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1019">範囲の最後のセルです。<b>xlCellTypeSameFormatConditions</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1019">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1020">同じ書式を持つセルです。<b>xlCellTypeSameValidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1020">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1021">同じ入力規則の条件を持つセルです。<b>xlCellTypeVisible</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1021">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1022">すべての可視セル</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1022">All visible cells.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="0b4ae-1023">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1023">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1024">場合<paramref name="Type" /><b>xlCellTypeConstants</b>または<b>xlCellTypeFormulas</b>のいずれかでは、結果に含めるセルの種類を決定するのにはこの引数を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1024">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span>
          </span>
          <span data-ttu-id="0b4ae-1025">これらの値を追加する 1 つ以上の型を返すことです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1025">These values can be added together to return more than one type.</span>
          </span>
          <span data-ttu-id="0b4ae-1026">既定では、すべての定数または数式がどのような種類を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1026">The default is to select all constants or formulas, no matter what the type.</span>
          </span>
          <span data-ttu-id="0b4ae-1027">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" />定数:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1027">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1028">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、指定した種類および値に一致するすべてのセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1029">返します、<see cref="T:Microsoft.Office.Interop.Excel.Style" />を指定した範囲のスタイルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1029">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="0b4ae-1030">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1030">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="0b4ae-1031">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1031">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1032">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1032">You have requested Help for a keyword used only on the Macintosh.</span>
          </span>
          <span data-ttu-id="0b4ae-1033">このキーワードの詳細については、Microsoft Office Macintosh Edition に含まれているヘルプの言語リファレンスを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1033">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy">
          <span data-ttu-id="0b4ae-1034">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1034">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1035">1 から始まる整数オフセットとしてのグループ化するフィールドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1035">The field to group by, as a one-based integer offset.</span>
          </span>
          <span data-ttu-id="0b4ae-1036">詳細については、「使用例」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1036">For more information, see the example.</span>
          </span>
        </param>
        <param name="Function">
          <span data-ttu-id="0b4ae-1037">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1037">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1038">小計の関数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1038">The subtotal function.</span>
          </span>
          <span data-ttu-id="0b4ae-1039">
            <b>可能</b>定数は、次のいずれか:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1039">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span>
          </span>
        </param>
        <param name="TotalList">
          <span data-ttu-id="0b4ae-1040">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1040">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1041">フィールドの小計を追加することを示す、1 から始まるフィールド オフセットの配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1041">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span>
          </span>
          <span data-ttu-id="0b4ae-1042">詳細については、「使用例」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1042">For more information, see the example.</span>
          </span>
        </param>
        <param name="Replace">
          <span data-ttu-id="0b4ae-1043">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1043">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1044">
            <b>True を指定</b>して、既存の小計です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1044">
              <b>True</b> to replace existing subtotals.</span>
          </span>
          <span data-ttu-id="0b4ae-1045">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1045">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageBreaks">
          <span data-ttu-id="0b4ae-1046">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1046">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1047">
            <b>True の</b>ページを追加するのにはグループごとに分割します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1047">
              <b>True</b> to add page breaks after each group.</span>
          </span>
          <span data-ttu-id="0b4ae-1048">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1048">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SummaryBelowData">
          <span data-ttu-id="0b4ae-1049">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1049">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1050">小計に対する集計のデータを配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1050">Places the summary data relative to the subtotal.</span>
          </span>
          <span data-ttu-id="0b4ae-1051">
            <b>可能</b>定数は、次のいずれか:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1051">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1052">セル範囲の集計を作成します。指定されたセル範囲が単一セルのときは、アクティブ セル領域を集計します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1052">Creates subtotals for the range (or the current region, if the range is a single cell).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1053">範囲がアウトライン サマリー行または列かどうかを。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1053">Determines if the range is an outlining summary row or column.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1054">
            <para>範囲がアウトライン サマリー行または列の場合、このプロパティが<b>True</b>を返します</para>。
          <para>の範囲は、行または列を指定してください</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1054">
              <para>This property returns <b>True</b> if the range is an outlining summary row or column.</para>
              <para>The range should be a row or a column.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput">
          <span data-ttu-id="0b4ae-1055">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1055">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1056">テーブルの行入力として使うセルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1056">A single cell to use as the row input for your table.</span>
          </span>
        </param>
        <param name="ColumnInput">
          <span data-ttu-id="0b4ae-1057">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1057">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1058">テーブルの列入力として使うセルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1058">A single cell to use as the column input for your table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1059">ワークシートで定義した入力値と数式に基づいて、データ テーブルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1059">Creates a data table based on input values and formulas that you define on a worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-1060">
            <para>他のセルの値が影響を受ける方法を参照してくださいに特定の定数値を変更することによって what-if 分析を実行するのにには、データ テーブルを使用します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1060">
              <para>Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1061">指定したオブジェクトのテキストを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1061">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1062">
            <para>用の<see cref="T:Microsoft.Office.Interop.Excel.Phonetic" />オブジェクトでこのプロパティを取得または設定、ふりがなテキストを設定します。<b>Null</b>には、このプロパティを設定することはできません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1062">
              <para>For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text. You cannot set this property to <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="0b4ae-1063">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1063">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1064">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />を Microsoft Excel が結果を配置する場所を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1064">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span>
          </span>
          <span data-ttu-id="0b4ae-1065">範囲が単一のセルよりも大きい場合は、左上のセルが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1065">If the range is larger than a single cell, the top left cell is used.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="0b4ae-1066">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1066">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1067">複数の列に区切るデータの形式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1067">The format of the text to be split into columns.</span>
          </span>
          <span data-ttu-id="0b4ae-1068">
            <b>可能</b>定数は、次のいずれか:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1068">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="0b4ae-1069">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1069">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1070">
            <b>可能</b>定数は、次のいずれか:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1070">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="0b4ae-1071">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1071">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1072">の<b>場合は true。</b> Microsoft Excel の 1 つの区切り記号として、連続する区切り文字を検討してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1072">
              <b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1073">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1073">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="0b4ae-1074">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1074">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1075">
            <b>True を指定</b>して<paramref name="DataType" /><b>xlDelimited</b>をして、タブが存在する文字は区切り記号にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1075">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1076">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1076">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="0b4ae-1077">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1077">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1078">
            <b>True を指定</b>して<paramref name="DataType" /><b>xlDelimited</b>をするし、セミコロンを区切り文字にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1078">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1079">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1079">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="0b4ae-1080">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1080">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1081">
            <b>True を指定</b>して<paramref name="DataType" /><b>xlDelimited</b>をしてして、コンマを区切り文字にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1081">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1082">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1082">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="0b4ae-1083">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1083">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1084">
            <b>True を指定</b>して<paramref name="DataType" /><b>xlDelimited</b>をして、領域がない文字は区切り記号にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1084">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1085">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1085">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="0b4ae-1086">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1086">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1087">
            <b>True を指定</b>して<paramref name="DataType" /><b>xlDelimited</b>をするしで指定された文字、<paramref name="OtherChar" />引数の区切り記号であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1087">
              <b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span>
          </span>
          <span data-ttu-id="0b4ae-1088">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1088">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="0b4ae-1089">省略可能な<b>オブジェクト</b>(必要な場合<paramref name="Other" />が<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1089">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="0b4ae-1090">区切り記号文字の場合<paramref name="Other" />が<b>true を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1090">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1091">複数の文字を 1 つ指定すると、文字列の最初の文字のみが使用されます。残りの文字は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1091">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="0b4ae-1092">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1092">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1093">個々 の列のデータの解析情報を格納する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1093">An array containing parse information for the individual columns of data.</span>
          </span>
          <span data-ttu-id="0b4ae-1094">解釈の値に依存する<paramref name="DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1094">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="0b4ae-1095">データが区切られている場合、この引数は、各 2 要素配列は特定の列の変換オプションを指定すると、2 つの要素の配列をします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1095">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="0b4ae-1096">最初の要素は、列の番号 (1 から始まる値)、2 番目の要素の 1 つ、 <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> 、列を解析する方法を指定する定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1096">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span>
          </span>
          <span data-ttu-id="0b4ae-1097">
            <b>XlColumnDataType</b>定数は、次のいずれか:<b>xlGeneralFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1097">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1098">全般。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1098">Genera.</span>
          </span>
          <span data-ttu-id="0b4ae-1099">
            <b>xlTextFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1099">
              <b>xlTextFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1100">テキストです。<b>xlMDYFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1100">Text.<b>xlMDYFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1101">MDY の日です。<b>xlDMYFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1101">MDY Date.<b>xlDMYFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1102">式の日付です。<b>xlYMDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1102">DMY Date.<b>xlYMDFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1103">YMD の日です。<b>xlMYDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1103">YMD Date.<b>xlMYDFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1104">日付です。<b>xlDYMFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1104">MYD Date.<b>xlDYMFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1105">DYM の日です。<b>xlYDMFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1105">DYM Date.<b>xlYDMFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1106">YDM の日です。<b>xlEMDFormat</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1106">YDM Date.<b>xlEMDFormat</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1107">EMD の日です。<b>xlSkipColumn</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1107">EMD Date.<b>xlSkipColumn</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1108">
            <b>XlEMDFormat</b>は、スキップ Column.You が台湾語の言語サポートがインストールされ、選択されている場合にのみ使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1108">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span>
          </span>
          <span data-ttu-id="0b4ae-1109">定数<b>xlEMDFormat</b>は、台湾が使用されていることを指定します。任意の順序で列の指定ができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1109">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="0b4ae-1110">列の指定子がない場合、特定の列入力データで、その列は<b>標準</b>設定で。各 2 要素配列の最初の要素が列の開始文字位置を指定するソース データに固定幅の列がある場合 (整数値は 0 (ゼロ) は最初の文字)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1110">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="0b4ae-1111">2 要素配列の 2 番目の要素は、上記 1 から 9 までの数値として列の解析オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1111">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="0b4ae-1112">省略可能な<b>文字列</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1112">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1113">数値を認識するときに Excel で使用する小数点の記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1113">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="0b4ae-1114">既定の設定は、システム設定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1114">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="0b4ae-1115">省略可能な<b>文字列</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1115">Optional <b>String</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1116">何千も Excel が数値を認識するときに使用する区切り記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1116">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="0b4ae-1117">既定の設定は、システム設定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1117">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="0b4ae-1118">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1119">負記号で始まる数値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1119">Numbers that begin with a minus character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1120">セルに入力されているデータ (1 つのセル内で、カンマ、スペース、タブなどで区切られたデータ) を、複数の列に区切ります。対象となる列は 1 列だけです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1120">Parses a column of cells that contain text into several columns.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-1121">
            <para>次の表は、さまざまなインポート設定で Excel にテキストをインポートする結果を示しています。右端の列の数値の結果が表示されます</para>。
          <list type="table"><item><term>ピリオド</term><description>コンマ</description><description>カンマ</description><description>期間</description><description>123.123,45</description><description>123,123.45 (数値)</description></item><item><term>期間</term><description>コンマ</description><description>カンマ</description><description>コンマ</description><description>123.123,45</description><description>123.123,45 (テキスト)</description></item><item><term>期間</term><description>コンマ</description><description>ピリオド</description><description>コンマ</description><description>123 である
            <item><term>コンマ</term><description>ピリオド</description><description>コンマ</description><description>期間</description><description>123,123.45</description><description>123,123.45 (数値)</description></item>123.45</description><description>123 123.45 (テキスト)</description></item><item><term>期間</term><description>コンマ</description><description>ピリオド</description><description>スペース</description><description>123 123.45</description><description>(数値) 123,123.45</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1121">
              <para>The following table shows the results of importing text into Excel for various import settings. Numeric results are displayed in the rightmost column.</para>
              <list type="table">
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123.123,45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>Comma</description>
                  <description>123.123,45</description>
                  <description>123.123,45 (text)</description>
                </item>
                <item>
                  <term>Comma</term>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>123,123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Comma</description>
                  <description>123 123.45</description>
                  <description>123 123.45 (text)</description>
                </item>
                <item>
                  <term>Period</term>
                  <description>Comma</description>
                  <description>Period</description>
                  <description>Space</description>
                  <description>123 123.45</description>
                  <description>123,123.45 (numeric)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1122">範囲の上端行 1 の上端からポイント単位の距離を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1122">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1123">
            <para>範囲が連続していない場合は、最初の領域が使用されます。範囲が複数の行が高の場合は、最下位 (番号付き) の上方向の範囲が使用されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1123">
              <para>If the range is noncontiguous, the first area is used. If the range is more than one row high, the top (lowest numbered) row in the range is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1124">アウトラインの範囲を促進する (つまり、そのアウトライン レベルを減少する)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1124">Promotes a range in an outline (that is, decreases its outline level).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="0b4ae-1125">
            <para>指定された範囲は、行または列、または行や列の範囲である必要があります。このメソッドが範囲に含まれている項目を解除する範囲がピボット テーブル レポートの場合は、.</para>
            <para>アクティブ セルが親フィールドのフィールドのヘッダーである場合、そのフィールド内のすべてのグループ化が解除され、ピボット テーブル レポートからフィールドを削除します。親フィールドの最後のグループにグループ化されていない、全体のフィールドはレポートから削除します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1125">
              <para>The specified range must be a row or column, or a range of rows or columns. If the range is in a PivotTable report, this method ungroups the items contained in the range.</para>
              <para>If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1126">結合された領域をそれぞれのセルに分割します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1126">Separates a merged area into individual cells.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1127">かどうかを行の高さの<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトがシートの標準の高さに相当します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1127">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1128">
            <para>
              <b>Range</b>オブジェクトの行の高さがシートの標準の高さに等しいし、 <b>Null</b>の場合は、範囲に複数の行と行が含まれていますすべて高さが同じでない場合、このプロパティは<b>True</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1128">
              <para>This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1129">かどうかを列の幅の<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトがシートの標準の幅に相当します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1129">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1130">
            <para>このプロパティは、 <b>Range</b>オブジェクトの列の幅がシートの標準の幅に等しいされず、 <b>Null</b>の場合は、範囲には、複数の列とその列が含まれているすべての幅が同じ場合に<b>True</b>を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1130">
              <para>This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1131">返します、<see cref="T:Microsoft.Office.Interop.Excel.Validation" />を指定した範囲のデータの入力規則を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1131">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType">
          <span data-ttu-id="0b4ae-1132">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0b4ae-1133">範囲値のデータを入力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1133">The range value data type.</span>
          </span>
          <span data-ttu-id="0b4ae-1134">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" />定数:<b>xlRangeValueDefault</b><paramref name="default" />場合は、指定された<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトが空では、<b>空</b>の値を返します (このケースをテストするのには、 <b>IsEmpty</b>関数を使用します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1134">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span>
          </span>
          <span data-ttu-id="0b4ae-1135">
            <b>Range</b>オブジェクトに複数のセルが含まれている場合 (このケースでテストするのには<b>IsArray</b>関数を使用) の値の配列を返します。<b>xlRangeValueMSPersistXML</b>   指定された<b>Range</b>オブジェクトのレコード セットの表示を XML 形式で返します。<b>xlRangeValueXMLSpreadsheet</b>   値、書式、数式、および XML スプレッドシート形式の<b>Range</b>オブジェクトの名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1135">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b4ae-1136">指定した範囲の値を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1136">Returns or sets the value of the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1137">
            <para>XML スプレッドシート ファイルの内容をセルの範囲を設定する場合は、ブック内の最初のシートの値のみが使用されます。XML スプレッドシート形式でセルの連続していない範囲を取得または設定できません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1137">
              <para>When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used. You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1138">セルの値を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1138">Returns or sets the cell value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1139">
            <para>このプロパティと<b>Value</b>プロパティの唯一の違いは、 <b>Value2</b>プロパティは、<b>通貨</b>および<b>日付</b>のデータ型を使用しないことです。これらのデータ型と浮動小数点数として、 <b>Double</b>データ型を使用して値を返すことができます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1139">
              <para>The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1140">指定したオブジェクトの垂直方向の配置を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1140">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b4ae-1141">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1141"></span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="0b4ae-1142">
            <para>返される垂直方向の配置指定子には、次のいずれかを指定できます<b>オブジェクト</b>の値の読み取り/書き込み:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlBottom</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlCenter</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlDistributed</b>
                </description>
              </item>
              <item>
                <description>
                  <b>xlJustify</b>
                </description>
              </item>
              <item>
                <description>
                  <b>表示する、xlTop</b>
                </description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1142">
              <para>The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlBottom</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlCenter</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlDistributed</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlJustify</b>
                  </description>
                </item>
                <item>
                  <description>
                    <b>xlTop</b>
                  </description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1143">範囲のポイント単位の幅です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1143">The width, in points, of the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1144">返します、<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />を指定した範囲を含むワークシートを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1144">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1145">オブジェクト内のテキストを折り返すかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1145">Determines if Microsoft Excel wraps the text in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1146">
            <para>場合は、Microsoft Excel では、オブジェクトのテキストを折り返すし、 <b>Null</b>のセルを指定した範囲にテキストをラップするいくつかのセルが含まれている場合は、このプロパティが<b>True</b>を返します</para>。
          <para>Microsoft Excel は、必要に応じて、範囲内のテキストに対応するため、セル範囲の行の高さに変更されます</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1146">
              <para>This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</para>
              <para>Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b4ae-1147">返します、<see cref="T:Microsoft.Office.Interop.Excel.XPath" />に、指定したマップ要素の Xpath を表す<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0b4ae-1148">
            <para>XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0b4ae-1148">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>