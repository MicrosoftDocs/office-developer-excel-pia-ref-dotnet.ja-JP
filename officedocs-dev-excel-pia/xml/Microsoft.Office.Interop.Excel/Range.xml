<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8435c17b649304d5fae3920a40103ffa541f441" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010704" /></Metadata><TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3286d-101">セル、行、列、1 つ以上のセル範囲を含む選択範囲、または 3-D 範囲を表します。</span><span class="sxs-lookup"><span data-stu-id="3286d-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary><span data-ttu-id="3286d-102">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="3286d-102">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary><span data-ttu-id="3286d-103">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="3286d-103">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="3286d-104">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="3286d-104">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-105">1 つのセルをアクティブにします。セルは現在の選択範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-105">Activates a single cell, which must be inside the current selection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-106">セル範囲を選択するには、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-106">To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="3286d-107">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-107">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-108">コメント テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-108">The comment text.</span></span></param>
        <summary><span data-ttu-id="3286d-109">範囲にコメントを追加します。</span><span class="sxs-lookup"><span data-stu-id="3286d-109">Adds a comment to the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-110">セル内のテキストの配置を水平方向または垂直方向に均等に配置した場合に、テキストが自動的にインデントされるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-111">セル内の文字列の配置が左右または垂直方向に均等に配置されている場合に、文字列が自動的にインデントされる場合、このプロパティは <b>True</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-111">This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></para>
          <para><span data-ttu-id="3286d-112">テキストの配置を均等分布に設定するには、プロパティの値が xlVertical の場合にプロパティを <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> <b>xlVAlignDistributed</b>に設定し、Orientation プロパティの値が <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> <b>xlHorizontal</b>のときにプロパティを<b>xlHAlignDistributed</b>に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-112">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="3286d-113">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-114">行部分の参照を絶対参照として返すには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-114"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="3286d-115">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-115">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="3286d-116">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-116">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-117">列部分の参照を絶対参照として返すには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-117"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="3286d-118">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-118">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="3286d-119">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-119">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="3286d-120">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-120">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-121"><b>True を</b> 指定すると、外部参照が返されます。 <b>False ローカル</b> 参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-121"><b>True</b> to return an external reference; <b>False</b> to return a local reference.</span></span> <span data-ttu-id="3286d-122">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-122">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="3286d-123">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-124">False <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> で<b></b> <paramref name="ReferenceStyle" /> <b>、xlR1C1</b>の場合は、相対参照の開始点を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-124">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="3286d-125">この引数は <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、開始点を定義するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="3286d-125">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span></span></param>
        <summary><span data-ttu-id="3286d-126">範囲参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-126">Returns the range reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-127">参照に複数のセルが含まれている場合は、すべての行と <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> 列に適用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-127">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="3286d-128">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-129">行部分の参照を絶対参照として返すには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-129"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="3286d-130">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-130">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="3286d-131">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-131">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-132">列部分の参照を絶対参照として返すには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-132"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="3286d-133">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-133">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="3286d-134">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-134">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="3286d-135">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-135">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-136">外部参照を返すには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-136"><b>True</b> to return an external reference.</span></span> <span data-ttu-id="3286d-137">ローカル参照を返すには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-137"><b>False</b> to return a local reference.</span></span> <span data-ttu-id="3286d-138">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-138">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="3286d-139">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-139">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-140">両方 <paramref name="RowAbsolute" /> とも <paramref name="ColumnAbsolute" /> <b>False</b> に設定され <paramref name="ReferenceStyle" /> <b>、xlR1C1</b>に設定されている場合は、相対参照の開始点を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-140">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="3286d-141">この引数は <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、参照の開始点を定義するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="3286d-141">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span></span></param>
        <summary><span data-ttu-id="3286d-142">ユーザーの言語で指定された範囲の範囲の参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-142">Returns the range reference for the specified range in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-143">参照に複数のセルが含まれている場合は、すべての行とすべての列 <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> にそれぞれ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-143">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action"><span data-ttu-id="3286d-144">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-144">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span></span> <span data-ttu-id="3286d-145">使用できる定数は<b>、XlFilterAction</b>クラスの<b>xlFilterCopy</b><b>xlFilterInPlace です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-145">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span></span></param>
        <param name="CriteriaRange"><span data-ttu-id="3286d-146">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-146">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-147">検索条件範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-147">The criteria range.</span></span> <span data-ttu-id="3286d-148">省略すると、検索条件なしで抽出されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-148">If this argument is omitted, there are no criteria.</span></span></param>
        <param name="CopyToRange"><span data-ttu-id="3286d-149">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-150">コピーされた行のコピー先の範囲 (Action が次の場合 <paramref name="xlFilterCopy" /> )。</span><span class="sxs-lookup"><span data-stu-id="3286d-150">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span></span> <span data-ttu-id="3286d-151">それ以外の場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-151">Otherwise, this argument is ignored.</span></span></param>
        <param name="Unique"><span data-ttu-id="3286d-152">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-152">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-153"><b>一意</b> のレコードのみをフィルター処理する場合は True。 <b>False</b> 条件を満たすすべてのレコードをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="3286d-153"><b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span></span> <span data-ttu-id="3286d-154">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-154">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-155">条件範囲に基づいてリストからデータをフィルター処理またはコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-155">Filters or copies data from a list based on a criteria range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-156">最初の選択範囲が 1 つのセルの場合は、そのセルの現在の領域が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-156">If the initial selection is a single cell, that cell's current region is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-157">OLAP データ ソースに基づく範囲内の編集されたすべてのセルに書き戻し操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-157">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-158">このメソッドは、最後の変更の適用操作がコミットされた後に範囲内で行われたすべての変更に対して UPDATE CUBE ステートメント <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> を実行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-158">The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed.</span></span> <span data-ttu-id="3286d-159">このメソッドは、OLAP 以外のデータ ソースに基づくピボットテーブル レポートで実行すると、実行時エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3286d-159">This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-160">保護されたワークシートで範囲を編集できるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-160">Determines if the range can be edited on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-161">保護されたワークシート <b>で範囲を</b> 編集できる場合、このプロパティは True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-161">This property returns <b>True</b> if the range can be edited on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-162">Microsoft Excel アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-162">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names"><span data-ttu-id="3286d-163">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-163">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-164">引用する名前の配列です。</span><span class="sxs-lookup"><span data-stu-id="3286d-164">An array of the names to be applied.</span></span> <span data-ttu-id="3286d-165">この引数を省略すると、シートにあるすべての名前が対象セル範囲に引用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-165">If this argument is omitted, all names on the sheet are applied to the range.</span></span></param>
        <param name="IgnoreRelativeAbsolute"><span data-ttu-id="3286d-166">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-167"><b>True</b> の 名前または参照の参照の種類に関係なく、名前に参照を置き換える。 <b>絶対</b> 参照のみを絶対名に置き換える場合は False、相対参照は相対名のみ、混在参照は名前が混在します。</span><span class="sxs-lookup"><span data-stu-id="3286d-167"><b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span></span> <span data-ttu-id="3286d-168">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-168">The default value is <b>True</b>.</span></span></param>
        <param name="UseRowColumnNames"><span data-ttu-id="3286d-169">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-170"><b>True</b> の 範囲の名前が見つからない場合は、指定した範囲を含む行と列の範囲の名前を使用します。 <b>False</b> を指定すると、 <paramref name="OmitColumn" /> 引数 <paramref name="OmitRow" /> と引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-170"><b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span></span> <span data-ttu-id="3286d-171">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-171">The default value is <b>True</b>.</span></span></param>
        <param name="OmitColumn"><span data-ttu-id="3286d-172">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-172">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-173">参照を行方向の名前に置き換えるには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-173"><b>True</b> to replace the entire reference with the row-oriented name.</span></span> <span data-ttu-id="3286d-174">参照されているセルが数式と同じ列にあり、行方向の名前を持つセル範囲に含まれるときだけ、列方向の名前を省略できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-174">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span></span> <span data-ttu-id="3286d-175">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-175">The default value is <b>True</b>.</span></span></param>
        <param name="OmitRow"><span data-ttu-id="3286d-176">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-177">参照を列方向の名前に置き換えるには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-177"><b>True</b> to replace the entire reference with the column-oriented name.</span></span> <span data-ttu-id="3286d-178">参照されているセルが数式と同じ行にあり、列方向の名前を持つセル範囲に含まれるときだけ、行方向の名前を省略できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-178">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span></span> <span data-ttu-id="3286d-179">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-179">The default value is <b>True</b>.</span></span></param>
        <param name="Order"><span data-ttu-id="3286d-180">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-180">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span></span> <span data-ttu-id="3286d-181">セル参照が行方向と列方向の範囲名で置き換えられるとき、行と列のどちらの名前を先に表示するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-181">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span></span> <span data-ttu-id="3286d-182">使用できる定数は、 <b>次に示す XlApplyNamesOrder</b> 定数の 1 つです<b>。xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="3286d-182">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span></span></param>
        <param name="AppendLast"><span data-ttu-id="3286d-183">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-183">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-184"><b>True</b> に定義されている名前の定義を置き換え、定義された最後の名前の定義 <paramref name="Names" /> も置き換える。 <b>名前</b> の定義のみを置き換える場合は <paramref name="Names" /> False。</span><span class="sxs-lookup"><span data-stu-id="3286d-184"><b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span></span> <span data-ttu-id="3286d-185">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-185">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-186">指定したセル範囲のセルに名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="3286d-186">Applies names to the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-187">Array 関数を <b>使用すると</b> 、引数の名前のリストを作成 <paramref name="Names" /> できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-187">You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</span></span></para>
          <para><span data-ttu-id="3286d-188">シート全体に名前を引用するには、Cells.ApplyNames を使ってください。</span><span class="sxs-lookup"><span data-stu-id="3286d-188">If you want to apply names to the entire sheet, use Cells.ApplyNames.</span></span></para>
          <para><span data-ttu-id="3286d-189">名前を "適用解除" することはできません。名前を削除するには、このメソッドを <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> 使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-189">You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-190">指定された対象セル範囲にアウトラインの既定のスタイルを適用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-190">Applies outlining styles to the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-191">複数領域 <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 選択のすべての範囲を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-191">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-192">1 つの選択範囲の <b>場合、Areas</b> プロパティは、元のオブジェクト自体である 1 つのオブジェクトを含む <see cref="T:Microsoft.Office.Interop.Excel.Range" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-192">For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself.</span></span> <span data-ttu-id="3286d-193">選択範囲が複数のセル範囲の場合、 <b>Areas</b> プロパティは各選択範囲を 1 つのオブジェクトとして持つ、1 つのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-193">For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="3286d-194"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="3286d-194">Required <b>String</b>.</span></span> <span data-ttu-id="3286d-195">オートコンプリートの対象となる文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-195">The string to complete.</span></span></param>
        <summary><span data-ttu-id="3286d-196">オートコンプリートのリストから、指定された文字列と適合する候補を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-196">Returns an AutoComplete match from the list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-197">オートコンプリートの一致がない場合、またはリスト内の複数のエントリが完了する文字列と一致する場合、このメソッドは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-197">If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</span></span></para>
          <para><span data-ttu-id="3286d-198">このメソッドは、オートコンプリート機能がオフになっていても動作します。</span><span class="sxs-lookup"><span data-stu-id="3286d-198">This method works even if the AutoComplete feature is disabled.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="3286d-199">必須 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3286d-199">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="3286d-200">オートフィルの書き込み先になる Range オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-200">The cells to be filled.</span></span> <span data-ttu-id="3286d-201">基準となるデータの入ったセル範囲も含むようにします。</span><span class="sxs-lookup"><span data-stu-id="3286d-201">The destination must include the source range.</span></span></param>
        <param name="Type"><span data-ttu-id="3286d-202">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-202">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span></span> <span data-ttu-id="3286d-203">オートフィルの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-203">Specifies the fill type.</span></span> <span data-ttu-id="3286d-204">使用できる定数は、次に示す<b>XlAutoFillType</b>定数です<b>。xlFillDays</b><b>xlFillSeries xlFillWeekdays</b><b></b><b></b><b>xlGrowthTrend</b><b>xlFillCopy xlFillDefault</b><b>xlFillMonths</b> <paramref name="default" /> <b></b><b>xlFillValues xlFillYears</b><b></b><b>xlLinearTrend</b>この引数が<b>xlFillDefault</b>または省略されている場合、ソース範囲に基づいて最も適切な塗りつぶしの種類が選択されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-204">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span></span></param>
        <summary><span data-ttu-id="3286d-205">指定された対象セル範囲内のセルに対してオートフィルを実行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-205">Performs an autofill on the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field"><span data-ttu-id="3286d-206">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-207">フィルターの対象となるフィールド番号を整数で指定します。フィールド番号は、リストの左側から始まります。つまり、最も左側にあるフィールドはフィールド番号 1 になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-207">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span></span></param>
        <param name="Criteria1"><span data-ttu-id="3286d-208">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-209">抽出条件 ("101" などの文字列)。</span><span class="sxs-lookup"><span data-stu-id="3286d-209">The criteria (a string; for example, "101").</span></span> <span data-ttu-id="3286d-210">空白のフィールドを検索するには "=" を使用し、空白以外のフィールドを検索するには &lt; &gt; "=" を使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-210">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span></span> <span data-ttu-id="3286d-211">この引数を省略すると、条件は All <b>です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-211">If this argument is omitted, the criteria is <b>All</b>.</span></span> <span data-ttu-id="3286d-212"><paramref name="Operator" /> <b>xlTop10Items の</b>場合は、項目数を指定します <paramref name="Criteria1" /> ("10" など)。</span><span class="sxs-lookup"><span data-stu-id="3286d-212">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span></span></param>
        <param name="Operator"><span data-ttu-id="3286d-213">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-213">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span></span> <span data-ttu-id="3286d-214">使用できる定数は<b>、XlAutoFilterOperator</b>クラスの<b>xlAnd</b> <paramref name="default" /> <b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items xlTop10Percent</b>Use<b>xlAnd</b>および<b>xlOr</b><b></b>で、複合条件を使用して作成します。 <paramref name="Criteria1" /> <paramref name="Criteria2" /></span><span class="sxs-lookup"><span data-stu-id="3286d-214">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span></span></param>
        <param name="Criteria2"><span data-ttu-id="3286d-215">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-215">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-216">2 番目の抽出条件となる文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-216">The second criteria (a string).</span></span> <span data-ttu-id="3286d-217">Criteria1 および Operator と組み合わせて使い、複合抽出条件を構築します。</span><span class="sxs-lookup"><span data-stu-id="3286d-217">Used with Criteria1 and Operator to construct compound criteria.</span></span></param>
        <param name="VisibleDropDown"><span data-ttu-id="3286d-218">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-218">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-219"><b>True</b> を指定 すると、フィルター処理されたフィールドのオートフィルターのドロップダウン矢印が表示されます。 <b>False</b> フィルター処理されたフィールドのオートフィルターのドロップダウン矢印を非表示にする場合です。</span><span class="sxs-lookup"><span data-stu-id="3286d-219"><b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span></span> <span data-ttu-id="3286d-220">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-220"><b>True</b> by default.</span></span></param>
        <summary><span data-ttu-id="3286d-221">オートフィルターを使ってリストにフィルターをかけます。</span><span class="sxs-lookup"><span data-stu-id="3286d-221">Filters a list using the AutoFilter.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-222">オブジェクトを <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> 取得するには、 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> オブジェクトにプロパティを適用 <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-222">Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</span></span></para>
          <para><span data-ttu-id="3286d-223">この引数をすべて省略すると、このメソッドでは、指定された範囲内の AutoFilter ドロップダウン矢印の表示を単に切り替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-223">If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-224">対象セル範囲の列の幅や行の高さを内容に合わせて調節します。</span><span class="sxs-lookup"><span data-stu-id="3286d-224">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-225">式は、行または行の範囲、または列または列の範囲である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-225">The expression must be a row or a range of rows, or a column or a range of columns.</span></span> <span data-ttu-id="3286d-226">これ以外の場合、このメソッドはエラーになります。</span><span class="sxs-lookup"><span data-stu-id="3286d-226">Otherwise, this method generates an error.</span></span></para>
          <para><span data-ttu-id="3286d-227">列幅の 1 単位は標準スタイルの 1 文字分の幅に相当します。</span><span class="sxs-lookup"><span data-stu-id="3286d-227">One unit of column width is equal to the width of one character in the Normal style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="3286d-228">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-228">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span></span> <span data-ttu-id="3286d-229">指定した <b>AutoFormat.XlRangeAutoFormat</b> 定数の中には、選択またはインストールされている言語の設定 (たとえば、日本語) によっては使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-229">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></param>
        <param name="Number"><span data-ttu-id="3286d-230">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-230">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-231"><b>True を</b> 指定すると、オートフォーマットに数値書式が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3286d-231"><b>True</b> to include number formats in the AutoFormat.</span></span> <span data-ttu-id="3286d-232">既定値は、 <b>は True です</b> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-232">The default value is <b>True.</b></span></span></param>
        <param name="Font"><span data-ttu-id="3286d-233">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-233">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-234"><b>True を</b> 設定すると、オートフォーマットにフォント形式が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3286d-234"><b>True</b> to include font formats in the AutoFormat.</span></span> <span data-ttu-id="3286d-235">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-235">The default value is <b>True</b>.</span></span></param>
        <param name="Alignment"><span data-ttu-id="3286d-236">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-236">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-237"><b>True オート</b> フォーマットに配置を含める場合です。</span><span class="sxs-lookup"><span data-stu-id="3286d-237"><b>True</b> to include alignment in the AutoFormat.</span></span> <span data-ttu-id="3286d-238">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-238">The default value is <b>True</b>.</span></span></param>
        <param name="Border"><span data-ttu-id="3286d-239">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-239">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-240"><b>True オート</b> フォーマットに罫線の書式を含める場合です。</span><span class="sxs-lookup"><span data-stu-id="3286d-240"><b>True</b> to include border formats in the AutoFormat.</span></span> <span data-ttu-id="3286d-241">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-241">The default value is <b>True</b>.</span></span></param>
        <param name="Pattern"><span data-ttu-id="3286d-242">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-242">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-243"><b>True を</b> 指定すると、オートフォーマットにパターン書式が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3286d-243"><b>True</b> to include pattern formats in the AutoFormat.</span></span> <span data-ttu-id="3286d-244">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-244">The default value is <b>True</b>.</span></span></param>
        <param name="Width"><span data-ttu-id="3286d-245">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-245">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-246"><b>True を</b> 指定すると、オートフォーマットに列の幅と行の高さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3286d-246"><b>True</b> to include column width and row height in the AutoFormat.</span></span> <span data-ttu-id="3286d-247">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-247">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-248">定義済みの書式を使用して、指定範囲の書式を自動的に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-248">Automatically formats the specified range, using a predefined format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-249">セル範囲が 1 つのセルの場合は、セルの周囲のアクティブ領域の書式も設定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-249">If the range is a single cell, this method also formats the active region surrounding the cell.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-250">指定したセル範囲にアウトラインを自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-250">Automatically creates an outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-251">指定されたセル範囲が 1 つのセルのときは、シート全体にアウトラインが作成されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-251">If the range is a single cell, Microsoft Excel creates an outline for the entire sheet.</span></span> <span data-ttu-id="3286d-252">既存のアウトラインはすべて、新しいアウトラインに置換されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-252">The new outline replaces any existing outline.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle"><span data-ttu-id="3286d-253">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-253">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span></span> <span data-ttu-id="3286d-254">罫線の線のスタイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-254">The line style for the border.</span></span> <span data-ttu-id="3286d-255">使用できる定数は<b>、XlContinuous</b> <b></b> <paramref name="default" /> <b>xlDash</b><b>xlDashDot xlDashDot</b><b></b><b>xlDot xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-255">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span></span></param>
        <param name="Weight"><span data-ttu-id="3286d-256">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-256">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span></span> <span data-ttu-id="3286d-257">罫線の太さを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-257">The border weight.</span></span> <span data-ttu-id="3286d-258">使用できる定数は <b>、XlBorderWeight</b> 定数である<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin です。</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="3286d-258">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span></span></param>
        <param name="ColorIndex"><span data-ttu-id="3286d-259">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-259">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span></span> <span data-ttu-id="3286d-260">罫線の色を現在のカラー パレットのインデックス番号または <b>XlColorIndex</b> 定数で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-260">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span></span> <span data-ttu-id="3286d-261">使用できる定数は<b>、XlColorIndex</b>の定数である<b>xlColorIndexAutomatic</b> <paramref name="default" /> <b>xlColorIndexNone です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-261">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span></span></param>
        <param name="Color"><span data-ttu-id="3286d-262">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-262">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-263">罫線の色を示す RGB 値を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-263">The border color, as an RGB value.</span></span></param>
        <summary><span data-ttu-id="3286d-264">範囲に罫線を追加し、新しい罫線 <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> のプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-264">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-265">両方を指定する <paramref name="ColorIndex" /> 必要がありますが <paramref name="Color" /> 、両方を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-265">You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</span></span></para>
          <para><span data-ttu-id="3286d-266">どちらかまたは両方 <paramref name="LineStyle" /> を指定 <paramref name="Weight" /> できますが、両方を指定できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-266">You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both.</span></span> <span data-ttu-id="3286d-267">両方の引数を省略すると、既定の太さでの罫線が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-267">If you don't specify either argument, Microsoft Excel uses the default line style and weight.</span></span></para>
          <para><span data-ttu-id="3286d-268">このメソッドでは選択範囲全体が罫線で囲まれるのであって、範囲内の各セルが罫線で囲まれるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-268">This method outlines the entire range without filling it in.</span></span> <span data-ttu-id="3286d-269">すべてのセルの罫線を設定するには、Borders コレクションの "," および "プロパティ" を <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> 設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-269">To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection.</span></span> <span data-ttu-id="3286d-270">罫線を消去するには、消去する範囲に含まれているすべてのセルの <b>LineStyle</b> プロパティを <b>xlLineStyleNone</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-270">To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary><span data-ttu-id="3286d-271">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="3286d-271">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="3286d-272"><see cref="T:System.Object" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-272">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-273">スタイルまたはセル範囲 (条件付き書式の一部として定義された範囲を含む) の罫線を表すコレクション <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-274">ワークシート上のセルの指定範囲を計算します。</span><span class="sxs-lookup"><span data-stu-id="3286d-274">Calculates a specified range of cells on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-275">指定したセル範囲を計算します。</span><span class="sxs-lookup"><span data-stu-id="3286d-275">Calculates a specfied range of cells.</span></span></summary>
        <returns><span data-ttu-id="3286d-276"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="3286d-276"><b>Object</b></span></span></returns>
        <remarks><para><span data-ttu-id="3286d-277">このメソッドは、指定された範囲の左上隅から右下隅までのセルを行から主な順序 <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> で計算します。</span><span class="sxs-lookup"><span data-stu-id="3286d-277">The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order.</span></span> <span data-ttu-id="3286d-278">なおこれは、セル範囲の計算を行ううえで Excel 2000 以前のバージョンで採用されている処理と同じものとなります。</span><span class="sxs-lookup"><span data-stu-id="3286d-278">This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-279">指定した範囲のセルを表す<b>Range</b>オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-279">Returns a <b>Range</b> object that represents the cells in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="3286d-280">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-280">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-281">返す先頭文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-281">The first character to be returned.</span></span> <span data-ttu-id="3286d-282">この引数に 1 を指定するか、省略すると、このプロパティは先頭文字から始まる文字列範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-282">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span></span></param>
        <param name="Length"><span data-ttu-id="3286d-283">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-283">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-284">返す文字数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-284">The number of characters to be returned.</span></span> <span data-ttu-id="3286d-285">この引数を省略すると、このプロパティは文字列の残りの部分 (文字の後のすべて) を返 <paramref name="Start" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-285">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span></span></param>
        <summary><span data-ttu-id="3286d-286">オブジェクト テキスト内 <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> の文字範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-286">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-287"><b>Characters</b> オブジェクトを使用して、テキスト文字列内の文字の書式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-287">You can use the <b>Characters</b> object to format characters within a text string.</span></span></para>
          <para><span data-ttu-id="3286d-288"><b>Characters</b> オブジェクトはコレクションではありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-288">The <b>Characters</b> object isn't a collection.</span></span></para>
          <para><span data-ttu-id="3286d-289">オブジェクト <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> の場合 <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> はメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3286d-289">For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="3286d-290">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-290">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-291">メイン辞書に単語が見つからない場合に調べるユーザー辞書のファイル名を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="3286d-291">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="3286d-292">この引数を省略すると、現在指定されている辞書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-292">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="3286d-293">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-293">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-294"><b>True を</b> 指定すると、すべて大文字の単語が無視されます。 <b>すべて</b> 大文字の単語をチェックする場合は False。</span><span class="sxs-lookup"><span data-stu-id="3286d-294"><b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="3286d-295">この引数を省略すると、現在の設定が使われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-295">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="3286d-296">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-296">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-297"><b>True</b> を指定すると、正しくないスペルが見つかったときに候補の代替スペルの一覧が表示されます。 <b>False</b> を指定すると、正しいスペルを入力している間、Microsoft Excel が一時停止します。</span><span class="sxs-lookup"><span data-stu-id="3286d-297"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span></span> <span data-ttu-id="3286d-298">この引数を省略すると、現在の設定が使われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-298">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="3286d-299">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-299">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-300">辞書に使用した言語を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-300">The language of the dictionary being used.</span></span> <span data-ttu-id="3286d-301">プロパティで使用する <b>MsoLanguageID</b> 値のいずれかを指定 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-301">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="3286d-302">オブジェクトのスペルをチェックします。</span><span class="sxs-lookup"><span data-stu-id="3286d-302">Checks the spelling of an object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-303">このメソッドには戻り値はありません。[スペル チェック] ダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-303">This method has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></para>
          <para><span data-ttu-id="3286d-304">ワークシートのヘッダー、フッター、およびオブジェクトを確認するには、オブジェクトに対してこのメソッドを使用 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-304">To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span></span></para>
          <para><span data-ttu-id="3286d-305">セルとメモのみをチェックするには、このメソッドをプロパティから返されるオブジェクトと一緒に使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-305">To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-306">オブジェクト全体をクリアします。</span><span class="sxs-lookup"><span data-stu-id="3286d-306">Clears the entire object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-307">指定されたセル範囲からすべてのコメントを消去します。</span><span class="sxs-lookup"><span data-stu-id="3286d-307">Clears all cell comments from the specified range.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-308">選択範囲から数式と文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-308">Clears the formulas from the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-309">このメソッドは、グラフからデータを消去しますが、書式設定は残ります。</span><span class="sxs-lookup"><span data-stu-id="3286d-309">This method clears the data from a chart but leaves the formatting.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-310">オブジェクトの書式設定をクリアします。</span><span class="sxs-lookup"><span data-stu-id="3286d-310">Clears the formatting of the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-311">指定された範囲からすべてのハイパーリンクを削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-311">Removes all hyperlinks from the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-312">指定した範囲でメソッドを呼び出すのは、[ホーム] タブの [編集] セクションの [クリア] ドロップダウン リストから [ハイパーリンクのクリア] コマンドを使用するのと <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> 同じです。ハイパーリンクだけが削除されます。テキストや書式設定など、他のすべてのセルの内容は影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="3286d-312">Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-313">指定されたセル範囲内のすべてのセルからコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-313">Clears notes and sound notes from all the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-314">指定した範囲のアウトラインを消去します。</span><span class="sxs-lookup"><span data-stu-id="3286d-314">Clears the outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-315">指定した範囲の最初の領域の最初の列の番号を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-315">Returns the number of the first column in the first area in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-316">列番号は、列 A のときは 1、列 B のときは 2 のように、数値で返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-316">Column A returns 1, column B returns 2, and so on.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="3286d-317">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-317">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-318">指定したセルと比較する単一セルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-318">A single cell to compare to the specified range.</span></span></param>
        <summary><span data-ttu-id="3286d-319">各列の比較セルと内容が異なるすべてのセルを表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-319">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-320">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の列を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-320">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-321">複数のセル範囲を含む <b>Range</b> オブジェクトに対してこのプロパティを使用すると、選択範囲の中で最初に選択した領域の列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-321">When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range.</span></span> <span data-ttu-id="3286d-322">たとえば <b>、Range</b> オブジェクトに A1:B2 と C3:D4 の 2 つの領域がある場合、このプロパティは 4 ではなく <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> 2 を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-322">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4.</span></span> <span data-ttu-id="3286d-323">複数の領域を含む可能性がある範囲でこのプロパティを使用するには、オブジェクトのプロパティをテストして、範囲に複数の領域が含まれているかどうかを <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 確認します。</span><span class="sxs-lookup"><span data-stu-id="3286d-323">To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area.</span></span> <span data-ttu-id="3286d-324">複数の領域が含まれている場合は、セル範囲の領域ごとにループします。</span><span class="sxs-lookup"><span data-stu-id="3286d-324">If it does, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-325">指定した範囲内のすべての列の幅を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-325">Returns or sets the width of all columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p155">列幅の単位は、標準スタイルの 1 文字分の幅に相当します。プロポーショナル フォントでは、数字の 0 の幅が列幅の単位になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-p155">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para><span data-ttu-id="3286d-328">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> を使用して、列の幅をポイント単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-328">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</span></span></para>
          <para><span data-ttu-id="3286d-329">対象セル範囲内のすべての列が同じ幅である場合、<b>ColumnWidth</b> プロパティはその値を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-329">If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width.</span></span> <span data-ttu-id="3286d-330">If columns in the range have different widths, this property returns <b>Null</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-330">If columns in the range have different widths, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-331">範囲の <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> 左上隅のセルに関連付けられているコメントを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources"><span data-ttu-id="3286d-332">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-332">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-333">統合元範囲を参照する、R1C1 形式の文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-333">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span></span> <span data-ttu-id="3286d-334">指定するセル参照には、必ず統合するシートのパスを含めます。</span><span class="sxs-lookup"><span data-stu-id="3286d-334">The references must include the full path of sheets to be consolidated.</span></span></param>
        <param name="Function"><span data-ttu-id="3286d-335">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-335">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="3286d-336">使用できる定数は、次に示す<b>XlConsilidationFunction</b>定数です<b>。xlAverage</b> <paramref name="default" /> <b>xlCount xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b></b><b>xlStDev xlStDevP</b><b>xlSum</b><b>xlVarP</b><b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-336">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TopRow"><span data-ttu-id="3286d-337">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-337">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-338"><b>True</b> 統合範囲の一番上の行の列タイトルに基づいてデータを統合します。 <b>False の</b> 位置でデータを統合します。</span><span class="sxs-lookup"><span data-stu-id="3286d-338"><b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="3286d-339">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-339">The default value is <b>False</b>.</span></span></param>
        <param name="LeftColumn"><span data-ttu-id="3286d-340">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-340">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-341"><b>True</b> 統合範囲の左列の行タイトルに基づいてデータを統合します。 <b>False の</b> 位置でデータを統合します。</span><span class="sxs-lookup"><span data-stu-id="3286d-341"><b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="3286d-342">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-342">The default value is <b>False</b>.</span></span></param>
        <param name="CreateLinks"><span data-ttu-id="3286d-343">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-343">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-344"><b>統合で</b>ワークシートリンクを使用する場合は True。データを統合コピーする場合は<b>False。</b></span><span class="sxs-lookup"><span data-stu-id="3286d-344"><b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span></span> <span data-ttu-id="3286d-345">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-345">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-346">複数のワークシートにある複数のセル範囲を、1 枚のワークシートの 1 つのセル範囲に統合します。</span><span class="sxs-lookup"><span data-stu-id="3286d-346">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="3286d-347">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-347">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-348">コピー先のセル範囲。</span><span class="sxs-lookup"><span data-stu-id="3286d-348">Specifies the new range to which the specified range will be copied.</span></span> <span data-ttu-id="3286d-349">この引数を省略すると、クリップボードにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-349">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="3286d-350">範囲を、指定の範囲またはクリップボードにコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-350">Copies the range to the specified range or to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="3286d-351">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-351">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-352">セル範囲にコピーする <b>Recordset</b> オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-352">The <b>Recordset</b> object to copy into the range.</span></span></param>
        <param name="MaxRows"><span data-ttu-id="3286d-353">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-353">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-354">ワークシートにコピーするレコードの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-354">The maximum number of records to copy onto the worksheet.</span></span> <span data-ttu-id="3286d-355">この引数を省略すると、<b>Recordset</b> オブジェクトのすべてのレコードをコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-355">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span></span></param>
        <param name="MaxColumns"><span data-ttu-id="3286d-356">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-356">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-357">ワークシートにコピーするフィールドの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-357">The maximum number of fields to copy onto the worksheet.</span></span> <span data-ttu-id="3286d-358">この引数を省略すると、<b>Recordset</b> オブジェクトのすべてのフィールドをコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-358">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span></span></param>
        <summary><span data-ttu-id="3286d-359">ADO オブジェクトまたは DAO <b>Recordset</b> オブジェクトの内容を、指定範囲の左上隅からワークシートにコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-359">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-360">Recordset オブジェクト <b>に OLE</b> オブジェクトが含まれるフィールドが含まれている場合、このメソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="3286d-360">If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</span></span></para>
          <para><span data-ttu-id="3286d-361">コピーは <b>Recordset</b> オブジェクトのカレント レコードの位置から行われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-361">Copying begins at the current row of the <b>Recordset</b> object.</span></span> <span data-ttu-id="3286d-362">コピーが完了すると、<b>Recordset</b> オブジェクトの <b>EOF</b> プロパティは <b>True</b> になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-362">After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="3286d-363">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="3286d-364">図をコピーする方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-364">Specifies how the picture should be copied.</span></span> <span data-ttu-id="3286d-365">使用できる定数は <b>、XlCopyPictureFormat</b> 定数である<b>xlBitmap</b><b>xlPicture です。</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="3286d-365">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span></span></param>
        <param name="Format"><span data-ttu-id="3286d-366">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-366">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="3286d-367">ピクチャの形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-367">The format of the picture.</span></span> <span data-ttu-id="3286d-368">使用できる定数は <b>、XlPictureAppearance</b> 定数である<b>xlPrinter です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-368">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span></span> <span data-ttu-id="3286d-369">図は印刷時と同じ方法でコピーされます。<b>xlScreen</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-369">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-370">ピクチャは画面の表示にできる限り近い形でコピーされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-370">The picture is copied to resemble its display on the screen as closely as possible.</span></span></param>
        <summary><span data-ttu-id="3286d-371">選択しているオブジェクトを図としてクリップボードにコピーします。</span><span class="sxs-lookup"><span data-stu-id="3286d-371">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-372">コレクション内にあるオブジェクトの数を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-372">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-373">指定された値の範囲の中で最大の値をカウントします。</span><span class="sxs-lookup"><span data-stu-id="3286d-373">Counts the largest value in a given Range of values.</span></span> <span data-ttu-id="3286d-374">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3286d-374">Read-only.</span></span></summary>
        <value><span data-ttu-id="3286d-375"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="3286d-375"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top"><span data-ttu-id="3286d-376">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-376">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-377">先頭行のラベルを使用して名前を作成するには、 <b>True</b> を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-377"><b>True</b> to create names by using labels in the top row.</span></span> <span data-ttu-id="3286d-378">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-378">The default value is <b>False</b>.</span></span></param>
        <param name="Left"><span data-ttu-id="3286d-379">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-379">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-380">左端列のラベルを使用して名前を作成するには、 <b>True</b> を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-380"><b>True</b> to create names by using labels in the left column.</span></span> <span data-ttu-id="3286d-381">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-381">The default value is <b>False</b>.</span></span></param>
        <param name="Bottom"><span data-ttu-id="3286d-382">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-382">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-383">最下行のラベルを使用して名前を作成するには、 <b>True</b> を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-383"><b>True</b> to create names by using labels in the bottom row.</span></span> <span data-ttu-id="3286d-384">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-384">The default value is <b>False</b>.</span></span></param>
        <param name="Right"><span data-ttu-id="3286d-385">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-385">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-386">右端列のラベルを使用して名前を作成するには、 <b>True</b> を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-386"><b>True</b> to create names by using labels in the right column.</span></span> <span data-ttu-id="3286d-387">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-387">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-388">シートの対象セル範囲内の文字列を使って、その指定された範囲の名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-388">Creates names in the specified range, based on text labels in the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-389">You don't specify one, <paramref name="Top" /> or , Microsoft Excel <paramref name="Left" /> <paramref name="Bottom" /> <paramref name="Right" /> guesses the location of the text labels, based on the shape of the specified range.</span><span class="sxs-lookup"><span data-stu-id="3286d-389">If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="3286d-390">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-390">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="3286d-391">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-391">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsPICT"><span data-ttu-id="3286d-392">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-392">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsBIFF"><span data-ttu-id="3286d-393">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-393">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsRTF"><span data-ttu-id="3286d-394">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-394">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsVALU"><span data-ttu-id="3286d-395">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-395">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="3286d-396">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span><span class="sxs-lookup"><span data-stu-id="3286d-396">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="3286d-397">このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-397">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-398">このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-398">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-399">指定したオブジェクトが Microsoft Excel で作成された場合、このプロパティは文字列 XCEL を返します。これは、16 進数の 5843454C に相当します。</span><span class="sxs-lookup"><span data-stu-id="3286d-399">If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="3286d-400"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="3286d-400">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="3286d-401">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="3286d-401">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-402">指定されたセルが配列の一部である場合は、配列全体を表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-402">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-403">現在の領域 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-403">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-404">現在の選択範囲は、空白の行と空白の列の任意の組み合わせで囲まれた範囲です。</span><span class="sxs-lookup"><span data-stu-id="3286d-404">The current region is a range bounded by any combination of blank rows and blank columns.</span></span></para>
          <para><span data-ttu-id="3286d-405">このプロパティは、メソッドなど、現在の領域全体を含む選択範囲を自動的に展開する多くの操作に便利 <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-405">This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="3286d-406">このプロパティは、保護されたワークシートでは使うことができません。</span><span class="sxs-lookup"><span data-stu-id="3286d-406">This property cannot be used on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="3286d-407">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-407">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-408">貼り付け先のセル範囲。</span><span class="sxs-lookup"><span data-stu-id="3286d-408">The range where the object should be pasted.</span></span> <span data-ttu-id="3286d-409">この引数を省略すると、クリップボードに貼り付けられます。</span><span class="sxs-lookup"><span data-stu-id="3286d-409">If this argument is omitted, the object is cut to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="3286d-410">オブジェクトを切り取り、クリップボードまたは指定された範囲に貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3286d-410">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-411">セル範囲を切り取るときは、連続しているセルを対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-411">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="3286d-412">対象がグラフのときは、埋め込みグラフのみを切り取ることができます。</span><span class="sxs-lookup"><span data-stu-id="3286d-412">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol"><span data-ttu-id="3286d-413">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-413">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-414">データ系列をそれぞれ行または列に入力するには <b>、xlRows</b> または <b>xlColumns</b> 定数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-414">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span></span> <span data-ttu-id="3286d-415">この引数を省略すると、指定範囲のサイズと図形が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-415">If this argument is omitted, the size and shape of the range is used.</span></span></param>
        <param name="Type"><span data-ttu-id="3286d-416">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-416">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span></span> <span data-ttu-id="3286d-417">使用できる定数は<b>、XlDataSeriesType</b>クラスの定数である<b>xlAutoFill</b><b>xlDataSeriesLinear</b> <paramref name="default" /> <b>xlChronological</b><b>xlGrowth です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-417">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span></span></param>
        <param name="Date"><span data-ttu-id="3286d-418">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-418">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span></span> <span data-ttu-id="3286d-419">引数 Type が <b>xlChronological の</b>場合 <b>、Date</b> 引数はステップ日付単位を示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-419">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span></span> <span data-ttu-id="3286d-420">使用できる定数は<b>、XlDataSeriesDate</b>クラスの定数である<b>xlDay</b> <paramref name="default" /> <b>xlWeekday</b><b>xlMonth</b><b>xlYear です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-420">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span></span></param>
        <param name="Step"><span data-ttu-id="3286d-421">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-422">連続データの増分値です。</span><span class="sxs-lookup"><span data-stu-id="3286d-422">The step value for the series.</span></span> <span data-ttu-id="3286d-423">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="3286d-423">The default value is 1.</span></span></param>
        <param name="Stop"><span data-ttu-id="3286d-424">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-425">連続データの停止値です。</span><span class="sxs-lookup"><span data-stu-id="3286d-425">The stop value for the series.</span></span> <span data-ttu-id="3286d-426">この引数を省略すると、対象セル範囲の終端まで繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-426">If this argument is omitted, Microsoft Excel fills to the end of the range.</span></span></param>
        <param name="Trend"><span data-ttu-id="3286d-427">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-428"><b>True の</b> 線形傾向または成長傾向を作成します。 <b>False 標準</b> のデータ系列を作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-428"><b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span></span> <span data-ttu-id="3286d-429">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-429">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-430">指定されたセル範囲に連続データを作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-430">Creates a data series in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="3286d-431">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-431">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-432">セルを削除した後で他のセルをどのようにシフトするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-432">Specifies how to shift cells to replace deleted cells.</span></span> <span data-ttu-id="3286d-433">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> <b>、xlShiftToLeft または</b> <b>xlShiftUp です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-433">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span></span> <span data-ttu-id="3286d-434">この引数を省略すると、セル範囲の形に応じてシフト方向が自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-434">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <summary><span data-ttu-id="3286d-435">オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-435">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-436">セルのすべての参照元を含む範囲を表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-437">複数の依存オブジェクトがある場合は、複数の選択範囲 <b>(Range</b> オブジェクトのユニオン) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-437">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="3286d-438"><b>Dependents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-438">The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-439">Excel 4.0 マクロ シートのダイアログ ボックス定義テーブルで定義されているダイアログ ボックスを表示して、選択されたコントロールのインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-439">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-440">このメソッドは、選択したコントロールの番号を返します。ユーザーが [キャンセル] ボタンをクリックした場合は <b>False</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-440">This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</span></span></para>
          <para><span data-ttu-id="3286d-441">返されるオブジェクトは、Microsoft Excel 4.0 マクロ シートのダイアログ ボックス定義テーブル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-441">The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-442">セルのすべての <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 直接参照元を含む範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-442">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-443">複数の依存オブジェクトがある場合は、複数の選択範囲 <b>(Range</b> オブジェクトのユニオン) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-443">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="3286d-444"><b>Direct Dependents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-444">The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-445">セルのすべての <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 直接参照元を含む範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-445">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-446"><b>DirectPrecedents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-446">The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-447">次の再計算が発生したときに再計算する範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-447">Designates a range to be recalculated when the next recalculation occurs.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-448">このメソッドは、再計算が必要と Microsoft Excel が理解するセルに対して、指定された <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> 範囲を強制的に再計算します。</span><span class="sxs-lookup"><span data-stu-id="3286d-448">The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</span></span></para>
          <para><span data-ttu-id="3286d-449">アプリケーションが手動計算モードの場合は、このメソッドを使用して、再計算する指定されたセルを <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> 識別するように Excel に指示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-449">If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated.</span></span> <span data-ttu-id="3286d-450">アプリケーションが自動再計算モードの場合、 <b>Dirty</b> メソッドを使用すると、再計算が行われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-450">If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-451">編集されたセル範囲内のすべての変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="3286d-451">Discards all changes in the edited cells of the range.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-452">OLAP データ ソースに基づく範囲の場合、このメソッドは、セルに入力されたすべての値と数式を削除し、更新操作を実行して、データ ソースから最新の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-452">For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source.</span></span> <span data-ttu-id="3286d-453">このメソッドは、編集された全値セルのデータ ソース値を null 参照 (Visual Basic では Nothing) に設定し、OLAP サーバーに対して ROLLBACK TRANSACTION ステートメントを実行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-453">It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server.</span></span> <span data-ttu-id="3286d-454">OLAP 以外のデータ ソースに基づく範囲の場合、このメソッドはすべての編集されたセルを削除するだけです。</span><span class="sxs-lookup"><span data-stu-id="3286d-454">For ranges based on non-OLAP data sources, this method simply clears all edited cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-455">指定した <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> 範囲の表示設定を表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-455">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></summary>
        <value><span data-ttu-id="3286d-456">指定 <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> 範囲の表示設定を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3286d-456">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="3286d-457">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3286d-457">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="3286d-458">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-458">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Option"><span data-ttu-id="3286d-459">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-459">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Name"><span data-ttu-id="3286d-460">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-460">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Reference"><span data-ttu-id="3286d-461">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-461">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="3286d-462">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-462">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ChartSize"><span data-ttu-id="3286d-463">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-463">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="3286d-464">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-464">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="3286d-465">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span><span class="sxs-lookup"><span data-stu-id="3286d-465">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="3286d-466">このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-466">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction"><span data-ttu-id="3286d-467">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-467">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span> <span data-ttu-id="3286d-468">移動する方向です。</span><span class="sxs-lookup"><span data-stu-id="3286d-468">The direction in which to move.</span></span></param>
        <summary><span data-ttu-id="3286d-469">ソース範囲を含む領域の末尾にあるセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-469">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-470">End + 上方向キー、End + 下方向キー、End + 左方向キー、End + 右方向キーのいずれかを押す操作と同等です。</span><span class="sxs-lookup"><span data-stu-id="3286d-470">Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-471">指定された範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む列全体を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-471">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-472">指定された範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む行全体を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-472">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-473">ユーザーがエラー チェック オプションにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3286d-473">Allows the user to access error checking options.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-474">オブジェクトを <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> 参照して、エラー チェック オプションに関連付けられているインデックス値の一覧を表示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-474">Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="3286d-475">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> エクスポートするファイル形式の種類。</span><span class="sxs-lookup"><span data-stu-id="3286d-475">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="3286d-476">オプション <b>オブジェクト</b> 保存するファイルのファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-476">Optional <b>Object</b> The file name of the file to be saved.</span></span> <span data-ttu-id="3286d-477">完全なパスを含めるか、short_Excel2007フォルダーにファイルを保存できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-477">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="3286d-478">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-478">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="3286d-479">発行されたファイルの品質を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-479">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="3286d-480">オプション <b>の Object</b> set to <b>True</b> to include the document properties;それ以外の場合 <b>は False です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-480">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="3286d-481">発行 <b>時に</b> 設定された <b>印刷領域</b> を無視する場合は、オプションのオブジェクトを True に設定します。それ以外の場合 <b>は False です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-481">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="3286d-482">Optional <b>Object</b> 発行を開始するページの番号。</span><span class="sxs-lookup"><span data-stu-id="3286d-482">Optional <b>Object</b> The number of the page at which to start publishing.</span></span> <span data-ttu-id="3286d-483">この引数を省略すると、先頭のページから発行が開始されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-483">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="3286d-484">Optional <b>Object</b> The number of the last page to publish.</span><span class="sxs-lookup"><span data-stu-id="3286d-484">Optional <b>Object</b> The number of the last page to publish.</span></span> <span data-ttu-id="3286d-485">この引数を省略すると、最後のページまで発行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-485">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="3286d-486">公開<b>後に</b><b>ファイルをビューアー</b>に表示するには、オプションのオブジェクトを True に設定します。それ以外の場合<b>は False です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-486">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="3286d-487">FixedFormatExt クラスへのオプション<b>のオブジェクト</b>ポインター。 <b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-487">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="3286d-488">指定された形式のファイルにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="3286d-488">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-p192">この方法は、固定形式のファイルにエクスポートするためのアドインの初期化にも対応しています。たとえば、コンバーターが存在する場合は、Excel はファイル形式を変換します。通常は、ユーザーが変換を開始します。</span><span class="sxs-lookup"><span data-stu-id="3286d-p192">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-492">指定されたセル範囲の上端のセルを下方向のセル範囲に複写します。</span><span class="sxs-lookup"><span data-stu-id="3286d-492">Fills down from the top cell or cells in the specified range to the bottom of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-493">セル範囲の上端の行のセルの内容と書式がセル範囲中のほかのセルに複写されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-493">The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-494">指定されたセル範囲の右端のセルを左方向のセル範囲に複写します。</span><span class="sxs-lookup"><span data-stu-id="3286d-494">Fills left from the rightmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-495">セル範囲の右端の列のセルの内容と書式がセル範囲中のほかのセルに複写されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-495">The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-496">指定されたセル範囲の左端のセルを右方向のセル範囲に複写します。</span><span class="sxs-lookup"><span data-stu-id="3286d-496">Fills right from the leftmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-497">セル範囲の左端の列のセルの内容と書式がセル範囲中のほかのセルに複写されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-497">The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-498">指定されたセル範囲の下端のセルを上方向のセル範囲に複写します。</span><span class="sxs-lookup"><span data-stu-id="3286d-498">Fills up from the bottom cell or cells in the specified range to the top of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-499">セル範囲の下端の行のセルの内容と書式がセル範囲中のほかのセルに複写されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-499">The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="3286d-500">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-500">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-501">検索するデータです。</span><span class="sxs-lookup"><span data-stu-id="3286d-501">The data to search for.</span></span> <span data-ttu-id="3286d-502">指定できるのは、文字列、または任意の Microsoft Excel のデータ型です。</span><span class="sxs-lookup"><span data-stu-id="3286d-502">Can be a string or any Microsoft Excel data type.</span></span></param>
        <param name="After"><span data-ttu-id="3286d-503">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-504">このセルの後から検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="3286d-504">The cell after which you want the search to begin.</span></span> <span data-ttu-id="3286d-505">これは、ユーザー インターフェイスから検索が実行されたときにアクティブなセルの場所に対応しています。</span><span class="sxs-lookup"><span data-stu-id="3286d-505">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="3286d-506">After は <b>範囲内</b> の 1 つのセルである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-506">Note that <b>After</b> must be a single cell in the range.</span></span> <span data-ttu-id="3286d-507">検索は、このセルを開始します。指定されたセルは、メソッドがこのセルに折り返し戻るまで <paramref name="after" /> 検索されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-507">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="3286d-508">この引数を指定しない場合は、範囲の左上隅のセルの後から検索が開始されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-508">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <param name="LookIn"><span data-ttu-id="3286d-509">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-510">情報の種類。</span><span class="sxs-lookup"><span data-stu-id="3286d-510">The type of information.</span></span></param>
        <param name="LookAt"><span data-ttu-id="3286d-511">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-511">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-512">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> <b>、xlWhole</b> または <b>xlPart です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-512">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="3286d-513">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-513">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-514">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> <b>、xlByRows</b> または <b>xlByColumns です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-514">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="SearchDirection"><span data-ttu-id="3286d-515">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-515">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span></span> <span data-ttu-id="3286d-516">検索の方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-516">The search direction.</span></span> <span data-ttu-id="3286d-517">使用できる定数は、次に示す XlSearchDirection 定数です<b>。xlNext</b> <paramref name="default" /> <b>xlPrevious</b></span><span class="sxs-lookup"><span data-stu-id="3286d-517">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span></span></param>
        <param name="MatchCase"><span data-ttu-id="3286d-518">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-519">大文字と小文字を区別するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-519"><b>True</b> to make the search case sensitive.</span></span> <span data-ttu-id="3286d-520">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-520">The default value is <b>False</b>.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="3286d-521">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-521">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-522">2 バイト言語サポートを選択またはインストールした場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-522">Used only if you’ve selected or installed double-byte language support.</span></span> <span data-ttu-id="3286d-523"><b>True を</b> 指定すると、2 バイト文字が 2 バイト文字のみ一致します。 <b>False</b> を指定すると、2 バイト文字が 1 バイトの文字と一致します。</span><span class="sxs-lookup"><span data-stu-id="3286d-523"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="3286d-524">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-524">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-525">検索の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-525">The search format.</span></span></param>
        <summary><span data-ttu-id="3286d-526">範囲内の特定の情報を検索し、その情報が見つかった最初のセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-526">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-527">一致するデータが見つからなかった場合、このメソッドは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-527">This method returns <b>Nothing</b> if no match is found.</span></span></para>
          <para><span data-ttu-id="3286d-528">このメソッドは、選択範囲やアクティブ セルには影響を与えかねない。</span><span class="sxs-lookup"><span data-stu-id="3286d-528">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="3286d-529">, <paramref name="LookIn" /> , <paramref name="LookAt" /> の設定 <paramref name="SearchOrder" /> は <paramref name="MatchByte" /> 、このメソッドを使用する度に保存されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-529">The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="3286d-530">次にメソッドを呼び出す時にこれらの引数の値を指定しない場合は、保存された値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-530">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="3286d-531">これらの引数を設定すると、[検索] ダイアログ ボックスの設定が変更され、また、[検索] ダイアログ ボックスで設定を変更すると、引数を省略した場合に使用される保存された値が変更されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-531">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="3286d-532">問題を回避するには、このメソッドを使用するたびに、これらの引数を明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-532">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para><span data-ttu-id="3286d-533">このメソッドとメソッド <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> を <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> 使用して、検索を繰り返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-533">You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</span></span></para>
          <para><span data-ttu-id="3286d-p203">検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</span><span class="sxs-lookup"><span data-stu-id="3286d-p203">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para><span data-ttu-id="3286d-536">より複雑なパターンに一致するセルを見つけるには、<b>For Each...Next</b> ステートメントを <b>Like</b>演算子と共に使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-536">To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="3286d-537">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-537">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-538">指定したセルの下方 (行のときは右、列のときは下) のセルから検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="3286d-538">The cell after which you want to search.</span></span> <span data-ttu-id="3286d-539">検索がユーザー インターフェイスから実行されるときは、ワークシート上で検索を行う場合のアクティブ セルに相当します。</span><span class="sxs-lookup"><span data-stu-id="3286d-539">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="3286d-540">範囲内の <paramref name="After" /> 1 つのセルである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-540">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="3286d-541">検索は、このセルを開始します。指定されたセルは、メソッドがこのセルに折り返し戻るまで <paramref name="after" /> 検索されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-541">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="3286d-542">この引数を指定しない場合は、範囲の左上隅のセルの後から検索が開始されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-542">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <summary><span data-ttu-id="3286d-543">メソッドで開始された検索を続行 <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-543">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-544">同じ条件に一致する次のセルを検索し、そのセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-544">Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="3286d-545">このメソッドは、選択範囲やアクティブ セルには影響を与えかねない。</span><span class="sxs-lookup"><span data-stu-id="3286d-545">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="3286d-p205">検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</span><span class="sxs-lookup"><span data-stu-id="3286d-p205">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="3286d-548">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-548">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-549">指定したセルの上方 (行のときは左、列のときは上) のセルから検索を開始します。</span><span class="sxs-lookup"><span data-stu-id="3286d-549">The cell before which you want to search.</span></span> <span data-ttu-id="3286d-550">ワークシート上で検索を行う場合のアクティブ セルに相当します。</span><span class="sxs-lookup"><span data-stu-id="3286d-550">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="3286d-551">範囲内の <paramref name="After" /> 1 つのセルである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-551">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="3286d-552">検索は、このセルを開始します。指定されたセルは、メソッドがこのセルに折り返し戻るまで <paramref name="before" /> 検索されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-552">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="3286d-553">この引数を指定しない場合は、範囲内の左上のセルの前から検索が開始されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-553">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span></span></param>
        <summary><span data-ttu-id="3286d-554">メソッドで開始された検索を続行 <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-554">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-555">同じ条件に一致する前のセルを検索し、そのセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-555">Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="3286d-556">このメソッドは、選択範囲またはアクティブ セルに影響を与える影響を受け取らない。</span><span class="sxs-lookup"><span data-stu-id="3286d-556">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="3286d-p207">検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</span><span class="sxs-lookup"><span data-stu-id="3286d-p207">When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-559">TRUE は、Excel のフラッシュフィル機能が有効で、アクティブになっていることを示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-559">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-560">指定した <see cref="T:Microsoft.Office.Interop.Excel.Font" /> オブジェクトのフォントを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-561">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> のすべての条件付き書式を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-561">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-562">A1 スタイルの表記では、マクロの言語では、オブジェクトの数式を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-562">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-563">OLAP データ ソースでは、このプロパティを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-563">This property is not available for OLAP data sources.</span></span></para>
          <para><span data-ttu-id="3286d-p208">セルに定数が入力されているときは、このプロパティはその定数を返します。セルが空のときは、この <b>Formula</b> プロパティは空の文字列を返します。セルが空のときは、<b>Formula</b> プロパティは、数式バーでの表示と同じ形式で、等号を含む数式を文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-p208">If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="3286d-p209">セルの値または数式に日付を設定すると、Excel はそのセルに日付書式または時刻書式が既に設定されているかどうかをチェックします。書式が設定されていないときは、数値書式は標準の日付の短い形式になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-p209">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span></span></para>
          <para><span data-ttu-id="3286d-569">範囲が 1 次元または 2 次元の範囲である場合は、同じ次元の配列に数式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-569">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="3286d-570">同様に、数式を Basic 配列に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-570">Similarly, you can put the formula into a Basic array.</span></span></para>
          <para><span data-ttu-id="3286d-571">セル範囲に数式を設定すると、範囲内のすべてのセルにその数式が入ります。</span><span class="sxs-lookup"><span data-stu-id="3286d-571">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-572">範囲の配列数式を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-572">Returns or sets the array formula of a range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-573">このプロパティは、1 つの数式または配列を返します (または設定できます)。</span><span class="sxs-lookup"><span data-stu-id="3286d-573">This property returns (or can be set to) a single formula or an array.</span></span></para>
          <para><span data-ttu-id="3286d-574">指定した範囲に配列数式が含まれている場合、このプロパティは Null を返 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-574">If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</span></span></para>
          <para><span data-ttu-id="3286d-575">このプロパティを使用して配列数式を入力する場合、数式は A1 参照スタイルではなく R1C1 参照スタイルを使用する必要があります (2 番目の例を参照)。</span><span class="sxs-lookup"><span data-stu-id="3286d-575">If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-576">ワークシートが保護されているときに数式が非表示になるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-576">Determines if the formula will be hidden when the worksheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-577">ワークシートが保護 <b>されているときに</b> 数式が非表示になる場合、このプロパティは True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-577">This property returns <b>True</b> if the formula will be hidden when the worksheet is protected.</span></span> <span data-ttu-id="3286d-578">指定した範囲<b>に、FormulaHidden</b>が<b>True</b>のセルと<b>、FormulaHidden</b>が<b></b>False に等しいセルが含まれている場合は Null を返<b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-578">It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span></span></para>
          <para><span data-ttu-id="3286d-579">このプロパティとプロパティを混同 <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> して使用してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-579">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="3286d-580">ブックが保護され、ワークシートが保護されていない場合、数式は非表示ではなく、ワークシートが保護されている場合にのみ非表示になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-580">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-581">指定した範囲の数式ラベルの種類を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-581">Returns or sets the formula label type for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-582">範囲にラベルが含まれている場合、このプロパティの戻り値は <b>xlNone、</b> または次の <b>XlFormulaLabel</b> 定数のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-582">The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-583">
                <b>xlColumnLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-583">
                <b>xlColumnLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-584">
                <b>xlMixedLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-584">
                <b>xlMixedLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-585">
                <b>xlNoLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-585">
                <b>xlNoLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-586">
                <b>xlRowLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-586">
                <b>xlRowLabels</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-587">指定したオブジェクトの数式を A1 参照形式で、コード実行時の言語で示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-587">Returns or sets the formula for the object, using A1-style references in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p213">セルに定数が含まれている場合、その定数がそのまま返されます。セルが空の場合、空の文字列が返されます。セルに数式が含まれる場合、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p213">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="3286d-p214">セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p214">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="3286d-593">範囲が 1 次元または 2 次元の範囲である場合は、同じ次元の配列に数式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-593">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="3286d-594">同様に、数式を配列に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-594">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="3286d-595">セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-595">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-596">指定されたオブジェクトの数式を R1C1 参照形式で、コード実行時の言語で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-596">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p216">セルに定数が含まれているときには、その定数がそのまま返されます。セルが空のときには、空の文字列が返されます。セルに数式が含まれるときには、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p216">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="3286d-p217">セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p217">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="3286d-602">範囲が 1 次元または 2 次元の範囲である場合は、同じ次元の配列に数式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-602">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="3286d-603">同様に、数式を配列に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-603">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="3286d-604">セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-604">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-605">指定したオブジェクトの数式を R1C1 参照形式で、コード実行時の言語で示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-605">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p219">セルに定数が含まれている場合、その定数がそのまま返されます。セルが空の場合、空の文字列が返されます。セルに数式が含まれる場合、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p219">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="3286d-p220">セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p220">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="3286d-611">範囲が 1 次元または 2 次元の範囲である場合は、同じ次元の配列に数式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-611">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="3286d-612">同様に、数式を配列に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-612">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="3286d-613">セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-613">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-614">選択されたセル範囲の左上端のセルで関数ウィザードを起動します。</span><span class="sxs-lookup"><span data-stu-id="3286d-614">Starts the Function Wizard for the upper-left cell of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal"><span data-ttu-id="3286d-615">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-615">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-616">セルに返される必要のある目標値を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-616">The value you want returned in this cell.</span></span></param>
        <param name="ChangingCell"><span data-ttu-id="3286d-617">必須 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-617">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="3286d-618">目標値を達成するために変更するセル (Range オブジェクト) を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-618">Specifies which cell should be changed to achieve the target value.</span></span></param>
        <summary><span data-ttu-id="3286d-619">対象セルに入力されている数式の結果が指定された値になるまで、その数式で変数として指定されているセルの値を変えて計算します。</span><span class="sxs-lookup"><span data-stu-id="3286d-619">Calculates the values necessary to achieve a specific goal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-620">数式が返す値の目標値を設定すると、その数式が目標値を返すために必要な変数の値を算出します。</span><span class="sxs-lookup"><span data-stu-id="3286d-620">If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</span></span></para>
          <para><span data-ttu-id="3286d-621">このメソッドは、目標 <b>シーク</b> が成功した場合に True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-621">This method returns <b>True</b> if the goal seek is successful.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="3286d-622">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-622">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-623">グループ化する最初の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-623">The first value to be grouped.</span></span> <span data-ttu-id="3286d-624">この引数を省略するか、<b>True</b> を指定すると、フィールドの最初の値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-624">If this argument is omitted or <b>True</b>, the first value in the field is used.</span></span></param>
        <param name="End"><span data-ttu-id="3286d-625">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-625">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-626">グループ化する最後の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-626">The last value to be grouped.</span></span> <span data-ttu-id="3286d-627">この引数を省略するか、<b>True</b> を指定すると、フィールドの最後の値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-627">If this argument is omitted or <b>True</b>, the last value in the field is used.</span></span></param>
        <param name="By"><span data-ttu-id="3286d-628">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-628">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-629">フィールドが数値の場合は、この引数でグループごとのサイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-629">If the field is numeric, this argument specifies the size of each group.</span></span> <span data-ttu-id="3286d-630">フィールドが日付の場合、配列の要素 4 が True で、他のすべての要素が False の場合、この引数は各グループの日数 <paramref name="Periods" /> を指定<b>します</b>。 <b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-630">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span></span> <span data-ttu-id="3286d-631">それ以外の場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-631">Otherwise, this argument is ignored.</span></span> <span data-ttu-id="3286d-632">この引数を省略すると、Microsoft Excel は自動的に既定のグループ サイズを選択します。</span><span class="sxs-lookup"><span data-stu-id="3286d-632">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span></span></param>
        <param name="Periods"><span data-ttu-id="3286d-633">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-633">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-634">次の表に示すように、グループの期間を指定するブール値の配列。配列内の要素が <b>True</b>の場合、対応する時間のグループが作成されます。要素が False の <b>場合</b>、グループは作成されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-634">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span></span> <span data-ttu-id="3286d-635">フィールドが日付フィールドではない場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-635">If the field isn’t a date field, this argument is ignored.</span></span></param>
        <summary><span data-ttu-id="3286d-636">オブジェクトがピボットテーブル フィールドのデータ範囲内の単一のセルを表す場合、Group メソッドは、そのフィールドで数値または日付ベースのグループ化を <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 実行します。 <b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-636">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-637"><b>Range オブジェクト</b>は、ピボットテーブル フィールドのデータ範囲内の 1 つのセルである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-637">The <b>Range</b> object must be a single cell in the PivotTable field’s data range.</span></span> <span data-ttu-id="3286d-638">このメソッドを複数のセルに適用しようとすると失敗しますが、エラー メッセージは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-638">If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-639">指定したセルが配列数式の一部かどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="3286d-639">Determines if the specified cell is part of an array formula.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-640">指定したセルが <b>配列数式</b> の一部である場合、このプロパティは True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-640">This property returns <b>True</b> if the specified cell is part of an array formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-641">範囲内のすべてのセルに数式が含まれているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-641">Determines if all cells in the range contain formulas.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-642">このプロパティは、範囲内のすべてのセルに数式が含まれている場合は <b>True</b> を返し、範囲内のセルに数式が含まれている場合は <b>False</b> を返し、それ以外の場合は <b>Null</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-642">This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-643">範囲の高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-643">The height of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-644">行または列が非表示かどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-644">Determines if the rows or columns are hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-645">行または列が非表示 <b>の場合、この</b> プロパティは True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-645">This property returns <b>True</b> if the rows or columns are hidden.</span></span> <span data-ttu-id="3286d-646">列全体または行全体を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-646">The specified range must span an entire column or row.</span></span></para>
          <para><span data-ttu-id="3286d-647">このプロパティをプロパティと混同 <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> して使用してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-647">Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-648">指定したオブジェクトの水平方向の配置を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-648">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-649">範囲の <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> ハイパーリンクを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-649">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-650">ページを Web ページとして保存するときに、指定したセルの識別ラベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-650">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-651">ID ラベルは、別の HTML ドキュメントや同じ Web ページでハイパーリンクの参照先として使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-651">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-652">セルまたはセル範囲のインデント レベルを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-652">Returns or sets the indent level for the cell or range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-653">インデント レベルには、0 ~ 15 の整数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-653">The indent level can be an integer from 0 to 15.</span></span></para>
          <para><span data-ttu-id="3286d-654">インデントのレベルに 0 未満または 15 を超える値を設定すると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3286d-654">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="3286d-655">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-656">セルをシフトする方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-656">Specifies which way to shift the cells.</span></span> <span data-ttu-id="3286d-657">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> <b>、xlShiftToRight</b> または <b>xlShiftDown です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-657">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span></span> <span data-ttu-id="3286d-658">この引数を省略すると、セル範囲の形に応じてシフト方向が自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-658">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <param name="CopyOrigin"><span data-ttu-id="3286d-659">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-659">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-660">コピー元を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-660">The copy origin.</span></span></param>
        <summary><span data-ttu-id="3286d-661">ワークシートまたはマクロ シートの指定された範囲に、空白のセルまたはセル範囲を挿入します。指定された範囲にあったセルはシフトされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-661">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount"><span data-ttu-id="3286d-662">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-662">Required <b>Integer</b>.</span></span> <span data-ttu-id="3286d-663">現在のインデントに追加するレベルを指定します。インデントのレベルの範囲は 0 ～ 15 です。</span><span class="sxs-lookup"><span data-stu-id="3286d-663">The amount to be added to the current indent.</span></span></param>
        <summary><span data-ttu-id="3286d-664">指定した範囲のインデントを変更します。</span><span class="sxs-lookup"><span data-stu-id="3286d-664">Adds an indent to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-665">インデントのレベルに 0 未満または 15 を超える値を設定し、このメソッドを実行するとエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3286d-665">Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para><span data-ttu-id="3286d-666">範囲の <b /> <see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> インデント レベルを取得するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-666">Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-667">指定した <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> オブジェクトの内部を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-667">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex"><span data-ttu-id="3286d-668">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-668">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-669">左から右に、次に上から下に数えて、アクセスするセルのインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-669">The index number of the cell you want to access, in order from left to right, then down.</span></span> <span data-ttu-id="3286d-670">Range.Item(1) は、範囲内の左上のセルを返します。Range.Item(2) は、左上のセルの右にあるセルを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-670">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span></span></param>
        <param name="ColumnIndex"><span data-ttu-id="3286d-671">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-671">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-672">範囲の最初の列を 1 または "A" として、アクセスするセルの列番号を示す数字または列文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-672">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span></span></param>
        <summary><span data-ttu-id="3286d-673">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> へのオフセット位置にある範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-674">引数 <paramref name="RowIndex" /> と <paramref name="ColumnIndex" /> 引数は相対オフセットです。</span><span class="sxs-lookup"><span data-stu-id="3286d-674">The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets.</span></span> <span data-ttu-id="3286d-675">つまり、1 を指定すると、ワークシートの最初の行ではなく、範囲の最初の <paramref name="RowIndex" /> 行のセルが返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-675">In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-676">対象セル範囲内の文字列を、そのセル範囲に合わせて割り付けます。</span><span class="sxs-lookup"><span data-stu-id="3286d-676">Rearranges the text in a range so that it fills the range evenly.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-677">セル範囲の大きさが不十分なときは、下のセルに文字列を上書きするかどうかを確認するメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-677">If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range.</span></span> <span data-ttu-id="3286d-678">[OK] をクリックすると、文字の割り付けが行われた結果、対象セル範囲外のセル範囲の内容が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-678">If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range.</span></span> <span data-ttu-id="3286d-679">このメッセージが表示されるのを防ぐには、プロパティを False <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> に設定 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-679">To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="3286d-680">このように設定すると、対象セル範囲が小さい場合には、対象セル範囲外のセルの内容が自動的に上書きされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-680">After you set this property, text will always replace the contents in cells below the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-681">列 A の左側から範囲の左側までの距離を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-681">The distance from the left edge of column A to the left edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p237">セル範囲が連続していない場合は、先頭の領域が使われます。複数の列を含む範囲の場合は、範囲内で最も左に位置する列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p237">If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</span></span></para>
          <para><span data-ttu-id="3286d-684">ウィンドウが最大化されている場合、このプロパティはウィンドウ枠の幅に基づいて変化する負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-684">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="3286d-685">このプロパティを 0 (ゼロ) に設定すると、アプリケーション ウィンドウが最大化されている場合よりもウィンドウが小さくて少し小さになります。</span><span class="sxs-lookup"><span data-stu-id="3286d-685">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="3286d-686">つまり、このプロパティが 0 (ゼロ) の場合、メインの Microsoft Excel ウィンドウの左罫線は画面にはほとんど表示されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-686">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-687">指定したセル範囲内の見出し行の数を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-687">Returns the number of header rows for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-688">このプロパティを使用する前に、この <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> プロパティを使用して範囲の境界を検索します。</span><span class="sxs-lookup"><span data-stu-id="3286d-688">Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-689">範囲内の最初のセルから始まる、表示されている名前の一覧をワークシートに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3286d-689">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-690">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> を使用して、ワークシート上のすべての名前のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-690">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-691">オブジェクトまたは <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> オブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-691">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-692">指定した範囲の左上隅を含むレポートの部分を表す定数 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-692">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-693">
            <b>XlLocationInTable</b> には、次の定数 <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-693">
            <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-694">
                <b>xlRowHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-694">
                <b>xlRowHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-695">
                <b>xlColumnHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-695">
                <b>xlColumnHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-696">
                <b>xlPageHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-696">
                <b>xlPageHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-697">
                <b>xlDataHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-697">
                <b>xlDataHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-698">
                <b>xlRowItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-698">
                <b>xlRowItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-699">
                <b>xlColumnItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-699">
                <b>xlColumnItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-700">
                <b>xlPageItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-700">
                <b>xlPageItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-701">
                <b>xlDataItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-701">
                <b>xlDataItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-702">
                <b>xlTableBody</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-702">
                <b>xlTableBody</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-703">オブジェクトがロックされているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-703">Determines if the object is locked.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-704">このプロパティは、オブジェクトがロックされている場合は <b>True</b> を返します <b>。False</b> の場合、シートが保護されているときにオブジェクトを変更できます。指定した範囲にロックされたセルとロック解除されたセルの両方が含まれている場合は <b>Null</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-704">This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-705">指定されたオブジェクトの MDX 名を返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-705">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="3286d-706">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3286d-706">Read-only.</span></span></summary>
        <value><span data-ttu-id="3286d-707">String</span><span class="sxs-lookup"><span data-stu-id="3286d-707">String</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across"><span data-ttu-id="3286d-708">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-708">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-709">指定した範囲のセルを行ごとに結合して、行ごとに別のセルを作成する場合は  <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-709"><b>True</b> to merge cells in each row of the specified range as separate merged cells.</span></span> <span data-ttu-id="3286d-710">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-710">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-711">指定したオブジェクトから結合されたセルを作成 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-711">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-712">結合されたセルには、対象のセル範囲の左上端のセルの値が入ります。</span><span class="sxs-lookup"><span data-stu-id="3286d-712">The value of a merged range is specified in the cell of the range's upper-left corner.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-713">指定したセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む結合範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-713">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-714">指定したセルが結合範囲に含まれる場合、このプロパティは指定されたセルを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-714">If the specified cell isn’t in a merged range, this property returns the specified cell.</span></span></para>
          <para><span data-ttu-id="3286d-715"><b>MergeArea</b> プロパティは単一セル範囲でのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="3286d-715">The <b>MergeArea</b> property only works on a single-cell range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-716">範囲またはスタイルに結合されたセルが含まれているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-716">Determines if the range or style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-717">範囲または <b>スタイルに結合</b> されたセルが含まれている場合、このプロパティはTrue を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-717">This property returns <b>True</b> if the range or style contains merged cells.</span></span></para>
          <para><span data-ttu-id="3286d-718">結合されたセルが含まれるセル範囲を選択すると、指定したセル範囲と実際のセル範囲が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-718">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="3286d-719">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> を使用して、選択した範囲のアドレスを確認します。</span><span class="sxs-lookup"><span data-stu-id="3286d-719">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-720">オブジェクトの名前を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-720">Returns or sets the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-721">Range オブジェクトの <b>名前</b> はオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Name" /> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-721">The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span></span> <span data-ttu-id="3286d-722">他のすべての種類のオブジェクトの場合、名前は <b>文字列です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-722">For every other type of object, the name is a <b>String</b>.</span></span></para>
          <para><span data-ttu-id="3286d-723">OLAP データ ソースの一意な名前が "[都道府県].[東京都].[東京]"、OLAP 以外のデータ ソースのアイテム名が "東京" とされた場合、<b>Name</b> プロパティ、および関連するプロパティの値を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-723">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="3286d-724">Caption</span><span class="sxs-lookup"><span data-stu-id="3286d-724">Caption</span></span></term>
              <description><span data-ttu-id="3286d-725">東京</span><span class="sxs-lookup"><span data-stu-id="3286d-725">Paris</span></span></description>
              <description><span data-ttu-id="3286d-726">東京</span><span class="sxs-lookup"><span data-stu-id="3286d-726">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-727">名前</span><span class="sxs-lookup"><span data-stu-id="3286d-727">Name</span></span></term>
              <description><span data-ttu-id="3286d-728">[都道府県].[東京都].[東京] (読み取り専用)</span><span class="sxs-lookup"><span data-stu-id="3286d-728">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="3286d-729">東京</span><span class="sxs-lookup"><span data-stu-id="3286d-729">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-730">SourceName</span><span class="sxs-lookup"><span data-stu-id="3286d-730">SourceName</span></span></term>
              <description><span data-ttu-id="3286d-731">[都道府県].[東京都].[東京] (読み取り専用)</span><span class="sxs-lookup"><span data-stu-id="3286d-731">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="3286d-732">(SQL プロパティと同じ値、読み取り専用)</span><span class="sxs-lookup"><span data-stu-id="3286d-732">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-733">値</span><span class="sxs-lookup"><span data-stu-id="3286d-733">Value</span></span></term>
              <description><span data-ttu-id="3286d-734">[都道府県].[東京都].[東京] (読み取り専用)</span><span class="sxs-lookup"><span data-stu-id="3286d-734">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="3286d-735">東京</span><span class="sxs-lookup"><span data-stu-id="3286d-735">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="3286d-736">コレクションにインデックスを指定する場合は、次の表 <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> に示す構文を使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-736">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="3286d-737">式を使用します。PivotItems("[Europe].[フランス]。[パリ]")</span><span class="sxs-lookup"><span data-stu-id="3286d-737">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="3286d-738">式を使用します。PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="3286d-738">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="3286d-739">このプロパティを使用してコレクションの特定のメンバーを参照する場合は、次の表に示すように、テキスト インデックス <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> 名を使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-739">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="3286d-740">[ヨーロッパ].[フランス].[パリ]</span><span class="sxs-lookup"><span data-stu-id="3286d-740">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="3286d-741">東京</span><span class="sxs-lookup"><span data-stu-id="3286d-741">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent"><span data-ttu-id="3286d-742">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-742">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-743">移動する方向を指定します <b>。True</b> を指定すると、参照先に移動します。 <b>False に</b> 依存する方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="3286d-743">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span></span></param>
        <param name="ArrowNumber"><span data-ttu-id="3286d-744">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-744">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-745">対象となるトレース矢印の番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-745">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span></span></param>
        <param name="LinkNumber"><span data-ttu-id="3286d-746">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-746">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-747">トレース矢印が外部参照を表すとき、この引数でどの外部参照を対象とするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-747">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span></span> <span data-ttu-id="3286d-748">この引数を省略すると、最初の外部参照を指定したことになります。</span><span class="sxs-lookup"><span data-stu-id="3286d-748">If this argument is omitted, the first external reference is followed.</span></span></param>
        <summary><span data-ttu-id="3286d-749">指定されたセル範囲のトレース矢印をたどって、参照元のセル、参照先のセル、またはエラーの発生したセル (セル範囲) へ移動します。</span><span class="sxs-lookup"><span data-stu-id="3286d-749">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-750">参照元、参照先、またはエラーのセルを選択し、新しい選択範囲を表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-750">Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection.</span></span> <span data-ttu-id="3286d-751">指定されたセルにトレース矢印が表示されていないときは、エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-751">This method causes an error if it's applied to a cell without visible tracer arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-752">次のセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-752">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-753">このプロパティは TAB キーをエミュレートしますが、このプロパティは選択せずに次のセルを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-753">This property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="3286d-p247">保護されたシートでは、ロックされていないセルの中から、次のセルを返します。保護されていないシートでは、指定したセルの右隣のセルを常に返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-p247">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="3286d-756">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-756">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-757">コメントに追加する、半角で 255 文字までの文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-757">The text to add to the note (up to 255 characters).</span></span> <span data-ttu-id="3286d-758">テキストは、既存のメモの文字を置き換え、位置から <paramref name="Start" /> <paramref name="Length" /> 挿入されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-758">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span></span> <span data-ttu-id="3286d-759">この引数を省略した場合、このメソッドは文字の位置から始まるメモの現在のテキスト <paramref name="Start" /> を返 <paramref name="Length" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-759">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span></span></param>
        <param name="Start"><span data-ttu-id="3286d-760">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-760">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-761">設定または取得するテキストの開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-761">The starting position for the text that’s set or returned.</span></span> <span data-ttu-id="3286d-762">この引数を省略すると、最初の文字から設定または取得を開始します。</span><span class="sxs-lookup"><span data-stu-id="3286d-762">If this argument is omitted, this method starts at the first character.</span></span> <span data-ttu-id="3286d-763">コメントに文字列を追加するには、既存のコメントの文字数を超える値を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-763">To append text to the note, specify a number larger than the number of characters in the existing note.</span></span></param>
        <param name="Length"><span data-ttu-id="3286d-764">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-764">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-765">設定または取得する文字数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-765">The number of characters to be set or returned.</span></span> <span data-ttu-id="3286d-766">この引数を省略すると、半角で 255 文字を上限として、コメントの開始位置から終了位置までの文字列を設定または取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-766">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span></span> <span data-ttu-id="3286d-767">メモの末尾から末尾まで 255 文字を超える文字がある場合、このメソッドは <paramref name="Start" /> 255 文字のみを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-767">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span></span></param>
        <summary><span data-ttu-id="3286d-768">セル範囲の左上隅のセルに関連付けられているセルのメモを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-768">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-769">セルのコメントは、範囲コメントに置き換えられた。</span><span class="sxs-lookup"><span data-stu-id="3286d-769">Cell notes have been replaced by range comments.</span></span> <span data-ttu-id="3286d-770">詳細については、オブジェクトを参照 <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-770">For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</span></span></para>
          <para><span data-ttu-id="3286d-771">256 文字以上のコメントを追加するには、このメソッドを使用して最初の 255 文字を指定し、次に 255 文字以内ずつの文字列を追加していきます。</span><span class="sxs-lookup"><span data-stu-id="3286d-771">To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-772">オブジェクトの書式設定コードを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-772">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-773">指定されたすべてのセル範囲の表示形式が同じでない場合、<b>Null</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-773">This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</span></span></para>
          <para><span data-ttu-id="3286d-774">表示形式を示す文字列は、[ セルの書式設定] ダイアログ ボックスの [ 表示形式] の文字列と同じです。</span><span class="sxs-lookup"><span data-stu-id="3286d-774">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="3286d-775"><b>Format 関数は</b>、NumberFormat やプロパティとは異なる書式<b>コード文字列を</b>使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-775">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-776">ユーザーの言語で文字列としてオブジェクトの書式設定コードを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-776">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-777"><b>Format 関数は</b>、NumberFormatLocal プロパティと異なる書式コード文字列 <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> <b>を使用</b>します。</span><span class="sxs-lookup"><span data-stu-id="3286d-777">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset"><span data-ttu-id="3286d-778">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-778">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-779">オフセットする範囲の行数 (正、負、または 0) を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-779">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="3286d-780">正の値は下方向、負の値は上方向のオフセットを表します。</span><span class="sxs-lookup"><span data-stu-id="3286d-780">Positive values are offset downward, and negative values are offset upward.</span></span> <span data-ttu-id="3286d-781">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3286d-781">The default value is 0.</span></span></param>
        <param name="ColumnOffset"><span data-ttu-id="3286d-782">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-782">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-783">オフセットする範囲の列数 (正、負、または 0) を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-783">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="3286d-784">正の値は右方向、負の値は左方向のオフセットを表します。</span><span class="sxs-lookup"><span data-stu-id="3286d-784">Positive values are offset to the right, and negative values are offset to the left.</span></span> <span data-ttu-id="3286d-785">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3286d-785">The default value is 0.</span></span></param>
        <summary><span data-ttu-id="3286d-786">指定した <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 範囲からのオフセット範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-786">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-787">テキストの向きを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-787">Returns the text orientation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-788">この戻り方向の値には、90 ~ 90 度の整数値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-788">This returned orientation value can be an integer value from 90 to 90 degrees.</span></span></para>
          <para><span data-ttu-id="3286d-p255">OLAP データ ソースの場合、ある階層の 1 つのフィールドに対してこのプロパティを設定すると、同じ階層のその他のフィールドにも同じ値が設定されます。ディメンション フィールドは、ピボットテーブル レポートの行フィールド、列フィールド、またはページ フィールドの各領域にのみ配置できます。メジャー フィールドは、データ エリアにのみ配置できます。階層、またはデータ フィールドに <b>xlHidden</b> を設定すると、ピボットテーブル レポートから削除されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p255">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-793">指定した行または列の現在のアウトライン レベルを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-793">Returns or sets the current outline level of the specified row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-794">レベル 1 が最上位のレベルです。</span><span class="sxs-lookup"><span data-stu-id="3286d-794">Level one is the outermost summary level.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-795">返すまたは、ページ切り取りの場所を設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-795">Returns or sets the location of a page break.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-796">戻り値には、次のいずれかの定数 <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /> <b /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-796">The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-797">
                <b>xlPageBreakAutomatic</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-797">
                <b>xlPageBreakAutomatic</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-798">
                <b>xlPageBreakManual</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-798">
                <b>xlPageBreakManual</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-799">
                <b>xlPageBreakNone</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-799">
                <b>xlPageBreakNone</b>
              </span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="3286d-800">このプロパティでは、自動改ページと手動改ページのどちらの位置も取得できますが、設定できるのは手動改ページの位置 (<b>xlPageBreakManual</b> または <b>xlPageBreakNone</b>) だけです。</span><span class="sxs-lookup"><span data-stu-id="3286d-800">This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</span></span></para>
          <para><span data-ttu-id="3286d-801">ワークシートにあるすべての手動改ページを削除するには、Cells.PageBreak を <b>xlPageBreakNone</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-801">To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-802">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-802">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine"><span data-ttu-id="3286d-803">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-803">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-804">セルを分割する場所を示す左角かっこと右角かっこを含む文字列。たとえば、"[xxx][xxx]" は、最初の 3 文字をコピー先の範囲の最初の列に挿入し、次の 3 文字を 2 番目の列に挿入します。この引数を省略すると、範囲内の左上のセルの間隔に基づいて列を分割する場所が推測されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-804">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span></span> <span data-ttu-id="3286d-805">解析行を推測するために別の範囲を使用する場合は、 <b>引数として Range</b> オブジェクトを使用 <paramref name="ParseLine" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-805">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span></span> <span data-ttu-id="3286d-806">用いる範囲は、分割されているセルのいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-806">That range must be one of the cells that's being parsed.</span></span> <span data-ttu-id="3286d-807">引数 <paramref name="ParseLine" /> には、角かっことスペースを含め、255 文字を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="3286d-807">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span></span></param>
        <param name="Destination"><span data-ttu-id="3286d-808">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-809">解析 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> されたデータのコピー先の範囲の左上隅を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3286d-809">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span></span> <span data-ttu-id="3286d-810">この引数を省略すると、分割元のセル範囲になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-810">If this argument is omitted, Microsoft Excel parses in place.</span></span></param>
        <summary><span data-ttu-id="3286d-811">指定セル範囲内のデータを分割して、複数のセルに入力します。</span><span class="sxs-lookup"><span data-stu-id="3286d-811">Parses a range of data and breaks it into multiple cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-812">複数の隣接する列を埋める範囲の内容を分散します。</span><span class="sxs-lookup"><span data-stu-id="3286d-812">Distributes the contents of the range to fill several adjacent columns.</span></span> <span data-ttu-id="3286d-813">指定できる範囲の幅は 1 列以下です。</span><span class="sxs-lookup"><span data-stu-id="3286d-813">The range can be no more than one column wide.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste"><span data-ttu-id="3286d-814">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-814">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span></span> <span data-ttu-id="3286d-815">貼り付け範囲の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-815">The part of the range to be pasted.</span></span> <span data-ttu-id="3286d-816">使用できる定数は、次に示す<b>XlPasteType</b>定数です<b>。xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments xlPasteComments</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues xlPasteValuesAndNumberFormats</b><b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-816">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span></span></param>
        <param name="Operation"><span data-ttu-id="3286d-817">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-817">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span></span> <span data-ttu-id="3286d-818">貼り付け操作。</span><span class="sxs-lookup"><span data-stu-id="3286d-818">The paste operation.</span></span> <span data-ttu-id="3286d-819">使用できる定数は<b>、XlPasteSpecialOperationAdd</b> <b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b> <paramref name="default" /> <b>xlPasteSpecialOperationSubtract</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-819">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span></span></param>
        <param name="SkipBlanks"><span data-ttu-id="3286d-820">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-820">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-821"><b>True</b> クリップボードの範囲に空白のセルが貼り付け先の範囲に貼り付けされていない場合です。</span><span class="sxs-lookup"><span data-stu-id="3286d-821"><b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span></span> <span data-ttu-id="3286d-822">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-822">The default value is <b>False</b>.</span></span></param>
        <param name="Transpose"><span data-ttu-id="3286d-823">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-823">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-824"><b>True</b> の 範囲を貼り付け時に行と列を置き替えします。</span><span class="sxs-lookup"><span data-stu-id="3286d-824"><b>True</b> to transpose rows and columns when the range is pasted.</span></span> <span data-ttu-id="3286d-825">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-825">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-826">クリップボードの a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を指定した範囲に貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="3286d-826">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-827">セル内の <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 特定の読み取り文字列に関する情報を含むオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-827">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-828">このプロパティは、最新バージョンでの Excel との互換性を提供します。</span><span class="sxs-lookup"><span data-stu-id="3286d-828">This property provides compatibility with earlier versions of Microsoft Excel.</span></span> <span data-ttu-id="3286d-829">単一の <b>オブジェクトを取得するには、Phonetics</b>( ) を使用する必要があります 。index には、読み取り文字列の <paramref name="index" /> インデックス番号を指定 <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-829">You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-830">範囲の <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-830">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-831">ピボットテーブル <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> レポート内のセルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-832">指定した範囲の左上隅を含むピボットテーブル フィールドを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-832">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-833">指定した範囲の左上隅を含むピボットテーブル アイテムを表 <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-833">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-834">指定範囲の左上隅を含むピボットテーブル レポート、またはピボットグラフ レポートに関連付けられたピボットテーブル レポートを表すオブジェクトを <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-834">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-835">セルのすべての <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 参照元を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-835">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-836">参照元のセル範囲が複数あるときは、複数選択範囲 ( <b>Range</b> オブジェクトの集合) を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-836">This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-837">セルのプレフィックス文字を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-837">Returns the prefix character for the cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-838">プロパティが <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> False の <b>場合</b>、このプレフィックス文字はテキスト ラベルの場合は ' になります。空白になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-838">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank.</span></span> <span data-ttu-id="3286d-839">If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</span><span class="sxs-lookup"><span data-stu-id="3286d-839">If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-840">前のセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-840">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-841">セル範囲 (Range オブジェクト) が対象のとき、このプロパティでは、Shift + Tab キーを押したときの移動先セルと同じセルが返されます。ただし、そのセルを選択する動作は行われません。</span><span class="sxs-lookup"><span data-stu-id="3286d-841">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="3286d-p265">保護されたシートでは、ロックされていないセルの中から前のセルが返されます。保護されていないシートでは、指定したセルの常に左隣のセルが返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p265">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="3286d-844">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-844">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-845">印刷を開始するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-845">The number of the page at which to start printing.</span></span> <span data-ttu-id="3286d-846">この引数を省略すると、最初のページから印刷します。</span><span class="sxs-lookup"><span data-stu-id="3286d-846">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="3286d-847">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-847">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-848">印刷を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-848">The number of the last page to print.</span></span> <span data-ttu-id="3286d-849">この引数を省略すると、最後のページまで印刷します。</span><span class="sxs-lookup"><span data-stu-id="3286d-849">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="3286d-850">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-850">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-851">印刷部数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-851">The number of copies to print.</span></span> <span data-ttu-id="3286d-852">この引数を省略すると、印刷部数は 1 部になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-852">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="3286d-853">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-853">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-854"><b>True オブジェクト</b> を印刷する前に印刷プレビューを呼び出す場合。 <b>False</b> (または省略) を指定すると、オブジェクトが直ちに印刷されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-854"><b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="3286d-855">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-855">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-856">アクティブなプリンターの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-856">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="3286d-857">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-857">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-858"><b>True</b> の場合、ファイルへ出力します。</span><span class="sxs-lookup"><span data-stu-id="3286d-858"><b>True</b> to print to a file.</span></span> <span data-ttu-id="3286d-859">引数 <b>PrToFileName</b> が省略された場合、出力先のファイル名を指定するためのダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-859">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="3286d-860">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-860">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-861"><b>True</b> の場合、部単位で印刷します。</span><span class="sxs-lookup"><span data-stu-id="3286d-861"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="3286d-862">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-862">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-863"><b>PrintToFile</b> が <b>True</b> の場合、出力先ファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-863">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="3286d-864">オブジェクトを印刷します。</span><span class="sxs-lookup"><span data-stu-id="3286d-864">Prints the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-865">シートまたはブック内の全体的なページではなく、印刷ページの説明の 「ページ <paramref name="From" /> <paramref name="To" /> 」。印刷ページを参照します。</span><span class="sxs-lookup"><span data-stu-id="3286d-865">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary><span data-ttu-id="3286d-866">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="3286d-866">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="3286d-867"><see cref="T:System.Object" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-867">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="3286d-868"><b>True 変更</b> を有効にする場合です。</span><span class="sxs-lookup"><span data-stu-id="3286d-868"><b>True</b> to enable changes.</span></span></param>
        <summary><span data-ttu-id="3286d-869">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-869">Shows a preview of the object as it would look when printed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-870">指定されたオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> と交差するクエリ テーブルを表すオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-870">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="3286d-871">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-871">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-872">範囲の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-872">The name of the range.</span></span> <span data-ttu-id="3286d-873">A1 形式の参照をコード記述時の言語で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-873">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="3286d-874">範囲名には、範囲を表す演算子 (:)、共通部分を表す演算子 (スペース)、または複数の範囲を表す演算子 (,) を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3286d-874">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="3286d-875">また、ドル記号を含めできますが、無視されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-875">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="3286d-876">範囲の任意の部分には、ローカルに定義した名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-876">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="3286d-877">名前を使用する場合、その名前はコード記述時の言語で表されたものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-877">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="3286d-878">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-878">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-879">セル範囲の左上隅と右下隅のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-879">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="3286d-880">各引数には、単一のセル、列全体、または行全体を含む <b>Range</b> オブジェクト、あるいはコード記述時の言語で単一のセルの名前を示す文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-880">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="3286d-881">セルまたは <see cref="T:Microsoft.Office.Interop.Excel.Range" /> セル範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-881">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-882">このプロパティは <b>、Range</b> オブジェクトを基準にしています。</span><span class="sxs-lookup"><span data-stu-id="3286d-882">This property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="3286d-883">たとえば、選択範囲がセル C3 の場合、Selection.Range("B1") は、プロパティによって返される <b>Range</b> オブジェクトを基準にしたセル D3 を返します <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-883">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="3286d-884">一方、ActiveSheet.Range("B1") は常にセル B1 を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-884">On the other hand, ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-885">指定されたオブジェクトの読みの順序を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-885">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-886">戻り値には、次の定数のいずれかを指定できます: <b>xlRTL</b> (右から左 <b>)、xlLTR</b> (左から右)、 <b>または xlContext</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-886">The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="3286d-887">[!メモ] 選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-887">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns"><span data-ttu-id="3286d-888">重複 <b>する</b> 情報を含む列のインデックスのオプションのオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="3286d-888">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span></span>  <span data-ttu-id="3286d-889">何も渡しない場合、すべての列に重複する情報が含まれていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-889">If nothing is passed then it assumes all columns contain duplicate information.</span></span></param>
        <param name="Header"><span data-ttu-id="3286d-890">オプション <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 最初の行にヘッダー情報が含まれるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-890">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span></span>  <span data-ttu-id="3286d-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> は既定値です。は <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> 、Excel がヘッダーの判別を試みるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span></span></param>
        <summary><span data-ttu-id="3286d-892">値の範囲から重複した値を削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-892">Removes duplicate values from a range of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-893">リストから小計を削除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-893">Removes subtotals from a list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="3286d-894">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-894">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-895">Excel で検索する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-895">The string you want Microsoft Excel to search for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="3286d-896">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-896">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-897">置き換える文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-897">The replacement string.</span></span></param>
        <param name="LookAt"><span data-ttu-id="3286d-898">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-898">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-899">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> <b>、xlWhole</b> または <b>xlPart です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-899">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="3286d-900">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-900">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-901">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> <b>、xlByRows</b> または <b>xlByColumns です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-901">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="3286d-902">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-902">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-903">大文字と小文字を区別して検索するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-903"><b>True</b> to make the search case sensitive.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="3286d-904">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-904">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-905">この引数は、Microsoft Excel で 2 バイト言語サポートを選択またはインストールした場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-905">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span></span> <span data-ttu-id="3286d-906"><b>True を</b> 指定すると、2 バイト文字が 2 バイト文字のみ一致します。 <b>False</b> を指定すると、2 バイト文字が 1 バイトの文字と一致します。</span><span class="sxs-lookup"><span data-stu-id="3286d-906"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="3286d-907">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-907">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-908">メソッドの検索書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-908">The search format for the method.</span></span></param>
        <param name="ReplaceFormat"><span data-ttu-id="3286d-909">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-909">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-910">メソッドの置換書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-910">The replace format for the method.</span></span></param>
        <summary><span data-ttu-id="3286d-911">指定されたセル範囲内のセルの文字を示すブール型 (<b>Boolean</b>) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-911">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-912">このメソッドを使用しても、選択範囲またはアクティブ セルは変更されません。</span><span class="sxs-lookup"><span data-stu-id="3286d-912">Using this method doesn’t change either the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="3286d-913">, <paramref name="LookAt" /> , <paramref name="SearchOrder" /> の設定 <paramref name="MatchCase" /> は <paramref name="MatchByte" /> 、このメソッドを使用する度に保存されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-913">The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="3286d-914">次にメソッドを呼び出す時にこれらの引数の値を指定しない場合は、保存された値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-914">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="3286d-915">これらの引数を設定すると、[検索] ダイアログ ボックスの設定が変更され、また、[検索] ダイアログ ボックスで設定を変更すると、引数を省略した場合に使用される保存された値が変更されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-915">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="3286d-916">問題を回避するには、このメソッドを使用するたびに、これらの引数を明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-916">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize"><span data-ttu-id="3286d-917">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-917">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-918">新しい範囲の行数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-918">The number of rows in the new range.</span></span> <span data-ttu-id="3286d-919">この引数を省略すると、新しい行数は変更する前と同じ行数になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-919">If this argument is omitted, the number of rows in the range remains the same.</span></span></param>
        <param name="ColumnSize"><span data-ttu-id="3286d-920">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-920">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-921">新しい範囲の列数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-921">The number of columns in the new range.</span></span> <span data-ttu-id="3286d-922">この引数を省略すると、新しい列数は変更する前と同じ列数になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-922">If this argument is omitted, the number of columns in the range remains the same.</span></span></param>
        <summary><span data-ttu-id="3286d-923">指定された範囲のサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="3286d-923">Resizes the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-924">範囲の最初の領域の最初の行の番号を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-924">Returns the number of the first row of the first area in the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="3286d-925">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-925">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-926">指定したセル範囲と比較する単一セルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-926">A single cell to compare with the specified range.</span></span></param>
        <summary><span data-ttu-id="3286d-927">各行の比較セルと内容が異なるすべてのセルを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-927">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-928">指定した範囲内のすべての行の高さをポイント単位で返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-928">Returns the height of all the rows in the range specified, measured in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-929">指定した範囲 <b>の行の</b> 高さが同じでない場合、このプロパティは Null を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-929">This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</span></span></para>
          <para><span data-ttu-id="3286d-930">1 行の場合、プロパティの値 <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> は <b>RowHeight プロパティの値と同</b> じになります。</span><span class="sxs-lookup"><span data-stu-id="3286d-930">For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property.</span></span> <span data-ttu-id="3286d-931">ただし、Height プロパティを使用<b></b>してセル範囲の高さの合計を取得できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-931">However, you can also use the <b>Height</b> property to return the total height of a range of cells.</span></span></para>
          <para><span data-ttu-id="3286d-932"><b>RowHeight と Height のその他の</b><b>違い</b>は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3286d-932">Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-933">
                <b>高</b> さは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3286d-933">
                <b>Height</b> is read-only.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-934">複数の行の <b>RowHeight</b> プロパティを取得する場合は、各行の行の高さ (すべての行が同じ高さである場合) または <b>Null</b> (高さが異なる場合) のどちらかを取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-934">If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights).</span></span> <span data-ttu-id="3286d-935">複数の行の <b>Height</b> プロパティを取得すると、すべての行の高さの合計が取得されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-935">If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-936">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の行を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-936">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-937">複数のセル範囲を含む <b>Range</b> オブジェクトに対してこのプロパティを使用すると、選択範囲の中で最初に選択した領域の行が返されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-937">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="3286d-938">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-938">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-939">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-939">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="3286d-940">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-940">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-941">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-941">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="3286d-942">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-942">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-943">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-943">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="3286d-944">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-944">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-945">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-945">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="3286d-946">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-946">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-947">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-947">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="3286d-948">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-948">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-949">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-949">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="3286d-950">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-950">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-951">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-951">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="3286d-952">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-952">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-953">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-953">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="3286d-954">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-954">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-955">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-955">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="3286d-956">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-956">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-957">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-957">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="3286d-958">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-958">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-959">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-959">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="3286d-960">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-960">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-961">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-961">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="3286d-962">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-962">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-963">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-963">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="3286d-964">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-964">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-965">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-965">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="3286d-966">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-966">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-967">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-967">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="3286d-968">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-968">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-969">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-969">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="3286d-970">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-970">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-971">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-971">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="3286d-972">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-972">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-973">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-973">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="3286d-974">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-974">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-975">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-975">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="3286d-976">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-976">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-977">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-977">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="3286d-978">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-978">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-979">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-979">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="3286d-980">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-980">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-981">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-981">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="3286d-982">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-982">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-983">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-983">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="3286d-984">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-984">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-985">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-985">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="3286d-986">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-986">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-987">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-987">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="3286d-988">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-988">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-989">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-989">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="3286d-990">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-990">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-991">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-991">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="3286d-992">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-992">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-993">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-993">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="3286d-994">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-994">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-995">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-995">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="3286d-996">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-996">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-997">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="3286d-997">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="3286d-998">指定されたセル範囲にある Excel のマクロを実行します。</span><span class="sxs-lookup"><span data-stu-id="3286d-998">Runs the Microsoft Excel macro at this location.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-999">セル範囲はマクロ シートである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-999">The range must be on a macro sheet.</span></span></para>
          <para><span data-ttu-id="3286d-1000">このメソッドの引数では、名前を使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1000">You cannot use named arguments with this method.</span></span> <span data-ttu-id="3286d-1001">引数には、位置のパスで必ず指定してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1001">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="3286d-1002"><b>Run</b> メソッドは、呼び出し先マクロが返す内容を返します。 </span><span class="sxs-lookup"><span data-stu-id="3286d-1002">The <b>Run</b> method returns whatever the called macro returns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1003">オブジェクトを選択します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1003">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1004">セルまたはセル範囲を選択するには、Select メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1004">To select a cell or a range of cells, use the Select method.</span></span> <span data-ttu-id="3286d-1005">1 つのセルをアクティブ セルにする場合は、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1005">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1006">オブジェクトの SharePoint サーバーで実行できるアクションを指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1006">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Actions" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1007">指定した <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 範囲内のすべてのセルのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1007">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="3286d-1008">指定した範囲に既存の <b>Phonetic</b> オブジェクトが含まれている場合、このメソッドを使用して追加される新しい Phonetic オブジェクトに自動的に上書き (既存は削除) されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1008">Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1009">指定範囲が可視位置に来るようにアクティブ ウィンドウの内容をスクロールします。</span><span class="sxs-lookup"><span data-stu-id="3286d-1009">Scrolls through the contents of the active window to move the range into view.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1010">範囲には、作業中のドキュメントの単一のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1010">The range must consist of a single cell in the active document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="3286d-1011">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1011">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1012"><b>True を</b> 直接依存するトレース矢印の 1 つのレベルを削除します。 <b>False トレース</b> 矢印の 1 つのレベルを展開します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1012"><b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="3286d-1013">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1013">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-1014">アクティブ セル (参照元) から、その値を直接参照しているセル (参照先) に向けてトレース矢印を引きます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1014">Draws tracer arrows to the direct dependents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1015">指定した <b>範囲</b> のアウトラインが展開されている場合はTrue を返します (列または行の詳細が表示されます)。</span><span class="sxs-lookup"><span data-stu-id="3286d-1015">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1016">指定する範囲は、アウトライン内の 1 つのサマリー列または行である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1016">The specified range must be a single summary column or row in an outline.</span></span></para>
          <para><span data-ttu-id="3286d-1017">範囲がピボットテーブル レポート内にある場合、アイテムに詳細が表示されている場合、このプロパティは <b>True</b> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1017">If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</span></span></para>
          <para><span data-ttu-id="3286d-1018">ピボットテーブル レポート内のセル範囲以外が対象のとき、次のことに注意します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1018">If the specified range isn’t in a PivotTable report, the following statements are true:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-1019">セル範囲は、単一の集計行または集計列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1019">The range must be in a single summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1020">行または列の子が非表示の場合、このプロパティは <b>False</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1020">This property returns <b>False</b> if any of the children of the row or column are hidden.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1021">このプロパティを <b>True に設定</b> すると、集計行または集計列のすべての子が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1021">Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1022">このプロパティに <b>False</b> を設定すると、集計行または集計列に対応する詳細行または詳細列をすべて非表示にすることになります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1022">Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-p326">ピボットテーブル レポート内のセル範囲が対象のとき、連続しているセル範囲の場合に限り、一度に複数のセル範囲をこのプロパティに指定することができます。セル範囲が単一セルの場合だけ、このプロパティで値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p326">If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="3286d-1025">OLAP データ ソースでは、このプロパティを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1025">This property isn’t available for OLAP data sources.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1026">エラーの原因であるセルに参照元ツリーを介してトレース矢印を描画し、そのセルを含む範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1026">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="3286d-1027">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1027">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1028"><b>True を</b> 直接参照するトレース矢印の 1 つのレベルを削除します。 <b>False トレース</b> 矢印の 1 つのレベルを展開します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1028"><b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="3286d-1029">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1029">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="3286d-1030">対象セルが直接参照しているセル (参照元) から、対象セルに向けて矢印を引きます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1030">Draws tracer arrows to the direct precedents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1031">使用可能な列幅に収まるテキストを自動的に縮小するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1031">Determines if text automatically shrinks to fit in the available column width.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1032">このプロパティは、<b></b>使用可能な列幅に収まるテキストが自動的に縮小する場合<b></b>はTrue を返し、このプロパティが指定範囲内のすべてのセルに同じ値に設定されていない場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1032">This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1033">指定されたセル <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> の識別子を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1033">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1"><span data-ttu-id="3286d-1034">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1034">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1035">最初の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) またはオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> (たとえば、"Dept" または Cells(1, 1) で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1035">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="3286d-1036">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1036">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1037">指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key1" /> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1037">The sort order for the field or range specified in <paramref name="Key1" />.</span></span> <span data-ttu-id="3286d-1038">使用できる定数は <b>、XlSortOrder</b> 定数である<b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1038">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1039">降順 <paramref name="Key1" /> で並べ替えを行います。<b>xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1039">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1040">昇順で <paramref name="Key1" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1040">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Key2"><span data-ttu-id="3286d-1041">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1041">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1042">2 番目の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクトで指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1042">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="3286d-1043">この引数を省略すると、2 番目の並べ替えフィールドはありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1043">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="3286d-1044">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1044">Cannot be used when sorting Pivot Table reports.</span></span></param>
        <param name="Type"><span data-ttu-id="3286d-1045">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1045">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1046">並べ替える要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1046">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="3286d-1047">この引数は、ピボットテーブル レポートを並べ替えるときにのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1047">Use this argument only when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1048">使用できる定数は <b>、XlSortType</b> 定数である<b>xlSortLabels です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1048">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="3286d-1049">ピボットテーブル レポートをラベルで並べ替える。<b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1049">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="3286d-1050">ピボットテーブル レポートを値で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1050">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="3286d-1051">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1051">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1052">指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key2" /> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1052">The sort order for the field or range specified in <paramref name="Key2" />.</span></span> <span data-ttu-id="3286d-1053">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1053">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1054">使用できる定数は <b>、XlSortOrder</b> 定数である<b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1054">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1055">降順 <paramref name="Key2" /> で並べ替えを行います。<b>xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1055">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1056">昇順で <paramref name="Key2" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1056">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="3286d-1057">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1057">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1058">3 番目の並べ替えフィールドを、テキスト (範囲名) または <b>Range</b> オブジェクトで指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1058">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="3286d-1059">この引数を省略すると、3 番目の並べ替えフィールドはありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1059">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="3286d-1060">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1060">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="3286d-1061">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1061">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1062">指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key3" /> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1062">The sort order for the field or range specified in <paramref name="Key3" />.</span></span> <span data-ttu-id="3286d-1063">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1063">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1064">使用できる定数は <b>、XlSortOrder</b> 定数である<b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1064">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1065">降順 <paramref name="Key3" /> で並べ替えを行います。<b>xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1065">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1066">昇順で <paramref name="Key3" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1066">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="3286d-1067">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1067">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="3286d-1068">先頭の行に見出しを含めるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1068">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="3286d-1069">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1069">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1070">使用できる定数は <b>、XlYesNoGuess 定数</b> である<b>xlGuess です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1070">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="3286d-1071">ヘッダーが存在するかどうかを判断し、ヘッダーが存在するかどうかを判断します。<b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1071">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1072">(範囲全体を並べ替える必要があります)。<b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1072">(The entire range should be sorted).<b>xlYes</b>.</span></span> <span data-ttu-id="3286d-1073">(範囲全体を並べ替えは行う必要はありません)。</span><span class="sxs-lookup"><span data-stu-id="3286d-1073">(The entire range should not be sorted).</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="3286d-1074">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1074">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1075">この引数は、ユーザー設定の並べ替え順のリスト内の番号を示す、1 から始まる整数です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1075">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="3286d-1076">省略すると <paramref name="OrderCustom" /> 、通常の並べ替えが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1076">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="3286d-1077">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1077">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1078"><b>True を</b> 指定すると、大文字と小文字が区別されます。 <b>False</b> を指定すると、大文字と小文字が区別されない並べ替えを行います。</span><span class="sxs-lookup"><span data-stu-id="3286d-1078"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="3286d-1079">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1079">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="3286d-1080">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1080">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="3286d-1081">並べ替えの方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1081">The sort orientation.</span></span> <span data-ttu-id="3286d-1082">使用できる定数は<b>、XlSortOrientation</b>定数である<b>xlSortRows です</b> <paramref name="default" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1082">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1083">行で並べ替えを行います。<b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1083">Sorts by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="3286d-1084">列単位で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1084">Sorts by column.</span></span></param>
        <param name="SortMethod"><span data-ttu-id="3286d-1085">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1085">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="3286d-1086">並べ替えの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1086">The type of sort.</span></span> <span data-ttu-id="3286d-1087">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1087">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="3286d-1088">使用できる定数は<b>、XlSortMethod</b>です<b>。xlStroke</b>の各文字のストローク数による並べ替えです。<b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1088">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1089">中国語の発音表記の順で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1089">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="3286d-1090">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1090">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1091">テキストを並べ替える方法を指定します <paramref name="Key 1" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1091">Specifies how to sort text in <paramref name="Key 1" />.</span></span> <span data-ttu-id="3286d-1092">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1092">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1093">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1093">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1094">並べ替えでは、テキストを数値データとして扱います。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1094">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1095">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1095">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="3286d-1096">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1096">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1097">テキストを並べ替える方法を指定します <paramref name="Key 2" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1097">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="3286d-1098">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1098">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1099">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1099">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1100">並べ替えの数値データとしてテキストを処理します。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1100">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1101">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1101">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="3286d-1102">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1102">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1103">キー 3 でテキストを並べ替える方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1103">Specifies how to sort text in key 3.</span></span> <span data-ttu-id="3286d-1104">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1104">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1105">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1105">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1106">テキストを並べ替えの数値データとして扱います。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1106">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1107">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1107">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="3286d-1108">指定範囲にセルが 1 つしか含まれている場合は、ピボットテーブル レポート、範囲、またはアクティブ領域を並べ替える。</span><span class="sxs-lookup"><span data-stu-id="3286d-1108">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1109">このメソッドを使用する度に、特定のワークシートの設定 ( , ) が <paramref name="Header" /> <paramref name="Order1" /> <paramref name="Order2" /> <paramref name="Order3" /> <paramref name="OrderCustom" /> <paramref name="Orientation" /> 保存されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1109">The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method.</span></span> <span data-ttu-id="3286d-1110">次にメソッドを呼び出す時にこれらの引数の値を指定しない場合は、保存された値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1110">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="3286d-1111">保存された値を使用しない場合は <b>、Sort</b> メソッドを使用するごとに、これらの引数を明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1111">Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</span></span></para>
          <para><span data-ttu-id="3286d-1112">数値データに変換できないテキスト文字列は、通常は並べ替えされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1112">Text strings which are not convertible to numeric data are sorted normally.</span></span></para>
          <para><span data-ttu-id="3286d-1113"><b>Sort</b> メソッドで引数を何も定義しない場合、選択している範囲が昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1113">If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod"><span data-ttu-id="3286d-1114">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1114">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="3286d-1115">並べ替えの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1115">The type of sort.</span></span> <span data-ttu-id="3286d-1116">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1116">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="3286d-1117">使用できる定数は <b>、XlSortMethod</b> 定数である<b>xlStroke です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1117">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span></span> <span data-ttu-id="3286d-1118">各文字のストローク数で並べ替える。<b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1118">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1119">中国語の発音表記の順で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1119">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="Key1"><span data-ttu-id="3286d-1120">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1121">最初の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクト (たとえば、"Dept" または Cells(1, 1) で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1121">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="3286d-1122">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1122">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1123">引数で指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key1" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1123">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span></span> <span data-ttu-id="3286d-1124">使用できる定数は <b>、XlSortOrder</b> 定数である<b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1124">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1125">降順 <paramref name="Key1" /> で並べ替えを行います。<b>xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1125">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1126">昇順で <paramref name="Key1" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1126">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Type"><span data-ttu-id="3286d-1127">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1127">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1128">並べ替える要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1128">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="3286d-1129">この引数は、ピボットテーブル レポートを並べ替えるときにのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1129">Use this argument only when sorting PivotTable reports.</span></span></param>
        <param name="Key2"><span data-ttu-id="3286d-1130">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1130">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1131">2 番目の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクトで指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1131">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="3286d-1132">この引数を省略すると、2 番目の並べ替えフィールドはありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1132">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="3286d-1133">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1133">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1134">使用できる定数は <b>、XlSortType</b> 定数である<b>xlSortLabels です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1134">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="3286d-1135">ピボットテーブル レポートをラベルで並べ替える。<b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1135">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="3286d-1136">ピボットテーブル レポートを値で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1136">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="3286d-1137">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1137">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1138">引数で指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key2" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1138">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span></span> <span data-ttu-id="3286d-1139">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1139">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1140">使用できる定数は <b>、XlSortOrder</b> 定数である<b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1140">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1141">既定値の <paramref name="Key2" /> <b>xlAscending を降順で並べ替</b> える。</span><span class="sxs-lookup"><span data-stu-id="3286d-1141">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span></span> <span data-ttu-id="3286d-1142">昇順で <paramref name="Key2" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1142">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="3286d-1143">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1143">Optional <b>object</b>.</span></span> <span data-ttu-id="3286d-1144">3 番目の並べ替えフィールドを、テキスト (範囲名) または <b>Range</b> オブジェクトで指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1144">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="3286d-1145">この引数を省略すると、3 番目の並べ替えフィールドはありません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1145">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="3286d-1146">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1146">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="3286d-1147">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1147">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="3286d-1148">引数で指定されたフィールドまたは範囲の並べ替え順序 <paramref name="Key3" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1148">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span></span> <span data-ttu-id="3286d-1149">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1149">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1150">使用できる定数は <b>、XlSortOrder</b> 定数である <b>xlDescending です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1150">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span></span> <span data-ttu-id="3286d-1151">降順 <paramref name="Key3" /> で並べ替えを行います。<b>xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1151">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1152">昇順で <paramref name="Key3" /> 並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1152">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="3286d-1153">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1153">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="3286d-1154">先頭の行に見出しを含めるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1154">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="3286d-1155">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1155">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1156">使用できる定数は <b>、XlYesNoGuess 定数</b> である<b>xlGuess です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1156">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="3286d-1157">ヘッダーが存在するかどうかを判断し、ヘッダーが存在するかどうかを判断します。<b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1157">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1158">範囲全体を並べ替える必要があります。<b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1158">The entire range should be sorted.<b>xlYes</b>.</span></span> <span data-ttu-id="3286d-1159">範囲全体が並べ替えられません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1159">The entire range should not be sorted.</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="3286d-1160">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1160">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1161">この引数は、ユーザー設定の並べ替え順のリスト内の番号を示す、1 から始まる整数です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1161">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="3286d-1162">省略すると <paramref name="OrderCustom" /> 、(通常の並べ替え順序) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1162">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="3286d-1163">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1163">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1164"><b>True を</b> 指定すると、大文字と小文字が区別されます。 <b>False</b> を指定すると、大文字と小文字が区別されない並べ替えを行います。</span><span class="sxs-lookup"><span data-stu-id="3286d-1164"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="3286d-1165">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1165">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="3286d-1166">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1166">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="3286d-1167">並べ替えの方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1167">The sort orientation.</span></span> <span data-ttu-id="3286d-1168">使用できる定数は<b>、XlSortOrientation</b>定数である<b>xlSortRows です</b> <paramref name="default" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1168">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1169">並べ替えは行で行われます。<b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1169">The sort is done by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="3286d-1170">並べ替えは列で行われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1170">The sort is done by column.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="3286d-1171">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1171">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1172">テキストを並べ替える方法を指定します <paramref name="Key1" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1172">Specifies how to sort text in <paramref name="Key1" />.</span></span> <span data-ttu-id="3286d-1173">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1173">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1174">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1174">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1175">並べ替えの数値データとしてテキストを処理します。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1175">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1176">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1176">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="3286d-1177">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1177">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1178">テキストを並べ替える方法を指定します <paramref name="Key 2" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1178">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="3286d-1179">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1179">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1180">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1180">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1181">並べ替えの数値データとしてテキストを処理します。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1181">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1182">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1182">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="3286d-1183">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1183">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="3286d-1184">テキストを並べ替える方法を指定します <paramref name="Key 3" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1184">Specifies how to sort text in <paramref name="Key 3" />.</span></span> <span data-ttu-id="3286d-1185">ピボットテーブル レポートの並べ替えには使用できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1185">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="3286d-1186">使用できる定数は <b>、XlSortDataOption</b> クラスの<b>xlSortTextAsNumbers です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1186">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="3286d-1187">並べ替えのテキスト数値データを処理します。<b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1187">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="3286d-1188">数値データとテキスト データを別々に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1188">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="3286d-1189">東アジアの並べ替え方法を使用して範囲またはピボットテーブル レポートを並べ替え、範囲にセルが 1 つしか含まれている場合はアクティブ領域のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1189">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span></span> <span data-ttu-id="3286d-1190">たとえば、日本語では五十音順に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1190">For example, Japanese sorts in the order of the Kana syllabary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1191">引数が <b>SortSpecial</b> メソッドで定義されていない場合、選択した選択範囲は昇順で並べ替えされます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1191">If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1192">このプロパティは、使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1192">This property should not be used.</span></span> <span data-ttu-id="3286d-1193">サウンド メモは Excel から削除されました。</span><span class="sxs-lookup"><span data-stu-id="3286d-1193">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1194">指定した <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> 範囲からスパークラインの既存のグループを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1194">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></summary>
        <value><span data-ttu-id="3286d-1195">指定 <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> 範囲のスパークラインの既存のグループを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3286d-1195">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="3286d-1196">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1196">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection"><span data-ttu-id="3286d-1197">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1198">行順に読み上げるか、列順に読み上げるか。</span><span class="sxs-lookup"><span data-stu-id="3286d-1198">The speak direction, by rows or columns.</span></span></param>
        <param name="SpeakFormulas"><span data-ttu-id="3286d-1199">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1199">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1200">セルに含まれている数式を Text-To-Speech (TTS) エンジンに送る場合は  <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1200"><b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span></span> <span data-ttu-id="3286d-1201">セルに数式が含されていない場合は、値が送信されます。 <b>False</b> (既定値) の場合、値は常に TTS エンジンに送信されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1201">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span></span></param>
        <summary><span data-ttu-id="3286d-1202">範囲内のセルを、行順または列順に読み上げます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1202">Causes the cells of the range to be spoken in row order or column order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="3286d-1203">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1203">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span></span> <span data-ttu-id="3286d-1204">取得するセルの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1204">The cells to include.</span></span> <span data-ttu-id="3286d-1205">使用できる定数は <b>、XlCellType</b> の定数である<b>xlCellTypeAllFormatConditions です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1205">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span></span> <span data-ttu-id="3286d-1206">任意の書式のセル。<b>xlCellTypeAllValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1206">Cells of any format.<b>xlCellTypeAllValidation</b>.</span></span> <span data-ttu-id="3286d-1207">検証条件を持つセル。<b>xlCellTypeBlanks</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1207">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span></span> <span data-ttu-id="3286d-1208">空のセル。<b>xlCellTypeComments</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1208">Empty cells.<b>xlCellTypeComments</b>.</span></span> <span data-ttu-id="3286d-1209">メモを含むセル。<b>xlCellTypeConstants</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1209">Cells containing notes.<b>xlCellTypeConstants</b>.</span></span> <span data-ttu-id="3286d-1210">定数を含むセル。<b>xlCellTypeFormulas</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1210">Cells containing constants.<b>xlCellTypeFormulas</b>.</span></span> <span data-ttu-id="3286d-1211">数式を含むセル。<b>xlCellTypeLastCell</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1211">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span></span> <span data-ttu-id="3286d-1212">使用範囲の最後のセルを指定します。<b>xlCellTypeSameFormatConditions</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1212">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span></span> <span data-ttu-id="3286d-1213">書式が同じセル。<b>xlCellTypeSameValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1213">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span></span> <span data-ttu-id="3286d-1214">同じ検証条件を持つセル。<b>xlCellTypeVisible</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1214">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span></span> <span data-ttu-id="3286d-1215">すべての可視セル</span><span class="sxs-lookup"><span data-stu-id="3286d-1215">All visible cells.</span></span></param>
        <param name="Value"><span data-ttu-id="3286d-1216">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1216">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1217">if <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas,</b>this argument is used to determine which types of cells to include in the result.</span><span class="sxs-lookup"><span data-stu-id="3286d-1217">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="3286d-1218">複数の値を加算して指定すると、複数の種類の定数や数式を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1218">These values can be added together to return more than one type.</span></span> <span data-ttu-id="3286d-1219">この引数を省略すると、すべての定数および数式が対象になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1219">The default is to select all constants or formulas, no matter what the type.</span></span> <span data-ttu-id="3286d-1220">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> <b>、xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues です。</b></span><span class="sxs-lookup"><span data-stu-id="3286d-1220">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span></span></param>
        <summary><span data-ttu-id="3286d-1221">指定された型 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> と値に一致するセルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1222">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Style" /> のスタイルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1222">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="3286d-1223">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1223">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="3286d-1224">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1224">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="3286d-1225">Macintosh でのみ使用されているキーワードのヘルプを要求しました。</span><span class="sxs-lookup"><span data-stu-id="3286d-1225">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="3286d-1226">このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1226">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy"><span data-ttu-id="3286d-1227">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1227">Required <b>Integer</b>.</span></span> <span data-ttu-id="3286d-1228">グループ化の基準となるフィールドの番号を、1 から始まる整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1228">The field to group by, as a one-based integer offset.</span></span> <span data-ttu-id="3286d-1229">使用例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1229">For more information, see the example.</span></span></param>
        <param name="Function"><span data-ttu-id="3286d-1230">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 。</span><span class="sxs-lookup"><span data-stu-id="3286d-1230">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="3286d-1231">小計関数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1231">The subtotal function.</span></span> <span data-ttu-id="3286d-1232">使用できる定数は、次に示す<b>XlConsolidationFunction</b>定数です<b>。xlAverage</b><b>xlCount xlCountNums</b><b></b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev xlStDevP</b><b></b><b>xlSum</b><b>xlUnknown</b><b>xlVarP</b><b></b></span><span class="sxs-lookup"><span data-stu-id="3286d-1232">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TotalList"><span data-ttu-id="3286d-1233">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1233">Required <b>Object</b>.</span></span> <span data-ttu-id="3286d-1234">集計を追加するフィールド表す、1 から始まるオフセット番号の配列で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1234">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span></span> <span data-ttu-id="3286d-1235">使用例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3286d-1235">For more information, see the example.</span></span></param>
        <param name="Replace"><span data-ttu-id="3286d-1236">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1236">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1237">既存の集計表と置き換えるには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1237"><b>True</b> to replace existing subtotals.</span></span> <span data-ttu-id="3286d-1238">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1238">The default value is <b>False</b>.</span></span></param>
        <param name="PageBreaks"><span data-ttu-id="3286d-1239">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1239">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1240">グループごとに改ページが挿入されるようにするには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1240"><b>True</b> to add page breaks after each group.</span></span> <span data-ttu-id="3286d-1241">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1241">The default value is <b>False</b>.</span></span></param>
        <param name="SummaryBelowData"><span data-ttu-id="3286d-1242">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1242">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span></span> <span data-ttu-id="3286d-1243">集計を基準にサマリー データを設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1243">Places the summary data relative to the subtotal.</span></span> <span data-ttu-id="3286d-1244">使用できる定数は、次に示す <b>XlSummaryRow</b> 定数です<b>。xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="3286d-1244">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span></span></param>
        <summary><span data-ttu-id="3286d-1245">セル範囲の集計を作成します。指定されたセル範囲が単一セルのときは、アクティブ セル領域を集計します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1245">Creates subtotals for the range (or the current region, if the range is a single cell).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1246">範囲が概要行または列の下線を引くかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1246">Determines if the range is an outlining summary row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1247">指定範囲が <b>概要行</b> または列の場合、このプロパティは True を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1247">This property returns <b>True</b> if the range is an outlining summary row or column.</span></span></para>
          <para><span data-ttu-id="3286d-1248">範囲は、行または列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1248">The range should be a row or a column.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput"><span data-ttu-id="3286d-1249">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1249">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1250">テーブルの行入力として使うセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1250">A single cell to use as the row input for your table.</span></span></param>
        <param name="ColumnInput"><span data-ttu-id="3286d-1251">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1251">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1252">テーブルの列入力として使うセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1252">A single cell to use as the column input for your table.</span></span></param>
        <summary><span data-ttu-id="3286d-1253">ワークシートで定義した入力値と数式に基づいて、データ テーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1253">Creates a data table based on input values and formulas that you define on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1254">このデータ テーブルは、ワークシートの特定の定数を変化させて、ほかのセルの値への影響を調べるケース スタディのために使います。</span><span class="sxs-lookup"><span data-stu-id="3286d-1254">Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1255">指定されたオブジェクトのテキストを返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1255">Returns or sets the text for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1256">オブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 場合、このプロパティは、その読み方を表す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1256">For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text.</span></span> <span data-ttu-id="3286d-1257">このプロパティを <b>Null</b> 値に設定できません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1257">You cannot set this property to <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="3286d-1258">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1258">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1259"><see cref="T:Microsoft.Office.Interop.Excel.Range" />Microsoft Excel が結果を配置する場所を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3286d-1259">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span></span> <span data-ttu-id="3286d-1260">表示先に指定したセル範囲が複数セルである場合には、左上端のセルが使われます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1260">If the range is larger than a single cell, the top left cell is used.</span></span></param>
        <param name="DataType"><span data-ttu-id="3286d-1261">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1261">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span></span> <span data-ttu-id="3286d-1262">複数の列に区切るデータの形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1262">The format of the text to be split into columns.</span></span> <span data-ttu-id="3286d-1263">使用できる定数は<b>、XlTextParsingType</b>の定数である<b>xlDelimited </b> <paramref name="default" /> <b>xlFixedWidth です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1263">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span></span></param>
        <param name="TextQualifier"><span data-ttu-id="3286d-1264">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1264">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="3286d-1265">使用できる定数は<b>、XlTextQualifierDoubleQuote</b> <b></b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1265">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="3286d-1266">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1266">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1267"><b>True</b> を指定すると、連続した区切り文字を 1 つの区切り文字として認識します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1267"><b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span></span> <span data-ttu-id="3286d-1268">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1268">The default value is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="3286d-1269">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1269">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1270"><b>True</b> を <paramref name="DataType" /> 指定 <b>すると、xlDelimited が設定</b> され、タブ文字が区切り文字になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1270"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span></span> <span data-ttu-id="3286d-1271">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1271">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="3286d-1272">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1272">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1273"><b>True</b> を <paramref name="DataType" /> 指定 <b>すると、xlDelimited が指定</b> され、セミコロンが区切り文字になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1273"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span></span> <span data-ttu-id="3286d-1274">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1274">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="3286d-1275">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1275">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1276"><b>True</b> を <paramref name="DataType" /> 指定 <b>すると、xlDelimited が指定</b> され、コンマは区切り文字になります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1276"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span></span> <span data-ttu-id="3286d-1277">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1277">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="3286d-1278">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1278">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1279"><b>True</b> を <paramref name="DataType" /> 指定 <b>すると、xlDelimited が指定</b> され、区切り文字としてスペースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1279"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span></span> <span data-ttu-id="3286d-1280">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1280">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="3286d-1281">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1281">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1282"><b>True</b> を <paramref name="DataType" /> 指定 <b>すると、引数に区切</b> り記号として指定された文字が使用 <paramref name="OtherChar" /> されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1282"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span></span> <span data-ttu-id="3286d-1283">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1283">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="3286d-1284">省略 <b>可能なオブジェクト</b> (True の <paramref name="Other" /> 場合は <b>必須</b>)。</span><span class="sxs-lookup"><span data-stu-id="3286d-1284">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="3286d-1285">区切り文字がTrue <paramref name="Other" /> の <b>場合</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1285">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="3286d-1286">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span><span class="sxs-lookup"><span data-stu-id="3286d-1286">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="3286d-1287">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1287">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1288">区切り後の列のデータ形式に関する情報を持つ配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1288">An array containing parse information for the individual columns of data.</span></span> <span data-ttu-id="3286d-1289">解釈は、 <paramref name="DataType" /> .</span><span class="sxs-lookup"><span data-stu-id="3286d-1289">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="3286d-1290">データが区切り記号で区切られている場合は、この引数に 2 要素配列の配列を使用して、配列内の各 2 要素配列が特定の列の変換オプションを指定するようにします。</span><span class="sxs-lookup"><span data-stu-id="3286d-1290">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="3286d-1291">最初の要素は列番号 (1 から始)、2 番目の要素は列の解析方法を指定する定数の 1 <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> つです。</span><span class="sxs-lookup"><span data-stu-id="3286d-1291">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span></span> <span data-ttu-id="3286d-1292">使用できる定数は <b>、XlColumnDataType</b> クラスの<b>xlGeneralFormat クラスの定数です</b>。</span><span class="sxs-lookup"><span data-stu-id="3286d-1292">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span></span> <span data-ttu-id="3286d-1293">マトラ</span><span class="sxs-lookup"><span data-stu-id="3286d-1293">Genera.</span></span> <span data-ttu-id="3286d-1294"><b>xlTextFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1294"><b>xlTextFormat</b>.</span></span> <span data-ttu-id="3286d-1295">テキスト<b>xlMDYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1295">Text.<b>xlMDYFormat</b>.</span></span> <span data-ttu-id="3286d-1296">MDY Date。<b>xlDMYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1296">MDY Date.<b>xlDMYFormat</b>.</span></span> <span data-ttu-id="3286d-1297">DMY 日付<b>xlYMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1297">DMY Date.<b>xlYMDFormat</b>.</span></span> <span data-ttu-id="3286d-1298">YMD 日付<b>xlMYDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1298">YMD Date.<b>xlMYDFormat</b>.</span></span> <span data-ttu-id="3286d-1299">MYD 日付<b>xlDYMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1299">MYD Date.<b>xlDYMFormat</b>.</span></span> <span data-ttu-id="3286d-1300">DYM 日付<b>xlYDMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1300">DYM Date.<b>xlYDMFormat</b>.</span></span> <span data-ttu-id="3286d-1301">YDM 日付<b>xlEMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1301">YDM Date.<b>xlEMDFormat</b>.</span></span> <span data-ttu-id="3286d-1302">EMD 日付<b>xlSkipColumn</b>.</span><span class="sxs-lookup"><span data-stu-id="3286d-1302">EMD Date.<b>xlSkipColumn</b>.</span></span> <span data-ttu-id="3286d-1303">列をスキップします <b>。xlEMDFormat</b> は、台湾語サポートがインストールされ、選択されている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1303">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span></span> <span data-ttu-id="3286d-1304"><b>定数 xlEMDFormat</b>は、台湾の元号の日付を使用します。列指定子は任意の順序で指定できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1304">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="3286d-1305">入力データの特定の列に対して特定の列指定子が存在しない場合、その列は [全般] 設定で <b>解析</b> されます。ソース データに固定幅列がある場合、各 2 要素配列の最初の要素は、列内の開始文字位置を整数で指定します。0 (ゼロ) が最初の文字です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1305">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span></span> <span data-ttu-id="3286d-1306">2 番目の要素は、上の 1 ～ 9 の数値を使って、列のデータ形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1306">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="3286d-1307">文字列型 (<b>String</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1307">Optional <b>String</b>.</span></span> <span data-ttu-id="3286d-1308">Excel で数値を認識する場合に使う小数点の記号です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1308">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="3286d-1309">既定はシステム設定です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1309">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="3286d-1310">文字列型 (<b>String</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1310">Optional <b>String</b>.</span></span> <span data-ttu-id="3286d-1311">Excel で数値を認識する場合に使う桁区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1311">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="3286d-1312">既定はシステム設定です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1312">The default setting is the system setting.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="3286d-1313">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1313">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1314">負記号で始まる数値です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1314">Numbers that begin with a minus character.</span></span></param>
        <summary><span data-ttu-id="3286d-1315">セルに入力されているデータ (1 つのセル内で、カンマ、スペース、タブなどで区切られたデータ) を、複数の列に区切ります。対象となる列は 1 列だけです。</span><span class="sxs-lookup"><span data-stu-id="3286d-1315">Parses a column of cells that contain text into several columns.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1316">次の表は、Excel へのテキストのインポートをさまざまなインポート設定で行った場合の結果を示したものです。</span><span class="sxs-lookup"><span data-stu-id="3286d-1316">The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="3286d-1317">数値の結果は右詰めで表示します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1317">Numeric results are displayed in the rightmost column.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="3286d-1318">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1318">Period</span></span></term>
              <description><span data-ttu-id="3286d-1319">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1319">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1320">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1320">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1321">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1321">Period</span></span></description>
              <description><span data-ttu-id="3286d-1322">123.123,45</span><span class="sxs-lookup"><span data-stu-id="3286d-1322">123.123,45</span></span></description>
              <description><span data-ttu-id="3286d-1323">123,123.45 (数値)</span><span class="sxs-lookup"><span data-stu-id="3286d-1323">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-1324">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1324">Period</span></span></term>
              <description><span data-ttu-id="3286d-1325">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1325">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1326">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1326">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1327">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1327">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1328">123.123,45</span><span class="sxs-lookup"><span data-stu-id="3286d-1328">123.123,45</span></span></description>
              <description><span data-ttu-id="3286d-1329">123.123,45 (文字列)</span><span class="sxs-lookup"><span data-stu-id="3286d-1329">123.123,45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-1330">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1330">Comma</span></span></term>
              <description><span data-ttu-id="3286d-1331">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1331">Period</span></span></description>
              <description><span data-ttu-id="3286d-1332">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1332">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1333">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1333">Period</span></span></description>
              <description><span data-ttu-id="3286d-1334">123,123.45</span><span class="sxs-lookup"><span data-stu-id="3286d-1334">123,123.45</span></span></description>
              <description><span data-ttu-id="3286d-1335">123,123.45 (数値)</span><span class="sxs-lookup"><span data-stu-id="3286d-1335">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-1336">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1336">Period</span></span></term>
              <description><span data-ttu-id="3286d-1337">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1337">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1338">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1338">Period</span></span></description>
              <description><span data-ttu-id="3286d-1339">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1339">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1340">123,123.45</span><span class="sxs-lookup"><span data-stu-id="3286d-1340">123 123.45</span></span></description>
              <description><span data-ttu-id="3286d-1341">123 123.45 (文字列)</span><span class="sxs-lookup"><span data-stu-id="3286d-1341">123 123.45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="3286d-1342">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1342">Period</span></span></term>
              <description><span data-ttu-id="3286d-1343">カンマ</span><span class="sxs-lookup"><span data-stu-id="3286d-1343">Comma</span></span></description>
              <description><span data-ttu-id="3286d-1344">ピリオド</span><span class="sxs-lookup"><span data-stu-id="3286d-1344">Period</span></span></description>
              <description><span data-ttu-id="3286d-1345">スペース</span><span class="sxs-lookup"><span data-stu-id="3286d-1345">Space</span></span></description>
              <description><span data-ttu-id="3286d-1346">123,123.45</span><span class="sxs-lookup"><span data-stu-id="3286d-1346">123 123.45</span></span></description>
              <description><span data-ttu-id="3286d-1347">123,123.45 (数値)</span><span class="sxs-lookup"><span data-stu-id="3286d-1347">123,123.45 (numeric)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1348">行 1 の上端から範囲の上端までの距離をポイント数で返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1348">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1349">範囲が同じでない場合は、最初の領域が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1349">If the range is noncontiguous, the first area is used.</span></span> <span data-ttu-id="3286d-1350">複数の行を含む範囲の場合は、範囲内で最も上に位置する (行番号が一番小さい) 行が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1350">If the range is more than one row high, the top (lowest numbered) row in the range is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1351">セル範囲のアウトライン レベルを上げます (行、列のアウトライン レベルの番号は減ります)。</span><span class="sxs-lookup"><span data-stu-id="3286d-1351">Promotes a range in an outline (that is, decreases its outline level).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="3286d-1352">指定する範囲は、1 行全部か 1 列全部、または複数の行全体や列全体である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3286d-1352">The specified range must be a row or column, or a range of rows or columns.</span></span> <span data-ttu-id="3286d-1353">ピボットテーブル レポートの中のセル範囲の場合、このメソッドはセル範囲に含まれているアイテムのグループを解除します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1353">If the range is in a PivotTable report, this method ungroups the items contained in the range.</span></span></para>
          <para><span data-ttu-id="3286d-p392">アクティブ セルが親フィールドのフィールドの見出しの中にある場合は、その親フィールド内のすべてのグループがグループ解除され、親フィールドはピボットテーブル レポートから外されます。親フィールド内の最も下位のグループをグループ解除すると、そのフィールド全部がピボットテーブル レポートから外されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p392">If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3286d-1356">結合された領域をそれぞれのセルに分割します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1356">Separates a merged area into individual cells.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1357">オブジェクトの行の高さがシートの標準の高さと <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 等しいかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1357">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1358"><b>Range</b>オブジェクトの行の高さがシートの標準の高さと等しい場合、このプロパティは<b>True</b>を返し、範囲に複数の行が含まれている場合、行の高さが同じでない場合は<b>Null</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1358">This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1359">オブジェクトの列幅がシートの標準 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の幅と等しいかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1359">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1360"><b>Range</b>オブジェクトの列幅がシートの標準の幅と等しい場合、このプロパティは<b>True</b>を返し、範囲に複数の列が含まれている場合、列の幅が同じでない場合は<b>Null</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1360">This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1361">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> のデータの入力規則を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1361">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType"><span data-ttu-id="3286d-1362">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="3286d-1362">Optional <b>Object</b>.</span></span> <span data-ttu-id="3286d-1363">セル範囲の値のデータ型を指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1363">The range value data type.</span></span> <span data-ttu-id="3286d-1364">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> <b>、xlRangeValueDefault</b>です。指定したオブジェクトが空の場合は、値 Empty を返します (この場合は <paramref name="default" /> <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <b>IsEmpty</b><b></b>関数を使用してテストします)。</span><span class="sxs-lookup"><span data-stu-id="3286d-1364">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span></span> <span data-ttu-id="3286d-1365">Range オブジェクト<b>に</b>複数のセルが含まれている場合は、値の配列を返します<b>(IsArray</b>関数を使用してこのケースをテストします)。<b>xlRangeValueMSPersistXML</b>   指定された Range オブジェクトのレコード<b>セット表現を</b>XML 形式で返します。<b>xlRangeValueXMLSpreadsheet</b>   指定された Range オブジェクトの値、書式設定、数式、名前を<b></b>XML スプレッドシート形式で返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1365">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span></span></param>
        <summary><span data-ttu-id="3286d-1366">指定した範囲の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1366">Returns or sets the value of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1367">XML スプレッドシート ファイルのセル範囲のデータを設定する場合、ブックの最初のシートの値のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1367">When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used.</span></span> <span data-ttu-id="3286d-1368">XML スプレッドシート形式のセル範囲を設定または取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="3286d-1368">You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1369">セルの値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1369">Returns or sets the cell value.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-p395"><b>Value2</b> プロパティでは、通貨型 (<b>Currency</b>) および日付型 (<b>Date</b>) のデータ型を使用しない点のみが、<b>Value</b> プロパティと異なります。倍精度浮動小数点型 (<b>Double</b>) を使用することにより、これらの 2 種類のデータ型の値を浮動小数点数として返すことができます。</span><span class="sxs-lookup"><span data-stu-id="3286d-p395">The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1372">指定したオブジェクトの垂直方向の配置を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1372">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value><span data-ttu-id="3286d-1373">.</span><span class="sxs-lookup"><span data-stu-id="3286d-1373">.</span></span></value>
        <remarks><para><span data-ttu-id="3286d-1374">返される垂直方向の配置指定子には、次のいずれかの読み取り/書き込み <b>オブジェクト値を指定</b> できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1374">The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="3286d-1375">
                <b>xlBottom</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-1375">
                <b>xlBottom</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1376">
                <b>xlCenter</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-1376">
                <b>xlCenter</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1377">
                <b>xlDistributed</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-1377">
                <b>xlDistributed</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1378">
                <b>xlJustify</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-1378">
                <b>xlJustify</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="3286d-1379">
                <b>xlTop</b>
              </span><span class="sxs-lookup"><span data-stu-id="3286d-1379">
                <b>xlTop</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1380">範囲の幅をポイント単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1380">The width, in points, of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1381">指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> を含むワークシートを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1382">オブジェクト内のテキストを折り返すかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1382">Determines if Microsoft Excel wraps the text in the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1383">このプロパティは、 <b>オブジェクト</b> 内のテキストを折り返す場合は True を返し、指定した範囲にテキストを折り返すセルと、折り返されていないセルが含まれている場合は <b>Null</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1383">This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span></span></para>
          <para><span data-ttu-id="3286d-1384">文字列をセル内に表示するために、行の高さは必要に応じて自動的に調節されます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1384">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3286d-1385">指定したオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> にマップされている要素の Xpath を表すオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="3286d-1385">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="3286d-1386">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3286d-1386">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>