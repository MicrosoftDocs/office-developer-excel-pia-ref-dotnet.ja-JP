<Type Name="Workbook" FullName="Microsoft.Office.Interop.Excel.Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92ffce8b5e62ce88e392a62537bf1cc2d3a58d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587354" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbook : Microsoft.Office.Interop.Excel._Workbook, Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbook implements class Microsoft.Office.Interop.Excel._Workbook, class Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbook&#xA;Implements _Workbook, WorkbookEvents_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbook : Microsoft::Office::Interop::Excel::_Workbook, Microsoft::Office::Interop::Excel::WorkbookEvents_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel._Workbook</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel.WorkbookEvents_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Excel.WorkbookClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="163cc-101">Microsoft Excel ブックを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="163cc-101">Represents a Microsoft Excel workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="163cc-102">
        <para>これは、対応する COM オブジェクトと相互運用するためのマネージ コードで必要とされる COM コクラスから派生した .NET インターフェイスです。COM オブジェクトのすべてのメソッド、プロパティ、およびイベント メンバーにアクセスするのにには、この派生インターフェイスを使用します。ただし、メソッドまたはイベントを使用する、同じ COM オブジェクトの下にある同じ名前を共有する場合は、メソッドを呼び出し、およびイベントに接続するための最新のイベント インターフェイスにキャストする場合は、対応するプライマリ インターフェイスにキャストします。COM オブジェクトについての情報は、このトピックを参照してください。COM オブジェクトのメソッドおよびプロパティ メンバーについてを参照してください<see cref="T:Microsoft.Office.Interop.Excel._Workbook" />です</para>。
      <para>、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトのメンバーである、<see cref="T:Microsoft.Office.Interop.Excel.Workbooks" />コレクションです。<b>Workbooks</b>コレクションには、Microsoft Excel の<b>ブック</b>オブジェクトが現在開いているすべてが含まれています</para>。
      <para><b>ブック</b>オブジェクトを取得する次のプロパティがこのセクションで説明されている:</para><list type="bullet"><item><description><see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />プロパティ</description></item><item><description><see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />プロパティ</description></item><item><description><see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />プロパティ</description></item></list><para>ブックのプロパティ</para><para>使用<b>ブック</b>(<paramref name="index" />)、<paramref name="index" />は、ブックの名前またはインデックス番号を 1 つの<b>ブック</b>オブジェクトを取得する</para>。
      <para>のインデックス番号は順に、ブックが開いているか作成します。Workbooks(1) は、最初のブックを作成すると Workbooks(Workbooks.Count) は、最後の 1 つを作成します。ブックをアクティブにすると、そのインデックス番号は変更されません。非表示にしている場合でも、インデックス番号では、すべてのブックが含まれます</para>。
      <para>、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" />プロパティは、ブック名を返します。このプロパティを使用して名前を設定することはできません。名前を変更する場合を使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />別の名前でブックを保存する方法です</para>。
      <para>ActiveWorkbook プロパティ</para><para><b>ActiveWorkbook</b>プロパティは、現在アクティブなブックを返します</para>。
      <para>ThisWorkbook プロパティ</para><para><b>ThisWorkbook</b>プロパティは、Visual Basic コードを実行しているブックを返します。ほとんどの場合、これは作業中のブックと同じです。ただし、Visual Basic コードがアドインの一部である場合は、 <b>ThisWorkbook</b>プロパティは、作業中のブックを返しません。この例では、作業中のブックは、 <b>ThisWorkbook</b>プロパティはアドイン ブックを返すようにアドインを呼び出しているブックです。</para><para>、Visual Basic コードでアドインを作成する場合は、ブックがアドインをコンパイルするを実行する必要が任意のステートメントを修飾する<b>ThisWorkbook</b>プロパティを使用する必要があります</para><para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="163cc-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
          <para>The <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. The <b>Workbooks</b> collection contains all the <b>Workbook</b> objects currently open in Microsoft Excel.</para>
          <para>The following properties for returning a <b>Workbook</b> object are described in this section:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> property</description>
            </item>
          </list>
          <para>Workbooks Property</para>
          <para>Use <b>Workbooks</b>(<paramref name="index" />), where <paramref name="index" /> is the workbook name or index number, to return a single <b>Workbook</b> object.</para>
          <para>The index number denotes the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created, and Workbooks(Workbooks.Count) is the last one created. Activating a workbook doesn’t change its index number. All workbooks are included in the index count, even if they’re hidden.</para>
          <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property returns the workbook name. You cannot set the name by using this property; if you need to change the name, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to save the workbook under a different name.</para>
          <para>ActiveWorkbook Property</para>
          <para>The <b>ActiveWorkbook</b> property returns the workbook that’s currently active.</para>
          <para>ThisWorkbook Property</para>
          <para>The <b>ThisWorkbook</b> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <b>ThisWorkbook</b> property won’t return the active workbook. In this case, the active workbook is the workbook calling the add-in, so the <b>ThisWorkbook</b> property returns the add-in workbook. </para>
          <para>If you’ll be creating an add-in from your Visual Basic code, you should use the <b>ThisWorkbook</b> property to qualify any statement that must be run on the workbook you compile into the add-in.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>