<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50008617" /></Metadata><TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b0d93-101">Microsoft Excel アプリケーションで <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 現在開いているすべてのオブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="b0d93-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span></span></summary>
    <remarks><para><span data-ttu-id="b0d93-102">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> を使用して <b>Workbooks コレクションを取得</b> します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</span></span></para>
      <para><span data-ttu-id="b0d93-103">新しい <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> 空のブックを作成し、コレクションに追加するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</span></span></para>
      <para><span data-ttu-id="b0d93-104">このメソッド <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</span></span></para>
      <para><span data-ttu-id="b0d93-105">1 つの Workbook オブジェクトの使用の詳細 <b>については</b> 、オブジェクトを参照 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> してください。</span><span class="sxs-lookup"><span data-stu-id="b0d93-105">For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="b0d93-106">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="b0d93-106">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="b0d93-107">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b0d93-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary><span data-ttu-id="b0d93-108">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b0d93-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary><span data-ttu-id="b0d93-109">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b0d93-109">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template"><span data-ttu-id="b0d93-110">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-111">新しいブックの作成方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-111">Determines how the new workbook is created.</span></span> <span data-ttu-id="b0d93-112">この引数が既存の Microsoft Excel ファイルの名前を指定する文字列の場合、指定したファイルをテンプレートとして使用して新しいブックが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-112">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span></span> <span data-ttu-id="b0d93-113">この引数が定数の場合、新しいブックには指定された種類のシートが 1 つ含まれます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-113">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span></span> <span data-ttu-id="b0d93-114">使用できる定数 <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> は<b>、xlWBATChart</b> <b>、xlWBATExcel4IntlMacroSheet、xlWBATExcel4MacroSheet、xlWBATWorksheet</b><b>です</b>。 <b></b></span><span class="sxs-lookup"><span data-stu-id="b0d93-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span></span> <span data-ttu-id="b0d93-115">この引数を省略すると、多数の空白シートを含む新しいブックが作成されます (シート数は <b>SheetsInNewWorkbook</b> プロパティによって設定されます)。</span><span class="sxs-lookup"><span data-stu-id="b0d93-115">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span></span></param>
        <summary><span data-ttu-id="b0d93-116">新しいブックを作成します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-116">Creates a new workbook.</span></span> <span data-ttu-id="b0d93-117">新しいブックが作業中のブックになります。</span><span class="sxs-lookup"><span data-stu-id="b0d93-117">The new workbook becomes the active workbook.</span></span> <span data-ttu-id="b0d93-118">オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b0d93-119">引数に <paramref name="Template" /> ファイルを指定する場合は、ファイル名にパスを含めることができるようになりました。</span><span class="sxs-lookup"><span data-stu-id="b0d93-119">If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0d93-120">Microsoft Excel アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="b0d93-121">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-122"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-122">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-123">チェックアウトするファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-123">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="b0d93-124">Microsoft Excel によって指定したブックをサーバーからチェックアウトできる場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-124"><b>True</b> if Microsoft Excel can check out a specified workbook from a server.</span></span> <span data-ttu-id="b0d93-125">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-125">Read/write <b>Boolean</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-126"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-126">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-127">チェックアウトするファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-127">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="b0d93-128">指定されたブックをサーバーからローカル コンピューターにコピーして編集します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-128">Copies the specified workbook from a server to a local computer for editing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0d93-129">オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-129">Closes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b0d93-130"><b>Close</b>メソッドを使用してブックを閉じても、ブックAuto_Closeマクロは実行されません。</span><span class="sxs-lookup"><span data-stu-id="b0d93-130">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="b0d93-131">このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を使用して、自動閉じるマクロを実行します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-131">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0d93-132">コレクション内にあるオブジェクトの数を返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-132">Returns the number of objects in the collection.</span></span> <span data-ttu-id="b0d93-133">整数型 ( <b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-133">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0d93-134">このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-134">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="b0d93-135">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="b0d93-136">読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b0d93-137"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="b0d93-137">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b0d93-138">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-138">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="b0d93-139">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="b0d93-139">Required <b>Object</b>.</span></span> <span data-ttu-id="b0d93-140">オブジェクトの名前またはインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-140">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="b0d93-141">コレクションから単一のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-141">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-142"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-142">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-143">開くブックのファイル名です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-143">The file name of the workbook to be opened.</span></span></param>
        <param name="UpdateLinks"><span data-ttu-id="b0d93-144">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-145">ファイル内のリンクの更新方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-145">Specifies the way links in the file are updated.</span></span> <span data-ttu-id="b0d93-146">この引数を省略すると、リンクの更新方法を指定するように求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-146">If this argument is omitted, the user is prompted to specify how links will be updated.</span></span> <span data-ttu-id="b0d93-147">それ以外の場合、この引数は次の表に示す値の 1 つになります。WKS、WK1、または WK3 形式のファイルを開き、引数が 2 の場合、ファイルに添付されたグラフからグラフが生成されます。 <paramref name="UpdateLinks" /></span><span class="sxs-lookup"><span data-stu-id="b0d93-147">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span></span> <span data-ttu-id="b0d93-148">引数に 0 を指定すると、グラフは作成されません。</span><span class="sxs-lookup"><span data-stu-id="b0d93-148">If the argument is 0, no charts are created.</span></span></param>
        <param name="ReadOnly"><span data-ttu-id="b0d93-149">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-150">ブックを読み取り専用モードで開くには、True を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-150">True to open the workbook in read-only mode.</span></span></param>
        <param name="Format"><span data-ttu-id="b0d93-151">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-151">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-152">テキスト ファイルを開く場合は、次の表に示すように、この引数で区切り文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-152">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span></span> <span data-ttu-id="b0d93-153">この引数を省略すると、現在の区切り文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-153">If this argument is omitted, the current delimiter is used.</span></span></param>
        <param name="Password"><span data-ttu-id="b0d93-154">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-154">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-155">パスワード保護されたブックを開くのに必要なパスワードを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-155">A string that contains the password required to open a protected workbook.</span></span> <span data-ttu-id="b0d93-156">この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-156">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="b0d93-157">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-158">書き込み保護されたブックに書き込みをするために必要なパスワードを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-158">A string that contains the password required to write to a write-reserved workbook.</span></span> <span data-ttu-id="b0d93-159">この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-159">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span></span></param>
        <param name="IgnoreReadOnlyRecommended"><span data-ttu-id="b0d93-160">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-161">[ <b>読み取り専用を推奨する</b>] チェック ボックスをオンにして保存されたブックを開くときでも、読み取り専用を推奨するメッセージを非表示にするには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-161"><b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span></span></param>
        <param name="Origin"><span data-ttu-id="b0d93-162">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-162">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-163">ファイルがテキスト ファイルの場合、この引数は発生元を示します (コード ページとキャリッジ リターン/ライン フィード (CR/LF) を正しくマップできます)。</span><span class="sxs-lookup"><span data-stu-id="b0d93-163">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span></span> <span data-ttu-id="b0d93-164">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>、xlMacintosh</b> <b>、xlWindows、または</b> <b>xlMSDOS です</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-164">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="b0d93-165">この引数を省略すると、現在のオペレーティング システムが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-165">If this argument is omitted, the current operating system is used.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="b0d93-166">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-167">ファイルがテキスト ファイルで、引数 <b>Format</b> が 6 の場合、この引数は区切り文字として使用する文字を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-167">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span></span> <span data-ttu-id="b0d93-168">たとえば、タブには Chr(9) を使用し、コンマには "," を使用し、セミコロンには ";" を使用し、ユーザー設定の文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-168">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span></span> <span data-ttu-id="b0d93-169">文字列の最初の文字だけが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-169">Only the first character of the string is used.</span></span></param>
        <param name="Editable"><span data-ttu-id="b0d93-170">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-171">ファイルが Microsoft Excel 4.0 アドインの場合、この引数 <b>は True</b> に設定され、アドインが表示ウィンドウで開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-171">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span></span> <span data-ttu-id="b0d93-172">この引数に <b>False</b> を指定するか、この引数を省略すると、アドインは非表示の状態で開かれ、ウィンドウとして表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="b0d93-172">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span></span> <span data-ttu-id="b0d93-173">このオプションは、Microsoft Excel 5.0 以降で作成されたアドインには適用されません。</span><span class="sxs-lookup"><span data-stu-id="b0d93-173">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span></span> <span data-ttu-id="b0d93-174">ファイルが Excel テンプレートの場合は <b>、True</b> を使用して指定したテンプレートを編集用に開き <b>、False</b> を使用して、指定したテンプレートに基づいて新しいブックを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-174">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span></span> <span data-ttu-id="b0d93-175">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-175">The default value is <b>False</b>.</span></span></param>
        <param name="Notify"><span data-ttu-id="b0d93-176">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-177">ファイルが読み取り/書き込みモードで開けない場合に、ファイルを通知リストに追加するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-177">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span></span> <span data-ttu-id="b0d93-178">ファイルが読み取り専用モードで開かれて通知リストに追加され、ファイルが編集可能になった時点でユーザーに通知されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-178">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span></span> <span data-ttu-id="b0d93-179">ファイルが開けない場合に、このような通知を行わずにエラーを発生させるには、 <b>False</b> を指定するか省略します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-179">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span></span></param>
        <param name="Converter"><span data-ttu-id="b0d93-180">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-180">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-181">ファイルを開く際に最初に試すファイル コンバーターのインデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-181">The index of the first file converter to try when opening the file.</span></span> <span data-ttu-id="b0d93-182">指定されたファイル コンバーターが最初に試みされます。このコンバータがファイルを認識しない場合は、他のすべてのコンバータが試みされます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-182">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span></span> <span data-ttu-id="b0d93-183">コンバータ インデックスは、プロパティによって返されるコンバータの行番号で構成 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-183">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="b0d93-184">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-184">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-185">最近使用したファイルの一覧にブックを追加するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-185"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="b0d93-186">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-186">The default value is <b>False</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="b0d93-187">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-187">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-188"><b>True を</b> 指定すると、Excel の言語 (コントロール パネルの設定を含む) に対してファイルが保存されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-188"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="b0d93-189"><b>False</b> (既定値) を指定すると、Visual Basic for Applications (VBA) の言語 (Workbooks.Open を実行する VBA プロジェクトが国際化された古い XL5/95 VBA プロジェクトではない限り、通常は英語 (米国)) に対してファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-189"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <param name="CorruptLoad"><span data-ttu-id="b0d93-190">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-190">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-191">使用できる定数は<b>、xlNormalLoad</b> <b>、xlRepairFile、</b><b>および xlExtractData です</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-191">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span></span> <span data-ttu-id="b0d93-192">通常、値が指定されていない場合の既定の動作は正常ですが、Excel がファイルを開く試みを既に試みた場合は、安全な読み込みまたはデータ回復である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b0d93-192">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span></span> <span data-ttu-id="b0d93-193">最初の試行は正常です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-193">The first attempt is normal.</span></span> <span data-ttu-id="b0d93-194">Excel がファイルを開く間に動作を停止した場合、2 回目の試行は安全な読み込みです。</span><span class="sxs-lookup"><span data-stu-id="b0d93-194">If Excel stops operating while opening the file, the second attempt is safe load.</span></span> <span data-ttu-id="b0d93-195">Excel が再び動作を停止した場合、次の試行はデータ回復です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-195">If Excel again stops operating, the next attempt is data recovery.</span></span></param>
        <summary><span data-ttu-id="b0d93-196">ブックを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-196">Opens a workbook.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b0d93-197">既定では、ファイルをプログラムで開くとき、マクロは有効です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-197">By default, macros are enabled when opening files programmatically.</span></span> <span data-ttu-id="b0d93-198">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> を使用して、プログラムでファイルを開く際に使用するマクロ セキュリティ モードを設定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-198">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-199"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-199">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-200">接続文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-200">The connection string.</span></span></param>
        <param name="CommandText"><span data-ttu-id="b0d93-201">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-201">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-202">クエリのコマンド テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-202">The command text of the query.</span></span></param>
        <param name="CommandType"><span data-ttu-id="b0d93-203">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-204">クエリのコマンド タイプを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-204">The command type of the query.</span></span> <span data-ttu-id="b0d93-205">使用できるコマンドの種類は、Default、SQL、Table です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-205">The following command types are available: Default, SQL, and Table.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="b0d93-206">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-207">クエリの背景。</span><span class="sxs-lookup"><span data-stu-id="b0d93-207">The background of the query.</span></span></param>
        <param name="ImportDataAs"><span data-ttu-id="b0d93-208">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-209">クエリの形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-209">Determines the format of the query.</span></span></param>
        <summary><span data-ttu-id="b0d93-210">データベースを表 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-210">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-211"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-211">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-212">読み込まれるテキスト ファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-212">Specifies the file name of the text file to be opened and parsed.</span></span></param>
        <param name="Origin"><span data-ttu-id="b0d93-213">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-213">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-214">テキスト ファイルの元のプラットフォームを指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-214">Specifies the origin of the text file.</span></span> <span data-ttu-id="b0d93-215">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>、xlMacintosh</b> <b>、xlWindows、または</b> <b>xlMSDOS です</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-215">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="b0d93-216">また、目的のコード ページのコード ページ番号を表す整数値を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-216">Additionally, this could be an integer representing the code page number of the desired code page.</span></span> <span data-ttu-id="b0d93-217">たとえば、"1256" の場合、ソース テキスト ファイルのエンコードは "アラビア語 (Windows)" であることを示します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-217">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span></span> <span data-ttu-id="b0d93-218">この引数を省略すると、このメソッドは、 テキスト インポート ウィザードの [ <b>元のファイル</b>] の現在の設定値を使用します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-218">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span></span></param>
        <param name="StartRow"><span data-ttu-id="b0d93-219">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-219">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-220">テキストの解析を開始する行番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-220">The row number at which to start parsing text.</span></span> <span data-ttu-id="b0d93-221">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-221">The default value is 1.</span></span></param>
        <param name="DataType"><span data-ttu-id="b0d93-222">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-222">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-223">ファイルに含まれるデータの形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-223">Specifies the column format of the data in the file.</span></span> <span data-ttu-id="b0d93-224">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> <b>、xlDelimited</b> または <b>xlFixedWidth です</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-224">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span></span> <span data-ttu-id="b0d93-225">この引数を省略すると、ファイルを開いたときにデータの形式が自動的に決められます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-225">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span></span></param>
        <param name="TextQualifier"><span data-ttu-id="b0d93-226">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-226">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="b0d93-227">文字列の引用符を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-227">Specifies the text qualifier.</span></span> <span data-ttu-id="b0d93-228">使用できる定数は、 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 次に示す定数の 1 つです。<b>xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span><span class="sxs-lookup"><span data-stu-id="b0d93-228">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="b0d93-229">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-229">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-230">連続した区切り文字を 1 文字として扱うときは  <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-230"><b>True</b> to have consecutive delimiters considered one delimiter.</span></span> <span data-ttu-id="b0d93-231">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-231">The default is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="b0d93-232">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-232">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-233">True の 区切り記号にタブ文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。</span><span class="sxs-lookup"><span data-stu-id="b0d93-233">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="b0d93-234">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-234">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="b0d93-235">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-235">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-236"><b>True</b> の 区切り記号にセミコロンを付けます ( <paramref name="DataType" /> <b>xlDelimited を指定する必要があります</b>)。</span><span class="sxs-lookup"><span data-stu-id="b0d93-236"><b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="b0d93-237">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-237">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="b0d93-238">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-238">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-239"><b>True</b> の 区切り記号にコンマ文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。</span><span class="sxs-lookup"><span data-stu-id="b0d93-239"><b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="b0d93-240">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-240">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="b0d93-241">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-241">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-242"><b>True</b> の 区切り記号にスペース文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。</span><span class="sxs-lookup"><span data-stu-id="b0d93-242"><b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="b0d93-243">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-243">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="b0d93-244">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-244">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-245"><b>引数で</b> 指定した文字を区切り文字 <paramref name="OtherChar" /> <paramref name="DataType" /> <b>(xlDelimited ) に設定するには、True を指定します</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-245"><b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="b0d93-246">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-246">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="b0d93-247">省略 <b>可能なオブジェクト</b> (True の <paramref name="Other" /> 場合は <b>必須</b>)。</span><span class="sxs-lookup"><span data-stu-id="b0d93-247">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="b0d93-248">True の場合、区切り文字 <paramref name="Other" /> を指定 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="b0d93-248">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="b0d93-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span><span class="sxs-lookup"><span data-stu-id="b0d93-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="b0d93-250">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-250">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span></span> <span data-ttu-id="b0d93-251">各列のデータ形式を示す配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-251">An array containing parse information for individual columns of data.</span></span> <span data-ttu-id="b0d93-252">解釈は、 <paramref name="DataType" /> .</span><span class="sxs-lookup"><span data-stu-id="b0d93-252">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="b0d93-253">データが区切り記号で区切られている場合は、この引数に 2 要素配列の配列を使用して、配列内の各 2 要素配列が特定の列の変換オプションを指定するようにします。</span><span class="sxs-lookup"><span data-stu-id="b0d93-253">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="b0d93-254">最初の要素は列番号 (1 から始)、2 番目の要素は列の解析方法を指定する<b>XlColumnDataType</b> 定数の 1 つです。<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected taiwanese language support.</span><span class="sxs-lookup"><span data-stu-id="b0d93-254">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span></span> <span data-ttu-id="b0d93-255"><b>定数 xlEMDFormat</b>は、台湾の元号の日付を使用します。列指定子は任意の順序で指定できます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-255">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="b0d93-256">入力データに特定の列の列指定子がない場合、その列は [全般] 設定で解析されます。<b>メモ</b>列をスキップするように指定した場合は、残りのすべての列の種類を明示的に指定する必要があります。そうしない場合、データは正しく解析されません。データに認識可能な日付がある場合、列の設定が [全般] の場合でも、セルはワークシートの日付として書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-256">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span></span> <span data-ttu-id="b0d93-257">さらに、列に上記のいずれかの日付形式を指定し、データに認識可能な日付が含まれている場合、ワークシートのセル形式は General になります。ソース データに固定幅列がある場合、各 2 要素配列の最初の要素は、列内の開始文字の位置を整数で指定し、文字 0 (ゼロ) が最初の文字です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-257">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span></span> <span data-ttu-id="b0d93-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span><span class="sxs-lookup"><span data-stu-id="b0d93-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="b0d93-259">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-259">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-260">テキストの視覚的な配置を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-260">The visual layout of the text.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="b0d93-261">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-261">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-262">Excel で数値を認識する場合に使う小数点の記号です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-262">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="b0d93-263">既定はシステム設定です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-263">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="b0d93-264">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-264">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-265">Excel で数値を認識する場合に使う桁区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-265">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="b0d93-266">既定の設定はシステム設定です。次の表は、さまざまなインポート設定で Excel にテキストをインポートした結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="b0d93-266">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="b0d93-267">数値の結果は右詰めで表示します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-267">Numeric results are displayed in the rightmost column.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="b0d93-268">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-268">Optional <b>Object</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="b0d93-269">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-269">Optional <b>Object</b>.</span></span></param>
        <summary><span data-ttu-id="b0d93-270">テキスト ファイルを分析して読み込みます。テキスト ファイルを 1 枚のシートとして、それを含む新しいブックを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-270">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="b0d93-271"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-271">Required <b>String</b>.</span></span> <span data-ttu-id="b0d93-272">開くファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-272">The name of the file to open.</span></span></param>
        <param name="Stylesheets"><span data-ttu-id="b0d93-273">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-273">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-274">適用する XSL 変換 (XSLT) スタイル シート処理命令を指定する単一の値または値の配列。</span><span class="sxs-lookup"><span data-stu-id="b0d93-274">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span></span></param>
        <param name="LoadOption"><span data-ttu-id="b0d93-275">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-275">Optional <b>Object</b>.</span></span> <span data-ttu-id="b0d93-276">Excel が XML データ ファイルを開く方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-276">Specifies how Excel opens the XML data file.</span></span> <span data-ttu-id="b0d93-277">使用できる定数は、 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> <b>次のいずれかの定数です。xlXmlLoadImportToList</b> XML データ ファイルの内容を XML リストに格納します。<b>xlXmlLoadMapXml</b> XML データ ファイルのスキーマを <b>[XML データ</b> 構造] 作業ウィンドウに表示します。<b>xlXmlLoadOpenXml</b> XML データ ファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-277">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span></span> <span data-ttu-id="b0d93-278">ファイルの内容はフラット化されます。<b>xlXmlLoadPromptUser</b> ファイルを開く方法を選択するようにユーザーに求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-278">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span></span></param>
        <summary><span data-ttu-id="b0d93-279">XML データ ファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-279">Opens an XML data file.</span></span> <span data-ttu-id="b0d93-280">オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-280">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b0d93-281">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="b0d93-281">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0d93-282">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b0d93-282">Returns the parent object for the specified object.</span></span> <span data-ttu-id="b0d93-283">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b0d93-283">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>