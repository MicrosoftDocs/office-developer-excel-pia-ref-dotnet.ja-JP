<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b12eeb1525d59a72dc56c31e86d541cd2b6125d0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20574936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d716-101">すべてのコレクション、 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Microsoft Excel アプリケーションでは、現在のオブジェクトを開きます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d716-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="3d716-102">
        <para>使用して、 <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /><b>ブック</b>のコレクションを返すプロパティです</para>。
      <para>使用して、 <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> 、新しい空のブックを作成し、コレクションに追加します</para>。
      <para>使用して、<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />ファイルを開くためのメソッドです</para>。
      <para>1 つの<b>ブック</b>オブジェクトの使い方の詳細についてを参照してください、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトです</para>。
      <para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="3d716-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</para>
          <para>For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="3d716-103">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-103">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3d716-104">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>
          <span data-ttu-id="3d716-105">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>
          <span data-ttu-id="3d716-106">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">
          <span data-ttu-id="3d716-107">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-107">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-108">新しいブックを作成する方法を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-108">Determines how the new workbook is created.</span>
          </span>
          <span data-ttu-id="3d716-109">この引数が既存の Microsoft Excel ファイルの名前を指定する文字列の場合は、指定のファイルをテンプレートとして新しいブックが作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-109">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span>
          </span>
          <span data-ttu-id="3d716-110">この引数が定数の場合は、新しいブックには、指定した型の 1 つのシートが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-110">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span>
          </span>
          <span data-ttu-id="3d716-111">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" />定数: <b>xlWBATChart</b>、 <b>xlWBATExcel4IntlMacroSheet</b>、 <b>xlWBATExcel4MacroSheet</b>、 <b>xlWBATWorksheet</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span>
          </span>
          <span data-ttu-id="3d716-112">この引数を省略すると、Microsoft Excel の空白のシート (<b>か</b>シートの数が設定されます) で新しいブックを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-112">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-113">新しいブックを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-113">Creates a new workbook.</span>
          </span>
          <span data-ttu-id="3d716-114">作業中のブックを新しいブックになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-114">The new workbook becomes the active workbook.</span>
          </span>
          <span data-ttu-id="3d716-115">返します、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3d716-116">
            <para>場合、<paramref name="Template" />の引数は、ファイルを指定、ファイル名、パスを含めることができます</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-116">
              <para>If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d716-117">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-117">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="3d716-118">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-118">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-119">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-119">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-120">チェックアウトするファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-120">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-p105">
            <b>True</b> の場合、指定したブックをサーバーからチェックアウトできます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-p105">
              <b>True</b> if Microsoft Excel can check out a specified workbook from a server. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-123">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-123">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-124">チェックアウトするファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-124">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-125">サーバーから指定されたブックを編集するためのローカル コンピューターにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-125">Copies the specified workbook from a server to a local computer for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d716-126">オブジェクトを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-126">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3d716-127">
            <para>ブック内の Auto_Close マクロを実行しない、 <b>Close</b>メソッドを使用してブックを閉じるします。使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />自動を実行するメソッドは、マクロを閉じます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-127">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d716-128">コレクション内にあるオブジェクトの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-128">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="3d716-129">整数型 ( <b>Integer</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-129">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d716-130">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-130">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="3d716-131">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-131">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="3d716-132">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-132">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3d716-133">
            <para>
              <b>作成者</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Excel では、クリエーター コード</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-133">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3d716-134">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-134">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-135">オブジェクトの名前またはインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-135">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-136">コレクションから単一のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-136">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-137">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-137">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-138">開くブックのファイル名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-138">The file name of the workbook to be opened.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="3d716-139">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-140">ファイル内の方法のリンクが更新されるかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-140">Specifies the way links in the file are updated.</span>
          </span>
          <span data-ttu-id="3d716-141">この引数を省略すると、リンクの更新方法を指定する入力が求められます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-141">If this argument is omitted, the user is prompted to specify how links will be updated.</span>
          </span>
          <span data-ttu-id="3d716-142">それ以外の場合、この引数は、次の表に記載されている値のいずれかです。WKS でファイルを開く、Microsoft Excel の場合、[WK1 または WK3 の書式を設定し、<paramref name="UpdateLinks" />の引数が 2 で、Microsoft Excel ファイルに接続されているグラフからグラフが生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-142">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span>
          </span>
          <span data-ttu-id="3d716-143">引数が 0 の場合は、グラフは作成されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-143">If the argument is 0, no charts are created.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="3d716-144">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-144">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-145">ブックを読み取り専用モードで開くには、True を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-145">True to open the workbook in read-only mode.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="3d716-146">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-147">この引数に Excel は、テキスト ファイルを開くときは、次の表に示すように、区切り文字を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-147">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span>
          </span>
          <span data-ttu-id="3d716-148">この引数を省略すると、現在の区切り記号が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-148">If this argument is omitted, the current delimiter is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="3d716-149">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-150">保護されたブックを開くためのパスワードを含む文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-150">A string that contains the password required to open a protected workbook.</span>
          </span>
          <span data-ttu-id="3d716-151">この引数を省略するし、ブックにパスワードが必要です、パスワードの入力が求められます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-151">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="3d716-152">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-152">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-153">読み取り専用のブックへの書き込みに必要なパスワードを含む文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-153">A string that contains the password required to write to a write-reserved workbook.</span>
          </span>
          <span data-ttu-id="3d716-154">この引数を省略するし、ブックにパスワードが必要です、ユーザーはパスワードを求められます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-154">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span>
          </span>
        </param>
        <param name="IgnoreReadOnlyRecommended">
          <span data-ttu-id="3d716-155">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-155">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-156">[ <b>読み取り専用を推奨する</b>] チェック ボックスをオンにして保存されたブックを開くときでも、読み取り専用を推奨するメッセージを非表示にするには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-156">
              <b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="3d716-157">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-158">ファイルがテキスト ファイルの場合は、この引数では、発生元、コード ページとキャリッジ リターンとライン フィード (CR-LF) を正しくマップすることができます) ことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-158">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span>
          </span>
          <span data-ttu-id="3d716-159">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />定数:<b>コード ページと</b>、 <b>xlWindows</b>、または<b>するために必要</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-159">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="3d716-160">この引数を省略すると、現在のオペレーティング システムが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-160">If this argument is omitted, the current operating system is used.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="3d716-161">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-162">場合は、ファイルは、テキスト ファイルで、引数<b>Format</b>には、6、この引数は、区切り記号として使用する文字を指定する文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-162">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span>
          </span>
          <span data-ttu-id="3d716-163">たとえば、タブの Chr(9) を使用して、使用、セミコロン、またはカスタムの文字を使用してコンマを使用しての「;」です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-163">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span>
          </span>
          <span data-ttu-id="3d716-164">文字列の最初の文字のみが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-164">Only the first character of the string is used.</span>
          </span>
        </param>
        <param name="Editable">
          <span data-ttu-id="3d716-165">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-165">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-166">ファイルが Microsoft Excel 4.0 のアドインの場合、この引数に<b>True</b>を表示可能なウィンドウになるようにアドインを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-166">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span>
          </span>
          <span data-ttu-id="3d716-167">この引数が<b>False</b>または省略すると、アドインを開くと、非表示、再表示にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-167">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span>
          </span>
          <span data-ttu-id="3d716-168">Microsoft Excel 5.0 以降で作成されたアドインには、このオプションは適用されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-168">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span>
          </span>
          <span data-ttu-id="3d716-169">ファイルが Excel テンプレートの場合は、 <b>True</b>を使いますを編集用に指定されたテンプレートを開くまたは<b>False</b>を指定したテンプレートに基づく新しいブックを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-169">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span>
          </span>
          <span data-ttu-id="3d716-170">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-170">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="3d716-171">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-171">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-172">場合ファイルは、読み取り/書き込みモードで開くことができません、この引数に<b>true を指定</b>ファイルを通知リストに追加するのには。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-172">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span>
          </span>
          <span data-ttu-id="3d716-173">Microsoft Excel ファイルを読み取り専用として開くには、ポーリング通知リストに、ファイルが利用可能になったらユーザーに通知されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-173">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span>
          </span>
          <span data-ttu-id="3d716-174">この引数が<b>False</b>か省略すると、通知を行わず、ファイルへのアクセスは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-174">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span>
          </span>
        </param>
        <param name="Converter">
          <span data-ttu-id="3d716-175">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-175">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-176">ファイルを開くときの最初のファイル コンバーターのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-176">The index of the first file converter to try when opening the file.</span>
          </span>
          <span data-ttu-id="3d716-177">指定したファイル コンバーターが試みられます。このコンバーターがファイルを認識しない場合は、他のすべてのコンバーターが試行されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-177">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span>
          </span>
          <span data-ttu-id="3d716-178">コンバーターのインデックスは、によって返されるコンバーターの行番号で構成されています、<see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-178">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="3d716-179">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-180">最近使用したファイルの<b>場合は true</b>の一覧にこのブックを追加するのには。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-180">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="3d716-181">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-181">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="3d716-182">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-182">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-183">
            <b>True の場合</b>は、(コントロール パネルの設定を含む)、Microsoft Excel の言語ファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-183">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="3d716-184">
            <b>False</b>(既定値) ファイルを保存する Visual Basic for Applications の言語 (VBA) では英語 (米国) から Workbooks.Open を実行している VBA プロジェクトが以前の国際化 XL5/95 VBA プロジェクトでない限り)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-184">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <param name="CorruptLoad">
          <span data-ttu-id="3d716-185">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-186">使用できる定数は、次のいずれか: <b>xlNormalLoad</b>、 <b>xlRepairFile</b>、および<b>xlExtractData</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-186">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span>
          </span>
          <span data-ttu-id="3d716-187">値が指定されていない場合の既定の動作は、通常は標準ですが、Excel のファイルを開くことが既に実行しようとしている場合、読み込みやデータの修復があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-187">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span>
          </span>
          <span data-ttu-id="3d716-188">最初の試行は、正常です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-188">The first attempt is normal.</span>
          </span>
          <span data-ttu-id="3d716-189">Excel は、ファイルを開くときに動作を停止する場合、2 回目の試行は、安全な負荷です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-189">If Excel stops operating while opening the file, the second attempt is safe load.</span>
          </span>
          <span data-ttu-id="3d716-190">場合は再度、Excel には、動作が停止した、次の試行は、データ リカバリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-190">If Excel again stops operating, the next attempt is data recovery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-191">ブックを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-191">Opens a workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3d716-192">
            <para>ファイルをプログラムで開くと、既定では、マクロが有効にします。使用して、<see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />プロパティをプログラムでファイルを開くときに使用するマクロのセキュリティ モードを設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-192">
              <para>By default, macros are enabled when opening files programmatically. Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-193">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-193">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-194">接続文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-194">The connection string.</span>
          </span>
        </param>
        <param name="CommandText">
          <span data-ttu-id="3d716-195">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-195">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-196">クエリのコマンド テキストを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-196">The command text of the query.</span>
          </span>
        </param>
        <param name="CommandType">
          <span data-ttu-id="3d716-197">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-197">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-198">クエリのコマンドの種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-198">The command type of the query.</span>
          </span>
          <span data-ttu-id="3d716-199">利用できる次のコマンドの種類: 既定、SQL、およびテーブル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-199">The following command types are available: Default, SQL, and Table.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="3d716-200">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-200">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-201">クエリのバック グラウンドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-201">The background of the query.</span>
          </span>
        </param>
        <param name="ImportDataAs">
          <span data-ttu-id="3d716-202">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-203">クエリの形式を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-203">Determines the format of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-204">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 、データベースを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-204">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-205">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-205">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-206">読み込まれるテキスト ファイルの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-206">Specifies the file name of the text file to be opened and parsed.</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="3d716-207">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-207">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-208">テキスト ファイルの原点を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-208">Specifies the origin of the text file.</span>
          </span>
          <span data-ttu-id="3d716-209">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />定数:<b>コード ページと</b>、 <b>xlWindows</b>、または<b>するために必要</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-209">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="3d716-210">さらに、適切なコード ページのコード ページ番号を表す整数値可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-210">Additionally, this could be an integer representing the code page number of the desired code page.</span>
          </span>
          <span data-ttu-id="3d716-211">たとえば、「1256」では、ソース テキスト ファイルのエンコーディングは、アラビア語 (Windows) であることは指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-211">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span>
          </span>
          <span data-ttu-id="3d716-212">この引数を省略した場合、メソッドは、<b>テキスト インポート ウィザード</b>で、元のファイル オプションの現在の設定を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-212">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span>
          </span>
        </param>
        <param name="StartRow">
          <span data-ttu-id="3d716-213">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-214">テキストの解析を開始する行の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-214">The row number at which to start parsing text.</span>
          </span>
          <span data-ttu-id="3d716-215">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-215">The default value is 1.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="3d716-216">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-216">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-217">ファイル内のデータの列の形式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-217">Specifies the column format of the data in the file.</span>
          </span>
          <span data-ttu-id="3d716-218">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />定数: <b>xlDelimited</b>または<b>xlFixedWidth</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-218">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span>
          </span>
          <span data-ttu-id="3d716-219">この引数を指定しない場合、Microsoft Excel はファイルを開いたときに列の形式を決定しようとします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-219">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="3d716-220">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-220">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="3d716-221">文字列の引用符を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-221">Specifies the text qualifier.</span>
          </span>
          <span data-ttu-id="3d716-222">これらのいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />定数。<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-222">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="3d716-223">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-224">
            <b>True を指定</b>して、連続する区切り文字では、1 つの区切り記号と見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-224">
              <b>True</b> to have consecutive delimiters considered one delimiter.</span>
          </span>
          <span data-ttu-id="3d716-225">既定では <b>False です</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-225">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="3d716-226">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-227">True を設定するタブ文字を区切り文字 (<paramref name="DataType" /><b>xlDelimited</b>をする必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-227">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="3d716-228">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-228">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="3d716-229">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-230">
            <b>True を指定</b>するセミコロンの文字があること、区切り記号 (<paramref name="DataType" /><b>xlDelimited</b>をする必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-230">
              <b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="3d716-231">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-231">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="3d716-232">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-232">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-233">
            <b>True</b>コンマ文字にする、区切り文字 (<paramref name="DataType" /><b>xlDelimited</b>をする必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-233">
              <b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="3d716-234">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-234">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="3d716-235">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-235">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-236">の<b>真</b>の空白文字、区切り文字 (<paramref name="DataType" /><b>xlDelimited</b>をする必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-236">
              <b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="3d716-237">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-237">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="3d716-238">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-238">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-239">
            <b>True</b>で指定された文字を使用して、<paramref name="OtherChar" />引数は、区切り記号である (<paramref name="DataType" /><b>xlDelimited</b>をする必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-239">
              <b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="3d716-240">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-240">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="3d716-241">省略可能な<b>オブジェクト</b>(必要な場合<paramref name="Other" />が<b>True</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-241">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="3d716-242">区切り文字を指定文字の場合<paramref name="Other" />が<b>true を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-242">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="3d716-243">複数の文字を 1 つ指定すると、文字列の最初の文字のみが使用されます。残りの文字は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-243">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="3d716-244">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-244">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          </span>
          <span data-ttu-id="3d716-245">各列のデータの解析情報を格納する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-245">An array containing parse information for individual columns of data.</span>
          </span>
          <span data-ttu-id="3d716-246">解釈の値に依存する<paramref name="DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-246">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="3d716-247">データが区切られている場合、この引数は、各 2 要素配列は特定の列の変換オプションを指定すると、2 つの要素の配列をします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-247">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="3d716-248">最初の要素は、列の番号 (1 から始まる値) と、2 番目の要素は、列を解析する方法を指定する<b>XlColumnDataType</b>定数のいずれかです。<b>xlGeneralFormat</b>一般的な<b>xlTextFormat</b>文字列<b>xlMDYFormat</b> MDY 日<b>xlDMYFormat</b>式日付<b>xlYMDFormat</b> YMD 日<b>xlMYDFormat</b>を日付<b>xlDYMFormat</b> DYM 日付<b>xlYDMFormat</b> YDM<b>xlEMDFormat</b> EMD の日付を日します。<b>xlSkipColumn</b><b>XlEMDFormat</b>は、スキップ ColumnYou がインストールして、台湾語の言語サポートを選択した場合にのみ使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-248">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span>
          </span>
          <span data-ttu-id="3d716-249">定数<b>xlEMDFormat</b>は、台湾が使用されていることを指定します。任意の順序で列の指定ができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-249">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="3d716-250">入力データの特定の列の列指定子がない場合、その列は標準設定で。<b>メモ</b>列はスキップすることを指定する場合と残りのすべての列の型を明示的に記述する必要がありますか、データが正しく解析されません。データの認識可能な日付がある場合、列の設定が [全般] の場合でもセルは、ワークシートの日付としてフォーマットされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-250">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span>
          </span>
          <span data-ttu-id="3d716-251">さらに、列の上の日付の形式のいずれかを指定して、データを含まない日付として認識すると、ワークシートのセルの書式は General.If になりますし、ソース データは固定幅の列、各 2 要素配列の最初の要素列内の先頭の文字の位置の指定 (整数で 0 (ゼロ) の文字は、最初の文字)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-251">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="3d716-252">2 要素配列の 2 番目の要素は、上記の表に記載されている、0 から 9 までの数値として列の解析オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-252">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="3d716-253">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-253">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-254">テキストの視覚的な配置を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-254">The visual layout of the text.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="3d716-255">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-255">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-256">数値を認識するときに Excel で使用する小数点の記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-256">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="3d716-257">既定の設定は、システム設定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-257">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="3d716-258">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-258">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-259">何千も Excel が数値を認識するときに使用する区切り記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-259">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="3d716-260">既定の設定は、システム設定です。次の表は、さまざまなインポート設定で Excel にテキストをインポートの結果を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-260">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span>
          </span>
          <span data-ttu-id="3d716-261">数値の結果は、右端の列に表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-261">Numeric results are displayed in the rightmost column.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="3d716-262">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-262">Optional <b>Object</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="3d716-263">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-263">Optional <b>Object</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-264">テキスト ファイルを分析して読み込みます。テキスト ファイルを 1 枚のシートとして、それを含む新しいブックを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-264">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3d716-265">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-265">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3d716-266">開くファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-266">The name of the file to open.</span>
          </span>
        </param>
        <param name="Stylesheets">
          <span data-ttu-id="3d716-267">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-268">1 つの値かを適用するには、どの XSLT (XSL 変換) スタイル シート処理命令を指定する値の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-268">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span>
          </span>
        </param>
        <param name="LoadOption">
          <span data-ttu-id="3d716-269">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-269">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3d716-270">Excel が XML データ ファイルを開く方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-270">Specifies how Excel opens the XML data file.</span>
          </span>
          <span data-ttu-id="3d716-271">これらのいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" />定数:<b>xlXmlLoadImportToList</b> XML リストの XML データ ファイルの内容を配置します。<b>xlXmlLoadMapXml</b>[ <b>XML データ構造</b>] 作業ウィンドウには、XML データ ファイルのスキーマを表示します。<b>xlXmlLoadOpenXml</b>XML データ ファイルを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-271">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span>
          </span>
          <span data-ttu-id="3d716-272">ファイルの内容を平坦化されます。<b>xlXmlLoadPromptUser</b>ファイルを開く方法を選択するように求めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-272">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d716-273">XML データ ファイルを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-273">Opens an XML data file.</span>
          </span>
          <span data-ttu-id="3d716-274">返します、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-274">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3d716-275">
            <para>、XML スプレッドシート形式で、ファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-275">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d716-p150">指定されたオブジェクトの親オブジェクトを取得します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d716-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>