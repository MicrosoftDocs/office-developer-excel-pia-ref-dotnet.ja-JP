<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50008617" /></Metadata><TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Microsoft Excel アプリケーションで <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 現在開いているすべてのオブジェクトのコレクションです。</summary>
    <remarks><para>このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> を使用して <b>Workbooks コレクションを取得</b> します。</para>
      <para>新しい <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> 空のブックを作成し、コレクションに追加するには、このメソッドを使用します。</para>
      <para>このメソッド <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> を使用してファイルを開きます。</para>
      <para>1 つの Workbook オブジェクトの使用の詳細 <b>については</b> 、オブジェクトを参照 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> してください。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>内部使用のために予約されています。 </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">省略 <b>可能なオブジェクト</b>です。 新しいブックの作成方法を指定します。 この引数が既存の Microsoft Excel ファイルの名前を指定する文字列の場合、指定したファイルをテンプレートとして使用して新しいブックが作成されます。 この引数が定数の場合、新しいブックには指定された種類のシートが 1 つ含まれます。 使用できる定数 <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> は<b>、xlWBATChart</b> <b>、xlWBATExcel4IntlMacroSheet、xlWBATExcel4MacroSheet、xlWBATWorksheet</b><b>です</b>。 <b></b> この引数を省略すると、多数の空白シートを含む新しいブックが作成されます (シート数は <b>SheetsInNewWorkbook</b> プロパティによって設定されます)。</param>
        <summary>新しいブックを作成します。 新しいブックが作業中のブックになります。 オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>引数に <paramref name="Template" /> ファイルを指定する場合は、ファイル名にパスを含めることができるようになりました。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Excel アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトを返します。 読み取り専用です。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 チェックアウトするファイルの名前を指定します。</param>
        <summary>Microsoft Excel によって指定したブックをサーバーからチェックアウトできる場合は <b>True</b> です。 取得/設定が可能な <b>Boolean</b> 値です。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 チェックアウトするファイルの名前を指定します。</param>
        <summary>指定されたブックをサーバーからローカル コンピューターにコピーして編集します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトを閉じます。</summary>
        <remarks><para><b>Close</b>メソッドを使用してブックを閉じても、ブックAuto_Closeマクロは実行されません。 このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を使用して、自動閉じるマクロを実行します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内にあるオブジェクトの数を返します。 整数型 ( <b>Integer</b>) の値を使用します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。 Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。 読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> です。</summary>
        <value>To be added.</value>
        <remarks><para><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。 たとえば、Microsoft Excel の作成元コードは XCEL です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Required <b>Object</b>. オブジェクトの名前またはインデックス番号を指定します。</param>
        <summary>コレクションから単一のオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 開くブックのファイル名です。</param>
        <param name="UpdateLinks">省略 <b>可能なオブジェクト</b>です。 ファイル内のリンクの更新方法を指定します。 この引数を省略すると、リンクの更新方法を指定するように求めるメッセージが表示されます。 それ以外の場合、この引数は次の表に示す値の 1 つになります。WKS、WK1、または WK3 形式のファイルを開き、引数が 2 の場合、ファイルに添付されたグラフからグラフが生成されます。 <paramref name="UpdateLinks" /> 引数に 0 を指定すると、グラフは作成されません。</param>
        <param name="ReadOnly">省略 <b>可能なオブジェクト</b>です。 ブックを読み取り専用モードで開くには、True を指定します。</param>
        <param name="Format">省略 <b>可能なオブジェクト</b>です。 テキスト ファイルを開く場合は、次の表に示すように、この引数で区切り文字を指定します。 この引数を省略すると、現在の区切り文字が使用されます。</param>
        <param name="Password">省略 <b>可能なオブジェクト</b>です。 パスワード保護されたブックを開くのに必要なパスワードを指定します。 この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</param>
        <param name="WriteResPassword">省略 <b>可能なオブジェクト</b>です。 書き込み保護されたブックに書き込みをするために必要なパスワードを指定します。 この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</param>
        <param name="IgnoreReadOnlyRecommended">省略 <b>可能なオブジェクト</b>です。 [ <b>読み取り専用を推奨する</b>] チェック ボックスをオンにして保存されたブックを開くときでも、読み取り専用を推奨するメッセージを非表示にするには、 <b>True</b> を指定します。</param>
        <param name="Origin">省略 <b>可能なオブジェクト</b>です。 ファイルがテキスト ファイルの場合、この引数は発生元を示します (コード ページとキャリッジ リターン/ライン フィード (CR/LF) を正しくマップできます)。 使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>、xlMacintosh</b> <b>、xlWindows、または</b> <b>xlMSDOS です</b>。 この引数を省略すると、現在のオペレーティング システムが使用されます。</param>
        <param name="Delimiter">省略 <b>可能なオブジェクト</b>です。 ファイルがテキスト ファイルで、引数 <b>Format</b> が 6 の場合、この引数は区切り文字として使用する文字を指定する文字列です。 たとえば、タブには Chr(9) を使用し、コンマには "," を使用し、セミコロンには ";" を使用し、ユーザー設定の文字を使用します。 文字列の最初の文字だけが使用されます。</param>
        <param name="Editable">省略 <b>可能なオブジェクト</b>です。 ファイルが Microsoft Excel 4.0 アドインの場合、この引数 <b>は True</b> に設定され、アドインが表示ウィンドウで開きます。 この引数に <b>False</b> を指定するか、この引数を省略すると、アドインは非表示の状態で開かれ、ウィンドウとして表示することはできません。 このオプションは、Microsoft Excel 5.0 以降で作成されたアドインには適用されません。 ファイルが Excel テンプレートの場合は <b>、True</b> を使用して指定したテンプレートを編集用に開き <b>、False</b> を使用して、指定したテンプレートに基づいて新しいブックを開きます。 既定値は <b>False</b> です。</param>
        <param name="Notify">省略 <b>可能なオブジェクト</b>です。 ファイルが読み取り/書き込みモードで開けない場合に、ファイルを通知リストに追加するには、<b>True</b> を指定します。 ファイルが読み取り専用モードで開かれて通知リストに追加され、ファイルが編集可能になった時点でユーザーに通知されます。 ファイルが開けない場合に、このような通知を行わずにエラーを発生させるには、 <b>False</b> を指定するか省略します。</param>
        <param name="Converter">省略 <b>可能なオブジェクト</b>です。 ファイルを開く際に最初に試すファイル コンバーターのインデックスを指定します。 指定されたファイル コンバーターが最初に試みされます。このコンバータがファイルを認識しない場合は、他のすべてのコンバータが試みされます。 コンバータ インデックスは、プロパティによって返されるコンバータの行番号で構成 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> されます。</param>
        <param name="AddToMru">省略 <b>可能なオブジェクト</b>です。 最近使用したファイルの一覧にブックを追加するには、<b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="Local">省略 <b>可能なオブジェクト</b>です。 <b>True を</b> 指定すると、Excel の言語 (コントロール パネルの設定を含む) に対してファイルが保存されます。 <b>False</b> (既定値) を指定すると、Visual Basic for Applications (VBA) の言語 (Workbooks.Open を実行する VBA プロジェクトが国際化された古い XL5/95 VBA プロジェクトではない限り、通常は英語 (米国)) に対してファイルを保存します。</param>
        <param name="CorruptLoad">省略 <b>可能なオブジェクト</b>です。 使用できる定数は<b>、xlNormalLoad</b> <b>、xlRepairFile、</b><b>および xlExtractData です</b>。 通常、値が指定されていない場合の既定の動作は正常ですが、Excel がファイルを開く試みを既に試みた場合は、安全な読み込みまたはデータ回復である可能性があります。 最初の試行は正常です。 Excel がファイルを開く間に動作を停止した場合、2 回目の試行は安全な読み込みです。 Excel が再び動作を停止した場合、次の試行はデータ回復です。</param>
        <summary>ブックを開きます。</summary>
        <returns>To be added.</returns>
        <remarks><para>既定では、ファイルをプログラムで開くとき、マクロは有効です。 このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> を使用して、プログラムでファイルを開く際に使用するマクロ セキュリティ モードを設定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 接続文字列を指定します。</param>
        <param name="CommandText">省略 <b>可能なオブジェクト</b>です。 クエリのコマンド テキストを指定します。</param>
        <param name="CommandType">省略 <b>可能なオブジェクト</b>です。 クエリのコマンド タイプを指定します。 使用できるコマンドの種類は、Default、SQL、Table です。</param>
        <param name="BackgroundQuery">省略 <b>可能なオブジェクト</b>です。 クエリの背景。</param>
        <param name="ImportDataAs">省略 <b>可能なオブジェクト</b>です。 クエリの形式を指定します。</param>
        <summary>データベースを表 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 読み込まれるテキスト ファイルの名前を指定します。</param>
        <param name="Origin">省略 <b>可能なオブジェクト</b>です。 テキスト ファイルの元のプラットフォームを指定します。 使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>、xlMacintosh</b> <b>、xlWindows、または</b> <b>xlMSDOS です</b>。 また、目的のコード ページのコード ページ番号を表す整数値を指定することもできます。 たとえば、"1256" の場合、ソース テキスト ファイルのエンコードは "アラビア語 (Windows)" であることを示します。 この引数を省略すると、このメソッドは、 テキスト インポート ウィザードの [ <b>元のファイル</b>] の現在の設定値を使用します。</param>
        <param name="StartRow">省略 <b>可能なオブジェクト</b>です。 テキストの解析を開始する行番号を指定します。 既定値は 1 です。</param>
        <param name="DataType">省略 <b>可能なオブジェクト</b>です。 ファイルに含まれるデータの形式を指定します。 使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> <b>、xlDelimited</b> または <b>xlFixedWidth です</b>。 この引数を省略すると、ファイルを開いたときにデータの形式が自動的に決められます。</param>
        <param name="TextQualifier">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 可能です。 文字列の引用符を指定します。 使用できる定数は、 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 次に示す定数の 1 つです。<b>xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></param>
        <param name="ConsecutiveDelimiter">省略 <b>可能なオブジェクト</b>です。 連続した区切り文字を 1 文字として扱うときは  <b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="Tab">省略 <b>可能なオブジェクト</b>です。 True の 区切り記号にタブ文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。 既定値は <b>False</b> です。</param>
        <param name="Semicolon">省略 <b>可能なオブジェクト</b>です。 <b>True</b> の 区切り記号にセミコロンを付けます ( <paramref name="DataType" /> <b>xlDelimited を指定する必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="Comma">省略 <b>可能なオブジェクト</b>です。 <b>True</b> の 区切り記号にコンマ文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。 既定値は <b>False</b> です。</param>
        <param name="Space">省略 <b>可能なオブジェクト</b>です。 <b>True</b> の 区切り記号にスペース文字を設定する ( <paramref name="DataType" /> <b>xlDelimited</b>) 必要があります。 既定値は <b>False</b> です。</param>
        <param name="Other">省略 <b>可能なオブジェクト</b>です。 <b>引数で</b> 指定した文字を区切り文字 <paramref name="OtherChar" /> <paramref name="DataType" /> <b>(xlDelimited ) に設定するには、True を指定します</b>。 既定値は <b>False</b> です。</param>
        <param name="OtherChar">省略 <b>可能なオブジェクト</b> (True の <paramref name="Other" /> 場合は <b>必須</b>)。 True の場合、区切り文字 <paramref name="Other" /> を指定 <b>します</b>。 If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
        <param name="FieldInfo">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> 可能です。 各列のデータ形式を示す配列を指定します。 解釈は、 <paramref name="DataType" /> . データが区切り記号で区切られている場合は、この引数に 2 要素配列の配列を使用して、配列内の各 2 要素配列が特定の列の変換オプションを指定するようにします。 最初の要素は列番号 (1 から始)、2 番目の要素は列の解析方法を指定する<b>XlColumnDataType</b> 定数の 1 つです。<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected taiwanese language support. <b>定数 xlEMDFormat</b>は、台湾の元号の日付を使用します。列指定子は任意の順序で指定できます。 入力データに特定の列の列指定子がない場合、その列は [全般] 設定で解析されます。<b>メモ</b>列をスキップするように指定した場合は、残りのすべての列の種類を明示的に指定する必要があります。そうしない場合、データは正しく解析されません。データに認識可能な日付がある場合、列の設定が [全般] の場合でも、セルはワークシートの日付として書式設定されます。 さらに、列に上記のいずれかの日付形式を指定し、データに認識可能な日付が含まれている場合、ワークシートのセル形式は General になります。ソース データに固定幅列がある場合、各 2 要素配列の最初の要素は、列内の開始文字の位置を整数で指定し、文字 0 (ゼロ) が最初の文字です。 The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</param>
        <param name="TextVisualLayout">省略 <b>可能なオブジェクト</b>です。 テキストの視覚的な配置を指定します。</param>
        <param name="DecimalSeparator">省略 <b>可能なオブジェクト</b>です。 Excel で数値を認識する場合に使う小数点の記号です。 既定はシステム設定です。</param>
        <param name="ThousandsSeparator">省略 <b>可能なオブジェクト</b>です。 Excel で数値を認識する場合に使う桁区切り記号です。 既定の設定はシステム設定です。次の表は、さまざまなインポート設定で Excel にテキストをインポートした結果を示しています。 数値の結果は右詰めで表示します。</param>
        <param name="TrailingMinusNumbers">省略 <b>可能なオブジェクト</b>です。</param>
        <param name="Local">省略 <b>可能なオブジェクト</b>です。</param>
        <summary>テキスト ファイルを分析して読み込みます。テキスト ファイルを 1 枚のシートとして、それを含む新しいブックを開きます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 開くファイル名を指定します。</param>
        <param name="Stylesheets">省略 <b>可能なオブジェクト</b>です。 適用する XSL 変換 (XSLT) スタイル シート処理命令を指定する単一の値または値の配列。</param>
        <param name="LoadOption">省略 <b>可能なオブジェクト</b>です。 Excel が XML データ ファイルを開く方法を指定します。 使用できる定数は、 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> <b>次のいずれかの定数です。xlXmlLoadImportToList</b> XML データ ファイルの内容を XML リストに格納します。<b>xlXmlLoadMapXml</b> XML データ ファイルのスキーマを <b>[XML データ</b> 構造] 作業ウィンドウに表示します。<b>xlXmlLoadOpenXml</b> XML データ ファイルを開きます。 ファイルの内容はフラット化されます。<b>xlXmlLoadPromptUser</b> ファイルを開く方法を選択するようにユーザーに求めるメッセージが表示されます。</param>
        <summary>XML データ ファイルを開きます。 オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの親オブジェクトを返します。 読み取り専用です。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>