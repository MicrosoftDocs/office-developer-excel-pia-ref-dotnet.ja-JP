<Type Name="Window" FullName="Microsoft.Office.Interop.Excel.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="628d319ce41e267cd4a082a94f976467ed8bebe1" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009262" /></Metadata><TypeSignature Language="C#" Value="public interface Window" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Window" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Window" />
  <TypeSignature Language="VB.NET" Value="Public Interface Window" />
  <TypeSignature Language="C++ CLI" Value="public interface class Window" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020893-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59203-101">ウィンドウを表します。</span><span class="sxs-lookup"><span data-stu-id="59203-101">Represents a window.</span></span> <span data-ttu-id="59203-102">スクロール バーやグリッド線など、多くのワークシート特性は、実際にはウィンドウのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="59203-102">Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</span></span></summary>
    <remarks><para><span data-ttu-id="59203-103"><b>Window オブジェクト</b>はコレクションのメンバー <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> です。</span><span class="sxs-lookup"><span data-stu-id="59203-103">The <b>Window</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span></span> <span data-ttu-id="59203-104">オブジェクトのプロパティによって返される<b>Windows</b>コレクションには、アプリケーション内のすべてのウィンドウが含まれますが、オブジェクトのプロパティによって返される Windows コレクションには、指定されたブック内のウィンドウだけが含まれます <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> <see cref="T:Microsoft.Office.Interop.Excel.Application" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 。</span><span class="sxs-lookup"><span data-stu-id="59203-104">The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</span></span></para>
      <para><span data-ttu-id="59203-105">単 <b>一の Window</b>オブジェクトを取得するには、Windows ( ) を使用します。ウィンドウ名またはインデックス番号 <paramref name="index" /> <paramref name="index" /> を <b>指定</b> します。</span><span class="sxs-lookup"><span data-stu-id="59203-105">Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</span></span></para>
      <para><span data-ttu-id="59203-106">アクティブ ウィンドウは常に Windows(1) と記述します。</span><span class="sxs-lookup"><span data-stu-id="59203-106">Note that the active window is always Windows(1).</span></span></para>
      <para><span data-ttu-id="59203-107">ウィンドウ名は、ウィンドウを最大化していないときにウィンドウの一番上のタイトル バーに表示される名前です。</span><span class="sxs-lookup"><span data-stu-id="59203-107">The window caption is the text shown in the title bar at the top of the window when the window isn’t maximized.</span></span> <span data-ttu-id="59203-108">ウィンドウ名は、[ウィンドウ] メニューの下の部分で、開いているファイルの一覧にも表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-108">The caption is also shown in the list of open files on the bottom of the Windows menu.</span></span> <span data-ttu-id="59203-109">このプロパティを <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> 使用して、ウィンドウのキャプションを設定または取得します。</span><span class="sxs-lookup"><span data-stu-id="59203-109">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> property to set or return the window caption.</span></span> <span data-ttu-id="59203-110">ウィンドウ名を変更しても、ブックの名前は変更されません。</span><span class="sxs-lookup"><span data-stu-id="59203-110">Changing the window caption doesn’t change the name of the workbook.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-111">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="59203-111">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59203-112">ウィンドウを Z オーダーの前面に移動します。</span><span class="sxs-lookup"><span data-stu-id="59203-112">Brings the window to the front of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-113"><b>Activate メソッド</b>は、ブックにAuto_ActivateされるAuto_Deactivateマクロを実行したり、マクロを実行したりしない。</span><span class="sxs-lookup"><span data-stu-id="59203-113">The <b>Activate</b> method won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook.</span></span> <span data-ttu-id="59203-114">これらのマクロ <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を実行するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-114">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateNext">
      <MemberSignature Language="C#" Value="public object ActivateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivateNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivateNext" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivateNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59203-115">指定されたウィンドウをアクティブにし、z オーダーでウィンドウの最背面に送信します。</span><span class="sxs-lookup"><span data-stu-id="59203-115">Activates the specified window, and then sends it to the back of the window z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePrevious">
      <MemberSignature Language="C#" Value="public object ActivatePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivatePrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivatePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivatePrevious () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivatePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59203-116">指定されたウィンドウをアクティブにし、次に Z オーダーで一番後ろにあるウィンドウをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="59203-116">Activates the specified window and then activates the window at the back of the window z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-117">アクティブ ウィンドウ (一番上のウィンドウ) または指定したウィンドウのアクティブ セルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-117">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="59203-118">ウィンドウに表示されているワークシートが表示されていない場合は、このプロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="59203-118">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-119">対象となるオブジェクトを指定しない場合は、アクティブ ウィンドウのアクティブ セルが返されます。</span><span class="sxs-lookup"><span data-stu-id="59203-119">If you don't specify an object qualifier, this property returns the active cell in the active window.</span></span></para>
          <para><span data-ttu-id="59203-p106">アクティブ セルと選択セル範囲を混同しないように注意してください。アクティブ セルは、現在の選択セル範囲内の単一セルを指します。選択セル範囲には、複数のセルが含まれる場合がありますが、アクティブ セルはその中の 1 つだけを指します。</span><span class="sxs-lookup"><span data-stu-id="59203-p106">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-123">アクティブなグラフ (埋め込みグラフまたはグラフ シート) を表す <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-123">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="59203-124">埋め込みグラフは、アクティブにされている状態だけではなく、選択されただけの状態でもアクティブと見なされます。</span><span class="sxs-lookup"><span data-stu-id="59203-124">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="59203-125">アクティブなグラフがないときは、 <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-125">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-126">対象となるオブジェクトを指定しない場合、このプロパティでは作業中のブックのアクティブなグラフが返されます。</span><span class="sxs-lookup"><span data-stu-id="59203-126">If you don't specify an object qualifier, this property returns the active chart in the active workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePane">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Pane ActivePane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Pane ActivePane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActivePane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivePane As Pane" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Pane ^ ActivePane { Microsoft::Office::Interop::Excel::Pane ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Pane</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-127">ウィンドウ内の <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> アクティブなウィンドウ枠を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object that represents the active pane in the window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-128">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-128">This property can be used only on worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="59203-129">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> を使用して、アクティブなウィンドウ枠のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="59203-129">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property to obtain the index of the active pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-p108">作業中のブックまたは指定したウィンドウやブックにあるアクティブ シート (一番手前のシート) を表すオブジェクトを返します。アクティブ シートが存在しないときは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value><span data-ttu-id="59203-132"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="59203-132"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="59203-133">対象となるオブジェクトを指定しない場合は、作業中のブックのアクティブ シートが返されます。</span><span class="sxs-lookup"><span data-stu-id="59203-133">If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</span></span></para>
          <para><span data-ttu-id="59203-134">ブックを複数のウィンドウで表示している場合、異なるウィンドウでは <b>ActiveSheet</b> プロパティの値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="59203-134">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheetView">
      <MemberSignature Language="C#" Value="public object ActiveSheetView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheetView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheetView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheetView As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheetView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-135">指定されたウィンドウでのアクティブ シートの表示モードを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="59203-135">Returns an object that represents the view of the active sheet in the specified window.</span></span> <span data-ttu-id="59203-136">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="59203-136">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-137">Excel アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-137">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterDateGrouping">
      <MemberSignature Language="C#" Value="public bool AutoFilterDateGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterDateGrouping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.AutoFilterDateGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterDateGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterDateGrouping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-138"><b>True</b> の 場合は、日付のグループ化の自動フィルターが現在、指定したウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-138"><b>True</b> if the auto filter for date grouping is currently displayed in the specified window.</span></span> <span data-ttu-id="59203-139">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="59203-139">Read/write.</span></span></summary>
        <value><span data-ttu-id="59203-140"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="59203-140"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public object Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caption { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-141">ドキュメント ウィンドウのタイトル バーに表示される名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-141">The name that appears in the title bar of the document window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><span data-ttu-id="59203-142">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-142">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-143">ブックに変更がない場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="59203-143">If there are no changes to the workbook, this argument is ignored.</span></span> <span data-ttu-id="59203-144">ブックに変更があり、開いている他のウィンドウに表示されている場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="59203-144">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span></span> <span data-ttu-id="59203-145">ブックに変更があるが、ブックが他の開いているウィンドウに表示されない場合は、次の表に示すように、この引数は変更を保存するかどうかを指定します。ValueAction<b>True 変更</b>をブックに保存します。</span><span class="sxs-lookup"><span data-stu-id="59203-145">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span></span> <span data-ttu-id="59203-146">ブックに関連付けられているファイル名がまだない場合は、そのファイル名が <paramref name="FileName" /> 使用されます。</span><span class="sxs-lookup"><span data-stu-id="59203-146">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span></span> <span data-ttu-id="59203-147">省略 <paramref name="FileName" /> すると、ユーザーはファイル名を指定する必要があります。<b>False</b>このファイルに対する変更を保存します。Omitted ユーザーに変更を保存するかどうかを確認するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="59203-147">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span></span></param>
        <param name="Filename"><span data-ttu-id="59203-148">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-149">変更後のブックのファイル名。</span><span class="sxs-lookup"><span data-stu-id="59203-149">Save changes under this file name.</span></span></param>
        <param name="RouteWorkbook"><span data-ttu-id="59203-150">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-151">ブックを次の受信者に回覧する必要がない場合 (回覧用紙がないか、既に回覧されている場合)、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="59203-151">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span></span> <span data-ttu-id="59203-152">それ以外の場合は、次の表に示すようにブックが回覧されます。ValueMeaning<b>True ブックを</b>次の受信者に送信します。<b>False</b>ブックを送信しない。Omitted ブックを送信するかどうかをユーザーに確認するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="59203-152">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span></span></param>
        <summary><span data-ttu-id="59203-153">オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="59203-153">Closes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-154">Close <b>メソッド</b> は、ブック内のマクロAuto_Close実行されません。</span><span class="sxs-lookup"><span data-stu-id="59203-154">The <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="59203-155">このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を使用して、自動閉じるマクロを実行します。</span><span class="sxs-lookup"><span data-stu-id="59203-155">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-156">このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-156">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-157">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-157">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="59203-158"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="59203-158">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="59203-159">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="59203-159">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulas">
      <MemberSignature Language="C#" Value="public bool DisplayFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-160">ウィンドウに数式が表示されている場合は <b>True</b>、ウィンドウに値が表示されている場合は <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-160"><b>True</b> if the window is displaying formulas; <b>False</b> if the window is displaying values.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-161">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-161">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayGridlines">
      <MemberSignature Language="C#" Value="public bool DisplayGridlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayGridlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayGridlines" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayGridlines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayGridlines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-162"><b>True の</b> 場合は、グリッド線が表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-162"><b>True</b> if gridlines are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-163">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-163">This property applies only to worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="59203-164">このプロパティが制御できるのは、枠線の表示/非表示の設定だけです。</span><span class="sxs-lookup"><span data-stu-id="59203-164">This property affects only displayed gridlines.</span></span> <span data-ttu-id="59203-165">グリッド線 <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> の印刷を制御するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-165">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> property to control the printing of gridlines.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHeadings">
      <MemberSignature Language="C#" Value="public bool DisplayHeadings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHeadings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHeadings" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHeadings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHeadings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-166"><b>True の</b> 場合は、行と列の見出しの両方が表示されます。 <b>False</b> 見出しが表示されない場合です。</span><span class="sxs-lookup"><span data-stu-id="59203-166"><b>True</b> if both row and column headings are displayed; <b>False</b> if there are no headings displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-167">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-167">This property applies only to worksheets and macro sheets.</span></span></para>
          <para><span data-ttu-id="59203-168">このプロパティが制御できるのは、行列番号の表示/非表示の設定だけです。</span><span class="sxs-lookup"><span data-stu-id="59203-168">This property affects only displayed headings.</span></span> <span data-ttu-id="59203-169">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> を使用して、見出しの印刷を制御します。</span><span class="sxs-lookup"><span data-stu-id="59203-169">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> property to control the printing of headings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHorizontalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayHorizontalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHorizontalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHorizontalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-170">水平スクロール バーが表示される場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-170"><b>True</b> if the horizontal scroll bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayOutline">
      <MemberSignature Language="C#" Value="public bool DisplayOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayOutline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayOutline" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayOutline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayOutline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-171">アウトライン記号を表示する場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-171"><b>True</b> if outline symbols are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-172">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-172">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-173"><b>True</b> の 場合は、指定したウィンドウが左から右ではなく右から左に表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-173"><b>True</b> if the specified window is displayed from right to left instead of from left to right.</span></span> <span data-ttu-id="59203-174"><b>False</b> の 場合は、オブジェクトが左から右に表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-174"><b>False</b> if the object is displayed from left to right.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRuler">
      <MemberSignature Language="C#" Value="public bool DisplayRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRuler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRuler" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRuler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRuler { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-175">指定したウィンドウにルーラーが表示される場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="59203-175"><b>True</b> if a ruler is displayed for the specified window.</span></span> <span data-ttu-id="59203-176">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="59203-176">Read/write.</span></span></summary>
        <value><span data-ttu-id="59203-177"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="59203-177"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayVerticalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayVerticalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayVerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayVerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayVerticalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayVerticalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-178">垂直スクロール バーが表示される場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-178"><b>True</b> if the vertical scroll bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWhitespace">
      <MemberSignature Language="C#" Value="public bool DisplayWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWhitespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-179">空白が表示されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-179"><b>True</b> if whitespace is displayed.</span></span> <span data-ttu-id="59203-180">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="59203-180">Read/write.</span></span></summary>
        <value><span data-ttu-id="59203-181"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="59203-181"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWorkbookTabs">
      <MemberSignature Language="C#" Value="public bool DisplayWorkbookTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWorkbookTabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWorkbookTabs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWorkbookTabs { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-182"><b>True の</b> 場合、ブックのタブが表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-182"><b>True</b> if the workbook tabs are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayZeros">
      <MemberSignature Language="C#" Value="public bool DisplayZeros { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayZeros" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayZeros" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayZeros As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayZeros { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-183">ゼロ値が表示されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-183"><b>True</b> if zero values are displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-184">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-184">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-185">ウィンドウのサイズが変更可能な場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-185"><b>True</b> if the window can be resized.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezePanes">
      <MemberSignature Language="C#" Value="public bool FreezePanes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FreezePanes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" />
      <MemberSignature Language="VB.NET" Value="Public Property FreezePanes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FreezePanes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-186"><b>True の</b> 分割ウィンドウが固定されている場合です。</span><span class="sxs-lookup"><span data-stu-id="59203-186"><b>True</b> if split panes are frozen.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-187"><b>FreezePanes</b>を True にしたり<b>、False</b>にしたり、False にしたり <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> することもできます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="59203-187">It’s possible for <b>FreezePanes </b>to be <b>True</b> and <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> to be <b>False</b>, or vice versa.</span></span></para>
          <para><span data-ttu-id="59203-188">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-188">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColor">
      <MemberSignature Language="C#" Value="public int GridlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GridlineColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GridlineColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-189">枠線の色を RGB 値で設定または返します。</span><span class="sxs-lookup"><span data-stu-id="59203-189">Returns or sets the gridline color as an RGB value.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex GridlineColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-190">現在のカラー パレットのインデックスまたは定数として、枠線の色を設定または返 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> します。</span><span class="sxs-lookup"><span data-stu-id="59203-190">Returns or sets the gridline color as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-191">自動的に設定するには、定数 <b>xlColorIndexAutomatic</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-191">Set this property to <b>xlColorIndexAutomatic</b> to specify the automatic color.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-192">ウィンドウの高さをポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-192">The height of the window in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-193">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> を使用して、ウィンドウの最大サイズを決定します。</span><span class="sxs-lookup"><span data-stu-id="59203-193">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> property to determine the maximum size for the window.</span></span> <span data-ttu-id="59203-194">ウィンドウを最大化または最小化されている場合は、このプロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="59203-194">You cannot set this property if the window is maximized or minimized.</span></span> <span data-ttu-id="59203-195">このプロパティを <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> 使用してウィンドウの状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="59203-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-196">指定されたウィンドウのウィンドウ ハンドルを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-196">Returns the window handle of the specified window.</span></span></summary>
        <value><span data-ttu-id="59203-197">整数 (C# の整数)</span><span class="sxs-lookup"><span data-stu-id="59203-197">Integer (int in C#)</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-198">類似するオブジェクトのコレクション内のオブジェクトのインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-198">Returns the index number of the object within the collection of similar objects.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeScroll">
      <MemberSignature Language="C#" Value="public object LargeScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LargeScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LargeScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down"><span data-ttu-id="59203-199">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-199">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-200">文字列を下にスクロールするページ数。</span><span class="sxs-lookup"><span data-stu-id="59203-200">The number of pages to scroll the contents down.</span></span></param>
        <param name="Up"><span data-ttu-id="59203-201">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-201">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-202">文字列を上にスクロールするページ数。</span><span class="sxs-lookup"><span data-stu-id="59203-202">The number of pages to scroll the contents up.</span></span></param>
        <param name="ToRight"><span data-ttu-id="59203-203">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-204">文字列を右にスクロールするページ数。</span><span class="sxs-lookup"><span data-stu-id="59203-204">The number of pages to scroll the contents to the right.</span></span></param>
        <param name="ToLeft"><span data-ttu-id="59203-205">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-205">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-206">文字列を左にスクロールするページ数。</span><span class="sxs-lookup"><span data-stu-id="59203-206">The number of pages to scroll the contents to the left.</span></span></param>
        <summary><span data-ttu-id="59203-207">指定されたページ数分だけ、ウィンドウの文字列をスクロールします。</span><span class="sxs-lookup"><span data-stu-id="59203-207">Scrolls the contents of the window by pages.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-208">両方を指定すると、ウィンドウの内容が引数の差 <paramref name="Down" /> <paramref name="Up" /> でスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-208">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="59203-209">たとえば、3 で 6 の場合、コンテンツは <paramref name="Down" /> <paramref name="Up" /> 3 ページ上にスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-209">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three pages.</span></span></para>
          <para><span data-ttu-id="59203-210">両方を指定すると、ウィンドウの内容が引数の差 <paramref name="ToLeft" /> <paramref name="ToRight" /> でスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-210">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="59203-211">たとえば、3 で 6 の場合、コンテンツは右に <paramref name="ToLeft" /> <paramref name="ToRight" /> 3 ページ分スクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-211">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three pages.</span></span></para>
          <para><span data-ttu-id="59203-212">どの引数も負の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="59203-212">Any of the arguments can be a negative number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-213">クライアント領域の左側からウィンドウの左側までの距離をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-213">The distance in points from the left edge of the client area to the left edge of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59203-214">新しいウィンドウ、または指定されたウィンドウのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="59203-214">Creates a new window or a copy of the specified window.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-215">ウィンドウをアクティブ化するたびに実行されるプロシージャの名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-215">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-216">このプロパティで指定したプロシージャは、マウスでウィンドウをクリックした場合など、ユーザーの動作に応答して実行されます。</span><span class="sxs-lookup"><span data-stu-id="59203-216">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="59203-217">代わりに、マウスでウィンドウをクリックしたり、[編集] メニューの [移動] をクリックしたりなど、ユーザーの操作に応答します。</span><span class="sxs-lookup"><span data-stu-id="59203-217">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="59203-218">ワークシートまたはマクロ シートに Auto_Activate または Auto_Deactivate マクロが定義されている場合、これらのマクロは <b>OnWindow</b> プロパティで指定されたプロシージャの後で実行されます。</span><span class="sxs-lookup"><span data-stu-id="59203-218">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Panes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Panes Panes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Panes Panes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Panes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Panes As Panes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Panes ^ Panes { Microsoft::Office::Interop::Excel::Panes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Panes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-219">指定した <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> ウィンドウのすべてのウィンドウ枠を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-219">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> collection that represents all the panes in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-220">このプロパティは、ウィンドウのプロパティを True に設定できる場合にのみ <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> 使用 <b>できます</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-220">This property is available for a window only if the window’s <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> property can be set to <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-221">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-221">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsX">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsX (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsX([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsX (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsX(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points"><span data-ttu-id="59203-222">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-222">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-223">変換する横方向の長さを、ドキュメント ウィンドウの左端を基点としたポイント単位の値で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-223">The number of points horizontally along the top of the document window, starting from the left.</span></span></param>
        <summary><span data-ttu-id="59203-224">横方向の長さの値をポイント (ドキュメント座標) からピクセル (画面座標) に変換します。</span><span class="sxs-lookup"><span data-stu-id="59203-224">Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsY">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsY (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsY([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsY (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsY(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points"><span data-ttu-id="59203-225">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-225">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-226">変換する縦方向の長さを、ドキュメント ウィンドウの上端を基点としたポイント単位の値で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-226">The number of points vertically along the left edge of the document window, starting from the top.</span></span></param>
        <summary><span data-ttu-id="59203-227">縦方向の長さの値をポイント (ドキュメント座標) からピクセル (画面座標) に変換します。</span><span class="sxs-lookup"><span data-stu-id="59203-227">Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="59203-228">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-228">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-229">印刷を開始するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-229">The number of the page at which to start printing.</span></span> <span data-ttu-id="59203-230">この引数を省略すると、最初のページから印刷します。</span><span class="sxs-lookup"><span data-stu-id="59203-230">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="59203-231">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-231">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-232">印刷を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-232">The number of the last page to print.</span></span> <span data-ttu-id="59203-233">この引数を省略すると、最後のページまで印刷します。</span><span class="sxs-lookup"><span data-stu-id="59203-233">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="59203-234">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-234">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-235">印刷部数を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-235">The number of copies to print.</span></span> <span data-ttu-id="59203-236">この引数を省略すると、印刷部数は 1 部になります。</span><span class="sxs-lookup"><span data-stu-id="59203-236">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="59203-237">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-237">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-238"><b>True</b> の場合、印刷をする前に印刷プレビューを実行します。</span><span class="sxs-lookup"><span data-stu-id="59203-238"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="59203-239"><b>False</b>、または省略した場合、直ちに印刷を行います。</span><span class="sxs-lookup"><span data-stu-id="59203-239"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="59203-240">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-240">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-241">アクティブなプリンターの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-241">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="59203-242">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-242">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-243"><b>True</b> の場合、ファイルへ出力します。</span><span class="sxs-lookup"><span data-stu-id="59203-243"><b>True</b> to print to a file.</span></span> <span data-ttu-id="59203-244">指定 <paramref name="PrToFileName" /> しない場合は、出力ファイルの名前を入力するように求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-244">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="59203-245">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-245">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-246"><b>True</b> の場合、部単位で印刷します。</span><span class="sxs-lookup"><span data-stu-id="59203-246"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="59203-247">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-247">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-248"><paramref name="PrintToFile" />True に設定<b>されている</b>場合、この引数は印刷するファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-248">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="59203-249">オブジェクトを印刷します。</span><span class="sxs-lookup"><span data-stu-id="59203-249">Prints the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-250">シートまたはブックの全体的なページではなく、印刷されたページの説明と参照の "ページ" <paramref name="From" /> <paramref name="To" /> です。</span><span class="sxs-lookup"><span data-stu-id="59203-250">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="59203-251">プレビュー中の変更を有効にする。</span><span class="sxs-lookup"><span data-stu-id="59203-251">Enables changes during preview.</span></span></param>
        <summary><span data-ttu-id="59203-252">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span><span class="sxs-lookup"><span data-stu-id="59203-252">Shows a preview of the object as it would look when printed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public object RangeFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RangeFromPoint([in]int32 x, [in]int32 y) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (x As Integer, y As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RangeFromPoint(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="59203-253">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-253">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-254">画面の左端から目的のポイントまでの横方向の距離をピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-254">The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</span></span></param>
        <param name="y"><span data-ttu-id="59203-255">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-255">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-256">画面の上端から目的のポイントまでの縦方向の距離をピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-256">The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</span></span></param>
        <summary><span data-ttu-id="59203-257">指定した画面 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 座標 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のペアに配置されているオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-257">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is positioned at the specified pair of screen coordinates.</span></span> <span data-ttu-id="59203-258">指定した座標に図形が配置されていない場合、このメソッドは Nothing を返 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-258">If there isn’t a shape located at the specified coordinates, this method returns <b>Nothing</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RangeSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RangeSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.RangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RangeSelection As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RangeSelection { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-259">グラフィック オブジェクトがアクティブまたはワークシート上で選択されている場合でも、指定されたウィンドウのワークシートで選択されているセルを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the selected cells on the worksheet in the specified window even if a graphic object is active or selected on the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-260">ワークシートでグラフィック オブジェクトを選択すると、Range オブジェクトではなくグラフィック オブジェクトが返されます <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> <b>。RangeSelection</b><b></b>プロパティは、グラフィック オブジェクトが選択される前に選択されたセル範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-260">When a graphic object is selected on a worksheet, the <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> property returns the graphic object instead of a <b>Range</b> object; the <b>RangeSelection</b> property returns the range of cells that was selected before the graphic object was selected.</span></span></para>
          <para><span data-ttu-id="59203-261">描画オブジェクトではなく、セル範囲が選択されているワークシートの場合、このプロパティと <b>Selection</b> プロパティの取得する値は同じになります。</span><span class="sxs-lookup"><span data-stu-id="59203-261">This property and the <b>Selection</b> property return identical values when a range (not a graphic object) is selected on the worksheet.</span></span></para>
          <para><span data-ttu-id="59203-262">指定したウィンドウのアクティブ シートがワークシートではない場合、このプロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="59203-262">If the active sheet in the specified window isn’t a worksheet, this property fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollColumn">
      <MemberSignature Language="C#" Value="public int ScrollColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-263">ペインまたはウィンドウ内で左端に表示される列の番号を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-263">Returns or sets the number of the leftmost column in the pane or window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-264">ウィンドウが分割されている場合、オブジェクト <b>の ScrollColumn</b> プロパティは左上の <see cref="T:Microsoft.Office.Interop.Excel.Window" /> ウィンドウ枠を参照します。</span><span class="sxs-lookup"><span data-stu-id="59203-264">If the window is split, the <b>ScrollColumn</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span></span> <span data-ttu-id="59203-265">ウィンドウ枠を固定している場合、 <b>Window</b> オブジェクトの <b>ScrollColumn</b> プロパティは固定領域を対象外とします。</span><span class="sxs-lookup"><span data-stu-id="59203-265">If the panes are frozen, the <b>ScrollColumn</b> property of the <b>Window</b> object excludes the frozen areas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (int Left, int Top, int Width, int Height, object Start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView([in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height, [in]object Start) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (Left As Integer, Top As Integer, Width As Integer, Height As Integer, Optional Start As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
        <Parameter Name="Start" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="59203-266">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-266">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-267">ドキュメント ウィンドウまたはペインの左端から四角形までの横方向の距離 (ポイント単位)。</span><span class="sxs-lookup"><span data-stu-id="59203-267">The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</span></span></param>
        <param name="Top"><span data-ttu-id="59203-268">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-268">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-269">ドキュメント ウィンドウまたはペインの上端から四角形までの縦方向の距離 (ポイント単位)。</span><span class="sxs-lookup"><span data-stu-id="59203-269">The vertical position of the rectangle (in points) from the top of the document window or pane.</span></span></param>
        <param name="Width"><span data-ttu-id="59203-270">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-270">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-271">四角形の幅 (ポイント単位)。</span><span class="sxs-lookup"><span data-stu-id="59203-271">The width of the rectangle, in points.</span></span></param>
        <param name="Height"><span data-ttu-id="59203-272">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-272">Required <b>Integer</b>.</span></span> <span data-ttu-id="59203-273">四角形の高さ (ポイント単位)。</span><span class="sxs-lookup"><span data-stu-id="59203-273">The height of the rectangle, in points.</span></span></param>
        <param name="Start"><span data-ttu-id="59203-274">オプションの <b>Integer</b>。</span><span class="sxs-lookup"><span data-stu-id="59203-274">Optional <b>Integer</b>.</span></span> <span data-ttu-id="59203-275">四角形の左上隅をドキュメント ウィンドウまたはペインの左上隅と一致するように表示する場合は  <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="59203-275"><b>True</b> to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane.</span></span> <span data-ttu-id="59203-276">四角形の右下隅をドキュメント ウィンドウまたはペインの右下隅と一致するように表示する場合は <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-276"><b>False</b> to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane.</span></span> <span data-ttu-id="59203-277">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="59203-277">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="59203-278">文書ウィンドウをスクロールして、指定した四角形領域の内容が、文書ウィンドウまたはウィンドウ枠の左上隅または右下隅に表示されます。</span><span class="sxs-lookup"><span data-stu-id="59203-278">Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</span></span></summary>
        <remarks><para><span data-ttu-id="59203-279">この引数は、四角形がドキュメント ウィンドウまたはウィンドウ枠よりも大きい場合に画面表示の向 <paramref name="Start" /> きを設定する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="59203-279">The <paramref name="Start" /> argument is useful for orienting the screen display when the rectangle is larger than the document window or pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRow">
      <MemberSignature Language="C#" Value="public int ScrollRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-280">ウィンドウ枠またはウィンドウの上部に表示される行の番号を設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-280">Returns or sets the number of the row that appears at the top of the pane or window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-281">ウィンドウが分割されている場合、オブジェクト <b>の ScrollRow</b> プロパティは左上の <see cref="T:Microsoft.Office.Interop.Excel.Window" /> ウィンドウ枠を参照します。</span><span class="sxs-lookup"><span data-stu-id="59203-281">If the window is split, the <b>ScrollRow</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span></span> <span data-ttu-id="59203-282">ウィンドウ枠を固定している場合、 <b>Window</b> オブジェクトの <b>ScrollRow</b> プロパティは固定領域を対象外とします。</span><span class="sxs-lookup"><span data-stu-id="59203-282">If the panes are frozen, the <b>ScrollRow</b> property of the <b>Window</b> object excludes the frozen areas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWorkbookTabs">
      <MemberSignature Language="C#" Value="public object ScrollWorkbookTabs (object Sheets, object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollWorkbookTabs([in]object Sheets, [in]object Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollWorkbookTabs (Optional Sheets As Object, Optional Position As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sheets" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sheets"><span data-ttu-id="59203-283">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-283">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-284">スクロールするシートの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-284">The number of sheets to scroll by.</span></span> <span data-ttu-id="59203-285">前方にスクロールするには正の数値を、後方にスクロールするには負の数を、スクロールしない場合は 0 (ゼロ) を使用します。</span><span class="sxs-lookup"><span data-stu-id="59203-285">Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all.</span></span> <span data-ttu-id="59203-286">指定しない <paramref name="Sheets" /> 場合は指定する必要があります <paramref name="Position" /> 。</span><span class="sxs-lookup"><span data-stu-id="59203-286">You must specify <paramref name="Sheets" /> if you don't specify <paramref name="Position" />.</span></span></param>
        <param name="Position"><span data-ttu-id="59203-287">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-287">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-288"><b>xlFirst</b> を指定すると先頭のシートまでスクロールされ、<b>xlLast</b> を指定すると最後のシートまでスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-288">Use <b>xlFirst</b> to scroll to the first sheet, or use <b>xlLast</b> to scroll to the last sheet.</span></span> <span data-ttu-id="59203-289">指定しない <paramref name="Position" /> 場合は指定する必要があります <paramref name="Sheets" /> 。</span><span class="sxs-lookup"><span data-stu-id="59203-289">You must specify <paramref name="Position" /> if you don't specify <paramref name="Sheets" />.</span></span></param>
        <summary><span data-ttu-id="59203-290">ウィンドウ下部のシート見出しをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="59203-290">Scrolls through the workbook tabs at the bottom of the window.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-291"><b>ScrollWorkbookTabs</b>メソッドは、ブック内のアクティブ シートには影響を与えされません。</span><span class="sxs-lookup"><span data-stu-id="59203-291">The <b>ScrollWorkbookTabs</b> method doesn't affect the active sheet in the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets SelectedSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets SelectedSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SelectedSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ SelectedSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-292">指定したウィンドウ <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> で選択されているシートを表すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="59203-292">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the selected sheets in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-293">指定したウィンドウで選択したオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-293">Returns the selected object in the specified window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-294">返されるオブジェクトの種類は、現在の選択範囲によって異なります (たとえば、セルが選択されている場合、このプロパティはオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します)。</span><span class="sxs-lookup"><span data-stu-id="59203-294">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="59203-295">何も選択していないとき、<b>Selection</b> プロパティは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-295">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para><span data-ttu-id="59203-296">オブジェクト修飾子を指定してこのプロパティを使用する方法は、オブジェクトの <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> プロパティを使用するのと同 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> じです。</span><span class="sxs-lookup"><span data-stu-id="59203-296">Using this property with no object qualifier is equivalent to using the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SheetViews SheetViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SheetViews SheetViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SheetViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SheetViews As SheetViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SheetViews ^ SheetViews { Microsoft::Office::Interop::Excel::SheetViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SheetViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-297">指定したウィンドウ <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-297">Returns the <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> object for the specified window.</span></span> <span data-ttu-id="59203-298">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="59203-298">Read-only.</span></span></summary>
        <value><span data-ttu-id="59203-299"><b>SheetViews</b></span><span class="sxs-lookup"><span data-stu-id="59203-299"><b>SheetViews</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallScroll">
      <MemberSignature Language="C#" Value="public object SmallScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SmallScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SmallScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down"><span data-ttu-id="59203-300">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-300">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-301">文字列を下にスクロールする行数。</span><span class="sxs-lookup"><span data-stu-id="59203-301">The number of rows to scroll the contents down.</span></span></param>
        <param name="Up"><span data-ttu-id="59203-302">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-302">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-303">文字列を上にスクロールする行数。</span><span class="sxs-lookup"><span data-stu-id="59203-303">The number of rows to scroll the contents up.</span></span></param>
        <param name="ToRight"><span data-ttu-id="59203-304">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-304">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-305">文字列を右にスクロールする列数。</span><span class="sxs-lookup"><span data-stu-id="59203-305">The number of columns to scroll the contents to the right.</span></span></param>
        <param name="ToLeft"><span data-ttu-id="59203-306">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="59203-306">Optional <b>Object</b>.</span></span> <span data-ttu-id="59203-307">文字列を左にスクロールする列数。</span><span class="sxs-lookup"><span data-stu-id="59203-307">The number of columns to scroll the contents to the left.</span></span></param>
        <summary><span data-ttu-id="59203-308">指定した行数分または列数分だけ、ウィンドウの文字列をスクロールします。</span><span class="sxs-lookup"><span data-stu-id="59203-308">Scrolls the contents of the window by rows or columns.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="59203-309">両方を指定すると、ウィンドウの内容が引数の差 <paramref name="Down" /> <paramref name="Up" /> でスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-309">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="59203-310">たとえば、3 で 6 の場合、内容は <paramref name="Down" /> <paramref name="Up" /> 3 行上にスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-310">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three rows.</span></span></para>
          <para><span data-ttu-id="59203-311">両方を指定すると、ウィンドウの内容が引数の差 <paramref name="ToLeft" /> <paramref name="ToRight" /> でスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-311">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span></span> <span data-ttu-id="59203-312">たとえば、3 で 6 の場合、内容は右に <paramref name="ToLeft" /> <paramref name="ToRight" /> 3 列分スクロールされます。</span><span class="sxs-lookup"><span data-stu-id="59203-312">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three columns.</span></span></para>
          <para><span data-ttu-id="59203-313">これらの引数には負数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="59203-313">Any of these arguments can be a negative number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public bool Split { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Split" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Split" />
      <MemberSignature Language="VB.NET" Value="Public Property Split As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Split { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-314"><b>True ウィンドウ</b> が分割されている場合です。</span><span class="sxs-lookup"><span data-stu-id="59203-314"><b>True</b> if the window is split.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-315">True と Split を False に設定するか、 <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> <b>またはその</b>逆を<b></b>指定できます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="59203-315">It’s possible for <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> to be <b>True</b> and <b>Split</b> to be <b>False</b>, or vice versa.</span></span></para>
          <para><span data-ttu-id="59203-316">このプロパティは、ワークシートとマクロ シートにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="59203-316">This property applies only to worksheets and macro sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitColumn">
      <MemberSignature Language="C#" Value="public int SplitColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-317">ウィンドウを分割する列番号 (分割線の左側の列数) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-317">Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitHorizontal">
      <MemberSignature Language="C#" Value="public double SplitHorizontal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitHorizontal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitHorizontal" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitHorizontal As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitHorizontal { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-318">水平ウィンドウの分割位置をポイント数で設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-318">Returns or sets the location of the horizontal window split in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitRow">
      <MemberSignature Language="C#" Value="public int SplitRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitRow" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-319">ウィンドウを分割する行番号 (分割の上の行数) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-319">Returns or sets the row number where the window is split into panes (the number of rows above the split).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitVertical">
      <MemberSignature Language="C#" Value="public double SplitVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitVertical As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitVertical { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-320">垂直ウィンドウの分割位置をポイント数で設定または返します。</span><span class="sxs-lookup"><span data-stu-id="59203-320">Returns or sets the location of the vertical window split in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabRatio">
      <MemberSignature Language="C#" Value="public double TabRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TabRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.TabRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property TabRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TabRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-321">ウィンドウの水平スクロール バーの幅に対するブックのタブ領域の幅の比率 (0 ~1 の数値) を設定します。既定値は 0.6 です。</span><span class="sxs-lookup"><span data-stu-id="59203-321">Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-322">False に設定されている場合、このプロパティは影響しません (値は保持されますが、表示 <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> には影響しません)。 <b></b></span><span class="sxs-lookup"><span data-stu-id="59203-322">This property has no effect when <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> is set to <b>False</b> (its value is retained, but it has no effect on the display).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-323">ウィンドウの上端から使える領域の上端までの距離 (メニューの下、上部にドッキングされているツールバー、数式バー)。</span><span class="sxs-lookup"><span data-stu-id="59203-323">The distance in points from the top edge of the window to the top edge of the usable area (below the menus, any toolbars docked at the top, and the formula bar).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-324">ウィンドウが最大化されている状態のときは、このプロパティに値を設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="59203-324">You cannot set this property for a maximized window.</span></span> <span data-ttu-id="59203-325">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> を使用して、ウィンドウの状態を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-325">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to return or set the state of the window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlWindowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowType Type { Microsoft::Office::Interop::Excel::XlWindowType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-326">ウィンドウの種類を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="59203-326">Returns or sets the window type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-327">アプリケーション ウィンドウ領域でウィンドウが占有できる領域の高さの最大値をポイント数で返します。</span><span class="sxs-lookup"><span data-stu-id="59203-327">Returns the maximum height in points of the space that a window can occupy in the application window area.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-328">アプリケーション ウィンドウ領域でウィンドウが占有できる領域の幅の最大値をポイント単位で返します。</span><span class="sxs-lookup"><span data-stu-id="59203-328">Returns the maximum width in points of the space that a window can occupy in the application window area.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowView View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As XlWindowView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowView View { Microsoft::Office::Interop::Excel::XlWindowView get(); void set(Microsoft::Office::Interop::Excel::XlWindowView value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-329">ウィンドウに表示するビューを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="59203-329">Returns or sets the view showing in the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-330">オブジェクトを表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-330">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range VisibleRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range VisibleRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.VisibleRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ VisibleRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-331">ウィンドウまたはウィンドウ <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 枠に表示されるセルの範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="59203-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the window or pane.</span></span> <span data-ttu-id="59203-332">一部しか表示されていない列や行も対象になります。</span><span class="sxs-lookup"><span data-stu-id="59203-332">If a column or row is partially visible, it's included in the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-333">ウィンドウの幅をポイント単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="59203-333">The width in points of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-334">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> を使用して、ウィンドウの最大サイズを決定します。</span><span class="sxs-lookup"><span data-stu-id="59203-334">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> property to determine the maximum size for the window.</span></span> <span data-ttu-id="59203-335">ウィンドウを最大化または最小化されている場合は、このプロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="59203-335">You cannot set this property if the window is maximized or minimized.</span></span> <span data-ttu-id="59203-336">このプロパティを <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> 使用してウィンドウの状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="59203-336">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNumber">
      <MemberSignature Language="C#" Value="public int WindowNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-337">ウィンドウ番号を返します。</span><span class="sxs-lookup"><span data-stu-id="59203-337">Returns the window number.</span></span> <span data-ttu-id="59203-338">たとえば、"Book1.xls:2" という名前のウィンドウのウィンドウ番号は 2 です。</span><span class="sxs-lookup"><span data-stu-id="59203-338">For example, a window named "Book1.xls:2" has 2 as its window number.</span></span> <span data-ttu-id="59203-339">ほとんどのウィンドウのウィンドウ番号は 1 です。</span><span class="sxs-lookup"><span data-stu-id="59203-339">Most windows have the window number 1.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-340">ウィンドウ番号は、コレクション内でのウィンドウの位置であるウィンドウインデックス (プロパティの戻り値 <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> ) と同じ <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="59203-340">The window number isn't the same as the window index (the return value of the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property), which is the position of the window within the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-341">ウィンドウの状態を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="59203-341">Returns or sets the state of the window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public object Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Zoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Zoom { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59203-342">ウィンドウの表示サイズをパーセントで設定します (100 は標準サイズ、200 は倍のサイズなど)。</span><span class="sxs-lookup"><span data-stu-id="59203-342">Returns or sets the display size of the window as a percentage (100 equals normal size, 200 equals double size, and so on).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="59203-343">また、このプロパティに <b>True</b> を設定すると、現在の選択範囲に適したウィンドウ サイズを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="59203-343">You can also set this property to <b>True</b> to make the window size fit the current selection.</span></span></para>
          <para><span data-ttu-id="59203-p163">現在のウィンドウでのアクティブ シートだけを対象にします。このプロパティを他のシートに対して使用するには、最初にそのシートをアクティブにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="59203-p163">This function affects only the sheet that's currently active in the window. To use this property on other sheets, you must first activate them.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>