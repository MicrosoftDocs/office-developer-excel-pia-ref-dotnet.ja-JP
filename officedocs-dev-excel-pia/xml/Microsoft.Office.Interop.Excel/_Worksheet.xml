<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012671" /></Metadata><TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ecff9-101">これは、対応する COM オブジェクトとの相互運用性を得る目的でマネージ コードで必要とされる COM コクラスのプライマリ インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="ecff9-102">このプライマリ インターフェイスは、使用するメソッドが COM オブジェクトのイベントと同じ名前を共有している場合にのみ使用します。この場合は、このインターフェイスにキャストしてメソッドを呼び出し、最新のイベント インターフェイスにキャストしてイベントに接続します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="ecff9-103">それ以外の場合は、COM コクラスから派生した .NET インターフェイスを使用して、COM オブジェクトのメソッド、プロパティ、およびイベントにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="ecff9-104">COM オブジェクトの詳細については、以下を参照してください <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary><span data-ttu-id="ecff9-105">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="ecff9-105">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-106">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-107">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="ecff9-108">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary><span data-ttu-id="ecff9-109">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="ecff9-110">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary><span data-ttu-id="ecff9-111">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-111">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="ecff9-112">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-112">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-113">指定されたシートをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-113">Makes the current sheet the active sheet.</span></span> <span data-ttu-id="ecff9-114">シートのタブをクリックするのと同じです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-114">Equivalent to clicking the sheet's tab.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-115">オブジェクト修飾子を指定せずに使用した場合、このプロパティは Microsoft Excel アプリケーションを表 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="ecff9-116">対象となるオブジェクトが指定された場合は、指定されたオブジェクトを作成した <b>Application</b> オブジェクトを返します。OLE オートメーションを使っていて、オブジェクトのアプリケーションにアクセスするときなどに、このプロパティを使います。</span><span class="sxs-lookup"><span data-stu-id="ecff9-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span> <span data-ttu-id="ecff9-117">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-117">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-118">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-118">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-119">フィルター処理が <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> オンの場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span></span> <span data-ttu-id="ecff9-120">フィルター処理 <b>がオフの</b> 場合は Nothing を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-120">Returns <b>Nothing</b> if filtering is off.</span></span> <span data-ttu-id="ecff9-121">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-122">ワークシートの <b>AutoFilter</b> オブジェクトを作成するには、手動で、またはオブジェクトのメソッドを使用して、ワークシートの範囲のオートフィルターを有効にする <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> 必要 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-122">To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-123"><b>True</b> の 場合は、オート フィルターのドロップダウン矢印がシートに現在表示されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-123"><b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span></span> <span data-ttu-id="ecff9-124">このプロパティは、プロパティとは独立 <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> しています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span></span> <span data-ttu-id="ecff9-125">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-125">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-126">ドロップダウン矢印が現在 <b>表示</b> されている場合、このプロパティはTrue を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-126">This property returns <b>True</b> if the drop-down arrows are currently displayed.</span></span> <span data-ttu-id="ecff9-127">このプロパティを False <b>に設定すると</b> 矢印を削除できますが <b>、True</b>に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-127">You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>.</span></span> <span data-ttu-id="ecff9-128">このメソッド <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> を使用して、リストをフィルター処理し、ドロップダウン矢印を表示します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-128">Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-129">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-129">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-130">計算を実行します。計算の対象となるのは、開かれているすべてのブック、ブック内の特定のワークシート、ワークシート内の指定されたセル範囲のいずれかです。計算対象と指定例は、次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-130">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span></span></summary>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="ecff9-131">開いているすべてのブック</span><span class="sxs-lookup"><span data-stu-id="ecff9-131">All open workbooks</span></span></term>
              <description><span data-ttu-id="ecff9-132">Application.Calculate</span><span class="sxs-lookup"><span data-stu-id="ecff9-132">Application.Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ecff9-133">特定のワークシート</span><span class="sxs-lookup"><span data-stu-id="ecff9-133">A specific worksheet</span></span></term>
              <description><span data-ttu-id="ecff9-134">Worksheets(1).計算</span><span class="sxs-lookup"><span data-stu-id="ecff9-134">Worksheets(1).Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ecff9-135">指定されたセル範囲</span><span class="sxs-lookup"><span data-stu-id="ecff9-135">A specified range</span></span></term>
              <description><span data-ttu-id="ecff9-136">Worksheets(1).行(2)。計算</span><span class="sxs-lookup"><span data-stu-id="ecff9-136">Worksheets(1).Rows(2).Calculate</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-137">ワークシート上のすべてのセルを表すオブジェクトを返します (現在使用されているセルも <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 含め)。</span><span class="sxs-lookup"><span data-stu-id="ecff9-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span></span> <span data-ttu-id="ecff9-138">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-138">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-139">このプロパティは Range オブジェクトの既定のプロパティなので、Cells キーワードの直後に行と列のインデックス <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> を<b>指定</b>できます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="ecff9-139">Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="ecff9-140">詳細については <b>、Item</b> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecff9-140">For more information, see the <b>Item</b> property.</span></span></para>
          <para><span data-ttu-id="ecff9-141">このプロパティでオブジェクト修飾子を指定しないコードを使用すると、アクティブ シートのすべてのセルを表す <b>Range</b> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-141">Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ecff9-142">バリアント型 (<b>Variant</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-142">Optional <b>Variant</b>.</span></span> <span data-ttu-id="ecff9-143">グラフの名前またはインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-143">The name or number of the chart.</span></span> <span data-ttu-id="ecff9-144">この引数には、複数のグラフを指定する配列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-144">This argument can be an array to specify more than one chart.</span></span></param>
        <summary><span data-ttu-id="ecff9-145">シート上のすべての埋め込みグラフ (オブジェクト) の 1 つの埋め込みグラフ (オブジェクト) またはコレクションを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-145">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ecff9-146">このメソッドは、プロパティと同 <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> じではありません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-146">This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property.</span></span> <span data-ttu-id="ecff9-147">このメソッドが埋め込みグラフを返すのに対して、<b>Charts</b> プロパティはグラフ シートを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-147">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span></span> <span data-ttu-id="ecff9-148">埋め <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 込みグラフの <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> オブジェクトを取得するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-148">Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-149">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-149">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="ecff9-150">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-151">メイン辞書に単語が見つからない場合に調べるユーザー辞書のファイル名を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="ecff9-151">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="ecff9-152">この引数を省略すると、現在指定されている辞書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-152">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="ecff9-153">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-153">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-154">すべて大文字の単語を無視するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-154"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="ecff9-155">すべて大文字の単語もスペル チェックの対象にするには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-155"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="ecff9-156">この引数を省略すると、現在の設定が使われます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-156">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="ecff9-157">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-158">辞書にない単語が見つかるたびに自動的に修正候補の一覧を表示するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-158"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span></span> <span data-ttu-id="ecff9-159">[スペル チェック] ダイアログ ボックスに修正候補の一覧を表示せずに、ユーザーの入力を待つには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-159"><b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span></span> <span data-ttu-id="ecff9-160">この引数を省略すると、現在の設定が使われます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-160">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="ecff9-161">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-161">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-162">辞書に使用した言語を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-162">The language of the dictionary being used.</span></span> <span data-ttu-id="ecff9-163">プロパティで使用する <b>MsoLanguageID</b> 値のいずれかを指定 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-163">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="ecff9-164">オブジェクトのスペルをチェックします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-164">Checks the spelling of an object.</span></span> <span data-ttu-id="ecff9-165">このフォームには戻り値はありません。[スペル チェック] ダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-165">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-166">ワークシートのヘッダー、フッター、およびオブジェクトを確認するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-166">Use this method to check headers, footers, and objects on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-167">ワークシートの [入力規則] で設定された制限外の値が入力されているセルに丸印を付けます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-167">Circles invalid entries on the worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-168">シートの最初の循環参照を含む範囲を表すオブジェクトを返し、シートに循環参照がない場合は <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span></span> <span data-ttu-id="ecff9-169">計算を続行するには、循環参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-169">The circular reference must be removed before calculation can proceed.</span></span> <span data-ttu-id="ecff9-170">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-171">ワークシートからトレース矢印を削除します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-171">Clears the tracer arrows from the worksheet.</span></span> <span data-ttu-id="ecff9-172">なお、トレース矢印とは使用したワークシート分析機能によって追加される矢印です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-172">Tracer arrows are added by using the auditing feature.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-173">ワークシートの [入力規則] で設定された制限外の値が入力されているセルに付けられた丸印を消去します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-173">Clears circles from invalid entries on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-174">無効な <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> データを含むセルを丸くするには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-174">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-175">オブジェクトのコード名を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-175">Returns the code name for the object.</span></span> <span data-ttu-id="ecff9-176">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-176">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-177">[プロパティ] ウィンドウの <b>右側 (名前)</b> のセルに表示される値は、選択したオブジェクトのコード名です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-177">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span></span> <span data-ttu-id="ecff9-178">デザイン時に、このプロパティの値を変更してコード名を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-178">At design time, you can change the code name of an object by changing this value.</span></span> <span data-ttu-id="ecff9-179">実行時に、このプロパティの値をコードで変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-179">You cannot programmatically change this property at run time.</span></span></para>
          <para><span data-ttu-id="ecff9-180">オブジェクトのコード名はオブジェクトを表すオブジェクト式の代わりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-180">The code name for an object can be used in place of an expression that returns the object.</span></span></para>
          <para><span data-ttu-id="ecff9-181">シート名とコード名が異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-181">It’s possible for the sheet name to be different from the code name.</span></span> <span data-ttu-id="ecff9-182">シートを作成する場合、シート名とコード名は同じですが、シート名を変更してもコード名は変更されません。また、(Visual Basic エディターの [プロパティ] ウィンドウを使用して) コード名を変更しても、シート名は変更されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-182">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-183">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のすべての列を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span></span> <span data-ttu-id="ecff9-184">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-184">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-185">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> のすべてのコメントを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span></span> <span data-ttu-id="ecff9-186">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-186">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-187">現在の統合に使用されている関数コードを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-187">Returns the function code used for the current consolidation.</span></span> <span data-ttu-id="ecff9-188">使用できる定数は、 <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 次に示す定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-188">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span></span> <span data-ttu-id="ecff9-189">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-190">次の表に示すように、統合オプションの 3 要素の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-190">Returns a three-element array of consolidation options, as shown in the following table.</span></span> <span data-ttu-id="ecff9-191">要素が True の <b>場合</b>、そのオプションが設定されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-191">If the element is <b>True</b>, that option is set.</span></span> <span data-ttu-id="ecff9-192">読み取り専用 <b>オブジェクト</b> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-192">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="ecff9-193">1 </span><span class="sxs-lookup"><span data-stu-id="ecff9-193">1</span></span></term>
              <description><span data-ttu-id="ecff9-194">一番上の行にラベルを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-194">Use labels in top row.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ecff9-195">2</span><span class="sxs-lookup"><span data-stu-id="ecff9-195">2</span></span></term>
              <description><span data-ttu-id="ecff9-196">左側の列にラベルを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-196">Use labels in left column.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ecff9-197">3</span><span class="sxs-lookup"><span data-stu-id="ecff9-197">3</span></span></term>
              <description><span data-ttu-id="ecff9-198">ソース データへのリンクを作成します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-198">Create links to source data.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-199">ワークシートの現在の統合のソース シートに名前を付け、文字列値の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-199">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span></span> <span data-ttu-id="ecff9-200">シートに <b>統合</b> がない場合は、Empty を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-200">Returns <b>Empty</b> if there's no consolidation on the sheet.</span></span> <span data-ttu-id="ecff9-201">読み取り専用 <b>オブジェクト</b> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-201">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="ecff9-202">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-202">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-203">コピーしたシートを特定のシートの直前の位置に挿入するときに、そのシートを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-203">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="ecff9-204">指定する場合 <paramref name="Before" /> は指定できません <paramref name="After" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-204">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="ecff9-205">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-205">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-206">コピーしたシートを特定のシートの直後の位置に挿入するときに、そのシートを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-206">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="ecff9-207">指定する場合 <paramref name="After" /> は指定できません <paramref name="Before" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-207">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="ecff9-208">シートをブック内の他の場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-208">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-209">どちらかを指定しない場合、コピーしたシートを含む新しいブック <paramref name="Before" /> <paramref name="After" /> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-209">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-210">このオブジェクトが作成されたアプリケーション <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> を示す列挙の定数を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-210">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="ecff9-211">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-211">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="ecff9-212">読み取り専用 <b>xlCreatorCode</b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-212">Read-only <b>xlCreatorCode</b>.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="ecff9-213"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="ecff9-213">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="ecff9-214">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-214">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-215">ワークシートに関連 <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> 付けられている識別子情報を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-215">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-216"><b>CustomProperties</b> プロパティでは、ワークシートの識別子情報は XML のメタデータを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-216">For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-217">オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-217">Deletes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-218">削除すると、削除の確認を求めるダイアログ ボックス <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-218">When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion.</span></span> <span data-ttu-id="ecff9-219">このダイアログ ボックスは既定で表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-219">This dialog box is displayed by default.</span></span> <span data-ttu-id="ecff9-220"><b>Delete メソッド</b>は、ユーザー<b></b>がダイアログ ボックスで [キャンセル] をクリックした場合は<b>False</b>のブール値を返し、ユーザーが [削除] をクリックした場合は<b>True</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-220">The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-221">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-221">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-222"><b>True</b> 指定したワークシートの改ページ (自動と手動の両方) が表示される場合です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-222"><b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed.</span></span> <span data-ttu-id="ecff9-223">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-223">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-224">プリンターがセットアップされていない場合、このプロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-224">You can't set this property if you don't have a printer installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-225"><b>True</b> の 場合は、指定したウィンドウ、ワークシート、または <b>ListObject</b> が左から右ではなく右から左に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-225"><b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span></span> <span data-ttu-id="ecff9-226"><b>False</b> の 場合は、オブジェクトが左から右に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-226"><b>False</b> if the object is displayed from left to right.</span></span> <span data-ttu-id="ecff9-227">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-227">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-228">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="ecff9-228">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-229">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-229">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-230">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-230">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-231">画面上での変更のみの保護が設定されているときに、オートフィルター矢印が有効である場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-231"><b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ecff9-232">値の取得と設定が可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-232">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-233">このプロパティは各ワークシートを対象とします。行った設定はブックを閉じると破棄され、シートや動作環境の設定と共には保存されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-233">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-234"><b>True の</b> 場合は、必要に応じて、ワークシートを自動的に再計算します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-234"><b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary.</span></span> <span data-ttu-id="ecff9-235"><b>False</b> の 場合は、Excel がシートを再計算します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-235"><b>False</b> if Excel doesn't recalculate the sheet.</span></span> <span data-ttu-id="ecff9-236">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-236">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-p135">このプロパティが <b>False</b> の場合、シートの再計算を要求できません。<b>False</b> から <b>True</b> に値を変更すると、シートの再計算を実行します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p135">When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-239">条件付き書式が必要に応じて自動的に実行される場合に設定または返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-239">Returns or sets if conditional formats will occur automatically as needed.</span></span> <span data-ttu-id="ecff9-240">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-240">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="ecff9-241"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="ecff9-241"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="ecff9-242">True ( <b>既定値) に設定</b> すると、条件付き書式の評価は必要に応じて自動的に行われます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-242">When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.</span></span>  <span data-ttu-id="ecff9-243">False に <b>設定されている</b>場合、条件付き書式は再評価されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-243">When set to <b>False</b>, conditional formats will not be re-evaluated.</span></span>  <span data-ttu-id="ecff9-244">以前に適用された条件付き書式は引き続き表示されますが、セルの値または範囲が変更されると <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> 更新されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-244">Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.</span></span>  </para>
          <para><span data-ttu-id="ecff9-245">このフラグの目的は、プログラマがルールを評価する前にルールを完全に構成できるという目的です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-245">The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.</span></span>  <span data-ttu-id="ecff9-246">広い範囲に条件が適用されているとパフォーマンスが低下する可能性があるため、これは、このような場合に特に有効です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-246">This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-247">ユーザー インターフェイスのみの保護が有効になっているときに、アウトライン記号を有効にする場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-247"><b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ecff9-248">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-248">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-249">このプロパティは各ワークシートを対象とします。行った設定はブックを閉じると破棄され、シートや動作環境の設定と共には保存されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-249">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-250"><b>True</b> の 場合は、ユーザー インターフェイス専用の保護が有効になっているときにピボットテーブルのコントロールとアクションが有効になります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-250"><b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ecff9-251">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-251">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-252">このプロパティは各ワークシートを対象とします。行った設定はブックを閉じると破棄され、シートや動作環境の設定と共には保存されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-252">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para><span data-ttu-id="ecff9-253">ピボットテーブル レポートは再計算するとサイズが大きくなる場合があるので、その拡張分を見込んでピボットテーブル レポートの下側および右側のいくつかのセルのロックを解除しておきます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-253">There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-254">シート上で何を選択できるのかを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-254">Returns or sets what can be selected on the sheet.</span></span> <span data-ttu-id="ecff9-255">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-255">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-256">ワークシートを保護しているときにだけ、このプロパティを使用できます。<b>xlNoSelection</b> はシートのすべてのセルの選択が禁止され、<b>xlUnlockedCells</b> は、<b>Locked</b> プロパティが <b>False</b> のセルに限り選択が許可され、<b>xlNoRestrictions</b> はどのセルの選択も許可されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-256">This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="ecff9-257"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-257">Required <b>String</b>.</span></span> <span data-ttu-id="ecff9-258">Excel の名前付け規則に従って、対象オブジェクトの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-258">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="ecff9-259">使用する名前を、オブジェクトまたは値に変換します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-259">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ecff9-260">このメソッドでは、次のような種類の名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-260">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="ecff9-261">定義された名前。</span><span class="sxs-lookup"><span data-stu-id="ecff9-261">Defined names.</span></span> <span data-ttu-id="ecff9-262">任意の名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-262">You can specify any name.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="ecff9-263">外部参照。</span><span class="sxs-lookup"><span data-stu-id="ecff9-263">External references.</span></span> <span data-ttu-id="ecff9-264">外部参照には、感嘆符 (!) を使います。</span><span class="sxs-lookup"><span data-stu-id="ecff9-264">You can use the !</span></span> <span data-ttu-id="ecff9-265">演算子を使用して、別のブックで定義されているワークシートを参照します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-265">operator to refer to a worksheet defined in another workbook.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="ecff9-266">エクスポート後のファイル形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-266">The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="ecff9-267">保存されるファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-267">The file name of the file to be saved.</span></span> <span data-ttu-id="ecff9-268">完全なパスを含めるか、short_Excel2007フォルダーにファイルを保存できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-268">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="ecff9-269">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-269">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="ecff9-270">発行されたファイルの品質を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-270">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="ecff9-271">ドキュメント プロパティを含める場合は、 <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-271"><b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="ecff9-272">発行する場合に印刷範囲を無視するには、 <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-272"><b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="ecff9-273">発行を開始するページのページ番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-273">The number of the page at which to start publishing.</span></span> <span data-ttu-id="ecff9-274">この引数を省略すると、先頭のページから発行が開始されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-274">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="ecff9-275">発行を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-275">The number of the last page to publish.</span></span> <span data-ttu-id="ecff9-276">この引数を省略すると、最後のページまで発行します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-276">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="ecff9-277">発行後にビューアーにファイルを表示するには  <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-277"><b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="ecff9-278"><b>FixedFormatExt</b> クラスへのポインターです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-278">Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="ecff9-279">指定された形式のファイルにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-279">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-p149">この方法は、固定形式のファイルにエクスポートするためのアドインの初期化にも対応しています。たとえば、コンバーターが存在する場合は、Excel はファイル形式を変換します。通常は、ユーザーが変換を開始します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p149">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-283"><b>True</b> ワークシートがフィルター モードの場合です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-283"><b>True</b> if the worksheet is in filter mode.</span></span> <span data-ttu-id="ecff9-284">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-284">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-285">非表示の <b>行がある</b> フィルター処理されたリストがワークシートに含まれている場合、このプロパティは True です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-285">This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-286">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="ecff9-286">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-287">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-287">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-288">シートの <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> 水平な改ページを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-288">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="ecff9-289">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-289">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-290">1 つのシートに使用できる水平な改ページの数は 1026 です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-290">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-291">範囲または <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> ワークシートのハイパーリンクを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-291">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-292">類似するオブジェクトのコレクション内のオブジェクトのインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-292">Returns the index number of the object within the collection of similar objects.</span></span> <span data-ttu-id="ecff9-293">整数型 ( <b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-293">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-294">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="ecff9-294">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-295">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-295">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-296">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-296">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-297">ワークシート内のオブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-297">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span></span> <span data-ttu-id="ecff9-298">読み取り専用の <b>ListObjects</b> コレクション。</span><span class="sxs-lookup"><span data-stu-id="ecff9-298">Read-only <b>ListObjects</b> collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-299">文書の電子メール ヘッダーを表します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-299">Represents an e-mail header for a document.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="ecff9-300">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-300">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-301">移動したシートを特定のシートの直前の位置に挿入するときに、そのシートを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-301">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="ecff9-302">指定する場合 <paramref name="Before" /> は指定できません <paramref name="After" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-302">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="ecff9-303">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-303">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-304">移動したシートを特定のシートの直後の位置に挿入するときに、そのシートを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-304">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="ecff9-305">指定する場合 <paramref name="After" /> は指定できません <paramref name="Before" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-305">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="ecff9-306">ブック内の別の場所にシートを移動します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-306">Moves the sheet to another location in the workbook</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-307">どちらかを指定しない場合、移動したシートを含む新しい <paramref name="Before" /> <paramref name="After" /> ブックが作成されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-307">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-308">オブジェクトの名前を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-308">Returns or sets the name of the object.</span></span> <span data-ttu-id="ecff9-309">値の取得と設定が可能な文字列型 (<b>String</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-309">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-310">すべてのワークシート <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 固有の名前 ("WorksheetName!" で定義された名前) を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-310">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span></span> <span data-ttu-id="ecff9-311">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-311">prefix).</span></span> <span data-ttu-id="ecff9-312"><b>Names</b> コレクション オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-312">Read-only <b>Names</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-313">次のシート <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> またはセルを表す 、またはオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-313">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span></span> <span data-ttu-id="ecff9-314">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-314">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-315">セル (Range オブジェクト) を対象としたとき、このプロパティが返すセルは Tab キーを押したときの移動先セルと同じです。ただし、そのセルを選択する動作は行われません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-315">If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="ecff9-p159">保護されたシートでは、ロックされていないセルの中から、次のセルを返します。保護されていないシートでは、指定したセルの右隣のセルを常に返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p159">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ecff9-318">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-318">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-319">OLE オブジェクトの名前またはインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-319">The name or number of the OLE object.</span></span></param>
        <summary><span data-ttu-id="ecff9-320">グラフまたはシート上の 1 つの OLE オブジェクト (an) またはすべての OLE オブジェクト (コレクション) のコレクションを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-320">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span></span> <span data-ttu-id="ecff9-321">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-321">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-322">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="ecff9-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-323">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-323">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-324">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-324">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-325">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-325">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-326">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-326">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-327">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-327">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-328">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="ecff9-328">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-329">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> のアウトラインを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-329">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span></span> <span data-ttu-id="ecff9-330">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-330">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-331">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-331">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-332">指定した <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> オブジェクトのすべてのページ設定設定を含むオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-332">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span></span> <span data-ttu-id="ecff9-333">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-333">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-334">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-334">Returns the parent object for the specified object.</span></span> <span data-ttu-id="ecff9-335">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-335">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="ecff9-336">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-336">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-337">クリップボード <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の内容を貼り付ける場所を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecff9-337">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span></span> <span data-ttu-id="ecff9-338">この引数を省略すると、現在の選択範囲に貼り付けられます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-338">If this argument is omitted, the current selection is used.</span></span> <span data-ttu-id="ecff9-339">この引数は、クリップボードの内容をセルに貼り付けられる場合に指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-339">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span></span> <span data-ttu-id="ecff9-340">この引数を指定すると、 <paramref name="Link" /> 引数を使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-340">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span></span></param>
        <param name="Link"><span data-ttu-id="ecff9-341">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-341">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-342">元のデータと貼り付けたデータの間にリンクを設定するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-342"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="ecff9-343">この引数を指定すると、 <paramref name="Destination" /> 引数を使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-343">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span></span> <span data-ttu-id="ecff9-344">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-344">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ecff9-345">クリップボードの内容をシートに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-345">Pastes the contents of the Clipboard onto the sheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-346">引数を指定しない場合は、このメソッドを使用する前に移動先 <paramref name="Destination" /> の範囲を選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-346">If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="ecff9-347">このメソッドは、クリップボードの内容に合うように現在の選択範囲を変更します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-347">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="ecff9-348">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-348">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-349">クリップボードのデータの形式を文字列で指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-349">A string that specifies the Clipboard format of the data.</span></span></param>
        <param name="Link"><span data-ttu-id="ecff9-350">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-350">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-351">元のデータと貼り付けたデータの間にリンクを設定するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-351"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="ecff9-352">ソース データがリンクに適しない場合、またはソース アプリケーションがリンクをサポートしない場合、このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-352">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span></span> <span data-ttu-id="ecff9-353">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-353">The default value is <b>False</b>.</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="ecff9-354">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-354">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-355"><b>True の</b> アイコンとして貼り付けデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-355"><b>True</b> to display the pasted data as an icon.</span></span> <span data-ttu-id="ecff9-356">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-356">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="ecff9-357">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-357">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-358">True の場合に使用するアイコンを含むファイル <paramref name="DisplayAsIcon" /> の <b>名前です</b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-358">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="ecff9-359">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-359">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-360">アイコン ファイルのどのアイコンを使うかを示すインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-360">The index number of the icon within the icon file.</span></span></param>
        <param name="IconLabel"><span data-ttu-id="ecff9-361">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-361">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-362">アイコンのラベルを文字列で指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-362">The text label of the icon.</span></span></param>
        <param name="NoHTMLFormatting"><span data-ttu-id="ecff9-363">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-363">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-364"><b>True</b> を設定すると、HTML から書式設定、ハイパーリンク、およびイメージを削除します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-364"><b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span></span> <span data-ttu-id="ecff9-365"><b>False</b> を設定すると、HTML をそのまま貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-365"><b>False</b> to paste HTML as is.</span></span> <span data-ttu-id="ecff9-366">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-366">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ecff9-367">クリップボードの内容を指定した形式でシートに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-367">Pastes the contents of the Clipboard onto the sheet using a specified format.</span></span> <span data-ttu-id="ecff9-368">他のアプリケーションからデータを貼り付けるときや、あるいは特別な形式でデータを貼り付ける場合に使います。</span><span class="sxs-lookup"><span data-stu-id="ecff9-368">Use this method to paste data from other applications or to paste data in a specific format.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-369">
            <paramref name="NoHTMLFormatting" /> = <paramref name="Format" /> "HTML" の場合にのみ重要です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-369">
            <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”.</span></span> <span data-ttu-id="ecff9-370">それ以外の場合は <paramref name="NoHTMLFormatting" /> 無視されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-370">In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</span></span></para>
          <para><span data-ttu-id="ecff9-371">このメソッドを使う前に、貼り付け先のセル範囲を必ず選択してください。</span><span class="sxs-lookup"><span data-stu-id="ecff9-371">You must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="ecff9-372">このメソッドは、クリップボードの内容に合うように現在の選択範囲を変更します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-372">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-373">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-373">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ecff9-374">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-374">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-375">ピボットテーブル レポートの名前またはインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-375">The name or number of the report.</span></span></param>
        <summary><span data-ttu-id="ecff9-376">1 つのピボットテーブル レポート (オブジェクト) またはワークシート上のすべてのピボットテーブル レポート (オブジェクト) のコレクションを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-376">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span></span> <span data-ttu-id="ecff9-377">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-377">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType"><span data-ttu-id="ecff9-378">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-378">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-379">レポート データのソース。</span><span class="sxs-lookup"><span data-stu-id="ecff9-379">The source of the report data.</span></span> <span data-ttu-id="ecff9-380">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> 、.constants の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-380">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span></span></param>
        <param name="SourceData"><span data-ttu-id="ecff9-381">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-381">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-382">レポートの作成に使うデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-382">The data for the new report.</span></span> <span data-ttu-id="ecff9-383">オブジェクト、範囲の配列、または別のレポートの名前を表すテキスト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 定数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-383">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span></span> <span data-ttu-id="ecff9-384">外部データベースの場合は、SQL クエリ文字列を含む文字列の配列で、各要素の長さは <paramref name="SourceData" /> 最大 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-384">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span></span> <span data-ttu-id="ecff9-385">引数を使用して <paramref name="Connection" /> ODBC 接続文字列を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-385">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span></span> <span data-ttu-id="ecff9-386">以前のバージョンの Excel との互換性を保つには <paramref name="SourceData" /> 、2 要素の配列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-386">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span></span> <span data-ttu-id="ecff9-387">1 番目の要素はデータの ODBC ソースを指定した接続文字列です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-387">The first element is the connection string specifying the ODBC source for the data.</span></span> <span data-ttu-id="ecff9-388">2 番目の要素はデータの取得に使用する SQL のクエリ文字列です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-388">The second element is the SQL query string used to get the data.</span></span> <span data-ttu-id="ecff9-389">指定する場合 <paramref name="SourceData" /> は、指定する必要があります <paramref name="SourceType" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-389">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span></span> <span data-ttu-id="ecff9-390">アクティブ セルが範囲内にある場合は <paramref name="SourceData" /> 、指定する <paramref name="TableDestination" /> 必要もあります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-390">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span></span></param>
        <param name="TableDestination"><span data-ttu-id="ecff9-391">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-391">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-392">レポートの配置場所を表す <b>Range</b> オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-392">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span></span> <span data-ttu-id="ecff9-393">この引数を省略すると、レポートはアクティブ セルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-393">If this argument is omitted, the report is placed at the active cell.</span></span></param>
        <param name="TableName"><span data-ttu-id="ecff9-394">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-394">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-395">新しいレポートの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-395">A string that specifies the name of the new report.</span></span></param>
        <param name="RowGrand"><span data-ttu-id="ecff9-396">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-396">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-397">レポートに行の総計を表示するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-397"><b>True</b> to show grand totals for rows in the report.</span></span></param>
        <param name="ColumnGrand"><span data-ttu-id="ecff9-398">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-398">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-399">レポートに列の総計を表示するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-399"><b>True</b> to show grand totals for columns in the report.</span></span></param>
        <param name="SaveData"><span data-ttu-id="ecff9-400">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-400">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-401">レポートと共にデータを保存するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-401"><b>True</b> to save data with the report.</span></span> <span data-ttu-id="ecff9-402">レポートの定義のみを保存するには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-402"><b>False</b> to save only the report definition.</span></span></param>
        <param name="HasAutoFormat"><span data-ttu-id="ecff9-403">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-403">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-404"><b>True</b> を設定すると、更新時またはフィールドの移動時にレポートの書式が自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-404"><b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span></span></param>
        <param name="AutoPage"><span data-ttu-id="ecff9-405">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-405">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-406"><paramref name="SourceType" /> <b>xlConsolidation の場合にのみ有効です</b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-406">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span></span> <span data-ttu-id="ecff9-407"><b>True 統合</b> のページ フィールドを作成する場合です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-407"><b>True</b> to have Microsoft Excel create a page field for the consolidation.</span></span> <span data-ttu-id="ecff9-408">False <paramref name="AutoPage" /> の <b>場合</b>は、ページ フィールドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-408">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span></span></param>
        <param name="Reserved"><span data-ttu-id="ecff9-409">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-409">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-410">Excel では、この引数は使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-410">Not used by Microsoft Excel.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="ecff9-411">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-411">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-412"><b>True</b> の場合、Excel はレポートのクエリをバック グラウンド (非同期) で実行します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-412"><b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span></span> <span data-ttu-id="ecff9-413">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-413">The default value is <b>False</b>.</span></span></param>
        <param name="OptimizeCache"><span data-ttu-id="ecff9-414">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-414">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-415"><b>True</b> の場合、ピボットテーブルのキャッシュの構成時に最適化を行います。</span><span class="sxs-lookup"><span data-stu-id="ecff9-415"><b>True</b> to optimize the PivotTable cache when it's constructed.</span></span> <span data-ttu-id="ecff9-416">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-416">The default value is <b>False</b>.</span></span></param>
        <param name="PageFieldOrder"><span data-ttu-id="ecff9-417">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-417">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-418">ピボットテーブル レポートのレイアウトにページ フィールドを追加する順序を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-418">The order in which page fields are added to the PivotTable report’s layout.</span></span> <span data-ttu-id="ecff9-419">使用できる定数は、<b>XlOrder</b> クラスの <b>xlDownThenOver</b> または <b>xlOverThenDown</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-419">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span></span> <span data-ttu-id="ecff9-420">既定値は <b>xlDownThenOver</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-420">The default value is <b>xlDownThenOver</b>.</span></span></param>
        <param name="PageFieldWrapCount"><span data-ttu-id="ecff9-421">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-422">ピボットテーブルの各列または各行のページ フィールドの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-422">The number of page fields in each column or row in the PivotTable report.</span></span> <span data-ttu-id="ecff9-423">既定値は 0 (ゼロ) です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-423">The default value is 0 (zero).</span></span></param>
        <param name="ReadData"><span data-ttu-id="ecff9-424">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-425"><b>True</b> 外部データベースのすべてのレコードを含むピボットテーブル キャッシュを作成します。このキャッシュは非常に大きい可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-425"><b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span></span> <span data-ttu-id="ecff9-426">False <paramref name="ReadData" /> の <b>場合</b>、データが実際に読み取る前に、一部のフィールドをサーバー ベースのページ フィールドとして設定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-426">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span></span></param>
        <param name="Connection"><span data-ttu-id="ecff9-427">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-428">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span><span class="sxs-lookup"><span data-stu-id="ecff9-428">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span></span> <span data-ttu-id="ecff9-429">接続文字列の形式は "ODBC; &lt;接続文字列 &gt; ".</span><span class="sxs-lookup"><span data-stu-id="ecff9-429">The connection string has the form "ODBC;&lt;connection string&gt;".</span></span> <span data-ttu-id="ecff9-430">この引数は、オブジェクトのプロパティに対する以前の <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> 設定を上書き <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-430">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span></span></param>
        <summary><span data-ttu-id="ecff9-431">オブジェクトを作成 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-431">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span></span> <span data-ttu-id="ecff9-432">このメソッドでは、ピボットテーブル ウィザードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-432">This method doesn’t display the PivotTable Wizard.</span></span> <span data-ttu-id="ecff9-433">このメソッドは、OLE DB データ ソースでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-433">This method isn’t available for OLE DB data sources.</span></span> <span data-ttu-id="ecff9-434">このメソッド <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> を使用してピボットテーブル キャッシュを追加し、そのキャッシュに基づいてピボットテーブル レポートを作成します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-434">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span></span> <span data-ttu-id="ecff9-435"><b>PivotTable</b> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecff9-435"><b>PivotTable</b> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-436">前のシートまたはセルを表す 、またはオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span></span> <span data-ttu-id="ecff9-437">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-437">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-438">セル範囲 (Range オブジェクト) が対象のとき、このプロパティでは、Shift + Tab キーを押したときの移動先セルと同じセルが返されます。ただし、そのセルを選択する動作は行われません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-438">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="ecff9-p196">保護されたシートでは、ロックされていないセルの中から前のセルが返されます。保護されていないシートでは、指定したセルの常に左隣のセルが返されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p196">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-441">現在のワークシートに印刷されるコメント ページの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-441">Gets the number of comment pages that will be printed for the current worksheet.</span></span></summary>
        <value><span data-ttu-id="ecff9-442">現在のワークシートに対して印刷されるコメント ページの数です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-442">The number of comment pages that will be printed for the current worksheet.</span></span></value>
        <remarks><para><span data-ttu-id="ecff9-443">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-443">Read-only.</span></span></para>
          <para><span data-ttu-id="ecff9-444">このプロパティは、[ページ設定] ダイアログ ボックスの [シート] タブの [コメント] 設定が [シートの末尾] に設定されている場合にのみ、0 より大きい数値 <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-444">The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet.</span></span> <span data-ttu-id="ecff9-445">シートがグラフ シートまたは MS Excel 5.0 ダイアログ シートの場合、このプロパティは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-445">This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="ecff9-446">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-446">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-447">印刷を開始するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-447">The number of the page at which to start printing.</span></span> <span data-ttu-id="ecff9-448">この引数を省略すると、最初のページから印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-448">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="ecff9-449">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-449">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-450">印刷を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-450">The number of the last page to print.</span></span> <span data-ttu-id="ecff9-451">この引数を省略すると、最後のページまで印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-451">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="ecff9-452">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-452">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-453">印刷部数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-453">The number of copies to print.</span></span> <span data-ttu-id="ecff9-454">この引数を省略すると、印刷部数は 1 部になります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-454">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="ecff9-455">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-455">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-456"><b>True</b> の場合、印刷をする前に印刷プレビューを実行します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-456"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="ecff9-457"><b>False</b>、または省略した場合、直ちに印刷を行います。</span><span class="sxs-lookup"><span data-stu-id="ecff9-457"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="ecff9-458">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-458">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-459">アクティブなプリンターの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-459">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="ecff9-460">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-460">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-461"><b>True</b> の場合、ファイルへ出力します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-461"><b>True</b> to print to a file.</span></span> <span data-ttu-id="ecff9-462">指定 <paramref name="PrToFileName" /> しない場合は、出力ファイルの名前を入力するように求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-462">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="ecff9-463">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-463">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-464"><b>True</b> の場合、部単位で印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-464"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="ecff9-465">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-465">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-466"><paramref name="PrintToFile" />True に設定<b>されている</b>場合、この引数は印刷するファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-466">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="ecff9-467">オブジェクトを印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-467">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-468">シートまたはブック内の全体的なページではなく、印刷ページの説明内の "ページ" を <paramref name="From" /> <paramref name="To" /> 参照します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-468">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="ecff9-469">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-469">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="ecff9-470">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-470">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-471"><b>True を</b> 指定したワークシートへの変更を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-471"><b>True</b> to enable changes to the specified worksheet.</span></span></param>
        <summary><span data-ttu-id="ecff9-472">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-472">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="ecff9-473">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-473">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-474">ワークシートまたはブックのパスワード文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-474">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="ecff9-475">パスワードでは大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-475">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="ecff9-476">この引数を省略すると、ワークシートまたはブックはパスワードの使用なしで保護解除できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-476">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="ecff9-477">この引数を指定すると、保護解除をするためには、そのパスワードが必要になります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-477">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="ecff9-478">パスワードおよび対応するブック名またはシート名を一覧表にして、安全な場所に保管しておくことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-478">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="DrawingObjects"><span data-ttu-id="ecff9-479">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-479">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-480">描画オブジェクトを保護するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-480"><b>True</b> to protect shapes.</span></span> <span data-ttu-id="ecff9-481">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-481">The default value is <b>False</b>.</span></span></param>
        <param name="Contents"><span data-ttu-id="ecff9-482">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-482">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-483"><b>True コンテンツ</b> を保護します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-483"><b>True</b> to protect contents.</span></span> <span data-ttu-id="ecff9-484">グラフの場合、これによりグラフ全体が保護されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-484">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="ecff9-485">ワークシートの場合は、ロックされたセルが保護されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-485">For a worksheet, this protects the locked cells.</span></span> <span data-ttu-id="ecff9-486">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-486">The default value is <b>True</b>.</span></span></param>
        <param name="Scenarios"><span data-ttu-id="ecff9-487">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-487">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-488">シナリオを保護するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-488"><b>True</b> to protect scenarios.</span></span> <span data-ttu-id="ecff9-489">この引数はワークシートの場合のみ有効です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-489">This argument is valid only for worksheets.</span></span> <span data-ttu-id="ecff9-490">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-490">The default value is <b>True</b>.</span></span></param>
        <param name="UserInterfaceOnly"><span data-ttu-id="ecff9-491">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-491">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-492"><b>True</b> を指定すると、ユーザー インターフェイスは保護されますが、マクロは保護されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-492"><b>True</b> to protect the user interface but not macros.</span></span> <span data-ttu-id="ecff9-493">この引数を省略すると、マクロからも、画面上からも変更することができなくなります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-493">If this argument is omitted, protection applies both to macros and to the user interface.</span></span></param>
        <param name="AllowFormattingCells"><span data-ttu-id="ecff9-494">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-494">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-495"><b>True</b> を指定すると、ユーザーは保護されたワークシートのセルを書式化することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-495"><b>True</b> allows the user to format any cell on a protected worksheet.</span></span> <span data-ttu-id="ecff9-496">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-496">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingColumns"><span data-ttu-id="ecff9-497">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-497">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-498"><b>True</b> を指定すると、ユーザーは保護されたワークシートの列を書式化することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-498"><b>True</b> allows the user to format any column on a protected worksheet.</span></span> <span data-ttu-id="ecff9-499">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-499">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingRows"><span data-ttu-id="ecff9-500">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-500">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-501"><b>True</b> を指定すると、ユーザーは保護されたワークシートの任意の行の書式を設定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-501"><b>True</b> allows the user to format any row on a protected worksheet.</span></span> <span data-ttu-id="ecff9-502">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-502">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingColumns"><span data-ttu-id="ecff9-503">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-504"><b>True</b> を指定すると、ユーザーは保護されたワークシートに列を挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-504"><b>True</b> allows the user to insert columns on the protected worksheet.</span></span> <span data-ttu-id="ecff9-505">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-505">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingRows"><span data-ttu-id="ecff9-506">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-506">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-507"><b>True</b> を指定すると、ユーザーは保護されたワークシートに行を挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-507"><b>True</b> allows the user to insert rows on the protected worksheet.</span></span> <span data-ttu-id="ecff9-508">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-508">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingHyperlinks"><span data-ttu-id="ecff9-509">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-510"><b>True</b> を指定すると、ユーザーはワークシートにハイパーリンクを挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-510"><b>True</b> allows the user to insert hyperlinks on the worksheet.</span></span> <span data-ttu-id="ecff9-511">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-511">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingColumns"><span data-ttu-id="ecff9-512">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-512">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-513"><b>True</b> を指定すると、ユーザーは保護されたワークシートの列を削除することができ、削除される列のセルはすべてロック解除されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-513"><b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span></span> <span data-ttu-id="ecff9-514">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-514">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingRows"><span data-ttu-id="ecff9-515">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-515">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-516"><b>True</b> を指定すると、ユーザーは保護されたワークシートの行を削除できます。このワークシートでは、削除する行のすべてのセルのロックが解除されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-516"><b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span></span> <span data-ttu-id="ecff9-517">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-517">The default value is <b>False</b>.</span></span></param>
        <param name="AllowSorting"><span data-ttu-id="ecff9-518">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-519"><b>True</b> を指定すると、ユーザーは保護されたワークシートで並べ替えを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-519"><b>True</b> allows the user to sort on the protected worksheet.</span></span> <span data-ttu-id="ecff9-520">並べ替え範囲内のセルは、ロックと保護が解除されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-520">Every cell in the sort range must be unlocked or unprotected.</span></span> <span data-ttu-id="ecff9-521">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-521">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFiltering"><span data-ttu-id="ecff9-522">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-522">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-523"><b>True</b> を指定すると、ユーザーは保護されたワークシートにフィルターを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-523"><b>True</b> allows the user to set filters on the protected worksheet.</span></span> <span data-ttu-id="ecff9-524">ユーザーは、フィルター条件を変更できますが、オートフィルターの有効と無効を切り替えることはできません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-524">Users can change filter criteria but can not enable or disable an auto filter.</span></span> <span data-ttu-id="ecff9-525">ユーザーは、既存のオート フィルターにフィルターを設定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-525">Users can set filters on an existing auto filter.</span></span> <span data-ttu-id="ecff9-526">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-526">The default value is <b>False</b>.</span></span></param>
        <param name="AllowUsingPivotTables"><span data-ttu-id="ecff9-527">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-527">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-528"><b>True</b> を指定すると、ユーザーは保護されたワークシートでピボットテーブル レポートを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-528"><b>True</b> allows the user to use pivot table reports on the protected worksheet.</span></span> <span data-ttu-id="ecff9-529">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-529">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ecff9-530">ワークシートを保護し、変更できないようにします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-530">Protects a worksheet so that it cannot be modified.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-531">引数を True に設定して<b>Protect</b>メソッドをワークシートに適用し、ブックを保存すると、ブックを再度開くと、ワークシート全体 (インターフェイスだけではない) が完全に保護 <paramref name="UserInterfaceOnly" /> されます<b></b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-531">If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook.</span></span> <span data-ttu-id="ecff9-532">ブックを開いた後でユーザー インターフェイス保護を再度有効にするには <b>、True</b> に設定して Protect メソッドを再度 <paramref name="UserInterfaceOnly" /> 適用する必要 <b>があります</b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-532">To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</span></span></para>
          <para><span data-ttu-id="ecff9-533">保護されたワークシートに変更を行う場合は、パスワードが指定されている場合は、保護されたワークシートで <b>Protect</b> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-533">If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied.</span></span> <span data-ttu-id="ecff9-534">もう 1 つの方法は、ワークシートの保護を解除し、必要な変更を行い、ワークシートを再び保護する方法です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-534">Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</span></span></para>
          <para><span data-ttu-id="ecff9-535">
            <b>注</b>: 'Unprotected' は、セルがロックされている ([セルの書式設定] ダイアログ) が、[範囲の編集を許可する] ダイアログボックスで定義されている範囲に含まれている場合、ユーザーがパスワードを使用して範囲の保護を解除するか、NT アクセス許可によって検証されたという意味です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-535">
            <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-536"><b>True</b> の 場合は、シートの内容が保護されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-536"><b>True</b> if the contents of the sheet are protected.</span></span> <span data-ttu-id="ecff9-537">グラフの場合、これによりグラフ全体が保護されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-537">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="ecff9-538">ワークシートの場合は、個々のセルが保護されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-538">For a worksheet, this protects the individual cells.</span></span> <span data-ttu-id="ecff9-539">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-539">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-540"><b>True の</b> 図形が保護されている場合です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-540"><b>True</b> if shapes are protected.</span></span> <span data-ttu-id="ecff9-541">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-541">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-542">ワークシートの <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> 保護オプションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-542">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-543"><b>True</b> ユーザー インターフェイス専用の保護が有効になっている場合です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-543"><b>True</b> if user-interface-only protection is turned on.</span></span> <span data-ttu-id="ecff9-544">ユーザー インターフェイス保護を有効にする場合は、引数を True に設定 <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <paramref name="UserInterfaceOnly" /> したメソッドを使用 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="ecff9-544">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span></span> <span data-ttu-id="ecff9-545">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-545">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-546">ワークシートのシナリオが保護されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-546"><b>True</b> if the worksheet scenarios are protected.</span></span> <span data-ttu-id="ecff9-547">値の取得のみ可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-547">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-548">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> のすべてのクエリ テーブルを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-548">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span></span> <span data-ttu-id="ecff9-549">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-549">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="ecff9-550">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="ecff9-550">Required <b>Object</b>.</span></span> <span data-ttu-id="ecff9-551">範囲の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-551">The name of the range.</span></span> <span data-ttu-id="ecff9-552">A1 形式の参照をコード記述時の言語で指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-552">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="ecff9-553">範囲名には、範囲を表す演算子 (:)、共通部分を表す演算子 (スペース)、または複数の範囲を表す演算子 (,) を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-553">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="ecff9-554">ドル記号も含めできますが、無視されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-554">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="ecff9-555">範囲の任意の部分には、ローカルに定義した名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-555">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="ecff9-556">名前を使用する場合、その名前はコード記述時の言語で表されたものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-556">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="ecff9-557">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-557">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-558">セル範囲の左上隅と右下隅のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-558">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="ecff9-559">各引数には、単一のセル、列全体、または行全体を含む <b>Range</b> オブジェクト、あるいはコード記述時の言語で単一のセルの名前を示す文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-559">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="ecff9-560">セルまたは <see cref="T:Microsoft.Office.Interop.Excel.Range" /> セル範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-561">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-561">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-562">指定したワークシートのすべての改ページをリセットします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-562">Resets all page breaks on the specified worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-563">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のすべての行を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-563">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span></span> <span data-ttu-id="ecff9-564">読み取り専用の <b>Range</b> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecff9-564">Read-only <b>Range</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="ecff9-565">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-565">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-566">保存するファイルの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="ecff9-566">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="ecff9-567">完全なパスを含めできます。保存しない場合、ファイルは現在のフォルダーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-567">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="FileFormat"><span data-ttu-id="ecff9-568">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-568">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-569">ファイルを保存するときに使用するファイル形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-569">The file format to use when you save the file.</span></span> <span data-ttu-id="ecff9-570">有効な選択肢の一覧については、プロパティを参照 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> してください。</span><span class="sxs-lookup"><span data-stu-id="ecff9-570">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="ecff9-571">既存のファイルの場合、既定の形式は指定された最後のファイル形式です。新しいファイルの場合、既定値は使用されている Excel のバージョンの形式です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-571">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="Password"><span data-ttu-id="ecff9-572">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-572">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-573">ファイルを保護するためのパスワードを表す 15 文字以内の文字列を指定します。大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-573">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="ecff9-574">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-574">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-575">ファイルの書き込みパスワードを表す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-575">A string that indicates the write-reservation password for this file.</span></span> <span data-ttu-id="ecff9-576">パスワードを設定して保存したファイルを、パスワードを指定しないで開くと、ファイルは読み取り専用で開かれます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-576">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="ecff9-577">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-577">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-578"><b>True</b> を指定 すると、ファイルを読み取り専用として開くことを推奨するファイルが開いているときにメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-578"><b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="ecff9-579">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-579">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-580">バックアップ ファイルを作成するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-580"><b>True</b> to create a backup file.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="ecff9-581">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-581">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-582">最近使用したファイルの一覧にブックを追加するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-582"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="ecff9-583">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-583">The default value is <b>False</b>.</span></span></param>
        <param name="TextCodepage"><span data-ttu-id="ecff9-584">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-584">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-585">英語の Excel では使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-585">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="ecff9-586">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-586">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-587">英語の Excel では使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-587">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="Local"><span data-ttu-id="ecff9-588">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-588">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-589"><b>True を</b> 指定すると、Excel の言語 (コントロール パネルの設定を含む) に対してファイルが保存されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-589"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="ecff9-590"><b>False</b> (既定値) を指定すると、Visual Basic for Applications (VBA) の言語 (Workbooks.Open を実行する VBA プロジェクトが国際化された古い XL5/95 VBA プロジェクトではない限り、通常は英語 (米国)) に対してファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-590"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="ecff9-591">グラフまたはワークシートへの変更を別のファイルに保存します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-591">Saves changes to the chart or worksheet in a different file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ecff9-592">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-592">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-593">シナリオの名前またはインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-593">The name or number of the scenario.</span></span> <span data-ttu-id="ecff9-594">複数のシナリオを指定するときは、配列として指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-594">Use an array to specify more than one scenario.</span></span></param>
        <summary><span data-ttu-id="ecff9-595">ワークシート上の単一のシナリオ (オブジェクト) またはシナリオのコレクション (オブジェクト) を表す <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-595">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-596">Web ページとして保存するときに、指定された文書内のスクリプトまたはコードのブロックを表すオブジェクトを含むコレクション <see cref="T:Microsoft.Office.Core.Scripts" /> <see cref="T:Microsoft.Office.Core.Script" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-596">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-597">A1 形式の範囲参照としてスクロールできる範囲を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-597">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span></span> <span data-ttu-id="ecff9-598">スクロール領域の外側のセルは選択できません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-598">Cells outside the scroll area cannot be selected.</span></span> <span data-ttu-id="ecff9-599">値の取得と設定が可能な文字列型 (<b>String</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-599">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-600">シート全体でセル選択を可能にするには、このプロパティに空の文字列 ("") を設定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-600">Set this property to the empty string ("") to enable cell selection for the entire sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-601">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-601">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="ecff9-602">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-602">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-603">置換するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-603">The object to replace.</span></span></param>
        <summary><span data-ttu-id="ecff9-604">オブジェクトを選択します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-604">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-605">セルまたはセル範囲を選択するには、<b>Select</b> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-605">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="ecff9-606">1 つのセルをアクティブ セルにする場合は、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-606">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="ecff9-607"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-607">Required <b>String</b>.</span></span> <span data-ttu-id="ecff9-608">表示するグラフィック ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-608">The name of the graphic file.</span></span></param>
        <summary><span data-ttu-id="ecff9-609">ワークシートまたはグラフの背景のグラフィックを設定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-609">Sets the background graphic for a worksheet or chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-610">ワークシートまたは <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> グラフ シートのすべての図形を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span></span> <span data-ttu-id="ecff9-611">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-611">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-612">現在フィルターがかけられているリストに対して、すべての行を表示します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-612">Makes all rows of the currently filtered list visible.</span></span> <span data-ttu-id="ecff9-613">オートフィルターを使っているときにこのメソッドを使うと、下向き矢印が青から黒に変わります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-613">If AutoFilter is in use, this method changes the arrows to "All."</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecff9-614">対象ワークシートに関連付けられたデータ フォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-614">Displays the data form associated with the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-615">データ フォームを使用している間、実行は一時停止します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-615">Execution pauses while you’re using the data form.</span></span> <span data-ttu-id="ecff9-616">データ フォームを閉じると <b>、ShowDataForm</b> メソッドの次の行から実行が再開されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-616">When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</span></span></para>
          <para><span data-ttu-id="ecff9-617">このメソッドでは、ユーザー設定のデータ フォームの実行も可能です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-617">This method runs the custom data form, if one exists.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-618">指定されたセル <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> の識別子を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-619">現在のワークシートで並べ替えた値を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-619">Returns the sorted values in the current worksheet.</span></span> <span data-ttu-id="ecff9-620">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-620">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Sort" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-621">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-621">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-622">ワークシート内のすべての行の標準 (既定) の高さをポイント数で返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-622">Returns the standard (default) height of all the rows in the worksheet in points.</span></span> <span data-ttu-id="ecff9-623">値の取得のみ可能な倍精度浮動小数点型 (<b>Double</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-623">Read-only <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-624">ワークシートのすべての列の標準 (既定) の幅を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-624">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="ecff9-625">取得/設定が可能な <b>Double</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-625">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-p254">列幅の単位は、標準スタイルの 1 文字分の幅に相当します。プロポーショナル フォントでは、数字の 0 の幅が列幅の単位になります。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p254">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-628">グラフまたは <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> ワークシートのオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-628">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ecff9-629">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="ecff9-629">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-630">Microsoft Excel でワークシートに Lotus 1-2-3 式の評価ルールを使用する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-630"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</span></span> <span data-ttu-id="ecff9-631">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-631">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-632"><b>True</b> の 場合は、ワークシートの Lotus 1-2-3 数式入力規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-632"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</span></span> <span data-ttu-id="ecff9-633">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-633">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-634">ワークシートの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-634">Returns or sets the worksheet type.</span></span> <span data-ttu-id="ecff9-635">読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-635">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="ecff9-636">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-637">シートまたはブックの保護を解除するために使用するパスワードを示す文字列。</span><span class="sxs-lookup"><span data-stu-id="ecff9-637">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="ecff9-638">シートまたはブックがパスワードで保護されていない場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-638">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="ecff9-639">パスワードで保護されているシートに対してこの引数を省略すると、パスワードの入力を求められます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-639">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="ecff9-640">パスワードで保護されているブックに対してこの引数を省略すると、メソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-640">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="ecff9-641">シートまたはブックの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-641">Removes protection from a sheet or workbook.</span></span> <span data-ttu-id="ecff9-642">保護されていないシートやブックに対しては、このメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-642">This method has no effect if the sheet or workbook isn't protected.</span></span></summary>
        <remarks><para><span data-ttu-id="ecff9-p260">パスワードを忘れると、シートまたはブックの保護を解除できなくなってしまうので注意してください。パスワードおよび対応するブック名またはシート名を一覧表にして、安全な場所に保管しておくことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ecff9-p260">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-645">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の使用範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-645">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span></span> <span data-ttu-id="ecff9-646">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-646">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-647">オブジェクトを表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-647">Determines whether the object is visible.</span></span> <span data-ttu-id="ecff9-648">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> 。</span><span class="sxs-lookup"><span data-stu-id="ecff9-648">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ecff9-649">ピボットテーブルの各アイテムの <b>Visible</b> プロパティは、現在そのアイテムがテーブルに表示されている場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-649">The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</span></span></para>
          <para><span data-ttu-id="ecff9-650">名前の <b>Visible</b> プロパティを <b>False</b>に設定すると、[名前の定義] ダイアログ ボックスに名前は表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-650">If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecff9-651">シートの <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> 垂直な改ページを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-651">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="ecff9-652">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-652">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="ecff9-653">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="ecff9-653">Required <b>Object</b>.</span></span> <span data-ttu-id="ecff9-654">対象となる XPath を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-654">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="ecff9-655">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-656">XPath <b>パラメーターで参照</b> される名前空間を含む、スペース区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="ecff9-656">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="ecff9-657">指定した名前空間の 1 つを解決できない場合は、実行時エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-657">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="ecff9-658">省略 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="ecff9-659">特定のマップ内の XPath を対象とする場合に、その XML マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-659">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="ecff9-660">特定の <see cref="T:Microsoft.Office.Interop.Excel.Range" /> XPath にマップされているセルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-660">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="ecff9-661">指定した <b>XPath が</b> ワークシートにマップされていない場合、またはマップされた範囲が空の場合は、Nothing を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-661">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ecff9-662">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-662">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="ecff9-663">XPath が XML リスト内の列内に存在する場合、返される <b>Range</b> オブジェクトにはヘッダー行も Insert 行も含めされません。</span><span class="sxs-lookup"><span data-stu-id="ecff9-663">If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="ecff9-664">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="ecff9-664">Required <b>Object</b>.</span></span> <span data-ttu-id="ecff9-665">対象となる XPath を指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-665">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="ecff9-666">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-666">Optional <b>Object</b>.</span></span> <span data-ttu-id="ecff9-667">XPath <b>パラメーターで参照</b> される名前空間を含む、スペース区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="ecff9-667">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="ecff9-668">指定した名前空間の 1 つを解決できない場合は、実行時エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-668">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="ecff9-669">省略 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="ecff9-669">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="ecff9-670">特定のマップ内の XPath を対象とする場合に、その XML マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-670">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="ecff9-671">特定の <see cref="T:Microsoft.Office.Interop.Excel.Range" /> XPath にマップされているセルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="ecff9-672">指定した XPath がワークシートにマッピングされていない場合は、 <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-672">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ecff9-673">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="ecff9-673">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="ecff9-674">このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> とは異なり <b>、XmlMapQuery</b> メソッドは、ヘッダー行と [挿入] 行を含む XML リストの列全体を返します。</span><span class="sxs-lookup"><span data-stu-id="ecff9-674">Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
