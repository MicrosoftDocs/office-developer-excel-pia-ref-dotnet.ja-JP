<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20583133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="25a55-101">これは、対応する COM オブジェクトと相互運用するためのマネージ コードで必要とされる COM コクラス内のプライマリ インターフェイスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25a55-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="25a55-102">メソッドを使用する COM オブジェクトのイベントと同じ名前を共有する場合にのみ、この主要なインタ フェースを使用します。メソッドを呼び出すには、このインターフェイスにこの例では、キャストし、イベントに接続するための最新のイベント インターフェイスにキャストします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25a55-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="25a55-103">それ以外の場合、メソッド、プロパティ、および COM オブジェクトのイベントにアクセスする COM コクラスから派生した .NET インターフェイスを使用します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25a55-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="25a55-104">COM オブジェクトの詳細についてを参照してください<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25a55-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-105">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-106">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-107">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-108">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-109">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-110">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-111">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-112">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-112">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-113">指定されたシートをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-113">Makes the current sheet the active sheet.</span>
          </span>
          <span data-ttu-id="25a55-114">シートのタブをクリックすると等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-114">Equivalent to clicking the sheet's tab.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-115">このプロパティが返すオブジェクト修飾子を指定しない場合に使用する場合、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="25a55-116">対象となるオブジェクトが指定された場合は、指定されたオブジェクトを作成した <b>Application</b> オブジェクトを返します。OLE オートメーションを使っていて、オブジェクトのアプリケーションにアクセスするときなどに、このプロパティを使います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="25a55-117">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-118">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-118">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-119">返します、<see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />オブジェクトのかどうかは、フィルター処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span>
          </span>
          <span data-ttu-id="25a55-120">フィルターがオフの場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-120">Returns <b>Nothing</b> if filtering is off.</span>
          </span>
          <span data-ttu-id="25a55-121">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-122">
            <para>ワークシートの<b>オート フィルター</b>オブジェクトを作成する必要がありますを有効にするオート フィルター、ワークシート上の範囲のか、手動でまたはを使用して、<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />のメソッドの<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-122">
              <para>To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-123">
            <b>True の</b>場合は、シートにオート フィルターのドロップダウン矢印を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-123">
              <b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-124">このプロパティは、<see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span>
          </span>
          <span data-ttu-id="25a55-125">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-125">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-126">
            <para>このプロパティは、ドロップダウン矢印が表示されている場合に<b>True</b>を返します。このプロパティを設定するには<b>False</b>矢印を削除するには<b>True</b>に設定することはできません。使用して、<see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />メソッドの一覧をフィルター処理し、ドロップダウン矢印を表示します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-126">
              <para>This property returns <b>True</b> if the drop-down arrows are currently displayed. You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>. Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-127">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-127">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-128">計算を実行します。計算の対象となるのは、開かれているすべてのブック、ブック内の特定のワークシート、ワークシート内の指定されたセル範囲のいずれかです。計算対象と指定例は、次のとおりです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-128">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-129">
            <list type="table">
              <item>
                <term>すべての開いているブック</term>
                <description>Application.Calculate</description>
              </item>
              <item>
                <description>Worksheets(1) の
              <term>特定のワークシート</term>です。計算</description>
              </item>
              <item>
                <description>Worksheets(1) の
              <term>範囲を指定</term>します。Rows(2)。計算</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-129">
              <list type="table">
                <item>
                  <term>All open workbooks</term>
                  <description>Application.Calculate</description>
                </item>
                <item>
                  <term>A specific worksheet</term>
                  <description>Worksheets(1).Calculate</description>
                </item>
                <item>
                  <term>A specified range</term>
                  <description>Worksheets(1).Rows(2).Calculate</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-130">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> (現在使用されているセルだけでなく)、ワークシートのすべてのセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
          <span data-ttu-id="25a55-131">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-132">
            <para>
              <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />プロパティは<b>Range</b>オブジェクトの既定のプロパティ、 <b>Cells</b>キーワードの後にすぐに行および列のインデックスを指定することができます。詳細については、 <b>Item</b>プロパティを参照してください</para>。
          <para>作業中のワークシート上のすべてのセルを表す<b>Range</b>オブジェクトを返すオブジェクト修飾子を指定せずにこのプロパティを使用します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-132">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <b>Item</b> property.</para>
              <para>Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="25a55-133">省略可能な<b>バリアント型</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-133">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="25a55-134">名前またはグラフの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-134">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="25a55-135">この引数は、複数のグラフを指定する配列を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-135">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-136">1 つの埋め込みグラフのいずれかを表すオブジェクトを返します (、<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />オブジェクト) またはすべての埋め込みグラフのコレクション (、<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />オブジェクト) シートにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-136">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="25a55-137">
            <para>同じ、このメソッドは、<see cref="T:Microsoft.Office.Interop.Excel.Charts" />プロパティ。このメソッドは、埋め込みグラフを返します。<b>グラフ</b>のプロパティは、グラフ シートを返します。使用して、<see cref="T:Microsoft.Office.Interop.Excel.Chart" />を返すプロパティ、<see cref="T:Microsoft.Office.Interop.Excel.Chart" />の埋め込みグラフ オブジェクト。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-137">
              <para>This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property. This method returns embedded charts; the <b>Charts</b> property returns chart sheets. Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-138">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-138">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="25a55-139">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-140">メイン辞書で単語が見つからない場合に調べるカスタム辞書のファイル名を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-140">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="25a55-141">この引数を省略すると、現在指定されている辞書が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-141">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="25a55-142">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-143">
            <b>True</b>をすべて大文字の単語を無視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-143">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="25a55-144">
            <b>False を指定</b>して、Microsoft Excel チェック単語がすべて大文字であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-144">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="25a55-145">この引数を省略した場合は、現在の設定が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-145">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="25a55-146">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-147">
            <b>True</b>をスペルの誤りが見つかった場合は、候補の一覧を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-147">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="25a55-148">
            <b>False を指定</b>すると正しいスペルを入力するを待ちます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-148">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="25a55-149">この引数を省略した場合は、現在の設定が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-149">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="25a55-150">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-151">使用されている辞書の言語です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-151">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="25a55-152">使用される<b>MsoLanguageID</b>の値のいずれかの<see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-152">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-153">オブジェクトのスペルをチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-153">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="25a55-154">このフォームには、戻り値がありません。Microsoft Excel では、[スペル チェック] ダイアログ ボックスが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-154">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-155">
            <para>このメソッドを使用すると、ヘッダー、フッター、およびワークシート上のオブジェクトを確認できます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-155">
              <para>Use this method to check headers, footers, and objects on a worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-156">ワークシートの [入力規則] で設定された制限外の値が入力されているセルに丸印を付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-156">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-157">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト、シート上の最初の循環参照を含む範囲を表すには、シートに循環参照が存在しない場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-158">計算を始める前に、循環参照を削除する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-158">The circular reference must be removed before calculation can proceed.</span>
          </span>
          <span data-ttu-id="25a55-159">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-159">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p114">ワークシートからトレース矢印を削除します。なお、トレース矢印とは使用したワークシート分析機能によって追加される矢印です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p114">Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-162">ワークシートの [入力規則] で設定された制限外の値が入力されているセルに付けられた丸印を消去します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-162">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-163">
            <para>使用して、<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />メソッドを無効なデータを含むセルにします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-163">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-164">オブジェクトのコード名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-164">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="25a55-165">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-165">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-166">
            <para>[プロパティ] ウィンドウの<b>(Name)</b>の右側のセルに表示される値は、選択したオブジェクトのコード名です。デザイン時に、この値を変更することによってオブジェクトのコード名を変更できます。プログラムによって実行時にこのプロパティを変更することはできません</para>。
          <para>オブジェクトのコード名はオブジェクトを表すオブジェクト式の代わりに使用することができます</para>。
          <para>シート名とコード名は異なる可能性があります。シートを作成する、シート名とコード名は同じですが、シート名を変更するコードの名前は変更されません (Visual Basic エディターで [プロパティ] ウィンドウを使用して) コード名を変更するシート名は変更されません</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-166">
              <para>The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</para>
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-167">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、指定したワークシート上のすべての列を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-167">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-168">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-168">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-169">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> 、指定したワークシートのすべてのコメントを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-170">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-170">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-171">現在の統合に使用される関数のコードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-171">Returns the function code used for the current consolidation.</span>
          </span>
          <span data-ttu-id="25a55-172">いずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-172">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span>
          </span>
          <span data-ttu-id="25a55-173">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-173">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-174">次の表に示すように、統合のオプションの 3 要素の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-174">Returns a three-element array of consolidation options, as shown in the following table.</span>
          </span>
          <span data-ttu-id="25a55-175">要素が<b>True</b>の場合は、オプションが設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-175">If the element is <b>True</b>, that option is set.</span>
          </span>
          <span data-ttu-id="25a55-176">読み取り専用 <b>オブジェクト</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-176">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-177">
            <list type="table">
              <item>
                <term>1</term>
                <description>上の行のラベルを使用します</description>
              </item>。
            <item><term>2</term><description>左の列にラベルを使用します</description></item>。
            <item><term>3</term><description>ソース データへのリンクを作成します</description></item>。
          </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-177">
              <list type="table">
                <item>
                  <term>1</term>
                  <description>Use labels in top row.</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use labels in left column.</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Create links to source data.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-178">ワークシートの現在の統合元シートの名前を指定する文字列値の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-178">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span>
          </span>
          <span data-ttu-id="25a55-179">シートに統合がない場合は<b>Empty</b>値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-179">Returns <b>Empty</b> if there's no consolidation on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-180">読み取り専用 <b>オブジェクト</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-180">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="25a55-181">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-182">コピーしたシートを配置する前にあるシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-182">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="25a55-183">指定することはできません<paramref name="Before" />を指定する場合は、 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-183">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="25a55-184">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-185">その後、コピーしたシートを配置するシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-185">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="25a55-186">指定することはできません<paramref name="After" />を指定する場合は、 <paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-186">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-187">シートをブック内の他の場所にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-187">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-188">
            <para>いずれかの方法を指定しない場合は、<paramref name="Before" />または<paramref name="After" />、コピーしたシートを含む新しいブックを作成します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-188">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-189">定数、<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />をこのオブジェクトの作成元アプリケーションを示す列挙型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-189">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="25a55-190">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-190">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="25a55-191">読み取り専用<b>xlCreatorCode</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-191">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="25a55-192">
            <para>
              <b>Creator</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Microsoft Excel は、クリエーター コードを持っています。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-192">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-193">返します、<see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" />ワークシートに関連付けられている識別情報を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-193">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-194">
            <para>
              <b>ユーザー</b>プロパティでは、ワークシートに識別子情報は、XML のメタデータを表すことができます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-194">
              <para>For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-195">オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-195">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-196">
            <para>削除すると、 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />、このメソッドは、削除を確認するのにはユーザーの入力を求めるダイアログ ボックスを表示します。既定では、このダイアログ ボックスが表示されます。<b>Delete</b>メソッドは、ユーザーがクリックした] ダイアログ ボックスで [キャンセル] または<b>True</b>の場合、クリックしたユーザーを削除する場合は<b>False</b>の<b>ブール</b>値を返します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-196">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-197">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-197">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p124">
            <b>True</b> の場合、指定されたシートにページ区切り (自動および手動の両方) を表示します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p124">
              <b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-200">
            <para>プリンターがインストールされていない場合、このプロパティを設定することはできません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-200">
              <para>You can't set this property if you don't have a printer installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-201">
            <b>True の</b>場合は、指定されたウィンドウ、ワークシート、または<b>ListObject</b>が右から左への代わりに左から右表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-201">
              <b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="25a55-202">
            <b>False</b>場合は、オブジェクトが左から右に表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-202">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
          <span data-ttu-id="25a55-203">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-203">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-204">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-204">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-205">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-205">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-206">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-206">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p126">画面上での変更のみの保護が設定されているときに、このプロパティが  <b>True</b> の場合、オートフィルター矢印が使用可能です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p126">
              <b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-209">
            <para>このプロパティでは、各ワークシートに適用され、ワークシートまたはセッションには保存されません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-209">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p127">
            <b>True</b> の場合、必要に応じて自動的にシートの再計算を実行します。 <b>False</b> の場合、シートの再計算を実行しません。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p127">
              <b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary. <b>False</b> if Excel doesn't recalculate the sheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-213">
            <para>このプロパティの値が<b>False</b>の場合は、再計算を要求できません。<b>False</b>から<b>True</b>に値を変更する場合は、ワークシートが再計算します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-213">
              <para>When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-214">条件付き書式は必要に応じて自動的に発生する場合を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-214">Returns or sets if conditional formats will occur automatically as needed.</span>
          </span>
          <span data-ttu-id="25a55-215">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-215">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25a55-216">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-216">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="25a55-217">
            <b>True</b> (既定値) の場合、条件付き書式設定は必要に応じて自動的に発生したときに<para>。 <b>False</b>に設定すると、条件付き書式は再評価されません。 以前に適用された条件付き書式が表示されますが、セルの値も更新されませんまたは<see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" />の範囲を変更します。 </para><para>このフラグの目的は、プログラマがそれを評価する前に規則を完全に構成を許可します。 これは、パフォーマンスは、このような場合に時間がかかるように広い範囲に条件が適用される場合に特に便利です</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-217">
              <para>When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.  When set to <b>False</b>, conditional formats will not be re-evaluated.  Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.  </para>
              <para>The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.  This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p129">画面上での変更のみの保護が設定されているとき、このプロパティが  <b>True</b> の場合、アウトライン記号が使用可能です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p129">
              <b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-220">
            <para>このプロパティでは、各ワークシートに適用され、ワークシートまたはセッションには保存されません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-220">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p130">画面上での変更のみの保護が設定されているときに、このプロパティが  <b>True</b> の場合、ピボットテーブルのコントロールと機能が使用できます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p130">
              <b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-223">
            <para>このプロパティは、各ワークシートに適用され、ワークシートまたはセッションには保存されません</para>。
          <para>を再計算し、ピボット テーブル レポートを表示する Microsoft Excel のピボット テーブル レポートの右側にロックされていないセルの下のための十分な数が存在する必要があります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-223">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para>There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-224">シートで何が選択できるかを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-224">Returns or sets what can be selected on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-225">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-225">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-226">
            <para>ワークシートが保護されている場合にのみにこのプロパティを反映します<b>ワークシート</b>は、シート上の選択を防ぐことが、 <b>Locked</b>プロパティが<b>False</b>が選択可能にするには、<b>で<b>保護している</b>セルだけは、。使用</b>任意のセルを選択することができます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-226">
              <para>This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="25a55-227">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-227">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="25a55-228">Excel の名前付け規則に従って、対象オブジェクトの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-228">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-229">使用する名前を、オブジェクトまたは値に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-229">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="25a55-230">
            <para>このメソッドを使用して Microsoft Excel 内の名前の次の種類を使用することができます:</para>
            <list type="bullet">
              <item>
                <description>[定義された名前です。任意の名前を指定することができます</description>
              </item>。外部参照を
            <item><description>。使用することができます、!演算子を別のブックで定義されているワークシートを参照してください</description></item>。
          </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-230">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>Defined names. You can specify any name.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a worksheet defined in another workbook.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="25a55-231">エクスポート後のファイル形式を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-231">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="25a55-232">保存するファイルのファイル名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-232">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="25a55-233">完全パスを含めることができます。 または short_excel2007 では、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-233">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="25a55-234">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-234">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="25a55-235">パブリッシュされたファイルの品質を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-235">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="25a55-236">ドキュメント プロパティを含める場合は、 <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-236">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="25a55-237">発行する場合に印刷範囲を無視するには、 <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-237">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="25a55-p135">発行を開始するページのページ番号を指定します。この引数を省略すると、先頭のページから発行が開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p135">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="25a55-p136">発行を終了するページの番号を指定します。この引数を省略すると、最後のページまで発行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p136">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="25a55-242">発行後にビューアーにファイルを表示するには  <b>True</b> 、それ以外の場合は <b>False</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-242">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="25a55-243">
            <b>FixedFormatExt</b>クラスへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-243">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-244">指定された形式のファイルにエクスポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-244">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-245">
            <para>このメソッドでは、ファイルを固定形式ファイルにエクスポートするアドインの初期化もサポートしています。コンバーターが存在する場合に、Excel で、ファイル形式の変換が実行されますか。変換は通常ユーザーによって開始されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-245">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-246">
            <b>True の</b>場合は、ワークシートがフィルター モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-246">
              <b>True</b> if the worksheet is in filter mode.</span>
          </span>
          <span data-ttu-id="25a55-247">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-247">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-248">
            <para>このプロパティは、ワークシートに保存されている非表示の行、フィルターされたリストが含まれている場合<b>は True</b>です。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-248">
              <para>This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-249">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-249">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-250">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-250">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-251">返します、<see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" />シートの水平方向のページを表すコレクションを中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-251">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-252">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-252">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-253">
            <para>海抜 1,026 水平な改ページ 1 枚の制限があります。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-253">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-254">返します、<see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" />の範囲またはワークシートのハイパーリンクを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-254">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-255">ようなオブジェクトのコレクション内のオブジェクトのインデックス番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-255">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="25a55-256">整数型 ( <b>Integer</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-256">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-257">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-257">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-258">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-258">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-259">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-259">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-260">コレクションを返します<see cref="T:Microsoft.Office.Interop.Excel.ListObject" />ワークシート内のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-260">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
          <span data-ttu-id="25a55-261">読み取り専用の<b>ListObjects</b>コレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-261">Read-only <b>ListObjects</b> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-262">文書の電子メール ヘッダーを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-262">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="25a55-263">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-263">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-264">移動したシートを配置する前にあるシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-264">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="25a55-265">指定することはできません<paramref name="Before" />を指定する場合は、 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-265">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="25a55-266">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-266">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-267">配置移動したシートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-267">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="25a55-268">指定することはできません<paramref name="After" />を指定する場合は、 <paramref name="Before" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-268">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-269">シートをブック内の別の場所に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-269">Moves the sheet to another location in the workbook</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-270">
            <para>いずれかの方法を指定しない場合は、<paramref name="Before" />または<paramref name="After" />、移動するワークシートを含む新しいブックを作成します。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-270">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p143">指定されたオブジェクトの名前を設定します。値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p143">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-273">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 、すべてのワークシートの名前 ("WorksheetName!"の定義の名前を表す</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="25a55-274">プレフィックス)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-274">prefix).</span>
          </span>
          <span data-ttu-id="25a55-275">
            <b>名前</b>オブジェクトの読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-275">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-276">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />、 <see cref="T:Microsoft.Office.Interop.Excel.Range" />、または<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />次のシートまたはセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span>
          </span>
          <span data-ttu-id="25a55-277">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-277">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-278">
            <para>プロパティは、それを選択せずに次のセルを返しますが、オブジェクトが一定の範囲である場合このプロパティは TAB キーをエミュレート</para>
            <para>、保護されたシートには、このプロパティは次のロックされていないセルを返します。保護されていないシートでは、常に返しますセル直後に指定したセルの右側にします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-278">
              <para>If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="25a55-279">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-279">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-280">OLE オブジェクトの名前またはインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-280">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-281">1 つの OLE オブジェクトのいずれかを表すオブジェクトを返します (、 <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />)、またはすべての OLE オブジェクトのコレクション (、<see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" />コレクション) グラフ シートにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-281">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
          <span data-ttu-id="25a55-282">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-282">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-283">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-283">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-284">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-284">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-285">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-285">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-286">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-286">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-287">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-287">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-288">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-288">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-289">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-289">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-290">返します、<see cref="T:Microsoft.Office.Interop.Excel.Outline" />指定されたワークシートのアウトラインを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-290">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-291">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-291">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-292">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-292">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-293">返します、<see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />オブジェクトを指定したオブジェクトのすべてのページ設定が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-293">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
          <span data-ttu-id="25a55-294">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-294">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p150">指定されたオブジェクトの親オブジェクトを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p150">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="25a55-297">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-297">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-298">A<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトをクリップボードの内容の貼り付け先を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="25a55-299">この引数を省略すると、現在の選択範囲が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-299">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="25a55-300">この引数は、範囲にクリップボードの内容を貼り付けることができるかどうかにのみ指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-300">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="25a55-301">この引数を指定する場合、<paramref name="Link" />引数を使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-301">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="25a55-302">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-303">の<b>場合は true</b>貼り付けたデータ ソースへのリンクを確立するためにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-303">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="25a55-304">この引数を指定する場合、<paramref name="Destination" />引数を使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-304">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span>
          </span>
          <span data-ttu-id="25a55-305">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-305">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-306">クリップボードの内容をシートに貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-306">Pastes the contents of the Clipboard onto the sheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-307">
            <para>を指定しない場合、<paramref name="Destination" />引数では、このメソッドを使用する前に貼り付け先の範囲を選択する必要があります</para>。
          <para>このメソッドは、クリップボードの内容によって、選択範囲を変更可能性があります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-307">
              <para>If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="25a55-308">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-308">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-309">クリップボードのデータの形式を文字列で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-309">A string that specifies the Clipboard format of the data.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="25a55-310">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-311">の<b>場合は true</b>貼り付けたデータ ソースへのリンクを確立するためにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-311">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="25a55-312">ソース データはリンクまたはリンク元のアプリケーションをサポートしていません、このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-312">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="25a55-313">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-313">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="25a55-314">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-314">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-315">
            <b>True</b>貼り付けたデータをアイコンとして表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-315">
              <b>True</b> to display the pasted data as an icon.</span>
          </span>
          <span data-ttu-id="25a55-316">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-316">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="25a55-317">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-317">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-318">場合に使用するアイコンを含むファイルの名前<paramref name="DisplayAsIcon" />が<b>true を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-318">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="25a55-319">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-319">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-320">アイコン ファイルのどのアイコンを使うかを示すインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-320">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="25a55-321">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-322">アイコンのラベルを文字列で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-322">The text label of the icon.</span>
          </span>
        </param>
        <param name="NoHTMLFormatting">
          <span data-ttu-id="25a55-323">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-323">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-324">
            <b>True の</b>HTML から書式設定、ハイパーリンク、およびイメージを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-324">
              <b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span>
          </span>
          <span data-ttu-id="25a55-325">
            <b>False</b>を HTML として貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-325">
              <b>False</b> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="25a55-326">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-326">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-327">指定した形式を使用してシートの上にクリップボードの内容を貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-327">Pastes the contents of the Clipboard onto the sheet using a specified format.</span>
          </span>
          <span data-ttu-id="25a55-328">他のアプリケーションからデータを貼り付ける、または特定の形式でデータを貼り付けるには、このメソッドを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-328">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-329">
            <para>
              <paramref name="NoHTMLFormatting" />問題のみをときに<paramref name="Format" />="HTML"。他のすべての場合では、<paramref name="NoHTMLFormatting" />は無視されます</para>。
          <para>このメソッドを使用する前に、貼り付け先の範囲を選択する必要があります</para>。
          <para>このメソッドは、クリップボードの内容によって、選択範囲を変更可能性があります</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-329">
              <para>
                <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”. In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</para>
              <para>You must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-330">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-330">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="25a55-331">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-331">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-332">ピボットテーブル レポートの名前またはインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-332">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-333">1 つのピボット テーブル レポートのいずれかを表すオブジェクトを返します (、<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />オブジェクト) またはすべてのピボット テーブル レポートのコレクション (、<see cref="T:Microsoft.Office.Interop.Excel.PivotTables" />オブジェクト) のワークシートにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-333">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
          <span data-ttu-id="25a55-334">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-334">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="25a55-335">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-335">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-336">レポート データのソースです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-336">The source of the report data.</span>
          </span>
          <span data-ttu-id="25a55-337">いずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-337">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          </span>
        </param>
        <param name="SourceData">
          <span data-ttu-id="25a55-338">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-338">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-339">新しいレポートのデータです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-339">The data for the new report.</span>
          </span>
          <span data-ttu-id="25a55-340">ことができます、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト、セル範囲の配列、または別のレポートの名前を表す文字列定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-340">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="25a55-341">外部データベースの場合は、<paramref name="SourceData" />の各要素が 255 文字までの長さを SQL クエリ文字列を含む文字列の配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-341">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="25a55-342">使用する必要があります、 <paramref name="Connection" /> 、ODBC 接続文字列を指定する引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-342">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="25a55-343">以前のバージョンの Excel と互換性のため<paramref name="SourceData" />2 つの要素配列にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-343">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span>
          </span>
          <span data-ttu-id="25a55-344">最初の要素は、データの ODBC ソースを指定する接続文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-344">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="25a55-345">2 番目の要素は、データを取得するために使用する SQL クエリ文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-345">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="25a55-346">指定する場合は、<paramref name="SourceData" />も指定する必要があります<paramref name="SourceType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-346">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span>
          </span>
          <span data-ttu-id="25a55-347">内にアクティブ セルがある場合、<paramref name="SourceData" />の範囲を指定してください<paramref name="TableDestination" />も同様です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-347">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span>
          </span>
        </param>
        <param name="TableDestination">
          <span data-ttu-id="25a55-348">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-348">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-349">レポートの配置場所を指定する<b>Range</b>オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-349">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="25a55-350">この引数を省略した場合、レポートは、アクティブ セルに配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-350">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="TableName">
          <span data-ttu-id="25a55-351">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-351">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-352">新しいレポートの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-352">A string that specifies the name of the new report.</span>
          </span>
        </param>
        <param name="RowGrand">
          <span data-ttu-id="25a55-353">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-354">レポートに行の総計を表示するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-354">
              <b>True</b> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="ColumnGrand">
          <span data-ttu-id="25a55-355">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-355">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-356">レポートに列の総計を表示するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-356">
              <b>True</b> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="SaveData">
          <span data-ttu-id="25a55-357">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-358">
            <b>真</b>レポートと共にデータを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-358">
              <b>True</b> to save data with the report.</span>
          </span>
          <span data-ttu-id="25a55-359">
            <b>False</b>レポートの定義のみを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-359">
              <b>False</b> to save only the report definition.</span>
          </span>
        </param>
        <param name="HasAutoFormat">
          <span data-ttu-id="25a55-360">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-361">
            <b>True を指定</b>すると自動的にレポートのフォーマットをそれが更新されたとき、またはフィールドが移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-361">
              <b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="AutoPage">
          <span data-ttu-id="25a55-362">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-362">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-363">有効な場合にのみ<paramref name="SourceType" />が<b>xlConsolidation</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-363">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span>
          </span>
          <span data-ttu-id="25a55-364">
            <b>True</b>統合のページ フィールドを自動的に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-364">
              <b>True</b> to have Microsoft Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="25a55-365">場合<paramref name="AutoPage" />が<b>False</b>、または複数のページ フィールドを作成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-365">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="Reserved">
          <span data-ttu-id="25a55-366">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-367">Excel では、この引数は使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-367">Not used by Microsoft Excel.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="25a55-368">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-368">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-369">
            <b>True を指定</b>すると、Excel が非同期 (バック グラウンド) でレポートのクエリを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-369">
              <b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="25a55-370">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-370">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OptimizeCache">
          <span data-ttu-id="25a55-371">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-371">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-372">
            <b>True の</b>構成時に、ピボット テーブルのキャッシュを最適化するためにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-372">
              <b>True</b> to optimize the PivotTable cache when it's constructed.</span>
          </span>
          <span data-ttu-id="25a55-373">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-373">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageFieldOrder">
          <span data-ttu-id="25a55-374">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-375">ピボット テーブル レポートのレイアウトに追加するページ フィールドの順序です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-375">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="25a55-376">
            <b>可能</b>定数は、次のいずれか: <b>xlDownThenOver</b>または<b>xlOverThenDown</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-376">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span>
          </span>
          <span data-ttu-id="25a55-377">既定値は<b>xlDownThenOver</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-377">The default value is <b>xlDownThenOver</b>.</span>
          </span>
        </param>
        <param name="PageFieldWrapCount">
          <span data-ttu-id="25a55-378">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-379">各列のページ フィールド ピボット テーブル レポート内の行の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-379">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="25a55-380">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-380">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="ReadData">
          <span data-ttu-id="25a55-381">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-381">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-382">
            <b>True</b>外部データベースからすべてのレコードを含むピボット テーブル キャッシュを作成するにはこのキャッシュは非常に大きくなることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-382">
              <b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="25a55-383">場合<paramref name="ReadData" />の<b>場合は False</b>を設定できます、フィールドのいくつかのサーバー ベースのページ フィールドとして、データが実際に読み取られる前にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-383">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="Connection">
          <span data-ttu-id="25a55-384">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-384">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-385">ODBC データ ソースに接続できるようにする ODBC 設定を含む文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-385">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="25a55-386">接続文字列には、フォームの"ODBC;&lt;接続文字列&gt;」です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-386">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="25a55-387">この引数の以前の設定をオーバーライドする、<see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />オブジェクトの<see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-387">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-388">作成、<see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-388">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
          <span data-ttu-id="25a55-389">このメソッドは、ピボット テーブル ウィザードを表示しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-389">This method doesn’t display the PivotTable Wizard.</span>
          </span>
          <span data-ttu-id="25a55-390">このメソッドは、OLE DB データ ソースで利用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-390">This method isn’t available for OLE DB data sources.</span>
          </span>
          <span data-ttu-id="25a55-391">使用して、 <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> 、ピボット テーブル キャッシュを追加し、ピボット テーブル レポートを作成する方法、キャッシュを基にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-391">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span>
          </span>
          <span data-ttu-id="25a55-392">
            <b>ピボット テーブル</b>オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-392">
              <b>PivotTable</b> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-393">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />、 <see cref="T:Microsoft.Office.Interop.Excel.Range" />、または<see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />、前のシートまたはセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-393">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span>
          </span>
          <span data-ttu-id="25a55-394">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-394">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-395">
            <para>このプロパティはオブジェクトが一定の範囲である場合に SHIFT キーを押しながら TAB キーを押すとエミュレート; キーの組み合わせとは異なり、プロパティが返されますそれを選択しない場合は、前のセル</para>
            <para>、保護されたシートには、このプロパティは前のロックされていないセルを返します。保護されていないシートでは、常に返しますセル直後に指定したセルの左側にします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-395">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-396">現在のワークシートで印刷されるコメント ページの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-396">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25a55-397">現在のワークシートで印刷されるコメント ページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-397">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="25a55-398">
            <para>読み取り専用</para>。
          <para>、<see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />プロパティがのみ返される場合は 0 より大きい、コメント シート] タブの [ページ設定の設定] ダイアログ ボックスに設定されてシートの末尾です。シートが MS Excel 5.0 ダイアログ シート、またはグラフ シートの場合にこのプロパティが 0 を返します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-398">
              <para>Read-only.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet. This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="25a55-399">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-399">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-400">印刷を開始するページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-400">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="25a55-401">この引数を省略すると、印刷は先頭から開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-401">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="25a55-402">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-403">印刷する最終ページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-403">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="25a55-404">この引数を省略すると、最後のページで印刷が終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-404">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="25a55-405">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-406">印刷部数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-406">The number of copies to print.</span>
          </span>
          <span data-ttu-id="25a55-407">この引数を省略すると、1 つのコピーが印刷されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-407">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="25a55-408">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-409">
            <b>True</b>オブジェクトを印刷する前に印刷プレビューを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-409">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="25a55-410">
            <b>False</b>(または省略した場合)、オブジェクトをすぐに印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-410">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="25a55-411">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-411">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-412">アクティブなプリンターの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-412">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="25a55-413">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-413">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-414">
            <b>True</b>ファイルに出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-414">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="25a55-415">場合<paramref name="PrToFileName" />が指定されていない、Microsoft Excel には、出力ファイルの名前を入力するように求めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-415">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="25a55-416">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-416">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-417">
            <b>True</b> の場合、部単位で印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-417">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="25a55-418">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-418">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-419">場合<paramref name="PrintToFile" />は、設定に<b>は True</b>、この引数を指定して印刷しファイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-419">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-420">オブジェクトを印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-420">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-421">
            <para>説明における「ページ」<paramref name="From" />と<paramref name="To" />印刷されたページを参照して、シートまたはブックのページ全体ではありません。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-421">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-422">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-422">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="25a55-423">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-423">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-424">
            <b>True</b>指定されたワークシートの変更を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-424">
              <b>True</b> to enable changes to the specified worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-425">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-425">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="25a55-426">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-426">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-427">ワークシートまたはブックのパスワードを指定する文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-427">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="25a55-428">この引数を省略すると、保護を解除できます、ワークシートやブックのパスワードを使用せず。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-428">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="25a55-429">それ以外の場合、ワークシートまたはブックの保護を解除するパスワードを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-429">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="25a55-430">パスワードを忘れた場合に、ワークシートまたはブックの保護を解除できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-430">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="25a55-431">安全な場所に、パスワードと、対応するドキュメント名のリストを保持することをお勧めします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-431">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="25a55-432">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-432">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-433">
            <b>True の</b>図形を保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-433">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="25a55-434">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-434">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="25a55-435">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-436">
            <b>True の</b>内容を保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-436">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="25a55-437">グラフ、グラフ全体が保護されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-437">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="25a55-438">ワークシートでは、これは、ロックされたセルを保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-438">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="25a55-439">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-439">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="25a55-440">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-440">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-441">
            <b>True</b>シナリオを保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-441">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="25a55-442">この引数はワークシートに対してのみ有効ですが。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-442">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="25a55-443">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-443">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="25a55-444">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-444">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-445">
            <b>True</b>を保護するユーザー ・ インタ フェースですが、マクロではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-445">
              <b>True</b> to protect the user interface but not macros.</span>
          </span>
          <span data-ttu-id="25a55-446">この引数を省略すると、マクロとユーザー インターフェイスの両方が保護されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-446">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="AllowFormattingCells">
          <span data-ttu-id="25a55-447">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-447">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-448">
            <b>True に設定</b>すると、保護されたワークシート上の任意のセルの書式を設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-448">
              <b>True</b> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-449">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-449">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingColumns">
          <span data-ttu-id="25a55-450">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-450">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-451">
            <b>True に設定</b>すると、保護されたワークシート上の任意の列の書式を設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-451">
              <b>True</b> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-452">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-452">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingRows">
          <span data-ttu-id="25a55-453">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-453">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-454">
            <b>True に設定</b>すると、保護されたワークシート上の任意の行の書式を設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-454">
              <b>True</b> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-455">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-455">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingColumns">
          <span data-ttu-id="25a55-456">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-456">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-457">
            <b>True に設定</b>すると、保護されたワークシートに列を挿入できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-457">
              <b>True</b> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-458">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-458">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingRows">
          <span data-ttu-id="25a55-459">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-459">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-460">
            <b>True に設定</b>すると、保護されたワークシートに行を挿入できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-460">
              <b>True</b> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-461">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-461">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingHyperlinks">
          <span data-ttu-id="25a55-462">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-462">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-463">
            <b>True に設定</b>すると、ワークシートにハイパーリンクを挿入するのにはできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-463">
              <b>True</b> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="25a55-464">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-464">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingColumns">
          <span data-ttu-id="25a55-465">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-465">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-466">
            <b>True に設定</b>できます、保護されたワークシートで列を削除するのには、削除する列のセルはすべてロック解除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-466">
              <b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="25a55-467">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-467">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingRows">
          <span data-ttu-id="25a55-468">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-469">
            <b>True に設定</b>できます、保護されたワークシートで行を削除するのには、削除する行のセルはすべてロック解除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-469">
              <b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="25a55-470">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-470">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowSorting">
          <span data-ttu-id="25a55-471">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-471">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-472">
            <b>True に設定</b>すると、保護されたワークシートで並べ替えをできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-472">
              <b>True</b> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-473">並べ替えの範囲内のすべてのセルのロックを解除または保護されていない必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-473">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="25a55-474">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-474">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFiltering">
          <span data-ttu-id="25a55-475">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-476">
            <b>True に設定</b>すると、保護されたワークシートにフィルターを設定するのにはできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-476">
              <b>True</b> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-477">ユーザーがフィルター条件を変更がいないが有効またはオート フィルターを無効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-477">Users can change filter criteria but can not enable or disable an auto filter.</span>
          </span>
          <span data-ttu-id="25a55-478">ユーザーは、既存のオート フィルターでフィルターを設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-478">Users can set filters on an existing auto filter.</span>
          </span>
          <span data-ttu-id="25a55-479">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-479">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowUsingPivotTables">
          <span data-ttu-id="25a55-480">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-480">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-481">
            <b>True の場合</b>は、保護されたワークシートでピボット テーブル レポートを使用するユーザーをできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-481">
              <b>True</b> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="25a55-482">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-482">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-483">ワークシートを保護し、変更できないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-483">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-484">
            <para>
              <b>保護する</b>方法を適用する場合、<paramref name="UserInterfaceOnly" />ワークシートに引数が<b>True</b>に設定し、ブック、ワークシート全体 (インターフェイスだけではなく) 完全に保護されます、ブックを再び開くとします。ユーザー インターフェイスの保護は、ブックを開いた後に再度有効にを<b>保護する</b>方法を適用する必要がありますもう一度<paramref name="UserInterfaceOnly" />を<b>True</b>に設定します</para>。
          <para>保護されたワークシートを変更する場合は、パスワードを指定した場合、保護されたワークシートで、 <b>Protect</b>メソッドを使用することです。ワークシートの保護を解除、必要な変更を行い、もう一度、ワークシートを保護するために別の方法になります</para>。
          <para><b>注</b>: セル可能性があります 'Unprotected' 手段には、(セルの書式設定] ダイアログ ボックス) がロックされているユーザーをできるように、[範囲の編集] ダイアログで定義された範囲に含まれますが、ユーザーがパスワードを使用して範囲の保護を解除または NT のアクセス許可を通じて確認されていると</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-484">
              <para>If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook. To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</para>
              <para>If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied. Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</para>
              <para>
                <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-485">の<b>場合は true</b>シートの内容が保護されている場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-485">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="25a55-486">グラフ、グラフ全体が保護されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-486">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="25a55-487">ワークシートでは、これは、個々 のセルを保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-487">For a worksheet, this protects the individual cells.</span>
          </span>
          <span data-ttu-id="25a55-488">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-488">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-489">
            <b>True を指定</b>の図形が保護されている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-489">
              <b>True</b> if shapes are protected.</span>
          </span>
          <span data-ttu-id="25a55-490">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-490">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-491">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> 、ワークシートの保護オプションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-491">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-492">
            <b>True</b>ユーザー インターフェイスのみの保護がオンになっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-492">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="25a55-493">ユーザー インターフェイスの保護を有効にするには、<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドを<paramref name="UserInterfaceOnly" />の引数が<b>True</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-493">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
          <span data-ttu-id="25a55-494">読み取り専用の <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-494">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p209">
            <b>True</b> の場合、ワークシートのシナリオを保護しています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p209">
              <b>True</b> if the worksheet scenarios are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-497">返します、 <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> 、指定したワークシート上のすべてのクエリ テーブルを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-497">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-498">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-498">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="25a55-499">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-499">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-500">範囲の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-500">The name of the range.</span>
          </span>
          <span data-ttu-id="25a55-501">マクロの言語での A1 形式の参照でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-501">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="25a55-502">それは、範囲演算子 (コロン)、交差演算子 (スペース)、または union 演算子 (コンマ) を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-502">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="25a55-503">ドル記号 ($) を含めることもできますが、無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-503">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="25a55-504">範囲の任意の部分でローカルに定義された名前を使用することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-504">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="25a55-505">名を使用する場合、名前は、マクロの言語であると見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-505">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="25a55-506">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-507">範囲の左上隅と右下隅のセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-507">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="25a55-508">
            <b>Range</b>オブジェクトを含む、1 つのセル、列全体、または全体の行、またはマクロの言語で単一のセルの名前を示す文字列にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-508">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-509">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、セルまたはセル範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-509">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-510">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-510">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-511">指定したワークシートのすべての改ページをリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-511">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-512">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、指定したワークシート上のすべての行を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-513">
            <b>Range</b>オブジェクトの読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-513">Read-only <b>Range</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="25a55-514">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-514">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-515">保存するファイルの名前を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-515">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="25a55-516">完全パスを含めることができます。ない場合は、Microsoft Excel は、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-516">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="25a55-517">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-517">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-518">ファイルを保存するときに使用するファイル形式です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-518">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="25a55-519">有効な選択肢のリストを参照してください、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-519">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="25a55-520">既存のファイルの既定の形式は、最後のファイル形式が指定されています。新しいファイルは、使用されている Excel のバージョンの形式が既定では。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-520">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="25a55-521">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-522">保存するファイルに設定する読み取りパスワードを表す文字列を指定します。パスワードは 15 文字以内の文字列で指定し、大文字と小文字が区別されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-522">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="25a55-523">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-523">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-524">このファイルの書き込みパスワードを表す文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-524">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="25a55-525">ファイルがパスワード付きで保存、ファイルを開くと、パスワードを入力しない場合は、ファイルが読み取り専用として開かれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-525">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="25a55-526">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-527">
            <b>True の</b>とき、ファイルを開くファイルを読み取り専用として開くように勧めるメッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-527">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="25a55-528">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-529">バックアップ ファイルを作成するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-529">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="25a55-530">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-530">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-531">最近使用したファイルの<b>場合は true</b>の一覧にこのブックを追加するのには。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-531">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="25a55-532">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-532">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="25a55-533">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-533">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-534">英語の Excel では使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-534">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="25a55-535">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-535">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-536">英語の Excel では使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-536">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="25a55-537">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-537">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-538">
            <b>True の場合</b>は、(コントロール パネルの設定を含む)、Microsoft Excel の言語ファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-538">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="25a55-539">
            <b>False</b>(既定値) ファイルを保存する Visual Basic for Applications の言語 (VBA) では英語 (米国) から Workbooks.Open を実行している VBA プロジェクトが以前の国際化 XL5/95 VBA プロジェクトでない限り)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-539">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-540">グラフまたはワークシートへの変更を別のファイルに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-540">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="25a55-541">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-541">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-542">名前またはシナリオの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-542">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="25a55-543">配列を使用すると、複数のシナリオを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-543">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-544">1 つのシナリオのいずれかを表すオブジェクトを返します (、<see cref="T:Microsoft.Office.Interop.Excel.Scenario" />オブジェクト) またはシナリオのコレクション (、<see cref="T:Microsoft.Office.Interop.Excel.Scenarios" />オブジェクト)、ワークシートにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-544">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-545">返します、<see cref="T:Microsoft.Office.Core.Scripts" />を含むコレクション<see cref="T:Microsoft.Office.Core.Script" />Web ページとして保存し、スクリプト、または指定されたドキュメント内のコードのブロックを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-545">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-546">A1 スタイルの範囲参照として、スクロール可能範囲を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-546">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span>
          </span>
          <span data-ttu-id="25a55-547">スクロール領域の外側のセルを選択することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-547">Cells outside the scroll area cannot be selected.</span>
          </span>
          <span data-ttu-id="25a55-548">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-548">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-549">
            <para>このプロパティを空の文字列に設定 ("") シート全体のセルの選択を有効にします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-549">
              <para>Set this property to the empty string ("") to enable cell selection for the entire sheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-550">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-550">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="25a55-551">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-552">置換するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-552">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-553">オブジェクトを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-553">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-554">
            <para>セルまたはセル範囲を選択するには、 <b>Select</b>メソッドを使用します。1 つのセルをアクティブ セルにするを使用して、<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />メソッドです。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-554">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="25a55-555">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-555">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="25a55-556">表示するグラフィック ファイルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-556">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-557">ワークシートまたはグラフの背景のグラフィックスを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-557">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-558">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 、ワークシートまたはグラフ シート上のすべての図形を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-558">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="25a55-559">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-559">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p229">現在フィルターがかけられているリストに対して、すべての行を表示します。オートフィルターを使っているときにこのメソッドを使うと、下向き矢印が青から黒に変わります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p229">Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25a55-562">対象ワークシートに関連付けられたデータ フォームを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-562">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-563">データ フォームを使用しているときに、<para>の実行が一時停止します。<b>ShowDataForm</b>メソッドの次の行から実行が再開して、データ フォームを閉じるとします</para>。
          <para>1 つが存在する場合、このメソッドは、カスタムのデータ フォームを実行します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-563">
              <para>Execution pauses while you’re using the data form. When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</para>
              <para>This method runs the custom data form, if one exists.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-564">返します、<see cref="T:Microsoft.Office.Interop.Excel.SmartTags" />指定されたセルの識別子を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-564">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-565">現在のワークシートで並べ替えた値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-565">Returns the sorted values in the current worksheet.</span>
          </span>
          <span data-ttu-id="25a55-566">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-566">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-567">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-567">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-568">ポイント単位で、ワークシート内のすべての行の標準 (既定) の高さを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-568">Returns the standard (default) height of all the rows in the worksheet in points.</span>
          </span>
          <span data-ttu-id="25a55-569">読み取り専用で <b>二重</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-569">Read-only <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-570">取得またはワークシート内のすべての列の標準 (既定) の幅を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-570">Returns or sets the standard (default) width of all the columns in the worksheet.</span>
          </span>
          <span data-ttu-id="25a55-571">読み取り/書き込み <b>二重</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-571">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-572">
            <para>列幅の単位の 1 つは、標準スタイルの 1 つの文字の幅と同じです。プロポーショナル フォントでは、0 (ゼロ) の文字の幅が使用されます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-572">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-573">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 、グラフまたはワークシートのオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-573">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="25a55-574">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-574">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p233">
            <b>True</b> の場合、対象ワークシートの計算方式を変更し、Lotus 1-2-3 形式で評価される設定にします。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p233">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-p234">
            <b>True</b> の場合、対象ワークシートの式入力の設定を変更し、Lotus 1-2-3 形式の式入力に対応する設定にします。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p234">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-579">ワークシートの種類を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-579">Returns or sets the worksheet type.</span>
          </span>
          <span data-ttu-id="25a55-580">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-580">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="25a55-581">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-581">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-582">シートまたはブックの保護を解除するパスワードを示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-582">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="25a55-583">シートまたはブックがパスワードで保護されていない場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-583">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="25a55-584">パスワードで保護されているシートに対してこの引数を省略すると、パスワードが要求されるでしょう。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-584">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="25a55-585">パスワードで保護されているブックに対してこの引数を省略すると、メソッドは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-585">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-p237">シートまたはブックの保護を解除します。保護されていないシートやブックに対しては、このメソッドは無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-p237">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="25a55-588">
            <para>パスワードを忘れた場合に、シートまたはブックの保護を解除できません。安全な場所に、パスワードと、対応するドキュメント名のリストを保持することをお勧めします。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-588">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-589">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />指定されたワークシートで使用されている範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-589">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span>
          </span>
          <span data-ttu-id="25a55-590">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-590">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-591">オブジェクトを表示するかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-591">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="25a55-592">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-592">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="25a55-593">
            <para>アイテムがテーブルに表示されている場合は、ピボット テーブル アイテムの<b>Visible</b>プロパティは<b>true を指定</b>します</para>。
          <para>名前の<b>Visible</b>プロパティを<b>False</b>に設定すると、名前が名前の定義] ダイアログ ボックスに表示されません</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-593">
              <para>The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</para>
              <para>If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25a55-594">返します、<see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" />シートの垂直方向のページを表すコレクションを中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="25a55-595">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-595">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="25a55-596">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-596">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-597">対象となる XPath を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-597">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="25a55-598">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-598">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-599">スペースで区切られた<b>文字列</b>を含む XPath パラメーターで参照されている名前空間です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-599">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="25a55-600">指定した名前空間のいずれかを解決できない場合は、実行時エラーが生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-600">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="25a55-601">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-601">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="25a55-602">特定のマップ内の XPath を対象とする場合に、その XML マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-602">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-603">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、特定の XPath にマップされているセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-603">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="25a55-604">指定した XPath がワークシートにマップされていない場合、またはマップされた範囲が空の場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-604">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="25a55-605">
            <para>、XML スプレッドシート形式で、ファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します</para>。
          <para>、XPath は、XML リストの列内に存在する、ヘッダー行や挿入行は含まれませんの<b>Range</b>オブジェクトが返されます</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-605">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="25a55-606">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-607">対象となる XPath を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-607">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="25a55-608">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="25a55-609">スペースで区切られた<b>文字列</b>を含む XPath パラメーターで参照されている名前空間です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-609">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="25a55-610">指定した名前空間のいずれかを解決できない場合は、実行時エラーが生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-610">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="25a55-611">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-611">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="25a55-612">特定のマップ内の XPath を対象とする場合に、その XML マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-612">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25a55-613">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、特定の XPath にマップされているセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-613">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="25a55-614">指定した XPath がワークシートにマップされていない場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-614">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="25a55-615">
            <para>、XML スプレッドシート形式で、ファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します</para>。
          <para>とは異なり、<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />メソッドでは、 <b>XmlMapQuery</b>メソッドは、ヘッダー行と挿入行を含む、XML リストの列全体を返します</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25a55-615">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>