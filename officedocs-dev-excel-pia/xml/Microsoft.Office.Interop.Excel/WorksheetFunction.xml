<Type Name="WorksheetFunction" FullName="Microsoft.Office.Interop.Excel.WorksheetFunction">
  <TypeSignature Language="C#" Value="public interface WorksheetFunction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract WorksheetFunction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />
  <TypeSignature Language="VB.NET" Value="Public Interface WorksheetFunction" />
  <TypeSignature Language="C++ CLI" Value="public interface class WorksheetFunction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020845-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a4672-101">Visual Basic から呼び出すことができる Excel のワークシート関数のコンテナーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-101">Used as a container for Excel worksheet functions that can be called from Visual Basic.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-102">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-102">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrInt">
      <MemberSignature Language="C#" Value="public double AccrInt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrInt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrInt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrInt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-103">発行日 - 証券の発行日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-103">Issue date - Security's issue date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-104">初回利払日 - 証券の初回利払日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-104">First interest - Security's first interest date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-105">受渡日 - 証券の受渡日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-105">Settlement - Security's settlement date</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-106">利率 - 証券の年利を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-106">Rate - Security's annual coupon rate.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-107">額面 - 証券の額面価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-107">Par - Security's par value.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-108">頻度 - 年間の利息支払回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-108">Frequency - Number of coupon payments per year.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-109">基準 - 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-109">Basis - The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-110">定期的に利息が支払われる証券の未収利息額を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-110">Returns the accrued interest for a security that pays periodic interest.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-111">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-111">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-112">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-112">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-113">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-113">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-114">次の表の説明のために使用できる値<paramref name="Arg5" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-114">The following table describes the values that can be used for <paramref name="Arg5" />.</span></span></para><span data-ttu-id="a4672-115">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-115">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrIntM">
      <MemberSignature Language="C#" Value="public double AccrIntM (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrIntM([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrIntM(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrIntM (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-116">証券の発行日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-116">The security's issue date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-117">証券の満期日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-117">The security's maturity date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-118">証券の年利を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-118">The security's annual coupon rate.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p102">証券の額面価格を指定します。額面を省略すると、$1,000 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p102">The security's par value. If you omit par, ACCRINTM uses $1,000.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-121">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-121">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-122">満期日に利息が支払われる証券の未収利息額を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-122">Returns the accrued interest for a security that pays interest at maturity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-123">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-123">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-124">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-124">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-125">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-125">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-126">次の表の説明のために使用できる値<paramref name="Arg5" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-126">The following table describes the values that can be used for <paramref name="Arg5" />.</span></span></para><span data-ttu-id="a4672-127">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-127">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-128">次の一覧には、日を操作するときに注意すべき情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-128">The following list contains information to be aware of when working with ACCRINTM:</span></span></para><span data-ttu-id="a4672-129">
          <list type="bullet">
            <item>
              <description>Microsoft Excel は、日付シリアル値として計算に使用できます。既定では、1900 年 1 月 1 日は、シリアル値 1 と、1900 年 1 月 1 日から数えて 39,448 日目であるために、2008 年 1 月 1 日がシリアル番号 39,448 です。</description>
            </item>
            <item>
              <description>問題、成熟度と単位が整数に切り捨てられます</description>
            </item>。
            <item>
              <description>の問題や成熟度が有効な日付でない場合、日によってエラーが発生します</description>
            </item>。
            <item>
              <description>場合利率 ≤ 0 または額面 ≤ 0 であるかどうかと、エラーが生成されます</description>
            </item>。
            <item>
              <description>場合単位&lt;0 または基準&gt;4 日エラーが生成されます</description>
            </item>。
            <item>
              <description>問題受領成熟度、日、エラーが発生する場合です</description>
            </item>。
            <item>
              <description>日として計算されます:</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-129">
          <list type="bullet">
            <item>
              <description>Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. </description>
            </item>
            <item>
              <description>Issue, maturity, and basis are truncated to integers. </description>
            </item>
            <item>
              <description>If issue or maturity is not a valid date, ACCRINTM will generate an error. </description>
            </item>
            <item>
              <description>If rate ≤ 0 or if par ≤ 0, ACCRINTM will generate an error. </description>
            </item>
            <item>
              <description>If basis &lt; 0 or if basis &gt; 4, ACCRINTM will generate an error. </description>
            </item>
            <item>
              <description>If issue ≥ maturity, ACCRINTM will generate an error. </description>
            </item>
            <item>
              <description>ACCRINTM is calculated as follows: </description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-130">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-130">where:</span></span></para>
          <para><span data-ttu-id="a4672-131">A = 未収日数を月単位の数。</span><span class="sxs-lookup"><span data-stu-id="a4672-131">A = Number of accrued days counted according to a monthly basis.</span></span> <span data-ttu-id="a4672-132">成熟度項目での目的、発行日から満期日までの日数の数が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-132">For interest at maturity items, the number of days from the issue date to the maturity date is used.</span></span></para>
          <para><span data-ttu-id="a4672-133">D = 年間 1 年ごと。</span><span class="sxs-lookup"><span data-stu-id="a4672-133">D = Annual Year Basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public double Acos (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acos([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acos (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acos(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16483)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-134">求める角度のコサインの値を、-1 ～ 1 の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-134">The cosine of the angle you want and must be from -1 to 1.</span></span></param>
        <summary><span data-ttu-id="a4672-135">コサインまたは数値のコサインを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-135">Returns the arccosine, or inverse cosine, of a number.</span></span> <span data-ttu-id="a4672-136">アーク コサインとは角度のコサインは、 <paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-136">The arccosine is the angle whose cosine is <paramref name="Arg1" />.</span></span> <span data-ttu-id="a4672-137">戻り値の角度は、π に、0 (ゼロ) の範囲のラジアンで与えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-137">The returned angle is given in radians in the range 0 (zero) to pi.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-138">結果をラジアンから度に変換する場合は、180/PI() を掛けるか、Degrees メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-138">If you want to convert the result from radians to degrees, multiply it by 180/PI() or use the Degrees method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public double Acosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-139">1 以上の実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-139">Any real number equal to or greater than 1.</span></span></param>
        <summary><span data-ttu-id="a4672-140">数値の双曲線逆余弦を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-140">Returns the inverse hyperbolic cosine of a number.</span></span> <span data-ttu-id="a4672-141">番号は、1 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-141">Number must be greater than or equal to 1.</span></span> <span data-ttu-id="a4672-142">逆双曲線余弦は、その双曲線余弦値<paramref name="Arg1" />と、 <paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-142">The inverse hyperbolic cosine is the value whose hyperbolic cosine is <paramref name="Arg1" />, so Acosh(Cosh(number)) equals <paramref name="Arg1" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acot">
      <MemberSignature Language="C#" Value="public double Acot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-143">求める角度の逆余接。</span><span class="sxs-lookup"><span data-stu-id="a4672-143">The cotangent of the angle you want.</span></span></param>
        <summary><span data-ttu-id="a4672-144">数値の逆余接 (コタンジェントの逆関数) を 0 ～ Pi の範囲のラジアンで取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-144">Returns the arccotangent of a number, in radians in the range 0 to Pi.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acoth">
      <MemberSignature Language="C#" Value="public double Acoth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acoth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acoth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acoth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acoth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16933)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-145">双曲線余接を取得する角度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-145">The hyperbolic cotangent of the angle that you want.</span></span></param>
        <summary><span data-ttu-id="a4672-146">数値の双曲線逆余接 (ハイパーボリック コタンジェントの逆関数) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-146">Returns the inverse hyperbolic cotangent of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public double Aggregate (double Arg1, double Arg2, Microsoft.Office.Interop.Excel.Range Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Aggregate([in]float64 Arg1, [in]float64 Arg2, [in]class Microsoft.Office.Interop.Excel.Range Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Aggregate(System.Double,System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Aggregate (Arg1 As Double, Arg2 As Double, Arg3 As Range, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-147">集計方法: 使用する関数を示す 1 ～ 19 の数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-147">Function_num - A number from 1 to 19 that specifies which function to use.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-148">オプション: 関数の評価範囲のうちで無視する値を表す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-148">Options - A numerical value that determines which values to ignore in the evaluation range for the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-149">参照 1: 集計値を求める関数に指定する複数の引数のうち、最初の引数の数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-149">Ref1 - The first numeric argument for functions that take multiple numeric arguments for which you want the aggregate value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-150">参照 2 ～ 参照 30: 集計値を求める対象の 2 番目から 30 番目までの引数の数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-150">Ref2 - Ref30 - Numeric arguments 2 to 30 for which you want the aggregate value.</span></span></param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-151">リストまたはデータベースの集計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-151">Returns an aggregate in a list or database.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-152">次の制約は、<b>集計</b>値に基づいて、Ref 引数 (Arg3 - Arg 30) に適用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-152">The following constraints apply to the Ref arguments (Arg3 - Arg 30) based on the <b>Function_num</b> value.</span></span></para><span data-ttu-id="a4672-153">
          <list type="table">
            <item>
              <term>1-13</term>
              <description>有効なデータ型: 任意のセル参照のインター セクションの定義済みの共用体名 referencesInvalid 型の構造化: 実際のデータ配列</description>
              <description>有効なデータ型: 任意のセル参照のインター セクションの定義済みの共用体名 referencesInvalid 型の構造化: 実際のデータ配列</description>
              <description>有効なデータ型: 任意のセル参照のインター セクションの定義済みの共用体名 referencesInvalid 型の構造化: 実際のデータ配列</description>
            </item>
            <item> 
              <term>14-17</term>
              <description>の有効なタイプ: 共用体の交差に定義されている任意のセル参照実績データの配列の構造化参照の名前</description>
              <description>の有効なタイプ: 共用体の交差に定義されている任意のセル参照実績データの配列の構造化参照の名前</description>
              <description>なし参照は許可されて</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-153">
          <list type="table">
            <item>
              <term>1-13</term>
              <description>Valid types:Any cell reference Unions Intersections Defined names Structured referencesInvalid types: Actual data Arrays</description>
              <description>Valid types:Any cell reference Unions Intersections Defined names Structured referencesInvalid types: Actual data Arrays</description>
              <description>Valid types:Any cell reference Unions Intersections Defined names Structured referencesInvalid types: Actual data Arrays</description>
            </item>
            <item>
              <term>14-17</term>
              <description>Valid types:Any cell reference Unions Intersections Defined names Structured references Actual data Arrays</description>
              <description>Valid types:Any cell reference Unions Intersections Defined names Structured references Actual data Arrays</description>
              <description>No references are allowed</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p107">2 番目の ref 引数が必須の場合に指定されていないと、#VALUE! エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p107">If a second ref argument is required but not provided, AGGREGATE returns a #VALUE! error.</span></span></para>
          <para><span data-ttu-id="a4672-p108">指定した参照の中に 3-D 参照が 1 つでもあると、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p108">If one or more of the references are 3-D references, AGGREGATE returns the #VALUE! error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorDegrc">
      <MemberSignature Language="C#" Value="public double AmorDegrc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorDegrc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorDegrc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorDegrc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16850)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-158">資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-158">The cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-159">資産を購入した日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-159">The date of the purchase of the asset.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-160">最初の会計期が終了する日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-160">The date of the end of the first period.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-161">耐用年数が終了した時点での資産の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-161">The salvage value at the end of the life of the asset.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-162">会計期 (会計年度) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-162">The period.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-163">減価償却率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-163">The rate of depreciation.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-164">1 年を何日として計算するかを表す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-164">The year basis to be used.</span></span></param>
        <summary><span data-ttu-id="a4672-p109">各会計期における減価償却費を返します。この関数は、フランスの会計システムのために用意されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p109">Returns the depreciation for each accounting period. This function is provided for the French accounting system.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-167">資産を会計期の途中で購入した場合、日割り計算による減価償却費が計上されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-167">If an asset is purchased in the middle of the accounting period, the prorated depreciation is taken into account.</span></span> <span data-ttu-id="a4672-168">メソッドは、のような<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、計算、資産の耐用年数に応じて減価償却係数が適用される点が異なります。次の表で使用する値を説明する<paramref name="Arg7" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-168">The method is similar to <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, except that a depreciation coefficient is applied in the calculation depending on the life of the assets.The following table describes the values used in <paramref name="Arg7" />.</span></span></para><span data-ttu-id="a4672-169">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>360 日 (NASD メソッド)</description> 
            </item>
            <item> 
              <term>1</term>
              <description>実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>年に 365 日</description>
            </item>
            <item> 
              <term>4</term>
              <description>360 日 (ヨーロッパ方式) 1 年</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-169">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>360 days (NASD method)</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual</description>
            </item>
            <item>
              <term>3</term>
              <description>365 days in a year</description>
            </item>
            <item>
              <term>4</term>
              <description>360 days in a year (European method)</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p111">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p111">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default.</span></span></para>
          <para><span data-ttu-id="a4672-173">この関数では、資産の耐用年数の最後の会計期までの減価償却費、または減価償却費の累積額が取得価額と残存価額の差よりも大きくなるまでの減価償却費が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-173">This function will return the depreciation until the last period of the life of the assets or until the cumulated value of depreciation is greater than the cost of the assets minus the salvage value.</span></span></para>
          <para><span data-ttu-id="a4672-174">減価償却係数は、次のように定義されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-174">The depreciation coefficients are:</span></span></para><span data-ttu-id="a4672-175">
          <list type="table">
            <item>
              <term>間で 3、4 年間</term>
              <description>1.5</description> 
            </item>
            <item>
              <description>2</description>の
              <term>間で 5、6 年間</term>
            </item>
            <item> 
              <term>6 年以上にわたって</term>
              <description>2.5</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-175">
          <list type="table">
            <item>
              <term>Between 3 and 4 years</term>
              <description>1.5</description>
            </item>
            <item>
              <term>Between 5 and 6 years</term>
              <description>2</description>
            </item>
            <item>
              <term>More than 6 years</term>
              <description>2.5</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-176">減価償却率は、最後から 1 つ前の期で 50% まで上昇し、最後の会計期で 100% まで上昇します。</span><span class="sxs-lookup"><span data-stu-id="a4672-176">The depreciation rate will grow to 50 percent for the period preceding the last period and will grow to 100 percent for the last period.</span></span></para>
          <para><span data-ttu-id="a4672-p112">資産の耐用年数が 0 ～ 1 年、1 ～ 2 年、2 ～ 3 年、または 4 ～ 5 年の場合、エラー値 #NUM! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p112">If the life of assets is between 0 (zero) and 1, 1 and 2, 2 and 3, or 4 and 5, the #NUM! error value is returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorLinc">
      <MemberSignature Language="C#" Value="public double AmorLinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorLinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorLinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16851)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-179">資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-179">The cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-180">資産を購入した日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-180">The date of the purchase of the asset.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-181">最初の会計期が終了する日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-181">The date of the end of the first period.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-182">耐用年数が終了した時点での資産の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-182">The salvage value at the end of the life of the asset.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-183">会計期 (会計年度) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-183">The period.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-184">減価償却率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-184">The rate of depreciation.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-185">1 年を何日として計算するかを表す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-185">The year basis to be used.</span></span></param>
        <summary><span data-ttu-id="a4672-p113">各会計期における減価償却費を返します。この関数は、フランスの会計システムのために用意されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p113">Returns the depreciation for each accounting period. This function is provided for the French accounting system.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-188">資産を会計期の途中で購入する場合は、日割りの減価償却を考慮に入れる。次の表の説明に使用する値<paramref name="Arg7" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-188">If an asset is purchased in the middle of the accounting period, the prorated depreciation is taken into account.The following table describes values used for <paramref name="Arg7" />.</span></span></para><span data-ttu-id="a4672-189">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>360 日 (NASD メソッド)</description> 
            </item>
            <item> 
              <term>1</term>
              <description>実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>年に 365 日</description>
            </item>
            <item> 
              <term>4</term>
              <description>360 日 (ヨーロッパ方式) 1 年</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-189">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>360 days (NASD method)</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual</description>
            </item>
            <item>
              <term>3</term>
              <description>365 days in a year</description>
            </item>
            <item>
              <term>4</term>
              <description>360 days in a year (European method)</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-190">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-190">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-191">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-191">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-192">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-192">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-p115">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p115">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public bool And (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool And([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-196">1 から 30 個までの条件をテストするには、 <b>true</b>または<b>false</b>のいずれかができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-196">1 to 30 conditions you want to test that can be either <b>true</b> or <b>false</b>.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-197">を返します<b>true の</b>場合、すべての引数は<b>true</b>です。1 つまたは複数の引数が<b>false</b>の場合は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-197">Returns <b>true</b> if all its arguments are <b>true</b>; returns <b>false</b> if one or more argument is <b>false</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-198">引数に論理値<b>true</b>または<b>false を指定</b>するかを論理値を含む配列または参照引数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-198">The arguments must evaluate to logical values such as <b>true</b> or <b>false</b>, or the arguments must be arrays or references that contain logical values.</span></span> </para>
          <para><span data-ttu-id="a4672-p117">引数として指定した配列や参照に、文字列または空白セルが含まれる場合、これらの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p117">If an array or reference argument contains text or empty cells, those values are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-200">指定した範囲に論理値が含まれていない場合は、エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-200">If the specified range contains no logical values, this method generates an error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4672-201">このプロパティが返すオブジェクト修飾子を指定しない場合に使用する場合、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a4672-201">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="a4672-202">このプロパティが返すオブジェクト修飾子を使用する場合、<see cref="T:Microsoft.Office.Interop.Excel.Application" />を指定したオブジェクトの作成者を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a4672-202">When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</span></span> <span data-ttu-id="a4672-203">OLE オートメーション オブジェクトに対してこのプロパティを使用すると、そのオブジェクト用のアプリケーションを取得できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-203">You can use this property with an OLE Automation object to return the application of that object.</span></span> <span data-ttu-id="a4672-204">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="a4672-204">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arabic">
      <MemberSignature Language="C#" Value="public double Arabic (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Arabic([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Arabic(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arabic (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Arabic(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16967)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-205">変換するローマ数字を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-205">The Roman numeral you want to convert.</span></span></param>
        <summary><span data-ttu-id="a4672-206">ローマ数字をアラビア数字に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-206">Converts a Roman numeral to an Arabic numeral.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public string Asc (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Asc([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Asc(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16598)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p119">文字列または変換する文字列を含むセルの参照を指定します。文字列に全角文字が含まれない場合は、文字列は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p119">The text or a reference to a cell that contains the text you want to change. If text does not contain any full-width letters, text is not changed.</span></span></param>
        <summary><span data-ttu-id="a4672-209">全角 (2 バイト) の文字を半角 (1 バイト) の文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-209">For Double-byte character set (DBCS) languages, changes full-width (double-byte) characters to half-width (single-byte) characters.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public double Asin (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asin([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asin (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asin(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-210">求める角度のサインの値を -1 ～ 1 の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-210">The sine of the angle you want and must be from -1 to 1.</span></span></param>
        <summary><span data-ttu-id="a4672-211">アークサインまたは数値の逆正弦を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-211">Returns the arcsine, or inverse sine, of a number.</span></span> <span data-ttu-id="a4672-212">アークサインとは、角度のサインの値は、 <paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-212">The arcsine is the angle whose sine is <paramref name="Arg1" />.</span></span> <span data-ttu-id="a4672-213">戻り値の角度はラジアンの範囲で-π/2 π/2 にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-213">The returned angle is given in radians in the range -pi/2 to pi/2.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-214">アークサインを度単位で、計算結果に 180/pi() を掛けるかを使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-214">To express the arcsine in degrees, multiply the result by 180/PI( ) or use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public double Asinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16616)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-215">実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-215">Any real number.</span></span></param>
        <summary><span data-ttu-id="a4672-216">数値の双曲線逆正弦を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-216">Returns the inverse hyperbolic sine of a number.</span></span> <span data-ttu-id="a4672-217">逆双曲線正弦は、その双曲線正弦が値を<paramref name="Arg1" />となるよう、 <paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-217">The inverse hyperbolic sine is the value whose hyperbolic sine is <paramref name="Arg1" />, so Asinh(Sinh(number)) equals <paramref name="Arg1" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public double Atan2 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atan2([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atan2 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atan2(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-218">点の x 座標を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-218">The x-coordinate of the point.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-219">点の y 座標を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-219">The y-coordinate of the point.</span></span></param>
        <summary><span data-ttu-id="a4672-p122">指定された x-y 座標のアークタンジェントを返します。アークタンジェントとは、x 軸から、原点 0 と x 座標、y 座標で表される点を結んだ直線までの角度のことです。戻り値の角度は、-PI ～ PI (ただし -PI を除く) の範囲のラジアンとなります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p122">Returns the arctangent, or inverse tangent, of the specified x- and y-coordinates. The arctangent is the angle from the x-axis to a line containing the origin (0, 0) and a point with coordinates (x_num, y_num). The angle is given in radians between -pi and pi, excluding -pi.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p123">戻り値が正の数なら x 軸から反時計回りの角度を表し、負の数なら x 軸から時計回りの角度を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p123">A positive result represents a counterclockwise angle from the x-axis; a negative result represents a clockwise angle. </span></span></para>
          <para><span data-ttu-id="a4672-224">
            <b>Atan2(a,b)</b>を除く<b>Atan(b/a)</b>に等しい、 <b>Atan2</b>で 0 に等しいことができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-224">
            <b>Atan2(a,b)</b> equals <b>Atan(b/a)</b>, except that a can equal 0 in <b>Atan2</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-225">両方<paramref name="Arg1" />と<paramref name="Arg2" />は、0、Atan2 は、エラー値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-225">If both <paramref name="Arg1" /> and <paramref name="Arg2" /> are 0, Atan2 returns an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-226">角度のアーク タンジェントの値を表現するには、計算結果に 180/pi() を掛けるかを使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-226">To express the arctangent in degrees, multiply the result by 180/PI( ) or use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public double Atanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-227">-1 より大きく 1 より小さい実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-227">Any real number between 1 and -1.</span></span></param>
        <summary><span data-ttu-id="a4672-p126">数値の双曲線逆正接 (ハイパーボリック タンジェントの逆関数) を返します。数値は -1 より大きく 1 より小さい実数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p126">Returns the inverse hyperbolic tangent of a number. Number must be between -1 and 1 (excluding -1 and 1).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-230">逆双曲線正接は、その双曲線正接が<b>Arg1</b><b>と</b>値<paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-230">The inverse hyperbolic tangent is the value whose hyperbolic tangent is <b>Arg1</b>, so <b>Atanh(Tanh(number))</b> equals <paramref name="Arg1" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AveDev">
      <MemberSignature Language="C#" Value="public double AveDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AveDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AveDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p127">絶対偏差の平均を求める数値データを指定します。引数は 1 ～ 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、単一配列や、配列への参照を引数として使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p127">1 to 30 arguments for which you want the average of the absolute deviations. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p128">データ全体の平均値に対するそれぞれのデータの絶対偏差の平均を返します。AveDev メソッドは、データの分散性を測定するときに使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p128">Returns the average of the absolute deviations of data points from their mean. AveDev is a measure of the variability in a data set.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-235">
            <b>Avedev 関数</b>は、入力データの計測単位が反映されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-235">
            <b>AveDev</b> is influenced by the unit of measurement in the input data.</span></span> </para>
          <para><span data-ttu-id="a4672-p130">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p130">Arguments must either be numbers or be names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p131">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p131">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p132">引数として指定した配列またはセル範囲に文字列、論理値、または空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p132">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-239">平均絶対偏差は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-239">The equation for average deviation is:</span></span></para>
          <para><span data-ttu-id="a4672-240">平均偏差の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-240">Figure 1: Equation for average deviation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public double Average (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Average([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Average (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-241">平均を求める数値データを指定します。引数は 1 ～ 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-241">1 to 30 numeric arguments for which you want the average.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-242">引数の (数学的な) 平均値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-242">Returns the average (arithmetic mean) of the arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p133">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p133">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p134">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p134">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p135">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p135">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-246">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-246">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span> <span data-ttu-id="a4672-247">セル参照に計算の一部として論理値や数値を表す文字列を含める場合は、AVERAGEA 関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-247">If you want to include logical values and text representations of numbers in a reference as part of the calculation, use the AVERAGEA function.</span></span> </para>
          <para><span data-ttu-id="a4672-248"><b>平均</b>メソッドでの中心傾向の統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-248">The <b>Average</b> method measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-249">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-249">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-250">
          <list type="bullet">
            <item>
              <description>平均算術平均、数字のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>メジアン数値グループの中央数であるテストの結果、半分の数値、中央値よりも大きい値があり、半分の数値が中央値より小さい値を持ちます。2、3、3、5、7、および 10 のメジアンは 4 です</description>
            </item>。
            <item>
              <description>モード数値グループで最も頻繁に出現する数値です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-250">
          <list type="bullet">
            <item>
              <description>Average which is the arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median which is the middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4.</description>
            </item>
            <item>
              <description>Mode which is the most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p138">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p138">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para><span data-ttu-id="a4672-253">セルを平均することに注意してください空のセルと値が 0 が含まれているとの違い [表示] タブ ([オプション] を [ツール] メニューの)、ゼロ値] チェック ボックスをオフにした場合に特に。</span><span class="sxs-lookup"><span data-stu-id="a4672-253">When averaging cells, keep in mind the difference between empty cells and those containing the value zero, especially if you have cleared the Zero values check box on the View tab (Options command, Tools menu).</span></span> <span data-ttu-id="a4672-254">空のセルはカウントされませんが、ゼロの値。</span><span class="sxs-lookup"><span data-stu-id="a4672-254">Empty cells are not counted, but zero values are.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIf">
      <MemberSignature Language="C#" Value="public double AverageIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-255">平均する 1 つまたは複数のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-255">One or more cells to average.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-256">数値、式、セル参照、またはセルの平均を定義するテキストの形式の条件です。</span><span class="sxs-lookup"><span data-stu-id="a4672-256">The criteria in the form of a number, expression, cell reference, or text that defines which cells are averaged.</span></span> <span data-ttu-id="a4672-257">などの基準として表せる 32、32、"&gt;32」、「りんご」、または B4。</span><span class="sxs-lookup"><span data-stu-id="a4672-257">For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p141">平均する実際のセルを指定します。何も指定しないと、範囲 (Arg1) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p141">The actual set of cells to average. If omitted, range is used.</span></span></param>
        <summary><span data-ttu-id="a4672-260">範囲内の検索条件に一致するすべてのセルの平均値 (算術平均) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-260">Returns the average (arithmetic mean) of all the cells in a range that meet a given criteria.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-261"><b>True</b>または<b>false</b>が含まれている範囲内のセルは無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-261">Cells in range that contain <b>true</b> or <b>false</b> are ignored.</span></span> </para>
          <para><span data-ttu-id="a4672-262"><b>平均対象範囲または範囲内の空のセルは無視されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-262">If a cell in range or average_range is an empty cell, <b>AverageIf</b> ignores it.</span></span> </para>
          <para><span data-ttu-id="a4672-263">抽出条件のセルが空の場合と<b>見なさ</b>れます 0 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-263">If a cell in criteria is empty, <b>AverageIf</b> treats it as a 0 value.</span></span> </para>
          <para><span data-ttu-id="a4672-264">範囲対応でセルの場合、条件、<b>エラー</b>は、エラー値を生成しません。</span><span class="sxs-lookup"><span data-stu-id="a4672-264">If no cells in the range meet the criteria, <b>AverageIf</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p146">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p146">You can use the wildcard characters, question mark (?) and asterisk (\*), in criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character. </span></span></para>
          <para><span data-ttu-id="a4672-p147">平均範囲に含まれるセルの個数と形状は、必ずしも対応するセルと一致している必要はありません。平均の対象となる実際のセルは、平均範囲の左上のセルを基準にして決定されます。次にその例を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p147">Average_range does not have to be the same size and shape as range. The actual cells that are averaged are determined by using the top, left cell in average_range as the beginning cell, and then including cells that correspond in size and shape to range. For example:</span></span></para><span data-ttu-id="a4672-271">
          <list type="table">
            <item>
              <term>範囲 a1: a5</term>
              <description>B1: b5</description>
              <description>B1: b5</description> 
            </item>
            <item>
              <description>B1: b3</description>
              <term>の範囲 a1: a5</term>
              <description>b1: b5</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:D4</description>
              <description>C1:D4</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:C2</description>
              <description>C1:D4</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-271">
          <list type="table">
            <item>
              <term>A1:A5</term>
              <description>B1:B5</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:A5</term>
              <description>B1:B3</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-272"><b>AverageIf</b>メソッドのメジャーの中心傾向、統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-272">The <b>AverageIf</b> method measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-273">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-273">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-274">
          <list type="bullet">
            <item>
              <description>平均算術平均、数字のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>メジアン数値グループの中央数であるテストの結果、半分の数値、中央値よりも大きい値があり、半分の数値が中央値より小さい値を持ちます。2、3、3、5、7、および 10 のメジアンは 4 です</description>
            </item>。
            <item>
              <description>モード数値グループで最も頻繁に出現する数値です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-274">
          <list type="bullet">
            <item>
              <description>Average which is the arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median which is the middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4.</description>
            </item>
            <item>
              <description>Mode which is the most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p149">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p149">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIfs">
      <MemberSignature Language="C#" Value="public double AverageIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-277">対応する条件による評価の対象となる範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-277">One or more ranges in which to evaluate the associated criteria.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary><span data-ttu-id="a4672-278">複数の検索条件に一致するすべてのセルの平均値 (算術平均) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-278">Returns the average (arithmetic mean) of all cells that meet multiple criteria.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-279"><b>平均範囲内に空のセルがある場合は無視します。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-279">If a cell in average_range is an empty cell, <b>AverageIfs</b> ignores it.</span></span> </para>
          <para><span data-ttu-id="a4672-280">検索条件範囲内のセルが空の場合と<b>見なさ</b>れます 0 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-280">If a cell in a criteria range is empty, <b>AverageIfs</b> treats it as a 0 value.</span></span> </para>
          <para><span data-ttu-id="a4672-281"><b>True</b>を含むセル範囲を 1 として評価します。<b>false</b>を含むセル範囲は、0 (ゼロ) として評価されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-281">Cells in range that contain <b>true</b> evaluate as 1; cells in range that contain <b>false</b> evaluate as 0 (zero).</span></span> </para>
          <para><span data-ttu-id="a4672-p153">セルに対して指定されたすべての検索条件が TRUE の場合にのみ、平均値の計算に平均範囲の各セルが使われます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p153">Each cell in average_range is used in the average calculation only if all of the corresponding criteria specified are true for that cell. </span></span></para>
          <para><span data-ttu-id="a4672-283">平均範囲のセルの数値に変換できない文字列値が含まれている、または場合は、エラーが返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-283">If cells in average_range are empty or contain text values that cannot be translated into numbers, <b>AverageIfs</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-284">すべての条件を満たすセルがない場合、エラー値が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-284">If there are no cells that meet all the criteria, <b>AverageIfs</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p156">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p156">You can use the wildcard characters, question mark (?) and asterisk (\*), in criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character. </span></span></para>
          <para><span data-ttu-id="a4672-p157">各検索条件範囲に含まれるセルの個数と形状は、必ずしも平均範囲のセルと一致している必要はありません。平均の対象となる実際のセルは、検索条件範囲の左上のセルを基準にして決定されます。次にその例を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p157">Each criteria_range does not have to be the same size and shape as average_range. The actual cells that are averaged are determined by using the top, left cell in that criteria_range as the beginning cell, and then including cells that correspond in size and shape to range. For example:</span></span></para><span data-ttu-id="a4672-291">
          <list type="table">
            <item>
              <term>範囲 a1: a5</term>
              <description>B1: b5</description>
              <description>B1: b5</description> 
            </item>
            <item>
              <description>B1: b3</description>
              <term>の範囲 a1: a5</term>
              <description>b1: b5</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:D4</description>
              <description>C1:D4</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:C2</description>
              <description>C1:D4</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-291">
          <list type="table">
            <item>
              <term>A1:A5</term>
              <description>B1:B5</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:A5</term>
              <description>B1:B3</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-292"><b>エラー</b>関数中心的な傾向、統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-292">The <b>AverageIfs</b> function measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-293">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-293">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-294">
          <list type="bullet">
            <item>
              <description>平均算術平均、数字のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>メジアン数値グループの中央数であるテストの結果、半分の数値、中央値よりも大きい値があり、半分の数値が中央値より小さい値を持ちます。2、3、3、5、7、および 10 のメジアンは 4 です</description>
            </item>。
            <item>
              <description>モード数値グループで最も頻繁に出現する数値です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-294">
          <list type="bullet">
            <item>
              <description>Average which is the arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median which is the middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4.</description>
            </item>
            <item>
              <description>Mode which is the most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p159">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p159">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BahtText">
      <MemberSignature Language="C#" Value="public string BahtText (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BahtText([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BahtText(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BahtText (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BahtText(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16752)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-297">文字列に変換する数値、数値を含むセルの参照、または戻り値が数値となる数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-297">A number you want to convert to text, or a reference to a cell containing a number, or a formula that evaluates to a number.</span></span></param>
        <summary><span data-ttu-id="a4672-298">数値をタイ語の文字列に変換し、バーツを表す接尾文字列を付加します。</span><span class="sxs-lookup"><span data-stu-id="a4672-298">Converts a number to Thai text and adds a suffix of "Baht."</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public string Base (double Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Base([in]float64 Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Base(System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Base (Arg1 As Double, Arg2 As Double, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-299">変換する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-299">The number that you want to convert.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-300">数値を変換する基数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-300">The base Radix that you want to convert the number into.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p160">返される文字列の最小長を指定します。先頭の 0 が省略された場合は追加されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p160">The minimum length of the returned string. If omitted leading zeros are not added.</span></span></param>
        <summary><span data-ttu-id="a4672-303">数値を特定の基数 (底) を持つ文字列式に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-303">Converts a number into a text representation with the given radix (base).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselI">
      <MemberSignature Language="C#" Value="public double BesselI (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselI([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselI(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselI (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselI(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-304">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-304">The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p161">ベッセル関数の次数を指定します。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p161">The order of the Bessel function. If n is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-307">修正ベッセル関数 In(x) を返します。この関数は、純虚数を引数としたときのベッセル関数 Jn に相当します。</span><span class="sxs-lookup"><span data-stu-id="a4672-307">Returns the modified Bessel function, which is equivalent to the Bessel function evaluated for purely imaginary arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p162">x (Arg1) に数値以外の値を指定すると、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p162">If x is nonnumeric, BesselI returns the #VALUE! error value.</span></span> </para>
          <para><span data-ttu-id="a4672-310">n (Arg2) に数値以外の値を指定すると、エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-310">If n is nonnumeric, BesselI generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-311">N &lt; 0、負のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-311">If n &lt; 0, BesselI generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-312">変数を x とする n 次の修正ベッセル関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-312">The n-th order modified Bessel function of the variable x is:</span></span></para>
          <para><span data-ttu-id="a4672-313">変数 x のベッセル関数を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-313">Figure 1: Bessel function of the variable x</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselJ">
      <MemberSignature Language="C#" Value="public double BesselJ (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselJ([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselJ(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselJ (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselJ(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-314">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-314">The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p163">ベッセル関数の次数を指定します。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p163">The order of the Bessel function. If n is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-317">ベッセル関数 Jn(x) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-317">Returns the Bessel function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-318">X が数値以外の場合は、<b>指定すると</b>エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-318">If x is nonnumeric, <b>BesselJ</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-319">かどうかは n に数値以外を<b>指定すると</b>が返されます、エラー値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-319">If n is nonnumeric, <b>BesselJ</b> returns the generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-320">N &lt; 0 を<b>指定すると</b>エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-320">If n &lt; 0, <b>BesselJ</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-321">変数を x とする n 次のベッセル関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-321">The n-th order Bessel function of the variable x is:</span></span> </para>
          <para><span data-ttu-id="a4672-322">変数 x のベッセル関数を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-322">Figure 1: Bessel function of the variable x</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-323">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-323">where:</span></span></para>
          <para><span data-ttu-id="a4672-324">図 2: ガンマ関数</span><span class="sxs-lookup"><span data-stu-id="a4672-324">Figure 2: Gamma function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-325">はガンマ関数を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-325">is the Gamma function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselK">
      <MemberSignature Language="C#" Value="public double BesselK (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselK([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselK(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselK (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselK(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-326">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-326">The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p167">ベッセル関数の次数を指定します。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p167">The order of the function. If n is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-329">修正ベッセル関数 Kn(x) を返します。この関数は、純虚数を引数としたときのベッセル関数 Jn と Yn の和に相当します。</span><span class="sxs-lookup"><span data-stu-id="a4672-329">Returns the modified Bessel function, which is equivalent to the Bessel functions evaluated for purely imaginary arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-330">X が数値以外の場合は、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-330">If x is nonnumeric, <b>BesselK</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-331">N が数値以外の場合は、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-331">If n is nonnumeric, <b>BesselK</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-332">N &lt; 0、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-332">If n &lt; 0, <b>BesselK</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-333">変数を x とする n 次の修正ベッセル関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-333">The n-th order modified Bessel function of the variable x is:</span></span> </para>
          <para><span data-ttu-id="a4672-334">変数 x のベッセル関数を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-334">Figure 1: Bessel function of the variable x</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-335">ここで Jn と Yn は、それぞれ BESSELJ 関数と BESSELY 関数を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-335">where Jn and Yn are the J and Y Bessel functions, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselY">
      <MemberSignature Language="C#" Value="public double BesselY (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselY([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselY(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselY (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselY(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-336">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-336">The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p171">ベッセル関数の次数を指定します。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p171">The order of the function. If n is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-339">ベッセル関数 Yn(x) を返します。この関数は、ウェーバー関数、またはノイマン関数とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="a4672-339">Returns the Bessel function, which is also called the Weber function or the Neumann function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-340">X が数値以外の場合は、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-340">If x is nonnumeric, <b>BesselY</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-341">N が数値以外の場合は、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-341">If n is nonnumeric, <b>BesselY</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-342">N &lt; 0、<b>負</b>のエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-342">If n &lt; 0, <b>BesselY</b> generates an error value.</span></span> </para>
          <para><span data-ttu-id="a4672-343">変数を x とする n 次のベッセル関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-343">The n-th order Bessel function of the variable x is:</span></span> </para>
          <para><span data-ttu-id="a4672-344">変数 x のベッセル関数を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-344">Figure 1: Bessel function of the variable x</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Dist">
      <MemberSignature Language="C#" Value="public double Beta_Dist (double Arg1, double Arg2, double Arg3, bool Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16909)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-345">区間 A (Arg4) ～ B (Arg5) の範囲で、関数を使用して検証する瞬間を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-345">The value between A and B at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-346">確率分布に対するαパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-346">The Alpha parameter of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-347">確率分布に対するβパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-347">The Beta parameter of the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-348">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-348">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-349">累積的な場合は<b>true</b>、ベータ版です。DIST は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-349">If cumulative is <b>true</b>, BETA.DIST returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-350">x の区間の下限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-350">An optional lower bound to the interval of x.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-351">x の区間の上限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-351">An optional upper bound to the interval of x.</span></span></param>
        <summary><span data-ttu-id="a4672-352">β分布の累積分布関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-352">Returns the beta cumulative distribution function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-353">β分布は、複数の標本を対象に割合の変化を分析する場合などに使用します。たとえば、複数の人が 1 日のうちにテレビを見ている時間の割合を算出するときは、この関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-353">The beta distribution is commonly used to study variation in the percentage of something across samples, such as the fraction of the day people spend watching television:</span></span></para><span data-ttu-id="a4672-354">
          <list type="bullet">
            <item>
              <description>いずれかの引数が数値以外の場合は、 <b>Beta_Dist</b>は、#VALUE を返します。エラー値です</description>
            </item>。
            <item>
              <description>Α ≤ 0 または β ≤ 0、 <b>Beta_Dist</b>がエラー値を生成するかどうかです</description>
            </item>。
            <item>
              <description>場合 x&lt;は、x &gt; B、または A = B、 <b>Beta_Dist</b>には、エラー値が生成されます</description>
            </item>。
            <item>
              <description>A の値を省略すると、B (上限と下限)、 <b>Beta_Dist</b>標準累積 β 分布が使用され、A = 0 および B = 1 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-354">
          <list type="bullet">
            <item>
              <description>If any argument is nonnumeric, <b>Beta_Dist</b> returns the #VALUE! error value.</description>
            </item>
            <item>
              <description>If alpha ≤ 0 or beta ≤ 0, <b>Beta_Dist</b> generates an error value.</description>
            </item>
            <item>
              <description>If x &lt; A, x &gt; B, or A = B, <b>Beta_Dist</b> generates an error value.</description>
            </item>
            <item>
              <description>If you omit values for A and B (lower and upper bound), <b>Beta_Dist</b> uses the standard cumulative beta distribution, so that A = 0 and B = 1.</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Inv">
      <MemberSignature Language="C#" Value="public double Beta_Inv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-355">β確率分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-355">A probability associated with the beta distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-356">確率分布に対するαパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-356">The Alpha parameter of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-357">確率分布に対するβパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-357">The Beta parameter the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-358">x の区間の下限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-358">An optional lower bound to the interval of x.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-359">x の区間の上限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-359">An optional upper bound to the interval of x.</span></span></param>
        <summary><span data-ttu-id="a4672-p176">指定したβ分布の累積分布関数の逆関数の値を返します。つまり、確率 = Beta_Dist(x,...) であるとき、Beta_Inv(確率,...) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p176">Returns the inverse of the cumulative distribution function for a specified beta distribution. That is, if probability = Beta_Dist(x,...), then Beta_Inv(probability,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-362">β分布は、プロジェクトの立案時に、予測される完成日数と公差によって完了可能日時を計算するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-362">The beta distribution can be used in project planning to model probable completion times given an expected completion time and variability:</span></span></para><span data-ttu-id="a4672-363">
          <list type="bullet">
            <item>
              <description>いずれかの引数が数値以外の場合は、 <b>Beta_Inv</b>がエラー値を生成します</description>
            </item>。
            <item>
              <description>Α ≤ 0 または β ≤ 0、 <b>Beta_Inv</b>がエラー値を生成するかどうかです</description>
            </item>。
            <item>
              <description>場合は確率 ≤ 0、または確率&gt;1, <b>Beta_Inv</b>には、エラー値が生成されます</description>
            </item>。
            <item>
              <description>A の値を省略すると、B (上限と下限)、 <b>Beta_Inv</b>標準累積 β 分布が使用され、A = 0 および B = 1 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-363">
          <list type="bullet">
            <item>
              <description>If any argument is nonnumeric, <b>Beta_Inv</b> generates an error value.</description>
            </item>
            <item>
              <description>If alpha ≤ 0 or beta ≤ 0, <b>Beta_Inv</b> generates an error value.</description>
            </item>
            <item>
              <description>If probability ≤ 0 or probability &gt; 1, <b>Beta_Inv</b> generates an error value.</description>
            </item>
            <item>
              <description>If you omit values for A and B (lower and upper bound), <b>Beta_Inv</b> uses the standard cumulative beta distribution, so that A = 0 and B = 1.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-364">確率の値を与え、そのような値 x がシーク<b>Beta_Inv</b> Beta_Dist (x、アルファ、ベータ版では、true の場合、A、B) = 確率。</span><span class="sxs-lookup"><span data-stu-id="a4672-364">Given a value for probability, <b>Beta_Inv</b> seeks that value x such that Beta_Dist(x, alpha, beta, TRUE, A, B) = probability.</span></span> <span data-ttu-id="a4672-365"><b>Beta_Inv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-365">Thus, precision of <b>Beta_Inv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />.</span></span> <span data-ttu-id="a4672-366"><b>Beta_Inv</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-366"><b>Beta_Inv</b> uses an iterative search technique.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaDist">
      <MemberSignature Language="C#" Value="public double BetaDist (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-367">区間 A (Arg4) ～ B (Arg5) の範囲で、関数を使用して検証する瞬間を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-367">The value between A and B at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-368">確率分布に対するパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-368">A parameter of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-369">確率分布に対するパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-369">A parameter of the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-370">x の区間の下限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-370">An optional lower bound to the interval of x.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-371">x の区間の上限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-371">An optional upper bound to the interval of x.</span></span></param>
        <summary><span data-ttu-id="a4672-372">β分布の累積分布関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-372">Returns the beta cumulative distribution function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-373">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-373">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-374">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-374">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-375">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-375">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-376">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-376">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-377">β分布は、複数の標本を対象に割合の変化を分析する場合などに使用します。たとえば、複数の人が 1 日のうちにテレビを見ている時間の割合を算出するときは、この関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-377">The beta distribution is commonly used to study variation in the percentage of something across samples, such as the fraction of the day people spend watching television.</span></span></para><span data-ttu-id="a4672-378">
          <list type="bullet">
            <item>
              <description>いずれかの引数が数値以外の場合は、<b>指定</b>が #VALUE を返します。エラー値です</description>
            </item>。
            <item>
              <description>エラー値が返されますかどうか α ≤ 0 または β ≤ 0 を<b>指定</b>します</description>
            </item>。
            <item>
              <description>場合 x&lt;は、x &gt; B、または A = B、<b>指定</b>には、エラー値が生成されます</description>
            </item>。
            <item>
              <description>A の値を省略すると<b>場合</b>、標準累積 β 分布が使用され、A = 0 および B = 1 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-378">
          <list type="bullet">
            <item>
              <description>If any argument is nonnumeric, <b>BetaDist</b> returns the #VALUE! error value.</description>
            </item>
            <item>
              <description>If alpha ≤ 0 or beta ≤ 0, <b>BetaDist</b> generates an error value.</description>
            </item>
            <item>
              <description>If x &lt; A, x &gt; B, or A = B, <b>BetaDist</b> generates an error value.</description>
            </item>
            <item>
              <description>If you omit values for A and B, <b>BetaDist</b> uses the standard cumulative beta distribution, so that A = 0 and B = 1.</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaInv">
      <MemberSignature Language="C#" Value="public double BetaInv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-379">β確率分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-379">A probability associated with the beta distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-380">確率分布に対するαパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-380">The Alpha parameter of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-381">確率分布に対するβパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-381">The Beta parameter the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-382">x の区間の下限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-382">An optional lower bound to the interval of x.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-383">x の区間の上限を指定します。この引数は省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-383">An optional upper bound to the interval of x.</span></span></param>
        <summary><span data-ttu-id="a4672-p179">指定したβ分布の累積分布関数の逆関数の値を返します。つまり、確率 = BetaDist(x,...) であるとき、BetaInv(確率,...) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p179">Returns the inverse of the cumulative distribution function for a specified beta distribution. That is, if probability = BetaDist(x,...), then BetaInv(probability,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-386">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-386">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-387">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-387">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-388">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-388">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-389">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-389">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-390">β分布は、プロジェクトの立案時に、予測される完成日数と公差によって、完了可能日時を計算するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-390">The beta distribution can be used in project planning to model probable completion times given an expected completion time and variability.</span></span></para><span data-ttu-id="a4672-391">
          <list type="bullet">
            <item>
              <description>いずれかの引数が数値以外の場合は、エラー値が返されます<b>BetaInv</b> </description> 
            </item> 。
            <item>
              <description>かどうか、α ≤ 0 または β ≤ 0、 <b>BetaInv</b>はエラー値を生成します</description>
            </item>。
            <item>
              <description>場合は確率 ≤ 0、または確率&gt;1、<b>エラー値が返さ</b></description>
            </item>。
            <item>
              <description>A の値を省略すると<b>場合</b>、標準累積 β 分布が使用され、A = 0 および B = 1 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-391">
          <list type="bullet">
            <item>
              <description>If any argument is nonnumeric, <b>BetaInv</b> generates an error value.</description>
            </item>
            <item>
              <description>If alpha ≤ 0 or beta ≤ 0, <b>BetaInv</b> generates an error value. </description>
            </item>
            <item>
              <description>If probability ≤ 0 or probability &gt; 1, <b>BetaInv</b> generates an error value. </description>
            </item>
            <item>
              <description>If you omit values for A and B, <b>BetaInv</b> uses the standard cumulative beta distribution, so that A = 0 and B = 1.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-392"><b>BetaInv</b>確率の値を与え、そのような値 x がシークを指定 (x、アルファ、ベータ版、A、B) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-392">Given a value for probability, <b>BetaInv</b> seeks that value x such that BetaDist(x, alpha, beta, A, B) = probability.</span></span> <span data-ttu-id="a4672-393"><b>BetaInv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-393">Thus, precision of <b>BetaInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</span></span> <span data-ttu-id="a4672-394"><b>BetaInv</b>は、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-394"><b>BetaInv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-395">結果は 100 回反復後収束しないが、この関数はエラー値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-395">If the search has not converged after 100 iterations, the function generates an error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Dec">
      <MemberSignature Language="C#" Value="public string Bin2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Bin2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p182">変換する 2 進数を指定します。数値に指定できる文字数は 10 文字 (10 ビット) までです。数値の最上位のビットは符号を表し、残りの 9 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p182">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <summary><span data-ttu-id="a4672-401">2 進数を 10 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-401">Converts a binary number to decimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-402">数値に 2 進数以外の値、または 10 文字 (10 ビット) 以上の値を指定すると、エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-402">If number is not a valid binary number, or if number contains more than 10 characters (10 bits), Bin2Dec generates an error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Hex">
      <MemberSignature Language="C#" Value="public string Bin2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p183">変換する 2 進数を指定します。数値に指定できる文字数は 10 文字 (10 ビット) までです。数値の最上位のビットは符号を表し、残りの 9 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p183">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-408">使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-408">The number of characters to use.</span></span> <span data-ttu-id="a4672-409">場所が省略されると、必要な文字の最小数を<b>Bin2Hex</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-409">If places is omitted, <b>Bin2Hex</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-410">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-410">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-411">2 進数を 16 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-411">Converts a binary number to hexadecimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-412">番号が、有効なバイナリ番号でない場合、または 10 文字 (10 ビット) 以上の場合は、 <b>Bin2Hex</b>がエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-412">If number is not a valid binary number, or if number contains more than 10 characters (10 bits), <b>Bin2Hex</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-413">負の数である場合、 <b>Bin2Hex</b>は場所を無視し、10 桁の 16 進数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-413">If number is negative, <b>Bin2Hex</b> ignores places and returns a 10-character hexadecimal number.</span></span> </para>
          <para><span data-ttu-id="a4672-414"><b>Bin2Hex</b>文字よりも大きくする必要がある場合は、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-414">If <b>Bin2Hex</b> requires more than places characters, it generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p188">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p188">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-416">数値以外の場合、 <b>Bin2Hex</b>はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-416">If places is nonnumeric, <b>Bin2Hex</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-417">桁数が負の場合、 <b>Bin2Hex</b>がエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-417">If places is negative, <b>Bin2Hex</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Oct">
      <MemberSignature Language="C#" Value="public string Bin2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p190">変換する 2 進数を指定します。数値に指定できる文字数は 10 文字 (10 ビット) までです。数値の最上位のビットは符号を表し、残りの 9 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p190">The binary number you want to convert. Number cannot contain more than 10 characters (10 bits). The most significant bit of number is the sign bit. The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-423">使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-423">The number of characters to use.</span></span> <span data-ttu-id="a4672-424">場所が省略されると、必要な文字の最小数を<b>Bin2Oct</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-424">If places is omitted, <b>Bin2Oct</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-425">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-425">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-426">2 進数を 8 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-426">Converts a binary number to octal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-427">番号が、有効なバイナリ番号でない場合、または 10 文字 (10 ビット) 以上の場合は、 <b>Bin2Oct</b>がエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-427">If number is not a valid binary number, or if number contains more than 10 characters (10 bits), <b>Bin2Oct</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-428">負の数である場合、 <b>Bin2Oct</b>が場所を無視し、10-文字 8 進数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-428">If number is negative, <b>Bin2Oct</b> ignores places and returns a 10-character octal number.</span></span> </para>
          <para><span data-ttu-id="a4672-429"><b>Bin2Oct</b>文字よりも大きくする必要がある場合は、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-429">If <b>Bin2Oct</b> requires more than places characters, it generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p195">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p195">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-431">数値以外の場合、 <b>Bin2Oct</b>はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-431">If places is nonnumeric, <b>Bin2Oct</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-432">桁数が負の場合、 <b>Bin2Oct</b>がエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-432">If places is negative, <b>Bin2Oct</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist">
      <MemberSignature Language="C#" Value="public double Binom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-433">成功数: 試行回数に含まれる成功の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-433">Number_s - the number of successes in trials.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-434">試行回数: 独立試行の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-434">Trials - the number of independent trials.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-435">成功率: 1 回の試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-435">Probability_s - the probability of success on each trial.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-436">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-436">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-437">累積的な場合は<b>true を指定</b>し、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドは、累積分布関数は、ほとんど成功数回の成功は時に表示されている確率を返します。かどうか<b>False</b>を返しますが成功数回の成功する確率を表す確率量関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-437">If cumulative is <b>True</b>, then the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method returns the cumulative distribution function, which is the probability that there are at most number_s successes; if <b>False</b>, it returns the probability mass function, which is the probability that there are number_s successes.</span></span></param>
        <summary><span data-ttu-id="a4672-438">二項分布の確率関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-438">Returns the individual term binomial distribution probability.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-439">試行が独立した場合、すべての試行の結果が成功または失敗のみと成功の確率が実験を通じて一定のテストまたは試用版では、固定数の問題で、 <b>Binom_Dist</b>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-439">Use the <b>Binom_Dist</b> method in problems with a fixed number of tests or trials, when the outcomes of any trial are only success or failure, when trials are independent, and when the probability of success is constant throughout the experiment.</span></span> <span data-ttu-id="a4672-440">たとえば、 <b>Binom_Dist</b>メソッドでは、(オス) は次の 3 つの赤ちゃんの 2 つの確率を計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-440">For example, the <b>Binom_Dist</b> method can calculate the probability that two of the next three babies born are male.</span></span> </para><span data-ttu-id="a4672-441">
          <list type="bullet">
            <item>
              <description>成功数、試行回数が整数に切り捨てられます</description>
            </item>。
            <item>
              <description>成功数、試行回数、成功率が数値以外の場合は、 <b>Binom_Dist</b>メソッドはエラーを生成します</description>
            </item>。
            <item>
              <description>場合成功&lt;0 または成功数&gt;試験、 <b>Binom_Dist</b>メソッドには、エラーが生成されます</description>
            </item>。
            <item>
              <description>場合は成功率&lt;0 または成功率&gt;1、 <b>Binom_Dist</b>メソッドには、エラーが生成されます。二項確率質量関数は、:</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-441">
          <list type="bullet">
            <item>
              <description>Number_s and trials are truncated to integers. </description>
            </item>
            <item>
              <description>If number_s, trials, or probability_s is nonnumeric, the <b>Binom_Dist</b> method generates an error. </description>
            </item>
            <item>
              <description>If number_s &lt; 0 or number_s &gt; trials, the <b>Binom_Dist</b> method generates an error. </description>
            </item>
            <item>
              <description>If probability_s &lt; 0 or probability_s &gt; 1, the <b>Binom_Dist</b> method generates an error. The binomial probability mass function is: </description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-442">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-442">Where:</span></span></para>
          <para><span data-ttu-id="a4672-443">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-443">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-444">COMBIN(n,x) は、です。</span><span class="sxs-lookup"><span data-stu-id="a4672-444">is COMBIN(n,x).</span></span></para>
          <para><span data-ttu-id="a4672-445">累積二項分布は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-445">The cumulative binomial distribution is:</span></span></para>
          <para><span data-ttu-id="a4672-446">図 3: 累積二項分布</span><span class="sxs-lookup"><span data-stu-id="a4672-446">Figure 3: Cumulative binomial distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist_Range">
      <MemberSignature Language="C#" Value="public double Binom_Dist_Range (double Arg1, double Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist_Range([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist_Range(System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist_Range (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-447">独立試行の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-447">The number of independent trials.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-448">各試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-448">The probability of success on each trial.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-449">試行における成功数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-449">The number of successes in trials.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-450">指定した場合、この関数は、成功した試行の数が Arg3 と Arg4 の間の値になる確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-450">If provided, this function returns the probability that the number of successful trials shall lie between Arg3 and Arg4.</span></span></param>
        <summary><span data-ttu-id="a4672-451">二項分布を使用した試行結果の確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-451">Returns the probability of a trial result using a binomial distribution.</span></span></summary>
        <returns><span data-ttu-id="a4672-452">倍精度浮動小数点数</span><span class="sxs-lookup"><span data-stu-id="a4672-452">Double</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Inv">
      <MemberSignature Language="C#" Value="public double Binom_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-453">試行回数: ベルヌーイ試行の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-453">Trials - the number of Bernoulli trials.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-454">成功率: 1 回の試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-454">Probability_s - the probability of a success on each trial.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-455">α: 基準値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-455">Alpha - the criterion value.</span></span></param>
        <summary><span data-ttu-id="a4672-456">二項分布の確率関数の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-456">Returns the inverse of the individual term binomial distribution probability.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-457">試行回数、成功率、またはアルファが数値以外の場合は、 <b>Binom_Inv</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-457">If Trials, Probability_s, or Alpha is nonnumeric, the <b>Binom_Inv</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p200">試行回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p200">If Trials is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-459">場合試験&lt;0、 <b>Binom_Inv</b>メソッドには、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-459">If Trials &lt; 0, the <b>Binom_Inv</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-460">場合成功率&lt;0 または成功率&gt;1、 <b>Binom_Inv</b>メソッドには、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-460">If Probability_s &lt; 0 or Probability_s &gt; 1, the <b>Binom_Inv</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-461">アルファの場合&lt;0 または α &gt; 1、 <b>Binom_Inv</b>メソッドには、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-461">If Alpha &lt; 0 or Alpha &gt; 1, the <b>Binom_Inv</b> method generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BinomDist">
      <MemberSignature Language="C#" Value="public double BinomDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BinomDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-462">試行における成功数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-462">The number of successes in trials.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-463">独立試行の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-463">The number of independent trials.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-464">各試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-464">The probability of success on each trial.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-465">関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-465">A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-466">累積的な場合は<b>true</b>、 <b>BinomDist</b>が成功数回の成功には、最大確率分布の累積分布関数を返しますし、かどうか<b>false</b>を返しますが成功数回の成功する確率を表す確率量関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-466">If cumulative is <b>true</b>, then <b>BinomDist</b> returns the cumulative distribution function, which is the probability that there are at most number_s successes; if <b>false</b>, it returns the probability mass function, which is the probability that there are number_s successes.</span></span></param>
        <summary><span data-ttu-id="a4672-467">二項分布の確率関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-467">Returns the individual term binomial distribution probability.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-468">試行が独立した場合、すべての試行の結果が成功または失敗のみと成功の確率が実験を通じて一定のテストまたは試用版では、固定数の問題の<b>中</b>に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-468">Use <b>BinomDist</b> in problems with a fixed number of tests or trials, when the outcomes of any trial are only success or failure, when trials are independent, and when the probability of success is constant throughout the experiment.</span></span> <span data-ttu-id="a4672-469"><b>たとえば、(オス) は次の 3 つの赤ちゃんの 2 つの確率を計算できます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-469">For example, <b>BinomDist</b> can calculate the probability that two of the next three babies born are male.</span></span> </para>
          <para><span data-ttu-id="a4672-p205">成功数、試行回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p205">Number_s and trials are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-471">成功数、試行回数、成功率が数値以外の場合は、<b>中</b>にエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-471">If number_s, trials, or probability_s is nonnumeric, <b>BinomDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-472">場合成功&lt;0 または成功数&gt;、 <b>BinomDist</b>の試用版には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-472">If number_s &lt; 0 or number_s &gt; trials, <b>BinomDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-473">場合成功率&lt;0 または成功率&gt;1、<b>エラーが返されます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-473">If probability_s &lt; 0 or probability_s &gt; 1, <b>BinomDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-474">二項確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-474">The binomial probability mass function is:</span></span> </para>
          <para><span data-ttu-id="a4672-475">図 1: 二項確率質量関数</span><span class="sxs-lookup"><span data-stu-id="a4672-475">Figure 1: Binomial probability mass function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-476">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-476">Where:</span></span></para>
          <para><span data-ttu-id="a4672-477">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-477">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-478">COMBIN(n,x) は、です。</span><span class="sxs-lookup"><span data-stu-id="a4672-478">is COMBIN(n,x).</span></span></para>
          <para><span data-ttu-id="a4672-479">累積二項分布は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-479">The cumulative binomial distribution is:</span></span></para>
          <para><span data-ttu-id="a4672-480">図 3: 累積二項分布</span><span class="sxs-lookup"><span data-stu-id="a4672-480">Figure 3: Cumulative binomial distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitand">
      <MemberSignature Language="C#" Value="public double Bitand (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitand([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitand(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitand (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitand(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-481">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-481">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-482">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-482">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <summary><span data-ttu-id="a4672-483">2 つの数値には、' ビットごと、' を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-483">Returns a ‘Bitwise And' of two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4672-484">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-484">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitlshift">
      <MemberSignature Language="C#" Value="public double Bitlshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitlshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitlshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitlshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitlshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-485">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-485">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-486">取得するバイト数。</span><span class="sxs-lookup"><span data-stu-id="a4672-486">The number of bits that you want to shift Arg1 left by.</span></span></param>
        <summary><span data-ttu-id="a4672-487">左に移動数ビット (shift_amount) 移動する数値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-487">Returns a value number shifted left by shift_amount bits.</span></span></summary>
        <returns><span data-ttu-id="a4672-488">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-488">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitor">
      <MemberSignature Language="C#" Value="public double Bitor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-489">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-489">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-490">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-490">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <summary><span data-ttu-id="a4672-491">2 つの数値のビット単位 OR を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-491">Returns a bitwise OR of 2 numbers.</span></span></summary>
        <returns><span data-ttu-id="a4672-492">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-492">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitrshift">
      <MemberSignature Language="C#" Value="public double Bitrshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitrshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitrshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitrshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitrshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-493">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-493">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-494">取得するバイト数。</span><span class="sxs-lookup"><span data-stu-id="a4672-494">The number of bits that you want to shift Arg1 right by.</span></span></param>
        <summary><span data-ttu-id="a4672-495">右に移動数ビット (shift_amount) 移動する数値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-495">Returns a value number shifted right by shift_amount bits.</span></span></summary>
        <returns><span data-ttu-id="a4672-496">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-496">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitxor">
      <MemberSignature Language="C#" Value="public double Bitxor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitxor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitxor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitxor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitxor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-497">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-497">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-498">変換するバイナリ数値の 10 進数表記を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-498">The decimal representation of the binary number you want to evaluate.</span></span></param>
        <summary><span data-ttu-id="a4672-499">2 つの数値のビット単位 "排他的 OR" を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-499">Returns a bitwise 'Exclusive Or' of two numbers.</span></span></summary>
        <returns><span data-ttu-id="a4672-500">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-500">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public double Ceiling (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ceiling(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16672)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-501">数値: 丸めの対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-501">Number - the value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-502">基準値: 倍数の基準となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-502">Significance - the multiple to which you want to round.</span></span></param>
        <summary><span data-ttu-id="a4672-503">指定された基準値の倍数のうち、最も近い値に数値を切り上げます。</span><span class="sxs-lookup"><span data-stu-id="a4672-503">Returns number rounded up, away from zero, to the nearest multiple of significance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-504">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-504">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-505">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-505">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-506">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-506">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-507">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-507">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-508">たとえば、原価 442 円の部品に値段を付ける場合に、1 円単位の端数を出さないようにするには、数式 Ceiling(4.42,0.05) を使って、値を最も近い 10 円単位の値に丸めることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-508">For example, if you want to avoid using pennies in your prices and your product is priced at $4.42, use the formula Ceiling(4.42,0.05) to round prices up to the nearest nickel.</span></span></para>
          <para><span data-ttu-id="a4672-509">いずれかの引数が数値以外の場合は、<b>天井</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-509">If either argument is nonnumeric, <b>Ceiling</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p211">数値の符号に関係なく、切り上げられた値の絶対値は、数値より大きくなります。数値が既に基準値の倍数になっている場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p211">Regardless of the sign of number, a value is rounded up when adjusted away from zero. If number is an exact multiple of significance, no rounding occurs. </span></span></para>
          <para><span data-ttu-id="a4672-512">数値と基準値の符号が異なる場合、<b>天井</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-512">If number and significance have different signs, <b>Ceiling</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Math">
      <MemberSignature Language="C#" Value="public double Ceiling_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-513">丸める数値。</span><span class="sxs-lookup"><span data-stu-id="a4672-513">The value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-514">数値を丸める対象の倍数。</span><span class="sxs-lookup"><span data-stu-id="a4672-514">The multiple to which you want to round.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-515">指定され、かつ 0 以外の場合、この関数は 0 とは逆の方向に切り上げます。</span><span class="sxs-lookup"><span data-stu-id="a4672-515">When given and nonzero, this function will round away from zero.</span></span></param>
        <summary><span data-ttu-id="a4672-516">数値を最も近い整数、または最も近い基準値の倍数に切り上げます。</span><span class="sxs-lookup"><span data-stu-id="a4672-516">Rounds a number up, to the nearest integer or to the nearest multiple of significance.</span></span></summary>
        <returns><span data-ttu-id="a4672-517">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-517">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Precise">
      <MemberSignature Language="C#" Value="public double Ceiling_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16930)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-518">数値: 丸めの対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-518">Number - the value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-519">基準値: 倍数の基準となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-519">Significance - the multiple to which you want to round.</span></span></param>
        <summary><span data-ttu-id="a4672-520">指定された基準値の倍数のうち、最も近い値に数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-520">Returns the specified number rounded to the nearest multiple of significance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-521">たとえば、原価 442 円の部品に値段を付ける場合に、1 円単位の端数を出さないようにするには、数式 Ceiling(4.42,0.05) を使って、値を最も近い 10 円単位の値に丸めることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-521">For example, if you want to avoid using pennies in your prices and your product is priced at $4.42, use the formula Ceiling(4.42,0.05) to round prices up to the nearest nickel.</span></span></para>
          <para><span data-ttu-id="a4672-522">によっては、数値と基準値の引数の符号、 <b>Ceiling_Precise</b>メソッドから離れるか、0 方向に丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-522">Depending on the sign of the number and significance arguments, the <b>Ceiling_Precise</b> method rounds either away from or towards zero.</span></span></para><span data-ttu-id="a4672-523">
          <list type="table">
            <item>
              <term>-/-</term>
              <description>ゼロに向かって切り下げる。</description> 
            </item> 。
            <item>
              <term>+/+</term>ゼロ回
            </item>。
            <item> 
              <term>-/+</term>0 に向かって切り下げる。
            </item> 。
            <item>
              <term>+/-</term>ゼロ回
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-523">
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Rounds toward zero.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Rounds away from zero.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Rounds toward zero.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Rounds away from zero.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-524">いずれかの引数が数値以外の場合は、 <b>Ceiling_Precise</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-524">If either argument is nonnumeric, <b>Ceiling_Precise</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-525">数値が既に基準値の倍数になっている場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-525">If number is an exact multiple of significance, no rounding occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiDist">
      <MemberSignature Language="C#" Value="public double ChiDist (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiDist([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiDist (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiDist(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-526">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-526">The value at which you want to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-527">自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-527">The number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-528">カイ 2 乗分布の片側確率の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-528">Returns the one-tailed probability of the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-529">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-529">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-530">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-530">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-531">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-531">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-532">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-532">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-533">Χ2 ディストリビューションでは、χ2 のテストに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-533">The χ2 distribution is associated with a χ2 test.</span></span> <span data-ttu-id="a4672-534">観察された比較値と期待値を χ2 テストを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-534">Use the χ2 test to compare observed and expected values.</span></span></para>
          <para><span data-ttu-id="a4672-p215">たとえば、ある植物の遺伝子実験で、次の世代の花には一定の色の組み合わせが発生するという仮説を立てたとします。ここで、予測された色と観察の結果を比較することにより、仮説の妥当性を検定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p215">For example, a genetic experiment might hypothesize that the next generation of plants will exhibit a certain set of colors. By comparing the observed results with the expected ones, you can decide whether your original hypothesis is valid.</span></span></para>
          <para><span data-ttu-id="a4672-537">いずれかの引数が数値以外の場合は、<b>れます</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-537">If either argument is nonnumeric, <b>ChiDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-538">X が負の場合は、<b>れます</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-538">If x is negative, <b>ChiDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p218">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p218">If degrees_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-540">場合自由度&lt;1 または自由度&gt;10 ^10 の場合、エラー値が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-540">If degrees_freedom &lt; 1 or degrees_freedom &gt; 10^10, <b>ChiDist</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-541">
            <b>れます</b>がれますとして計算されます = P (X&gt;x)、X は χ2 の確率変数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-541">
            <b>ChiDist</b> is calculated as ChiDist = P(X&gt;x), where X is a χ2 random variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiInv">
      <MemberSignature Language="C#" Value="public double ChiInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-542">χ2 分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-542">A probability associated with the chi-squared distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-543">自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-543">The number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-544">カイ 2 乗分布の片側確率の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-544">Returns the inverse of the one-tailed probability of the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-545">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-545">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-546">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-546">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-547">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-547">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-548">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-548">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-p221">確立 = ChiDist(x,...) であるとき、ChiInv(確率,...) = x という関係が成り立ちます。この関数は、実測値と期待値を比較して、仮説の妥当性を検定するために使います。</span><span class="sxs-lookup"><span data-stu-id="a4672-p221">If probability = ChiDist(x,...), then ChiInv(probability,...) = x. Use this function to compare observed results with expected ones in order to decide whether your original hypothesis is valid.</span></span></para>
          <para><span data-ttu-id="a4672-551">いずれかの引数が数値以外の場合、 <b>ChiInv</b>はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-551">If either argument is nonnumeric, <b>ChiInv</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-552">場合確率&lt;0、または確率&gt;1、エラー値が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-552">If probability &lt; 0 or probability &gt; 1, <b>ChiInv</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p224">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p224">If degrees_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-554">場合自由度&lt;1 または自由度の受領 10 ^10 の場合、エラー値が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-554">If degrees_freedom &lt; 1 or degrees_freedom ≥ 10^10, <b>ChiInv</b> generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-555"><b>そのような値 x がシークの確率の値を指定した、</b> ChiDist (x, 自由度) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-555">Given a value for probability, <b>ChiInv</b> seeks that value x such that ChiDist(x, degrees_freedom) = probability.</span></span> <span data-ttu-id="a4672-556"><b>ChiInv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-556">Thus, precision of <b>ChiInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />.</span></span> <span data-ttu-id="a4672-557"><b>ChiInv</b>は、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-557"><b>ChiInv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-558">検索は、64 回の反復後が収束しない、関数はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-558">If the search has not converged after 64 iterations, the function generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16911)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-559">x: 分布を計算する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-559">X - The value at which you want to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-560">自由度: 自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-560">Deg_freedom - The number of degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-561">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-561">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-562">場合<b>は累積的な</b>CHISQ_DIST は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-562">If cumulative is <b>true</b>, CHISQ_DIST returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-563">カイ 2 乗分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-563">Returns the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p227">引数に数値以外の値を指定すると、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p227">If any argument is nonnumeric, CHISQ_DIST returns the #VALUE! error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p228">x に負の数を指定すると、エラー値 #NUM! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p228">If x is negative, CHISQ_DIST returns the #NUM! error value.</span></span> </para>
          <para><span data-ttu-id="a4672-568">自由度に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-568">If deg_freedom is not an integer, it is truncated.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16912)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-569">関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-569">The value at which you want to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-570">自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-570">The number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-571">カイ 2 乗分布の右側確率の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-571">Returns the right-tailed probability of the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-572">Χ2 ディストリビューションでは、χ2 のテストに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-572">The χ2 distribution is associated with a χ2 test.</span></span> <span data-ttu-id="a4672-573">観察された比較値と期待値を χ2 テストを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-573">Use the χ2 test to compare observed and expected values.</span></span></para>
          <para><span data-ttu-id="a4672-p230">たとえば、ある植物の遺伝子実験で、次の世代の花には一定の色の組み合わせが発生するという仮説を立てたとします。ここで、予測された色と観察の結果を比較することにより、仮説の妥当性を検定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p230">For example, a genetic experiment might hypothesize that the next generation of plants will exhibit a certain set of colors. By comparing the observed results with the expected ones, you can decide whether your original hypothesis is valid.</span></span></para>
          <para><span data-ttu-id="a4672-576">いずれかの引数が数値以外の場合は、 <b>ChiSq_Dist_RT</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-576">If either argument is nonnumeric, <b>ChiSq_Dist_RT</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-577">X が負の場合は、 <b>ChiSq_Dist_RT</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-577">If x is negative, <b>ChiSq_Dist_RT</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p233">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p233">If degrees_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-579">場合自由度&lt;1 または自由度&gt;10 ^10、 <b>ChiSq_Dist_RT</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-579">If degrees_freedom &lt; 1 or degrees_freedom &gt; 10^10, <b>ChiSq_Dist_RT</b> generates an error.</span></span> <span data-ttu-id="a4672-580"><b>ChiSq_Dist_RT</b>は、ChiSq_Dist_RT として計算されます = P (X&gt;x)、X は χ2 の確率変数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-580"><b>ChiSq_Dist_RT</b> is calculated as ChiSq_Dist_RT = P(X&gt;x), where X is a χ2 random variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-581">確率: カイ 2 乗分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-581">Probability - A probability associated with the chi-squared distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-582">自由度: 自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-582">Deg_freedom - The number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-583">カイ 2 乗分布の左側確率の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-583">Returns the inverse of the left-tailed probability of the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-584">いずれかの引数が数値以外の場合は、 <b>ChiSq_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-584">If any argument is nonnumeric, <b>ChiSq_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-585">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-585">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-586">場合確率&lt;0、または確率&gt;1、 <b>ChiSq_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-586">If probability &lt; 0 or probability &gt; 1, <b>ChiSq_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-587">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-587">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p237">自由度に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p237">If deg_freedom is not an integer, it is truncated. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16914)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-589">χ2 分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-589">A probability associated with the chi-squared distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-590">自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-590">The number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-591">カイ 2 乗分布の右側確率の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-591">Returns the inverse of the right-tailed probability of the chi-squared distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-592">場合確率 = ChiSq_Dist_RT(x,...)、ChiSq_Inv_RT(probability,...) = x です。</span><span class="sxs-lookup"><span data-stu-id="a4672-592">If probability = ChiSq_Dist_RT(x,...), then ChiSq_Inv_RT(probability,...) = x.</span></span> <span data-ttu-id="a4672-593">元の仮説が有効かどうかを決定するために、予期されたものと確認された結果を比較するのにには、この関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-593">Use this function to compare observed results with expected ones in order to decide whether your original hypothesis is valid.</span></span></para>
          <para><span data-ttu-id="a4672-594">いずれかの引数が数値以外の場合は、 <b>ChiSq_Inv_RT</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-594">If either argument is nonnumeric, <b>ChiSq_Inv_RT</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-595">場合確率&lt;0、または確率&gt;1, <b>ChiSq_Inv_RT</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-595">If probability &lt; 0 or probability &gt; 1, <b>ChiSq_Inv_RT</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p241">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p241">If degrees_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-597">場合自由度&lt;1 または自由度の受領 10 ^10、 <b>ChiSq_Inv_RT</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-597">If degrees_freedom &lt; 1 or degrees_freedom ≥ 10^10, <b>ChiSq_Inv_RT</b> generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-598">確率の値を与え、そのような値 x がシーク<b>ChiSq_Inv_RT</b>その ChiSq_Dist_RT を (x, 自由度) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-598">Given a value for probability, <b>ChiSq_Inv_RT</b> seeks that value x such that ChiSq_Dist_RT(x, degrees_freedom) = probability.</span></span> <span data-ttu-id="a4672-599"><b>ChiSq_Inv_RT</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-599">Thus, precision of <b>ChiSq_Inv_RT</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />.</span></span> <span data-ttu-id="a4672-600"><b>ChiSq_Inv_RT</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-600"><b>ChiSq_Inv_RT</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-601">検索は、64 回の反復後が収束しない、関数はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-601">If the search has not converged after 64 iterations, the function generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Test">
      <MemberSignature Language="C#" Value="public double ChiSq_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-602">期待値に対する検定の実測値が入力されているデータ範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-602">The range of data that contains observations to test against expected values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-603">期待値が入力されているデータ範囲を指定します。実測値と期待値では、行方向の値の合計と列方向の値の合計がそれぞれ等しくなっている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-603">The range of data that contains the ratio of the product of row totals and column totals to the grand total.</span></span></param>
        <summary><span data-ttu-id="a4672-604">カイ 2 乗 (χ2) 検定を行います。</span><span class="sxs-lookup"><span data-stu-id="a4672-604">Returns the test for independence.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-605">
            <b>ChiSq_Test</b>は、統計と自由度に対するカイ 2 乗 (χ2) 分布から値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-605">
            <b>ChiSq_Test</b> returns the value from the chi-squared (χ2) distribution for the statistic and the appropriate degrees of freedom.</span></span> <span data-ttu-id="a4672-606">Χ2 テストを使用すると、結果が実験によって検証仮説かどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-606">You can use χ2 tests to determine whether hypothesized results are verified by an experiment.</span></span></para>
          <para><span data-ttu-id="a4672-607">実測値範囲と期待値のデータ要素の個数が異なる場合、 <b>ChiSq_Test</b>はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-607">If actual_range and expected_range have a different number of data points, <b>ChiSq_Test</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-608">Χ2 テストは、最初に式を使用して χ2 の統計情報を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-608">The χ2 test first calculates a χ2 statistic using the formula:</span></span> </para>
          <para><span data-ttu-id="a4672-609">図 1: 数式の x 乗のテスト</span><span class="sxs-lookup"><span data-stu-id="a4672-609">Figure 1: Formula for x squared test</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-610">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-610">where:</span></span></para><span data-ttu-id="a4672-611">
          <list type="bullet">
            <item>
              <description>Aij = i 行 j 列内の実際の周波数</description>
            </item>
            <item>
              <description>Eij = i 行 j 列内の予期周波数</description>
            </item>
            <item>
              <description>r = 番号または行</description>
            </item>
            <item>
              <description>c 列の数を =</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-611">
          <list type="bullet">
            <item>
              <description>Aij = actual frequency in the i-th row, j-th column</description>
            </item>
            <item>
              <description>Eij = expected frequency in the i-th row, j-th column</description>
            </item>
            <item>
              <description>r = number or rows</description>
            </item>
            <item>
              <description>c = number of columns</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-612">Χ2 の低値は、独立性を示すインジケーターです。</span><span class="sxs-lookup"><span data-stu-id="a4672-612">A low value of χ2 is an indicator of independence.</span></span> <span data-ttu-id="a4672-613">数式からわかるように、χ2 は常に正または 0 の場合、ありのみの場合は 0 を Aij Eij を = どの i、j。</span><span class="sxs-lookup"><span data-stu-id="a4672-613">As can be seen from the formula, χ2 is always positive or 0, and is 0 only if Aij = Eij for every i,j.</span></span></para>
          <para><span data-ttu-id="a4672-614">
            <b>ChiSq_Test</b>を返します。 確率の値以上の高い χ2 の統計情報の値は、上記の数式で計算されることは、独立性の仮定の下で偶然発生したできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-614">
            <b>ChiSq_Test</b> returns the probability that a value of the χ2 statistic at least as high as the value calculated by the above formula could have happened by chance under the assumption of independence.</span></span> <span data-ttu-id="a4672-615">この確率を計算するためには、 <b>ChiSq_Test</b>と適切な自由度 df の χ2 の配布を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-615">In computing this probability, <b>ChiSq_Test</b> uses the χ2 distribution with an appropriate number of degrees of freedom, df.</span></span> <span data-ttu-id="a4672-616">場合 r &gt; 1 および c &gt; 1 は、df = (r - 1)(c-1)。</span><span class="sxs-lookup"><span data-stu-id="a4672-616">If r &gt; 1 and c &gt; 1, then df = (r - 1)(c - 1).</span></span> <span data-ttu-id="a4672-617">場合 r = 1 および c &gt; 1 は、df = c - 1 または r &gt; 1 および c = 1 では、df = r - 1。</span><span class="sxs-lookup"><span data-stu-id="a4672-617">If r = 1 and c &gt; 1, then df = c - 1 or if r &gt; 1 and c = 1, then df = r - 1.</span></span> <span data-ttu-id="a4672-618">r = c = 1 が許可されていませんし、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-618">r = c= 1 is not allowed and generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-619">Eij が小さすぎるではない場合、 <b>ChiSq_Test</b>の使用が最適です。</span><span class="sxs-lookup"><span data-stu-id="a4672-619">Use of <b>ChiSq_Test</b> is most appropriate when Eij’s are not too small.</span></span> <span data-ttu-id="a4672-620">統計学者は、各 Eij を 5 以上にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a4672-620">Some statisticians suggest that each Eij should be greater than or equal to 5.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiTest">
      <MemberSignature Language="C#" Value="public double ChiTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-621">期待値に対する検定の実測値が入力されているデータ範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-621">The range of data that contains observations to test against expected values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-622">正確さの向上を提供することがあり、名前がその使用方法をより効果的に反映 1 つまたは複数の新しい関数を使用して、ImportantThis 関数は交換済み。</span><span class="sxs-lookup"><span data-stu-id="a4672-622">ImportantThis function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-623">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-623">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-624">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-624">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-625">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-625">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" /> method.</span></span> <span data-ttu-id="a4672-626">期待値が入力されているデータ範囲を指定します。実測値と期待値では、行方向の値の合計と列方向の値の合計がそれぞれ等しくなっている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-626">The range of data that contains the ratio of the product of row totals and column totals to the grand total.</span></span></param>
        <summary><span data-ttu-id="a4672-627">カイ 2 乗 (χ2) 検定を行います。</span><span class="sxs-lookup"><span data-stu-id="a4672-627">Returns the test for independence.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-628">
            <b>Chitest 関数</b>は、統計と自由度に対するカイ 2 乗 (χ2) 分布から値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-628">
            <b>ChiTest</b> returns the value from the chi-squared (χ2) distribution for the statistic and the appropriate degrees of freedom.</span></span> <span data-ttu-id="a4672-629">Χ2 テストを使用すると、結果が実験によって検証仮説かどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-629">You can use χ2 tests to determine whether hypothesized results are verified by an experiment.</span></span></para>
          <para><span data-ttu-id="a4672-630"><b>実測値範囲と期待値は、データ要素の個数が異なるである場合、#N/A エラー値が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-630">If actual_range and expected_range have a different number of data points, <b>ChiTest</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-631">Χ2 テストは、最初に式を使用して χ2 の統計情報を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-631">The χ2 test first calculates a χ2 statistic using the formula:</span></span> </para>
          <para><span data-ttu-id="a4672-632">図 1: 数式の x 乗のテスト</span><span class="sxs-lookup"><span data-stu-id="a4672-632">Figure 1: Formula for x squared test</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-633">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-633">where:</span></span></para><span data-ttu-id="a4672-634">
          <list type="bullet">
            <item>
              <description>Aij = i 行 j 列内の実際の周波数</description>
            </item>
            <item>
              <description>Eij = i 行 j 列内の予期周波数</description>
            </item>
            <item>
              <description>r = 番号または行</description>
            </item>
            <item>
              <description>c 列の数を =</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-634">
          <list type="bullet">
            <item>
              <description>Aij = actual frequency in the i-th row, j-th column</description>
            </item>
            <item>
              <description>Eij = expected frequency in the i-th row, j-th column</description>
            </item>
            <item>
              <description>r = number or rows</description>
            </item>
            <item>
              <description>c = number of columns</description>
            </item>
          </list>
          </span></span><para> </para>
          <para><span data-ttu-id="a4672-635">Χ2 の低値は、独立性を示すインジケーターです。</span><span class="sxs-lookup"><span data-stu-id="a4672-635">A low value of χ2 is an indicator of independence.</span></span> <span data-ttu-id="a4672-636">数式からわかるように、χ2 は常に正または 0 の場合、ありのみの場合は 0 を Aij Eij を = どの i、j。</span><span class="sxs-lookup"><span data-stu-id="a4672-636">As can be seen from the formula, χ2 is always positive or 0, and is 0 only if Aij = Eij for every i,j.</span></span></para>
          <para><span data-ttu-id="a4672-637">
            <b>Chitest 関数</b>を返します。 確率の値以上の高い χ2 の統計情報の値は、上記の数式で計算されることは、独立性の仮定の下で偶然発生したできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-637">
            <b>ChiTest</b> returns the probability that a value of the χ2 statistic at least as high as the value calculated by the above formula could have happened by chance under the assumption of independence.</span></span> <span data-ttu-id="a4672-638"><b>この確率の計算と適切な自由度 df の χ2 分布が使用されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-638">In computing this probability, <b>ChiTest</b> uses the χ2 distribution with an appropriate number of degrees of freedom, df.</span></span> <span data-ttu-id="a4672-639">場合 r &gt; 1 および c &gt; 1 は、df = (r - 1)(c-1)。</span><span class="sxs-lookup"><span data-stu-id="a4672-639">If r &gt; 1 and c &gt; 1, then df = (r - 1)(c - 1).</span></span> <span data-ttu-id="a4672-640">場合 r = 1 および c &gt; 1 は、df = c - 1 または r &gt; 1 および c = 1 では、df = r - 1。</span><span class="sxs-lookup"><span data-stu-id="a4672-640">If r = 1 and c &gt; 1, then df = c - 1 or if r &gt; 1 and c = 1, then df = r - 1.</span></span> <span data-ttu-id="a4672-641">r = c = 1 が許可されていませんし、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-641">r = c= 1 is not allowed and generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-642"><b>Chitest 関数</b>の使用は、Eij が小さすぎる場合に最適です。</span><span class="sxs-lookup"><span data-stu-id="a4672-642">Use of <b>ChiTest</b> is most appropriate when Eij’s are not too small.</span></span> <span data-ttu-id="a4672-643">統計学者は、各 Eij を 5 以上にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a4672-643">Some statisticians suggest that each Eij should be greater than or equal to 5.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public object Choose (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Choose([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-644">どの引数値が選択されているかを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-644">Specifies which value argument is selected.</span></span> <span data-ttu-id="a4672-645">Arg1 には、1、29、数式または 1 ~ 29 の数値を含むセルへの参照の間の数値をする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-645">Arg1 must be a number between 1 and 29, or a formula or reference to a cell containing a number between 1 and 29.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-646">選択される値または実行する操作を 1 から 29 個の値の引数は、引数 1 に基づいています。</span><span class="sxs-lookup"><span data-stu-id="a4672-646">1 to 29 value arguments from which Choose selects a value or an action to perform based on Arg1.</span></span> <span data-ttu-id="a4672-647">引数は、数値、セル参照、定義名、数式、関数、または文字列にできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-647">The arguments can be numbers, cell references, defined names, formulas, functions, or text.</span></span></param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-648">使用して<paramref name="Arg1" />インデックスの値の引数のリストから値を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-648">Uses <paramref name="Arg1" /> as the index to return a value from the list of value arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-649">場合<paramref name="Arg1" />は、1、<b>値と値の 1 です。</b><b>2 の場合、返されます値 2。</b>などなど。</span><span class="sxs-lookup"><span data-stu-id="a4672-649">If <paramref name="Arg1" /> is 1, <b>Choose</b> returns value1; if it is 2, <b>Choose</b> returns value2; and so on.</span></span> </para>
          <para><span data-ttu-id="a4672-650">場合<paramref name="Arg1" />が 1 より小さいか、または数より大きい値<b>の選択</b>リストの最後の値のエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-650">If <paramref name="Arg1" /> is less than 1 or greater than the number of the last value in the list, <b>Choose</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-651">場合<paramref name="Arg1" />、分数では、使用する前に低い整数へ切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-651">If <paramref name="Arg1" /> is a fraction, it is truncated to the lowest integer before being used.</span></span> </para>
          <para><span data-ttu-id="a4672-652">場合<paramref name="Arg1" />は、配列では、<b>選択</b>が評価されるときにすべての値が評価されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-652">If <paramref name="Arg1" /> is an array, every value is evaluated when <b>Choose</b> is evaluated.</span></span> </para>
          <para><span data-ttu-id="a4672-653">引数<b>に</b>単一の値と範囲の参照を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-653">The value arguments to <b>Choose</b> can be range references as well as single values.</span></span> <span data-ttu-id="a4672-654">たとえば、次のような数式があるとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-654">For example, the formula:</span></span></para>
          <para><span data-ttu-id="a4672-655">= 合計 (選択 (2, a1: a10、b1: b10、C1:C10))</span><span class="sxs-lookup"><span data-stu-id="a4672-655">=SUM(Choose(2,A1:A10,B1:B10,C1:C10))</span></span></para>
          <para><span data-ttu-id="a4672-656">評価されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-656">evaluates to:</span></span></para>
          <para><span data-ttu-id="a4672-657">=SUM(B1:B10)</span><span class="sxs-lookup"><span data-stu-id="a4672-657">=SUM(B1:B10)</span></span></para>
          <para><span data-ttu-id="a4672-658">範囲 b1: b10 の値に基づいて値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-658">which then returns a value based on the values in the range B1:B10.</span></span></para>
          <para><span data-ttu-id="a4672-659"><b>Choose</b>関数が最初に評価、b1: b10 の参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-659">The <b>Choose</b> function is evaluated first, returning the reference B1:B10.</span></span> <span data-ttu-id="a4672-660">SUM 関数は、引数として範囲 b1: b10 を<b>選択</b>関数の結果を使用して評価します。</span><span class="sxs-lookup"><span data-stu-id="a4672-660">The SUM function is then evaluated using B1:B10, the result of the <b>Choose</b> function, as its argument.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clean">
      <MemberSignature Language="C#" Value="public string Clean (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Clean([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clean (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Clean(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-661">印刷できない文字を削除するワークシートの文字データを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-661">Any worksheet information from which you want to remove nonprintable characters.</span></span></param>
        <summary><span data-ttu-id="a4672-662">印刷できない文字を文字列から削除します。</span><span class="sxs-lookup"><span data-stu-id="a4672-662">Removes all nonprintable characters from text.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-663">オペレーティング システムでは印刷できない文字が含まれている他のアプリケーションからインポートされたテキストの<b>消去</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-663">Use <b>Clean</b> on text imported from other applications that contains characters that may not print with your operating system.</span></span> <span data-ttu-id="a4672-664">などで頻繁に先頭とデータ ファイルの末尾に印刷できない制御コードを削除するのには、 <b>Clean</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-664">For example, you can use <b>Clean</b> to remove some low-level computer code that is frequently at the beginning and end of data files and cannot be printed.</span></span></para>
          <para><span data-ttu-id="a4672-665">
            <b>重要</b>: <b>Clean</b>関数は、7 ビット ASCII コード (値 0 ~ 31) の最初の 32 の印刷できない文字を削除するのにはテキストから設計されました。</span><span class="sxs-lookup"><span data-stu-id="a4672-665">
            <b>Important</b>: The <b>Clean</b> function was designed to remove the first 32 nonprinting characters in the 7-bit ASCII code (values 0 through 31) from text.</span></span> <span data-ttu-id="a4672-666">Unicode 文字セットには、追加の編集記号 (値 127、129、141、143、144、および 157) があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-666">In the Unicode character set, there are additional nonprinting characters (values 127, 129, 141, 143, 144, and 157).</span></span> <span data-ttu-id="a4672-667">自体は、 <b>Clean</b>関数では、これらの追加の印刷できない文字は削除されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-667">By itself, the <b>Clean</b> function does not remove these additional nonprinting characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Combin">
      <MemberSignature Language="C#" Value="public double Combin (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combin([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combin(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combin (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combin(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-668">抜き取る対象の全体の数 (総数) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-668">The number of items.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-669">組み合わせる 1 組に含まれる項目の数 (抜き取り数) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-669">The number of items in each combination.</span></span></param>
        <summary><span data-ttu-id="a4672-670">指定されたアイテム数の組み合わせの数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-670">Returns the number of combinations for a given number of items.</span></span> <span data-ttu-id="a4672-671"><b>Combin</b>を使用すると、アイテム数が特定のグループの合計数を決定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-671">Use <b>Combin</b> to determine the total possible number of groups for a given number of items.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p265">整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p265">Numeric arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-673"><b>いずれかの引数が数値以外の場合は、エラーになります。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-673">If either argument is nonnumeric, <b>Combin</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-674">数値の場合&lt;0、抜き取り&lt;0、または数&lt;抜き取り、 <b>Combin</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-674">If number &lt; 0, number_chosen &lt; 0, or number &lt; number_chosen, <b>Combin</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p268">順列では、選択した項目の順序に意味があるのに対し、組み合わせでは、項目の順序に意味はありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p268">A combination is any set or subset of items, regardless of their internal order. Combinations are distinct from permutations, for which the internal order is significant. </span></span></para>
          <para><span data-ttu-id="a4672-677">総数 = n、抜き取り数 = k とすると、組み合わせの総数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-677">The number of combinations is as follows, where number = n and number_chosen = k:</span></span> </para>
          <para><span data-ttu-id="a4672-678">図 1: の組み合わせの数</span><span class="sxs-lookup"><span data-stu-id="a4672-678">Figure 1: Number of combinations</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-679">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-679">Where:</span></span></para>
          <para><span data-ttu-id="a4672-680">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-680">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Combina">
      <MemberSignature Language="C#" Value="public double Combina (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combina([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combina(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combina (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combina(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-681">項目の合計数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-681">The total number of items.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-682">組み合わせる 1 組に含まれる項目の数 (抜き取り数) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-682">The number of items in each combination.</span></span></param>
        <summary><span data-ttu-id="a4672-683">すべての項目から指定された個数を選択するときの組み合わせ (反復あり) の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-683">Returns the number of combinations with repetitions for a given number of items.</span></span></summary>
        <returns><span data-ttu-id="a4672-684">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-684">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex">
      <MemberSignature Language="C#" Value="public string Complex (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Complex([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Complex (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-685">複素数の実数係数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-685">The real coefficient of the complex number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-686">複素数の虚数係数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-686">The imaginary coefficient of the complex number.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p269">複素数の虚数部分の単位として、文字 "i" または "j" を指定します。虚数単位を省略すると、"i" を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p269">The suffix for the imaginary component of the complex number. If omitted, suffix is assumed to be "i".</span></span></param>
        <summary><span data-ttu-id="a4672-689">実数係数および虚数係数を "x+yi" または "x+yj" の形式の複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-689">Converts real and imaginary coefficients into a complex number of the form x + yi or x + yj.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p270">複素数を処理するための関数では、虚数単位として "i" または "j" のいずれかを使用できますが、大文字の "I" と "J" を使用すると、エラーになります。複数の引数を指定する場合は、虚数単位を統一する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p270">All complex number functions accept "i" and "j" for suffix, but neither "I" nor "J". Using uppercase generates an error. All functions that accept two or more complex numbers require that all suffixes match.</span></span></para>
          <para><span data-ttu-id="a4672-693">場合<paramref name="Arg1" />は、数値以外で、<b>複雑な</b>エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-693">If <paramref name="Arg1" /> is nonnumeric, <b>Complex</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-694">場合<paramref name="Arg2" />は、数値以外で、<b>複雑な</b>エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-694">If <paramref name="Arg2" /> is nonnumeric, <b>Complex</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-695">場合<paramref name="Arg3" />は、"i"または"j"では、<b>複雑な</b>エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-695">If <paramref name="Arg3" /> is neither "i" nor "j", <b>Complex</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public double Confidence (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p273">信頼度を計算するために使用する有意水準 (α) を指定します。信頼度は 100 \* (1- α)% で計算されます。つまり、α = 0.05 であるとき、信頼度は 95% になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p273">The significance level used to compute the confidence level. The confidence level equals 100\*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-698">データ範囲に対する母集団の標準偏差を指定します。これは、既知であると仮定されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-698">The population standard deviation for the data range and is assumed to be known.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-699">標本数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-699">The sample size.</span></span></param>
        <summary><span data-ttu-id="a4672-700">母集団の平均に対する信頼区間を求めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-700">Returns a value that you can use to construct a confidence interval for a population mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-701">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-701">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-702">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-702">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-703">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-703">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-704">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-704">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-705">信頼区間とは、値の範囲です。</span><span class="sxs-lookup"><span data-stu-id="a4672-705">The confidence interval is a range of values.</span></span> <span data-ttu-id="a4672-706">標本平均が、x は、この範囲の中心に、範囲は x ±<b>自信を持って</b>います。</span><span class="sxs-lookup"><span data-stu-id="a4672-706">Your sample mean, x, is at the center of this range and the range is x ± <b>Confidence</b>.</span></span> <span data-ttu-id="a4672-707">などの場合は、メールで注文された商品の配達所要時間の標本平均を x には、x ±<b>自信を持って</b>は母集団の平均値の範囲です。</span><span class="sxs-lookup"><span data-stu-id="a4672-707">For example, if x is the sample mean of delivery times for products ordered through the mail, x ± <b>Confidence</b> is a range of population means.</span></span> <span data-ttu-id="a4672-708">母集団平均 μ 0 で、この範囲にある場合、x よりも μ 0 から離れた標本平均の確率は、α より大きい母集団平均 μ 0 のこの範囲にある場合、x よりも μ 0 から離れた標本平均の確率ではなく、α より小さくは。</span><span class="sxs-lookup"><span data-stu-id="a4672-708">For any population mean, μ0, in this range, the probability of obtaining a sample mean further from μ0 than x is greater than alpha; for any population mean, μ0, not in this range, the probability of obtaining a sample mean further from μ0 than x is less than alpha.</span></span> <span data-ttu-id="a4672-709">、つまりを使用して x、標準偏差、およびサイズの母集団の平均が μ 0 であるという仮説の有意水準 α における両側検定を行います。</span><span class="sxs-lookup"><span data-stu-id="a4672-709">In other words, assume that we use x, standard_dev, and size to construct a two-tailed test at significance level alpha of the hypothesis that the population mean is μ0.</span></span> <span data-ttu-id="a4672-710">私たちは仮説を却下せず μ 0 が信頼区間内には、μ 0 が信頼区間内にない場合はこの仮説を却下します。</span><span class="sxs-lookup"><span data-stu-id="a4672-710">Then we will not reject that hypothesis if μ0 is in the confidence interval and will reject that hypothesis if μ0 is not in the confidence interval.</span></span> <span data-ttu-id="a4672-711">信頼区間は確率 1-アルファ、次のパッケージが、配達所要時間が信頼区間内になることがあることを推論することできません。</span><span class="sxs-lookup"><span data-stu-id="a4672-711">The confidence interval does not allow us to infer that there is probability 1 – alpha that our next package will take a delivery time that is in the confidence interval.</span></span> </para>
          <para><span data-ttu-id="a4672-712"><b>いずれかの引数が数値以外の場合は、エラーになります。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-712">If any argument is nonnumeric, <b>Confidence</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-713">場合は、α ≤ 0 であるか、またはアルファ受領 1、<b>信頼</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-713">If alpha ≤ 0 or alpha ≥ 1, <b>Confidence</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-714">場合は標準偏差 ≤ 0、<b>信頼</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-714">If standard_dev ≤ 0, <b>Confidence</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p279">標本数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p279">If size is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-716">Size &lt; 1、<b>エラーになります</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-716">If size &lt; 1, <b>Confidence</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-717">Α = 0.05 と仮定した場合通常の標準の下の領域を計算する必要があります (1 - α) % つまり 95% の曲線です。</span><span class="sxs-lookup"><span data-stu-id="a4672-717">If we assume alpha equals 0.05, we need to calculate the area under the standard normal curve that equals (1 - alpha), or 95 percent.</span></span> <span data-ttu-id="a4672-718">この値は ± 1.96 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-718">This value is ± 1.96.</span></span> <span data-ttu-id="a4672-719">信頼区間は、そのためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-719">The confidence interval is therefore:</span></span> </para>
          <para><span data-ttu-id="a4672-720">図 1: 信頼区間</span><span class="sxs-lookup"><span data-stu-id="a4672-720">Figure 1: Confidence interval</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_Norm">
      <MemberSignature Language="C#" Value="public double Confidence_Norm (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_Norm([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_Norm (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_Norm(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p282">信頼度を計算するために使用する有意水準 (α) を指定します。信頼度は 100 \* (1- α)% で計算されます。つまり、α = 0.05 であるとき、信頼度は 95% になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p282">The significance level used to compute the confidence level. The confidence level equals 100\*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-723">データ範囲に対する母集団の標準偏差を指定します。これは、既知であると仮定されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-723">The population standard deviation for the data range and is assumed to be known.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-724">標本数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-724">The sample size.</span></span></param>
        <summary><span data-ttu-id="a4672-725">母集団の平均に対する信頼区間を求めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-725">Returns a value that you can use to construct a confidence interval for a population mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-726">信頼区間とは、値の範囲です。</span><span class="sxs-lookup"><span data-stu-id="a4672-726">The confidence interval is a range of values.</span></span> <span data-ttu-id="a4672-727">標本平均 x は、この範囲の中心に、範囲は x ± <b>Confidence_Norm</b>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-727">Your sample mean, x, is at the center of this range and the range is x ± <b>Confidence_Norm</b>.</span></span> <span data-ttu-id="a4672-728">などの場合は、メールで注文された商品の配達所要時間の標本平均を x には、x ± <b>Confidence_Norm</b>は母集団の平均値の範囲です。</span><span class="sxs-lookup"><span data-stu-id="a4672-728">For example, if x is the sample mean of delivery times for products ordered through the mail, x ± <b>Confidence_Norm</b> is a range of population means.</span></span> <span data-ttu-id="a4672-729">母集団平均 μ 0 で、この範囲にある場合、x よりも μ 0 から離れた標本平均の確率は、α より大きい母集団平均 μ 0 のこの範囲にある場合、x よりも μ 0 から離れた標本平均の確率ではなく、α より小さくは。</span><span class="sxs-lookup"><span data-stu-id="a4672-729">For any population mean, μ0, in this range, the probability of obtaining a sample mean further from μ0 than x is greater than alpha; for any population mean, μ0, not in this range, the probability of obtaining a sample mean further from μ0 than x is less than alpha.</span></span> <span data-ttu-id="a4672-730">X、標準偏差、つまり、仮定して、サイズを使用して、母集団の平均が μ 0 であるという仮説の有意水準 α における両側検定を行います。</span><span class="sxs-lookup"><span data-stu-id="a4672-730">In other words, assume that x, standard_dev, and size is used to construct a two-tailed test at significance level alpha of the hypothesis that the population mean is μ0.</span></span> <span data-ttu-id="a4672-731">私たちは仮説を却下せず μ 0 が信頼区間内には、μ 0 が信頼区間内にない場合はこの仮説を却下します。</span><span class="sxs-lookup"><span data-stu-id="a4672-731">Then we will not reject that hypothesis if μ0 is in the confidence interval and will reject that hypothesis if μ0 is not in the confidence interval.</span></span> <span data-ttu-id="a4672-732">信頼区間では、推論の確率 1-アルファの次のパッケージが、配達所要時間が信頼区間内になることがあることは許可されていません。</span><span class="sxs-lookup"><span data-stu-id="a4672-732">The confidence interval does not allow inference that there is probability 1 – alpha that the next package will take a delivery time that is in the confidence interval.</span></span></para>
          <para><span data-ttu-id="a4672-733">いずれかの引数が数値以外の場合は、 <b>Confidence_Norm</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-733">If any argument is nonnumeric, <b>Confidence_Norm</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-734">場合は、α ≤ 0 であるか、またはアルファ受領 1、 <b>Confidence_Norm</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-734">If alpha ≤ 0 or alpha ≥ 1, <b>Confidence_Norm</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-735">場合は標準偏差 ≤ 0、 <b>Confidence_Norm</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-735">If standard_dev ≤ 0, <b>Confidence_Norm</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p287">標本数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p287">If size is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-737">Size &lt; 1, <b>Confidence_Norm</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-737">If size &lt; 1, <b>Confidence_Norm</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-738">アルファが 0.05 が通常の標準の下の領域を計算することが前提としている場合 (1 - α) % つまり 95% のカーブです。</span><span class="sxs-lookup"><span data-stu-id="a4672-738">If it is assumed that alpha equals 0.05, calculate the area under the standard normal curve that equals (1 - alpha), or 95 percent.</span></span> <span data-ttu-id="a4672-739">この値は ± 1.96 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-739">This value is ± 1.96.</span></span> <span data-ttu-id="a4672-740">信頼区間は、そのためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-740">The confidence interval is therefore:</span></span> </para>
          <para><span data-ttu-id="a4672-741">図 1: 信頼区間</span><span class="sxs-lookup"><span data-stu-id="a4672-741">Figure 1: Confidence interval</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_T">
      <MemberSignature Language="C#" Value="public double Confidence_T (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_T([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_T (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_T(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p290">α: 信頼度を計算するために使用する有意水準を指定します。信頼度は 100 \* (1 - α)% で計算されます。つまり、α = 0.05 であるとき、信頼度は 95% になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p290">Alpha - The significance level used to compute the confidence level. The confidence level equals 100\*(1 - alpha)%, or in other words, an alpha of 0.05 indicates a 95 percent confidence level.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-744">標準偏差: データ範囲に対する母集団の標準偏差を指定します。これは、既知であると仮定されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-744">Standard_dev - The population standard deviation for the data range and is assumed to be known.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-745">標本数: 標本数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-745">Size - The sample size.</span></span></param>
        <summary><span data-ttu-id="a4672-746">スチューデントの t 分布を使用して、母集団の平均に対する信頼区間を求めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-746">Returns the confidence interval for a population mean, using a Student's t distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-747">いずれかの引数が数値以外の場合は、 <b>Confidence_T</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-747">If any argument is nonnumeric, <b>Confidence_T</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-748">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-748">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-749">場合は、α ≤ 0 であるか、またはアルファ受領 1、 <b>Confidence_T</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-749">If alpha ≤ 0 or alpha ≥ 1, <b>Confidence_T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-750">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-750">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-751">場合は標準偏差 ≤ 0、 <b>Confidence_T</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-751">If standard_dev ≤ 0, <b>Confidence_T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-752">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-752">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p294">標本数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p294">If size is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-754">標本数が 1 に等しい、 <b>Confidence_T</b> # の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-754">If size equals 1, <b>Confidence_T</b> returns #DIV/0!</span></span> <span data-ttu-id="a4672-755">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-755">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-756">標本数が 1 に等しい、 <b>Confidence_T</b> # の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-756">If size equals 1, <b>Confidence_T</b> returns #DIV/0!</span></span> <span data-ttu-id="a4672-757">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-757">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public double Convert (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Convert([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Convert(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (Arg1 As Object, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Convert(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16852)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-758">変換する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-758">The value in from_units to convert.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-759">数値の単位を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-759">The units for number.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-760">結果の単位です。</span><span class="sxs-lookup"><span data-stu-id="a4672-760">The units for the result.</span></span> <span data-ttu-id="a4672-761"><b>変換</b>の変換前単位と変換後単位以下の「解説」セクションに記載されて次のテキスト値 (引用符で囲まれた) を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="a4672-761"><b>Convert</b> accepts the following text values (in quotation marks) for from_unit and to_unit which are listed in the Remarks section below.</span></span></param>
        <summary><span data-ttu-id="a4672-762">数値を別の 1 つの測定システムに変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-762">Converts a number from one measurement system to another.</span></span> <span data-ttu-id="a4672-763">たとえば、<b>変換</b>は、キロメートルの距離のテーブルにマイルの距離のテーブルを変換できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-763">For example, <b>Convert</b> can translate a table of distances in miles to a table of distances in kilometers.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-764"><list type="table">
            <item>
              <term>グラム</term>
              <description>"g"</description> 
            </item>
            <item>
              <term>スラグ</term>
              <description>sg</description> 
            </item>
            <item>
              <term>ポンド (常衡)</term>の
              <description>「荷重」</description> 
            </item>
            <item> 
              <term>U (原子質量単位)</term>
              <description>"u"</description> 
            </item>
            <item>
              <term>オンス (常衡) の大容量</term>
              <description>「ozm」</description> 
            </item> 
          </list>
          <list type="table">
            <item>
              <term>メーター</term>
              <description>"m"</description>
            </item>
            <item>
              <term>法定マイル</term>
              <description>"mi"</description>
            </item>
            <item>
              <term>海里</term>
              <description>"Nmi"</description>
            </item>
            <item>
              <term>インチ</term>
              <description>「で」</description>
            </item>
            <item>
              <term>フィート</term>
              <description>"ft"</description>
            </item>
            <item>
              <term>庭</term>
              <description>「ヤード」</description>
            </item>
            <item>
              <term>Angstrom</term>
              <description>"ang"</description>
            </item>
            <item>
              <term>パイカ (1/72 インチ)</term>
              <description>「パイカ」</description> 
            </item> 
          </list>
          <list type="table">
            <item>
              <term>年</term>の
              <description>「年」</description>
            </item>
            <item>
              <term>日</term>
              <description>[日]</description>
            </item>
            <item>
              <term>1 時間</term>
              <description>"hr"</description>
            </item>
            <item>
              <term>分</term>
              <description>"mn"</description>
            </item>
            <item>
              <term>2 番目</term>の
              <description>「秒」</description> 
            </item> 
          </list>
          <list type="table"> 
            <item> 
              <term>Pascal 形式</term>
              <description>"Pa"(または"p")</description>
            </item>
            <item>
              <term>大気</term>
              <description>「atm」(at)</description>
            </item>
            <item>
              <term>mm 水銀柱の高さ</term>の
              <description>「mmHg」</description> 
            </item> 
          </list>
          <list type="table">
            <item>
              <term>ニュートン</term>
              <description>N</description>
            </item>
            <item>
              <term>単位はダイン</term>
              <description>"dyn"(または"dy")</description>
            </item>
            <item>
              <term>ポンドを強制的</term>に
              <description>「lbf」</description> 
            </item> 
          </list>
          <list type="table"> 
            <item> 
              <term>Joule</term>
              <description>J</description>
            </item>
            <item>
              <term>Erg</term>
              <description>"の e"</description>
            </item>
            <item>
              <term>Thermodynamic カロリー</term>
              <description>"c"</description>
            </item>
            <item>
              <term>IT のカロリー</term>
              <description>"cal"</description>
            </item>
            <item>
              <description>"eV"である
              <term>電子ボルト</term>(または"ev")</description> 
            </item>
            <item>
              <term>馬力時間</term>
              <description>"HPh"(または"hh")</description> 
            </item>
            <item> 
              <term>Watt-hour</term>
              <description>「修正」(または「修正」)</description> 
            </item>
            <item> 
              <term>Foot-pound</term>
              <description>「flb」</description> 
            </item>
            <item> 
              <term>BTU</term>
              <description>"BTU"(または"btu")</description> 
            </item> 
          </list>
          <list type="table">
            <item>
              <term>馬力</term>
              <description>"HP"(または"h")</description>
            </item>、
            <item>
              <term>ワット</term>
              <description>"の W"(または"w")</description> 
            </item> 
          </list>
          <list type="table">
            <item>
              <term>テスラ</term>
              <description>"T"</description>
            </item>
            <item>
              <description>"ga"</description>の
              <term>単位はガウス</term>
            </item>
          </list>
          <list type="table">
            <item>
            <item>
              <term>セ氏度記号</term>
              <description>「C」(または「cel」)</description>
            </item>
              <term>度華氏</term>
              <description>"F"(または"fah")</description>
            </item>
            <item>
              <term>ケルビン</term>
              <description>"K"(または"kel")</description> 
            </item> 
          </list>
          <list type="table"> 
            <item> 
              <term>Teaspoon</term>
              <description>"tsp"</description>
            </item>
            <item>
              <term>さじ</term>
              <description>"tbs"</description>
            </item>
            <item>
              <term>液量オンス</term>
              <description>"オズの魔法使い」「</description>
            </item>
            <item>
              <term>カップ</term>
              <description>」カップ」</description> 
            </item> 
            <item> 
              <term>パイント (米)</term>
              <description>"pt"(または"us_pt")</description>
            </item>
            <item>
              <term>パイント</term>
              <description>"uk_pt"</description>
            </item>
            <item>
              <term>クォート</term>
              <description>"qt"</description>
            </item>
            <item>
              <term>ガロン</term>
              <description>"gal"</description>
            </item>
            <item>
              <term>リットル</term> 
              <description>"l"(または"lt")</description> 
            </item> 
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-764"><list type="table">
            <item>
              <term>Gram</term>
              <description>"g"</description>
            </item>
            <item>
              <term>Slug</term>
              <description>"sg"</description>
            </item>
            <item>
              <term>Pound mass (avoirdupois)</term>
              <description>"lbm"</description>
            </item>
            <item>
              <term>U (atomic mass unit)</term>
              <description>"u"</description>
            </item>
            <item>
              <term>Ounce mass (avoirdupois)</term>
              <description>"ozm"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Meter</term>
              <description>"m"</description>
            </item>
            <item>
              <term>Statute mile</term>
              <description>"mi"</description>
            </item>
            <item>
              <term>Nautical mile</term>
              <description>"Nmi"</description>
            </item>
            <item>
              <term>Inch</term>
              <description>"in"</description>
            </item>
            <item>
              <term>Foot</term>
              <description>"ft"</description>
            </item>
            <item>
              <term>Yard</term>
              <description>"yd"</description>
            </item>
            <item>
              <term>Angstrom</term>
              <description>"ang"</description>
            </item>
            <item>
              <term>Pica (1/72 in.)</term>
              <description>"Pica"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Year</term>
              <description>"yr"</description>
            </item>
            <item>
              <term>Day</term>
              <description>"day"</description>
            </item>
            <item>
              <term>Hour</term>
              <description>"hr"</description>
            </item>
            <item>
              <term>Minute</term>
              <description>"mn"</description>
            </item>
            <item>
              <term>Second</term>
              <description>"sec"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Pascal</term>
              <description>"Pa" (or "p")</description>
            </item>
            <item>
              <term>Atmosphere</term>
              <description>"atm" (or "at")</description>
            </item>
            <item>
              <term>mm of Mercury</term>
              <description>"mmHg"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Newton</term>
              <description>"N"</description>
            </item>
            <item>
              <term>Dyne</term>
              <description>"dyn" (or "dy")</description>
            </item>
            <item>
              <term>Pound force</term>
              <description>"lbf"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Joule</term>
              <description>"J"</description>
            </item>
            <item>
              <term>Erg</term>
              <description>"e"</description>
            </item>
            <item>
              <term>Thermodynamic calorie</term>
              <description>"c"</description>
            </item>
            <item>
              <term>IT calorie</term>
              <description>"cal"</description>
            </item>
            <item>
              <term>Electron volt</term>
              <description>"eV" (or "ev")</description>
            </item>
            <item>
              <term>Horsepower-hour</term>
              <description>"HPh" (or "hh")</description>
            </item>
            <item>
              <term>Watt-hour</term>
              <description>"Wh" (or "wh")</description>
            </item>
            <item>
              <term>Foot-pound</term>
              <description>"flb"</description>
            </item>
            <item>
              <term>BTU</term>
              <description>"BTU" (or "btu")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Horsepower</term>
              <description>"HP" (or "h")</description>
            </item>
            <item>
              <term>Watt</term>
              <description>"W" (or "w")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Tesla</term>
              <description>"T"</description>
            </item>
            <item>
              <term>Gauss</term>
              <description>"ga"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Degree Celsius</term>
              <description>"C" (or "cel")</description>
            </item>
            <item>
              <term>Degree Fahrenheit</term>
              <description>"F" (or "fah")</description>
            </item>
            <item>
              <term>Kelvin</term>
              <description>"K" (or "kel")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Teaspoon</term>
              <description>"tsp"</description>
            </item>
            <item>
              <term>Tablespoon</term>
              <description>"tbs"</description>
            </item>
            <item>
              <term>Fluid ounce</term>
              <description>"oz"</description>
            </item>
            <item>
              <term>Cup</term>
              <description>"cup"</description>
            </item>
            <item>
              <term>U.S. pint</term>
              <description>"pt" (or "us_pt")</description>
            </item>
            <item>
              <term>U.K. pint</term>
              <description>"uk_pt"</description>
            </item>
            <item>
              <term>Quart</term>
              <description>"qt"</description>
            </item>
            <item>
              <term>Gallon</term>
              <description>"gal"</description>
            </item>
            <item>
              <term>Liter</term>
              <description>"l" (or "lt")</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-765">次に示す 10 のべき乗に対応する略語は、変換前単位または変換後単位に前置することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-765">The following abbreviated unit prefixes can be prepended to any metric from_unit or to_unit.</span></span></para><span data-ttu-id="a4672-766">
          <list type="table">
            <item>
              <term>エクサ</term>
              <description>1E + 18</description>
              <description>"E"</description> 
            </item>
            <item>
              <term>ペタ</term>
              <description>1E + 15</description>
              <description>P</description> 
            </item>
            <item>
              <term>テラ</term>
              <description>1E + 12</description>
              <description>"T"</description> 
            </item>
            <item>
              <term>ギガ</term>
              <description>1E + 09</description>
              <description>"G"</description> 
            </item>
            <item>
              <term>メガ</term>
              <description>1E + 06</description>
              <description>"M"</description> 
            </item>
            <item>
              <term>キロ</term>
              <description>1E + 03</description>
              <description>"k"</description> 
            </item>
            <item> 
              <term>hecto</term>
              <description>1E + 02</description>
              <description>"h"</description> 
            </item>
            <item> 
              <term>dekao</term>
              <description>1E + 01</description>
              <description>"e"</description> 
            </item>
            <item> 
              <term>deci</term>
              <description>1E 01</description>
              <description>"d"</description> 
            </item>
            <item>
              <term>センチ</term>
              <description>1E 02</description>
              <description>"c"</description> 
            </item>
            <item>
              <term>ミリ秒</term>
              <description>1E 03</description>
              <description>"m"</description> 
            </item>
            <item>
              <term>マイクロ</term>
              <description>1E 06</description>
              <description>"u"</description> 
            </item>
            <item> 
              <term>nano</term>
              <description>1E-09</description>
              <description>"n"</description> 
            </item>
            <item> 
              <term>'pico'</term>
              <description>1E 12</description>
              <description>p</description> 
            </item>
            <item> 
              <term>femto</term>
              <description>1E 15</description>
              <description>"f"</description> 
            </item>
            <item> 
              <term>atto</term>
              <description>1E-18</description>
              <description>a</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-766">
          <list type="table">
            <item>
              <term>exa</term>
              <description>1E+18</description>
              <description>"E"</description>
            </item>
            <item>
              <term>peta</term>
              <description>1E+15</description>
              <description>"P"</description>
            </item>
            <item>
              <term>tera</term>
              <description>1E+12</description>
              <description>"T"</description>
            </item>
            <item>
              <term>giga</term>
              <description>1E+09</description>
              <description>"G"</description>
            </item>
            <item>
              <term>mega</term>
              <description>1E+06</description>
              <description>"M"</description>
            </item>
            <item>
              <term>kilo</term>
              <description>1E+03</description>
              <description>"k"</description>
            </item>
            <item>
              <term>hecto</term>
              <description>1E+02</description>
              <description>"h"</description>
            </item>
            <item>
              <term>dekao</term>
              <description>1E+01</description>
              <description>"e"</description>
            </item>
            <item>
              <term>deci</term>
              <description>1E-01</description>
              <description>"d"</description>
            </item>
            <item>
              <term>centi</term>
              <description>1E-02</description>
              <description>"c"</description>
            </item>
            <item>
              <term>milli</term>
              <description>1E-03</description>
              <description>"m"</description>
            </item>
            <item>
              <term>micro</term>
              <description>1E-06</description>
              <description>"u"</description>
            </item>
            <item>
              <term>nano</term>
              <description>1E-09</description>
              <description>"n"</description>
            </item>
            <item>
              <term>pico</term>
              <description>1E-12</description>
              <description>"p"</description>
            </item>
            <item>
              <term>femto</term>
              <description>1E-15</description>
              <description>"f"</description>
            </item>
            <item>
              <term>atto</term>
              <description>1E-18</description>
              <description>"a"</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-767">入力データ型が正しくない場合は、<b>変換</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-767">If the input data types are incorrect, <b>Convert</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-768">ユニットが存在しない場合は、<b>変換</b>とエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-768">If the unit does not exist, <b>Convert</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-769">ユニットが、省略形の単位のプレフィックスをサポートしていない場合は<b>変換</b>エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-769">If the unit does not support an abbreviated unit prefix, <b>Convert</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-770">単位は、別のグループには、<b>変換</b>はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-770">If the units are in different groups, <b>Convert</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-771">単位名と略語の大文字と小文字は区別されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-771">Unit names and prefixes are case-sensitive.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Correl">
      <MemberSignature Language="C#" Value="public double Correl (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Correl([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Correl(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correl (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correl(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-772">データが入力されたセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-772">A cell range of values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-773">もう一方のデータが入力されたセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-773">A second cell range of values.</span></span></param>
        <summary><span data-ttu-id="a4672-774">相関係数を返します、<paramref name="Arg1" />と<paramref name="Arg2" />の範囲のセルです。</span><span class="sxs-lookup"><span data-stu-id="a4672-774">Returns the correlation coefficient of the <paramref name="Arg1" /> and <paramref name="Arg2" /> cell ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p303">相関係数は、2 つの特性の関係を判断するときに使用します。たとえば、各地域の平均気温とエアコンの普及率の相関関数を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p303">Use the correlation coefficient to determine the relationship between two properties. For example, you can examine the relationship between a location's average temperature and the use of air conditioners.</span></span></para>
          <para><span data-ttu-id="a4672-p304">引数として指定した配列またはセル範囲に文字列、論理値、または空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p304">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-778">場合<paramref name="Arg1" />と<paramref name="Arg2" />のデータ ポイントの個数が異なる、<b>双方のデータ</b>にエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-778">If <paramref name="Arg1" /> and <paramref name="Arg2" /> have a different number of data points, <b>Correl</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-779">いずれか<paramref name="Arg1" />または<paramref name="Arg2" />が空の場合、<b>双方のデータ</b>がエラーを生成する場合は、それらの値は、s (標準偏差) が 0 に等しい、または。</span><span class="sxs-lookup"><span data-stu-id="a4672-779">If either <paramref name="Arg1" /> or <paramref name="Arg2" /> is empty, or if s (the standard deviation) of their values equals zero, <b>Correl</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-780">相関関数は次の数式で計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-780">The equation for the correlation coefficient is:</span></span></para>
          <para><span data-ttu-id="a4672-781">相関係数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-781">Figure 1: Equation for the correlation coefficient</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-782">ここで、x は標本平均 Average(Arg1)、y は標本平均 Average(Arg2) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-782">where x and y are the sample means Average(Arg1) and Average(Arg2).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public double Cosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-783">双曲線余弦を求める実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-783">Any real number for which you want to find the hyperbolic cosine.</span></span></param>
        <summary><span data-ttu-id="a4672-784">数値の双曲線余弦 (ハイパーボリック コサイン) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-784">Returns the hyperbolic cosine of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-785">双曲線余弦は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-785">The formula for the hyperbolic cosine is:</span></span> </para>
          <para><span data-ttu-id="a4672-786">双曲線余弦の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-786">Figure 1: Formula for the hyperbolic cosine</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public double Cot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-787">コタンジェントを求める角度をラジアンで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-787">The angle in radians for which you want the cotangent.</span></span></param>
        <summary><span data-ttu-id="a4672-788">角度のコタンジェントを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-788">Returns the cotangent of an angle.</span></span></summary>
        <returns><span data-ttu-id="a4672-789">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-789">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coth">
      <MemberSignature Language="C#" Value="public double Coth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Coth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Coth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Coth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Coth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-790">双曲線余接を求める角度をラジアンを単位として指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-790">The angle in radians for which you want the hyperbolic cotangent.</span></span></param>
        <summary><span data-ttu-id="a4672-791">数値の双曲線余接を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-791">Returns the hyperbolic cotangent of a number.</span></span></summary>
        <returns><span data-ttu-id="a4672-792">DOUBLE</span><span class="sxs-lookup"><span data-stu-id="a4672-792">DOUBLE</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public double Count (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Count([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Count (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-793">任意のデータ型を使用し、任意の値、名前付きのセル範囲、配列、またはセル参照を指定します。引数は 1 ～ 30 個まで指定できます。ただし、計算の対象となるのは数値だけです。</span><span class="sxs-lookup"><span data-stu-id="a4672-793">1 to 30 arguments that can contain or refer to a variety of different types of data, but only numbers are counted.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-794">引数リストの各項目に含まれる数値の個数の合計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-794">Counts the number of cells that contain numbers and counts numbers within the list of arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-795">範囲または値の配列に含まれる数値フィールド内のエントリの数を取得するのにには、 <b>Count</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-795">Use <b>Count</b> to get the number of entries in a number field that is in a range or array of numbers.</span></span> </para>
          <para><span data-ttu-id="a4672-p308">Count メソッドでは、数値、日付、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p308">Arguments that are numbers, dates, or text representation of numbers are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p309">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p309">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p310">エラー値、数値に変換できない文字列は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p310">Arguments that are error values or text that cannot be translated into numbers are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p311">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p311">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-801">論理値、文字列、またはエラー値をカウントする場合を使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-801">If you want to count logical values, text, or error values, use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountA">
      <MemberSignature Language="C#" Value="public double CountA (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountA([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountA (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-802">値、あるいは値を含む名前、配列、またはセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-802">1 to 30 arguments representing the values you want to count.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-803">引数リストの各項目に含まれるデータの個数の合計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-803">Counts the number of cells that are not empty and the values within the list of arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-804">範囲または配列内のデータを含むセルの数をカウントするのにには、 <b>CountA</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-804">Use <b>CountA</b> to count the number of cells that contain data in a range or array.</span></span></para>
          <para><span data-ttu-id="a4672-p312">CountA メソッドでは、エラー値や空白文字列 ("") を含め、すべてのデータ型の値が計算の対象となります。ただし、空白セルだけは計算の対象となりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p312">A value is any type of information, including error values and empty text (""). A value does not include empty cells. </span></span></para>
          <para><span data-ttu-id="a4672-p313">引数に配列またはセル範囲の参照を指定した場合、そこに含まれる数値だけが計算の対象となります。配列またはセル範囲の参照に含まれる空白セルと文字列は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p313">If an argument is an array or reference, only values in that array or reference are used. Empty cells and text values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-809">論理値、文字列、またはエラー値をカウントする必要はありません、する場合を使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-809">If you do not need to count logical values, text, or error values, use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountBlank">
      <MemberSignature Language="C#" Value="public double CountBlank (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountBlank([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountBlank (Arg1 As Range) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountBlank(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-810">空白セルの個数を求めるセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-810">The range from which you want to count the blank cells.</span></span></param>
        <summary><span data-ttu-id="a4672-811">指定された範囲に含まれる空白セルの個数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-811">Counts empty cells in a specified range of cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p314">空白文字列 ("") を返す数式が入力されているセルも計算の対象となります。ただし、数値の 0 を含むセルは計算の対象となりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p314">Cells with formulas that return "" (empty text) are also counted. Cells with zero values are not counted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIf">
      <MemberSignature Language="C#" Value="public double CountIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIf (Arg1 As Range, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountIf(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-814">セルの個数を求めるセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-814">The range of cells from which you want to count cells.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-815">数値、式、セル参照、または計算の対象となるセルを定義するテキストの形式の条件です。</span><span class="sxs-lookup"><span data-stu-id="a4672-815">The criteria in the form of a number, expression, cell reference, or text that defines which cells will be counted.</span></span> <span data-ttu-id="a4672-816">などの基準として表せる 32、32、"&gt;32」、「りんご」、または B4。</span><span class="sxs-lookup"><span data-stu-id="a4672-816">For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</span></span></param>
        <summary><span data-ttu-id="a4672-817">指定された範囲に含まれるセルのうち、検索条件に一致するセルの個数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-817">Counts the number of cells within a range that meet the given criteria.</span></span></summary>
        <returns><span data-ttu-id="a4672-818">返します。 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-818">Returns <see cref="T:System.Double" />.</span></span></returns>
        <remarks><para><span data-ttu-id="a4672-p316">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p316">You can use the wildcard characters, question mark (?) and asterisk (\*), for the criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIfs">
      <MemberSignature Language="C#" Value="public double CountIfs (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIfs(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIfs (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-822">対応する条件による評価の対象となる範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-822">One or more ranges in which to evaluate the associated criteria.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-823">1 つまたは複数の条件の数値、式、セル参照、またはテキスト形式で計算の対象となるセルを定義します。</span><span class="sxs-lookup"><span data-stu-id="a4672-823">One or more criteria in the form of a number, expression, cell reference, or text that define which cells will be counted.</span></span> <span data-ttu-id="a4672-824">などの基準として表せる 32、32、"&gt;32」、「りんご」、または B4。</span><span class="sxs-lookup"><span data-stu-id="a4672-824">For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</span></span></param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-825">指定された範囲に含まれるセルのうち、複数の検索条件に一致するセルの個数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-825">Counts the number of cells within a range that meet multiple criteria.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p318">セルに対して指定されたすべての検索条件が TRUE の場合にのみ、範囲内の各セルの個数を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p318">Each cell in a range is counted only if all of the corresponding criteria specified are true for that cell. </span></span></para>
          <para><span data-ttu-id="a4672-827"><b>引数内のセルが空のセルの場合と見なされます 0 を指定します。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-827">If a cell in any argument is an empty cell, <b>CountIfs</b> treats it as a 0 value.</span></span> </para>
          <para><span data-ttu-id="a4672-p320">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p320">You can use the wildcard characters, question mark (?) and asterisk (\*), in criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDayBs">
      <MemberSignature Language="C#" Value="public double CoupDayBs (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDayBs([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDayBs(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDayBs (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16836)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p321">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p321">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p322">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p322">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p323">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p323">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-837">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-837">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-838">利払期間の第 1 日目から受渡日までの日数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-838">Returns the number of days from the beginning of the coupon period to the settlement date.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-839">次の表には、値のリストが含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-839">The following table contains the list of values for <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-840">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-840">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p324">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p324">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p325">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 30 年後に当たる 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p325">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p326">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p326">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-849">受領または成熟度が有効な日付でない場合、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-849">If settlement or maturity is not a valid date, <b>CoupDayBs</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-850">頻度が 1、2、または 4 以外の数値の場合は、<b>指定すると</b>エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-850">If frequency is any number other than 1, 2, or 4, <b>CoupDayBs</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-851">場合単位&lt;0 または基準&gt;4、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-851">If basis &lt; 0 or if basis &gt; 4, <b>CoupDayBs</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-852">場合受領成熟度を<b>指定すると</b>エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-852">If settlement ≥ maturity, <b>CoupDayBs</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDays">
      <MemberSignature Language="C#" Value="public double CoupDays (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDays([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDays(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDays (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16837)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p330">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p330">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p331">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p331">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p332">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p332">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-859">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-859">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-860">受渡日を含む利払期間内の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-860">Returns the number of days in the coupon period that contains the settlement date.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-861">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-861">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-862">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-862">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-863">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-863">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-864">次の表で使用する値が含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-864">The following table contains the values used in <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-865">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-865">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p334">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p334">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p335">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 30 年後に当たる 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p335">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, 30 years after the January 1, 2008 issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p336">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p336">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-874">受領または成熟度が有効な日付でない場合、<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-874">If settlement or maturity is not a valid date, <b>CoupDays</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-875">頻度が 1、2、または 4 以外の数値の場合は、<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-875">If frequency is any number other than 1, 2, or 4, <b>CoupDays</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-876">場合単位&lt;0 または基準&gt;4、<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-876">If basis &lt; 0 or if basis &gt; 4, <b>CoupDays</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-877">場合は受領成熟度を<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-877">If settlement ≥ maturity, <b>CoupDays</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDaysNc">
      <MemberSignature Language="C#" Value="public double CoupDaysNc (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDaysNc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDaysNc(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDaysNc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16838)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p340">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p340">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p341">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p341">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p342">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p342">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-884">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-884">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-885">受渡日から次の利払日までの日数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-885">Returns the number of days from the settlement date to the next coupon date.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-886">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-886">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-887">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-887">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-888">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-888">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-889">次の表で使用する値が含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-889">The following table contains the values used in <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-890">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-890">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p344">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p344">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p345">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p345">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p346">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p346">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-899">受領または成熟度が有効な日付でない場合、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-899">If settlement or maturity is not a valid date, <b>CoupDaysNc</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-900">頻度が 1、2、または 4 以外の数値の場合は、<b>指定すると</b>エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-900">If frequency is any number other than 1, 2, or 4, <b>CoupDaysNc</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-901">場合単位&lt;0 または基準&gt;4、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-901">If basis &lt; 0 or if basis &gt; 4, <b>CoupDaysNc</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-902">場合受領成熟度を<b>指定すると</b>エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-902">If settlement ≥ maturity, <b>CoupDaysNc</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNcd">
      <MemberSignature Language="C#" Value="public double CoupNcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16839)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p350">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p350">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p351">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p351">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p352">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p352">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-909">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-909">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-910">受渡日後の次の利払日を数値で返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-910">Returns a number that represents the next coupon date after the settlement date.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-911">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-911">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-912">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-912">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-913">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-913">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-914">次の表で使用する値が含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-914">The following table contains the values used in <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-915">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-915">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p354">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p354">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p355">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p355">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p356">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p356">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-924">受領または成熟度が有効な日付でない場合、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-924">If settlement or maturity is not a valid date, <b>CoupNcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-925">頻度が 1、2、または 4 以外の数値の場合は、<b>指定すると</b>エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-925">If frequency is any number other than 1, 2, or 4, <b>CoupNcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-926">場合単位&lt;0 または基準&gt;4、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-926">If basis &lt; 0 or if basis &gt; 4, <b>CoupNcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-927">場合受領成熟度を<b>指定すると</b>エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-927">If settlement ≥ maturity, <b>CoupNcd</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNum">
      <MemberSignature Language="C#" Value="public double CoupNum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16840)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p360">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p360">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p361">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p361">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p362">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p362">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-934">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-934">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-935">受渡日と満期日の間に利息が支払われる回数を返します。端数が出た場合は切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-935">Returns the number of coupons payable between the settlement date and maturity date, rounded up to the nearest whole coupon.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-936">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-936">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-937">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-937">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-938">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-938">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-939">次の表で使用する値が含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-939">The following table contains the values used in <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-940">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-940">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p364">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p364">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p365">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p365">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p366">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p366">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-949">受領または成熟度が有効な日付でない場合、<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-949">If settlement or maturity is not a valid date, <b>CoupNum</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-950">頻度が 1、2、または 4 以外の数値の場合は、<b>ある</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-950">If frequency is any number other than 1, 2, or 4, <b>CoupNum</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-951">場合単位&lt;0 または基準&gt;4、<b>指定</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-951">If basis &lt; 0 or if basis &gt; 4, <b>CoupNum</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-952">場合は受領成熟度、<b>ある</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-952">If settlement ≥ maturity, <b>CoupNum</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupPcd">
      <MemberSignature Language="C#" Value="public double CoupPcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupPcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupPcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupPcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16841)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p370">証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p370">The security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p371">証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p371">The security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p372">年間の利息支払回数を指定します。年 1 回の場合は 1、年 2 回の場合は 2、四半期ごとの場合は 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p372">The number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-959">計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-959">The type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-960">受渡日の直前の利払日を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-960">Returns the previous coupon date before the settlement date.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-961">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-961">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-962">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-962">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-963">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-963">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-964">次の表で使用する値が含まれている<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-964">The following table contains the values used in <paramref name="Arg4" />.</span></span></para><span data-ttu-id="a4672-965">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-965">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p374">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p374">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p375">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p375">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p376">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p376">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-974">受領または成熟度が有効な日付でない場合、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-974">If settlement or maturity is not a valid date, <b>CoupPcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-975">頻度が 1、2、または 4 以外の数値の場合は、<b>指定すると</b>エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-975">If frequency is any number other than 1, 2, or 4, <b>CoupPcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-976">場合単位&lt;0 または基準&gt;4、<b>指定すると</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-976">If basis &lt; 0 or if basis &gt; 4, <b>CoupPcd</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-977">場合受領成熟度を<b>指定すると</b>エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-977">If settlement ≥ maturity, <b>CoupPcd</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covar">
      <MemberSignature Language="C#" Value="public double Covar (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covar([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covar(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covar (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covar(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-978">整数のデータが入力されている一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-978">The first cell range of integers.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-979">整数のデータが入力されているもう一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-979">The second cell range of integers.</span></span></param>
        <summary><span data-ttu-id="a4672-980">共分散を返します。共分散とは、2 組の対応するデータ間での標準偏差の積の平均値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-980">Returns covariance, the average of the products of deviations for each data point pair.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-981">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-981">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-982">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-982">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-983">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-983">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-984">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-984">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-p381">共分散を利用することによって、2 組のデータの相関関係を分析することができます。たとえば、ある社会集団を対象に、収入と最終学歴の相関関係を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p381">Use covariance to determine the relationship between two data sets. For example, you can examine whether greater income accompanies greater levels of education. </span></span></para>
          <para><span data-ttu-id="a4672-p382">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p382">The arguments must either be numbers or be names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p383">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p383">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-989">場合<paramref name="Arg1" />と<paramref name="Arg2" />番号が異なる<b>covar 関数</b>、データ ポイントのエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-989">If <paramref name="Arg1" /> and <paramref name="Arg2" /> have different numbers of data points, <b>Covar</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-990">いずれか<paramref name="Arg1" />または<paramref name="Arg2" />が空の場合、<b>入力されて</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-990">If either <paramref name="Arg1" /> or <paramref name="Arg2" /> is empty, <b>Covar</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-991">共分散は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-991">The covariance is:</span></span> </para>
          <para><span data-ttu-id="a4672-992">共分散分析の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-992">Figure 1: Equation for covariance</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-993">ここで、x は標本平均 AVERAGE(配列 1)、y は標本平均 AVERAGE(配列 2)、n は標本数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-993">where x and y are the sample means AVERAGE(array1) and AVERAGE(array2), and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_P">
      <MemberSignature Language="C#" Value="public double Covariance_P (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_P([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_P (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_P(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-994">整数のデータが入力されている一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-994">The first cell range of integers.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-995">整数のデータが入力されているもう一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-995">The second cell range of integers.</span></span></param>
        <summary><span data-ttu-id="a4672-996">母集団の共分散を返します。共分散とは、2 組の対応するデータ間での標準偏差の積の平均値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-996">Returns population covariance, the average of the products of deviations for each data point pair.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-997"><b>Covariance_P</b>を使用すると、2 つのデータ セット間のリレーションシップを決定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-997">Use <b>Covariance_P</b> to determine the relationship between two data sets.</span></span> <span data-ttu-id="a4672-998">たとえばより多くの収益には、高いレベルの教育が付随しているかどうかを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-998">For example, you can examine whether greater income accompanies greater levels of education.</span></span></para>
          <para><span data-ttu-id="a4672-p387">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p387">The arguments must either be numbers or be names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p388">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p388">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-1001">場合<paramref name="Arg1" />と<paramref name="Arg2" />番号が異なる、データ ポイントの<b>Covariance_P</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1001">If <paramref name="Arg1" /> and <paramref name="Arg2" /> have different numbers of data points, <b>Covariance_P</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1002">いずれか<paramref name="Arg1" />または<paramref name="Arg2" />が空の場合、 <b>Covariance_P</b>エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1002">If either <paramref name="Arg1" /> or <paramref name="Arg2" /> is empty, <b>Covariance_P</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1003">共分散は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1003">The covariance is:</span></span> </para>
          <para><span data-ttu-id="a4672-1004">共分散分析の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1004">Figure 1: Equation for covariance</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1005">ここで、x は標本平均 AVERAGE(配列 1)、y は標本平均 AVERAGE(配列 2)、n は標本数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1005">where x and y are the sample means AVERAGE(array1) and AVERAGE(array2), and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_S">
      <MemberSignature Language="C#" Value="public double Covariance_S (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_S([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_S (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_S(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1006">配列 1: 整数のデータが入力されている一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1006">Array1 - The first cell range of integers.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1007">配列 2: 整数のデータが入力されているもう一方のセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1007">Array2 - The second cell range of integers.</span></span></param>
        <summary><span data-ttu-id="a4672-1008">標本の共分散を返します。共分散とは、2 組の対応するデータ間での標準偏差の積の平均値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1008">Returns the sample covariance, the average of the products of deviations for each data point pair in two data sets.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p391">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p391">The arguments must either be numbers or be names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p392">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p392">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-1011">配列 1 と配列 2 のデータ ポイントの数が異なる場合、 <b>Covariance_S</b>はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1011">If array1 and array2 have different numbers of data points, <b>Covariance_S</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1012">配列 1 または配列 2 が空か、各<b>Covariance_S</b>の 1 つだけのデータ ポイントが含まれて 場合は、# の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1012">If either array1 or array2 is empty or contains only 1 data point each, <b>Covariance_S</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1013">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1013">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4672-1014">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1014">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a4672-1015">読み取り専用の<b>整数値</b>(C# では int)。</span><span class="sxs-lookup"><span data-stu-id="a4672-1015">Read-only <b>Integer</b> (int in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a4672-1016">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span><span class="sxs-lookup"><span data-stu-id="a4672-1016">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="a4672-1017"><b>Creator</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1017">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a4672-1018">たとえば、Microsoft Excel は、クリエーター コードを持っています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1018">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CritBinom">
      <MemberSignature Language="C#" Value="public double CritBinom (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CritBinom([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CritBinom(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CritBinom (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CritBinom(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1019">ベルヌーイ試行の回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1019">The number of Bernoulli trials.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1020">1 回の試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1020">The probability of a success on each trial.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1021">基準値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1021">The criterion value.</span></span></param>
        <summary><span data-ttu-id="a4672-1022">累積二項分布の値が基準値以上になるような最小の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1022">Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1023">品質保証アプリケーションでこの関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1023">Use this function for quality assurance applications.</span></span> <span data-ttu-id="a4672-1024">たとえば、 <b>CritBinom</b>を使用して、ロット全体を拒否することを使わないで実行ラインから来ることができる欠陥部品の最大数を決定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1024">For example, use <b>CritBinom</b> to determine the greatest number of defective parts that are allowed to come off an assembly line run without rejecting the entire lot.</span></span></para>
          <para><span data-ttu-id="a4672-1025">いずれかの引数が数値以外の場合は、 <b>CritBinom</b>はエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1025">If any argument is nonnumeric, <b>CritBinom</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p399">試行回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p399">If trials is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1027">場合試験&lt;0、 <b>CritBinom</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1027">If trials &lt; 0, <b>CritBinom</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1028">成功の場合&lt;0 または成功率&gt;1、 <b>CritBinom</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1028">If probability_s is &lt; 0 or probability_s &gt; 1, <b>CritBinom</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1029">アルファの場合&lt;0 または α &gt; 1、 <b>CritBinom</b>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1029">If alpha &lt; 0 or alpha &gt; 1, <b>CritBinom</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Csc">
      <MemberSignature Language="C#" Value="public double Csc (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csc([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csc(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csc (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csc(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1030">コセカントを求める角度 (ラジアン)。</span><span class="sxs-lookup"><span data-stu-id="a4672-1030">The angle in radians for which you want the cosecant.</span></span></param>
        <summary><span data-ttu-id="a4672-1031">角度のコセカントを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1031">Returns the cosecant of an angle.</span></span></summary>
        <returns><span data-ttu-id="a4672-1032"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1032"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Csch">
      <MemberSignature Language="C#" Value="public double Csch (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csch([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csch(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csch (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csch(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1033">双曲線余割を求める角度をラジアンで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1033">The angle in radians for which you want the hyperbolic cosecant.</span></span></param>
        <summary><span data-ttu-id="a4672-1034">角度の双曲線余割 (ハイパーボリック コセカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1034">Returns the hyperbolic cosecant of an angle.</span></span></summary>
        <returns><span data-ttu-id="a4672-1035"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1035"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CumIPmt">
      <MemberSignature Language="C#" Value="public double CumIPmt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumIPmt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumIPmt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumIPmt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumIPmt(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16832)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1036">貸付期間を通じて一定の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1036">The interest rate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1037">貸付期間全体での支払回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1037">The total number of payment periods.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1038">現在の貸付額、つまり将来行われる一連の支払いを、現時点で一括支払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1038">The present value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p402">計算の対象となる最初の期を指定します。最初の期から順に、1 から始まる番号が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p402">The first period in the calculation. Payment periods are numbered beginning with 1.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-1041">計算の対象となる最後の期を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1041">The last period in the calculation.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-1042">支払いがいつ行われるかを、数値の 0 または 1 で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1042">The timing of the payment.</span></span></param>
        <summary><span data-ttu-id="a4672-1043">開始から終了までの期間内で貸付金に対して支払われる利息の累計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1043">Returns the cumulative interest paid on a loan between start_period and end_period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1044">次の表で使用される値<paramref name="Arg6" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1044">The following tables lists values used in <paramref name="Arg6" />.</span></span></para><span data-ttu-id="a4672-1045">
          <list type="table">
            <item>
              <term>0 (ゼロ)</term>
              <description>支払</description>期間の最後に
            </item>
            <item> 
              <term>1</term>
              <description>支払期間の開始時</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1045">
          <list type="table">
            <item>
              <term>0 (zero)</term>
              <description>Payment at the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>Payment at the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-1046">利率と期間を指定するために使用する単位について一貫していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1046">Make sure that you are consistent about the units you use for specifying rate and nper.</span></span> <span data-ttu-id="a4672-1047">年利 12% の 4 年ローンを月払いにする場合、4 \* 12 の 12 分の 12% を使用して、 <paramref name="Arg2" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1047">If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 12%/12 for rate and 4\*12 for <paramref name="Arg2" />.</span></span> <span data-ttu-id="a4672-1048">同じローンを年払いにする場合は、12% を使用して、4 の<paramref name="Arg2" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1048">If you make annual payments on the same loan, use 12% for rate and 4 for <paramref name="Arg2" />.</span></span> </para>
          <para><span data-ttu-id="a4672-1049">
            <paramref name="Arg2" />、 <paramref name="Arg4" />、 <paramref name="Arg5" />、と、型が整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1049">
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, and type are truncated to integers.</span></span> </para>
          <para><span data-ttu-id="a4672-1050">場合利率 ≤ 0、 <paramref name="Arg2" /> ≤ 0、または<paramref name="Arg3" />≤ 0、<b>支払</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1050">If rate ≤ 0, <paramref name="Arg2" /> ≤ 0, or <paramref name="Arg3" /> ≤ 0, <b>CumIPmt</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1051">場合<paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1、または<paramref name="Arg4" /> &gt; <paramref name="Arg5" /> <b>、エラー</b>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1051">If <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1, or <paramref name="Arg4" /> &gt; <paramref name="Arg5" />, <b>CumIPmt</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1052">場合<paramref name="Arg6" />は、0 または 1 の場合、<b>指定</b>以外の数値には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1052">If <paramref name="Arg6" /> is any number other than 0 or 1, <b>CumIPmt</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CumPrinc">
      <MemberSignature Language="C#" Value="public double CumPrinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumPrinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumPrinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumPrinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumPrinc(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16831)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1053">貸付期間を通じて一定の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1053">The interest rate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1054">貸付期間全体での支払回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1054">The total number of payment periods.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1055">現在の貸付額、つまり将来行われる一連の支払いを、現時点で一括支払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1055">The present value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p407">計算の対象となる最初の期を指定します。最初の期から順に、1 から始まる番号が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p407">The first period in the calculation. Payment periods are numbered beginning with 1.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-1058">計算の対象となる最後の期を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1058">The last period in the calculation.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-1059">計算の対象となる最後の期を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1059">The last period in the calculation.</span></span></param>
        <summary><span data-ttu-id="a4672-1060">開始から終了までの期間に、貸付金に対して支払われる元金の累計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1060">Returns the cumulative principal paid on a loan between start_period and end_period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1061">次の表で使用される値<paramref name="Arg6" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1061">The following tables lists values used in <paramref name="Arg6" />.</span></span></para><span data-ttu-id="a4672-1062">
          <list type="table">
            <item>
              <term>0 (ゼロ)</term>
              <description>支払</description>期間の最後に
            </item>
            <item> 
              <term>1</term>
              <description>支払期間の開始時</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1062">
          <list type="table">
            <item>
              <term>0 (zero)</term>
              <description>Payment at the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>Payment at the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-1063">利率と期間を指定するために使用する単位について一貫していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1063">Make sure that you are consistent about the units you use for specifying rate and nper.</span></span> <span data-ttu-id="a4672-1064">年利 12% の 4 年ローンを月払いにする場合、4 \* 12 の 12 分の 12% を使用して、 <paramref name="Arg2" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1064">If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 12%/12 for rate and 4\*12 for <paramref name="Arg2" />.</span></span> <span data-ttu-id="a4672-1065">同じローンを年払いにする場合は、12% を使用して、4 の<paramref name="Arg2" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1065">If you make annual payments on the same loan, use 12% for rate and 4 for <paramref name="Arg2" />.</span></span> </para>
          <para><span data-ttu-id="a4672-1066">
            <paramref name="Arg2" />、 <paramref name="Arg4" />、 <paramref name="Arg5" />、と、型が整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1066">
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, and type are truncated to integers.</span></span> </para>
          <para><span data-ttu-id="a4672-1067">場合利率 ≤ 0、 <paramref name="Arg2" /> ≤ 0、または<paramref name="Arg3" />≤ 0、<b>支払</b>には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1067">If rate ≤ 0, <paramref name="Arg2" /> ≤ 0, or <paramref name="Arg3" /> ≤ 0, <b>CumPrinc</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1068">場合<paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1、または<paramref name="Arg4" /> &gt; <paramref name="Arg5" /> <b>、エラー</b>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1068">If <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1, or <paramref name="Arg4" /> &gt; <paramref name="Arg5" />, <b>CumPrinc</b> generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1069">場合<paramref name="Arg6" />は、0 または 1 の場合、<b>指定</b>以外の数値には、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1069">If <paramref name="Arg6" /> is any number other than 0 or 1, <b>CumPrinc</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DAverage">
      <MemberSignature Language="C#" Value="public double DAverage (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DAverage([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DAverage (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DAverage(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p412">リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p412">The range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p413">関数の中で使用する列を指定します。半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す、引用符なしの番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p413">Indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p414">指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p414">The range of cells that contains the conditions you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1077">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの平均値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1077">Averages the values in a column of a list or database that match conditions you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1078">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1078">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1079">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1079">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1080">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1080">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1081">場所を検索する文字列または値入力内容にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1081">Where entryis the text or value you want to find.</span></span> <span data-ttu-id="a4672-1082">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1082">For example:</span></span></para><span data-ttu-id="a4672-1083">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1083">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p417">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p417">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public double Days (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Days(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1086">start_date(Arg2) および end_date (Arg1) には、間の日数を求める 2 つの日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1086">start_date(Arg2) and end_date (Arg1) are the two dates between which you want to know the number of days.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1087">start_date(Arg2) および end_date (Arg1) には、間の日数を求める 2 つの日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1087">start_date(Arg2) and end_date (Arg1) are the two dates between which you want to know the number of days.</span></span></param>
        <summary><span data-ttu-id="a4672-1088">2 つの日付の間の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1088">Returns the number of days between the two dates.</span></span></summary>
        <returns><span data-ttu-id="a4672-1089"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1089"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Days360">
      <MemberSignature Language="C#" Value="public double Days360 (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days360([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days360(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days360 (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16604)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p418">間の日数を求める 2 つの日付を指定します。開始日 (Arg1) に終了日 (Arg2) 以降の日付を指定すると、負の値が返されます。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p418">The two dates between which you want to know the number of days. If start_date (Arg1) occurs after end_date (Arg2), Days360 returns a negative number. Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p419">間の日数を求める 2 つの日付を指定します。開始日 (Arg1) に終了日 (Arg2) 以降の日付を指定すると、負の値が返されます。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p419">The two dates between which you want to know the number of days. If start_date (Arg1) occurs after end_date (Arg2), Days360 returns a negative number. Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1096">計算で米国またはヨーロッパ言語メソッドを使用するかどうかを指定するブール値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1096">A Boolean value that specifies whether to use the U.S. or European method in the calculation.</span></span></param>
        <summary><span data-ttu-id="a4672-1097">1 年を 360 日 (30 日×12) として、支払いの計算などによく使用される 2 つの日付の間の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1097">Returns the number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1098">会計システムが 12 の 30 - 日月に基づいている場合に支払を計算するのにには、この関数を使用します。値が次の表に含まれている<paramref name="Arg3" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1098">Use this function to help compute payments if your accounting system is based on twelve 30-day months.The following tables contains the values for <paramref name="Arg3" />.</span></span></para><span data-ttu-id="a4672-1099">
          <list type="table">
            <item>
              <term>
                <b>false を指定</b>するか省略する</term>
              <description>米国 NASD 方式です。開始日が月の 31 日の場合は、30 th 同じ月に等しくなります。終了日は、1 か月の 31 日、開始日が 1 か月の 30 日目より前の場合は、終了日になる次の月の 1 日それ以外の場合終了日が 30 th 同じ月のと同じになります</description>
            </item>。
            <item>
              <term>
                <b>真</b>
              </term>
              <description>ヨーロッパ方式です。開始日と終了日が月の 31 日が 30 th 同じ月のと同じになります</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1099">
          <list type="table">
            <item>
              <term>
                <b>false</b> or omitted</term>
              <description>U.S. (NASD) method. If the starting date is the 31st of a month, it becomes equal to the 30th of the same month. If the ending date is the 31st of a month and the starting date is earlier than the 30th of a month, the ending date becomes equal to the 1st of the next month; otherwise the ending date becomes equal to the 30th of the same month.</description>
            </item>
            <item>
              <term>
                <b>true</b>
              </term>
              <description>European method. Starting dates and ending dates that occur on the 31st of a month become equal to the 30th of the same month.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p420">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p420">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Db">
      <MemberSignature Language="C#" Value="public double Db (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Db([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Db (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1103">取得価額: 資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1103">Cost - the initial cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1104">残存価額: 耐用年数が終了した時点での資産の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1104">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1105">耐用年数: 資産を使用できる年数、つまり償却の対象となる資産の寿命年数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1105">Life - the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p421">期間: 減価償却費を求める期を指定します。期間は耐用年数と同じ単位で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p421">Period - the period for which you want to calculate the depreciation. Period must use the same units as life.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p422">月: 資産を購入した期 (年度) の月数を指定します。省略すると、12 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p422">Month - the number of months in the first year. If month is omitted, it is assumed to be 12.</span></span></param>
        <summary><span data-ttu-id="a4672-1110">定率法 (Fixed-declining Balance Method) を利用して、特定の期における資産の減価償却費を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1110">Returns the depreciation of an asset for a specified period using the fixed-declining balance method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1111">固定定率法では、固定利率で減価償却費を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1111">The fixed-declining balance method computes depreciation at a fixed rate.</span></span> <span data-ttu-id="a4672-1112">DB では、期間の減価償却を計算するのには次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1112">DB uses the following formulas to calculate depreciation for a period:</span></span></para>
          <para><span data-ttu-id="a4672-1113">(取得価額 - 前期までの減価償却の合計) \* レート</span><span class="sxs-lookup"><span data-stu-id="a4672-1113">(cost - total depreciation from prior periods) \* rate</span></span></para>
          <para><span data-ttu-id="a4672-1114">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1114">where:</span></span></para>
          <para><span data-ttu-id="a4672-1115">率 = 1 - ((salvage/cost) ^ (1/ライフ))、3 つの小数点以下の桁数に丸められました。</span><span class="sxs-lookup"><span data-stu-id="a4672-1115">rate = 1 - ((salvage / cost) ^ (1 / life)), rounded to three decimal places</span></span></para>
          <para><span data-ttu-id="a4672-1116">最初と最後の期間の減価償却は、特別なケースです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1116">Depreciation for the first and last periods is a special case.</span></span> <span data-ttu-id="a4672-1117">最初の期間には、DB は、この数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1117">For the first period, DB uses this formula:</span></span></para>
          <para><span data-ttu-id="a4672-1118">コスト \* 率 \* 月/12</span><span class="sxs-lookup"><span data-stu-id="a4672-1118">cost \* rate \* month / 12</span></span></para>
          <para><span data-ttu-id="a4672-1119">最後の期間には、DB は、この数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1119">For the last period, DB uses this formula:</span></span></para>
          <para><span data-ttu-id="a4672-1120">((取得価額 - 前期までの減価償却の合計) \* 率 \* (12 - 月))/12</span><span class="sxs-lookup"><span data-stu-id="a4672-1120">((cost - total depreciation from prior periods) \* rate \* (12 - month)) / 12</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dbcs">
      <MemberSignature Language="C#" Value="public string Dbcs (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dbcs([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dbcs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dbcs (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Dbcs(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16599)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1121">文字列または変換する文字列を含むセルの参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1121">The text or a reference to a cell that contains the text that you want to change.</span></span></param>
        <summary><span data-ttu-id="a4672-1122">文字列内の半角 (1 バイト) 文字を全角 (2 バイト) 文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1122">Converts half-width (single-byte) letters within a character string to full-width (double-byte) characters.</span></span> <span data-ttu-id="a4672-1123">関数 (および変換する文字) の名前は、言語の設定によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1123">The name of the function (and the characters that it converts) depends upon the language settings.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DCount">
      <MemberSignature Language="C#" Value="public double DCount (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCount([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCount (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCount(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p426">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p426">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p427">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p427">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p428">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p428">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as the argument includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1131">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの中で数値が入力されているセルの個数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1131">Counts the cells that contain numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1132">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1132">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1133">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1133">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1134">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1134">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1135">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1135">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1136">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1136">For example:</span></span></para><span data-ttu-id="a4672-1137">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1137">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p431">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p431">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DCountA">
      <MemberSignature Language="C#" Value="public double DCountA (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCountA([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCountA (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCountA(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16583)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p432">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p432">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p433">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p433">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p434">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p434">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1147">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの中の空白でないセルの個数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1147">Counts the nonblank cells in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1148">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1148">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1149">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1149">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1150">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1150">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1151">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1151">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1152">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1152">For example:</span></span></para><span data-ttu-id="a4672-1153">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1153">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p437">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p437">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ddb">
      <MemberSignature Language="C#" Value="public double Ddb (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ddb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ddb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1156">取得価額: 資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1156">Cost - the initial cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p438">残存価額: 耐用年数が終了した時点での資産の価格を指定します。0 (ゼロ) を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p438">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset). This value can be 0.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1159">耐用年数: 資産を使用できる年数、つまり償却の対象となる資産の寿命年数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1159">Life - the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p439">期間: 減価償却費を求める期を指定します。期間は耐用年数と同じ単位で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p439">Period - the period for which you want to calculate the depreciation. Period must use the same units as life.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p440">率: 償却率を指定します。率を省略すると、2 を指定したと見なされ、倍額定率法で計算が行われます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p440">Factor - the rate at which the balance declines. If factor is omitted, it is assumed to be 2 (the double-declining balance method).</span></span></param>
        <summary><span data-ttu-id="a4672-1164">倍額定率法 (Double-declining Balance Method) を使用して、特定の期における資産の減価償却費を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1164">Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1165">
            <b>重要</b>: すべての 5 つの引数は正の数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1165">
            <b>Important</b>: All five arguments must be positive numbers.</span></span></para>
          <para><span data-ttu-id="a4672-1166">倍額定率法償却率で減価償却費を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1166">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="a4672-1167">減価償却は、最初の期が最も高くし、連続する期間に減少します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1167">Depreciation is highest in the first period and decreases in successive periods.</span></span> <span data-ttu-id="a4672-1168"><b>Ddb 関数</b>では、期間の減価償却費を計算するのに次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1168"><b>Ddb</b> uses the following formula to calculate depreciation for a period:</span></span></para>
          <code>Min( (cost - total depreciation from prior periods) * (factor/life), (cost - salvage -  total depreciation from prior periods) )
</code>
          <para><span data-ttu-id="a4672-p442">倍額定率法を使用しない場合は、率を指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p442">Change factor if you do not want to use the double-declining balance method. </span></span></para>
          <para><span data-ttu-id="a4672-1170">使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />減価償却費が定率法による計算の結果よりも大きいときに定額法に切り替える場合に機能します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1170">Use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" /> function if you want to switch to the straight-line depreciation method when depreciation is greater than the declining balance calculation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Bin">
      <MemberSignature Language="C#" Value="public string Dec2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1171">数値: 変換する 10 進の整数。</span><span class="sxs-lookup"><span data-stu-id="a4672-1171">Number - the decimal integer you want to convert.</span></span> <span data-ttu-id="a4672-1172">数値が負の場合は、有効桁数は無視され、 <b>Dec2Bin</b>が 10 桁 (10 ビット) の 2 進数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1172">If number is negative, valid place values are ignored and <b>Dec2Bin</b> returns a 10-character (10-bit) binary number in which the most significant bit is the sign bit.</span></span> <span data-ttu-id="a4672-1173">残りの 9 ビットは、ビットの大きさです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1173">The remaining 9 bits are magnitude bits.</span></span> <span data-ttu-id="a4672-1174">負の数は 2 の補数表記を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1174">Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1175">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1175">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-1176">場所が省略されると、必要な文字の最小数を<b>Dec2Bin</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1176">If places is omitted, <b>Dec2Bin</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-1177">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1177">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-1178">10 進数を 2 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1178">Converts a decimal number to binary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1179">番号の場合&lt;-512 または数値の場合は&gt;511 を<b>Dec2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1179">If number &lt; -512 or if number &gt; 511, <b>Dec2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1180">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1180">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1181">数値が数値以外の場合は、#VALUE を<b>Dec2Bin</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1181">If number is nonnumeric, <b>Dec2Bin</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1182">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1182">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1183"><b>Dec2Bin</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1183">If <b>Dec2Bin</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-1184">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1184">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p448">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p448">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1186">数値以外の場合、#VALUE を<b>Dec2Bin</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1186">If places is nonnumeric, <b>Dec2Bin</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1187">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1187">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1188">場所は、ゼロまたは負を<b>Dec2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1188">If places is zero or negative, <b>Dec2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1189">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1189">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Hex">
      <MemberSignature Language="C#" Value="public string Dec2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1190">数値: 変換する 10 進の整数。</span><span class="sxs-lookup"><span data-stu-id="a4672-1190">Number - the decimal integer you want to convert.</span></span> <span data-ttu-id="a4672-1191">数値が負の場合は、場所が無視され、10 桁 (40 ビット) の 16 進数を<b>Dec2Hex</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1191">If number is negative, places is ignored and <b>Dec2Hex</b> returns a 10-character (40-bit) hexadecimal number in which the most significant bit is the sign bit.</span></span> <span data-ttu-id="a4672-1192">残りの 39 ビットは、ビットの大きさです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1192">The remaining 39 bits are magnitude bits.</span></span> <span data-ttu-id="a4672-1193">負の数は 2 の補数表記を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1193">Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1194">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1194">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-1195">場所が省略されると、必要な文字の最小数を<b>Dec2Hex</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1195">If places is omitted, <b>Dec2Hex</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-1196">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1196">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-1197">10 進数を 16 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1197">Converts a decimal number to hexadecimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1198">数値の場合&lt;-549,755,813,888 場合は、番号または&gt;549,755,813,887 を<b>Dec2Hex</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-1198">If number &lt; -549,755,813,888 or if number &gt; 549,755,813,887, <b>Dec2Hex</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1199">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1199">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1200">数値が数値以外の場合は、#VALUE を<b>Dec2Hex</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1200">If number is nonnumeric, <b>Dec2Hex</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1201">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1201">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1202"><b>Dec2Hex</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1202">If <b>Dec2Hex</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-1203">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1203">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p456">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p456">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1205">場所が数値以外の場合は、#VALUE を<b>Dec2Hex</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1205">If places is nonnumeric, <b>Dec2Hex</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1206">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1206">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1207">桁数が負の場合は、 <b>Dec2Hex</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1207">If places is negative, <b>Dec2Hex</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1208">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1208">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Oct">
      <MemberSignature Language="C#" Value="public string Dec2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1209">数値: 変換する 10 進の整数。</span><span class="sxs-lookup"><span data-stu-id="a4672-1209">Number - the decimal integer you want to convert.</span></span> <span data-ttu-id="a4672-1210">数値が負の場合は、場所が無視され、10 桁 (30 ビット) の 8 進数を<b>Dec2Oct</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1210">If number is negative, places is ignored and <b>Dec2Oct</b> returns a 10-character (30-bit) octal number in which the most significant bit is the sign bit.</span></span> <span data-ttu-id="a4672-1211">残りの 29 ビットは、ビットの大きさです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1211">The remaining 29 bits are magnitude bits.</span></span> <span data-ttu-id="a4672-1212">負の数は 2 の補数表記を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1212">Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1213">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1213">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-1214">場所が省略されると、必要な文字の最小数を<b>Dec2Oct</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1214">If places is omitted, <b>Dec2Oct</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-1215">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1215">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-1216">10 進数を 8 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1216">Converts a decimal number to octal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1217">数値の場合&lt;-536,870,912 場合は、番号または&gt;536,870,911 を<b>Dec2Oct</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-1217">If number &lt; -536,870,912 or if number &gt; 536,870,911, <b>Dec2Oct</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1218">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1218">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1219">数値が数値以外の場合は、#VALUE を<b>Dec2Oct</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1219">If number is nonnumeric, <b>Dec2Oct</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1220">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1220">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1221"><b>Dec2Oct</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1221">If <b>Dec2Oct</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-1222">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1222">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p464">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p464">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1224">数値以外の場合、#VALUE を<b>Dec2Oct</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1224">If places is nonnumeric, <b>Dec2Oct</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1225">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1225">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1226">桁数が負の場合は、 <b>Dec2Oct</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1226">If places is negative, <b>Dec2Oct</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1227">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1227">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Decimal">
      <MemberSignature Language="C#" Value="public double Decimal (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Decimal([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Decimal(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decimal (Arg1 As String, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Decimal(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16956)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1228">変換する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1228">The number that you want to convert.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1229">変換する数値の基数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1229">The base Radix of the number you are converting.</span></span></param>
        <summary><span data-ttu-id="a4672-1230">指定された底の数値の文字列式を 10 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1230">Converts a text representation of a number in a given base into a decimal number.</span></span></summary>
        <returns><span data-ttu-id="a4672-1231"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1231"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public double Degrees (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Degrees([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Degrees (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Degrees(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1232">角度: 度に変換する角度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1232">Angle - the angle in radians that you want to convert.</span></span></param>
        <summary><span data-ttu-id="a4672-1233">ラジアンを度に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1233">Converts radians into degrees.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public double Delta (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Delta([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Delta(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delta (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16802)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1234">数値 1: 一方の数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1234">Number1 - the first number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p467">数値 2: もう一方の数値を指定します。数値 2 を省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p467">Number2 - the second number. If omitted, number2 is assumed to be zero.</span></span></param>
        <summary><span data-ttu-id="a4672-p468">2 つの値が等しいかどうかを調べます。数値 1 = 数値 2 のとき 1 を返し、それ以外の場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p468">Tests whether two values are equal. Returns 1 if number1 = number2; returns 0 otherwise.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1239">値のセットをフィルター処理するのにには、この関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1239">Use this function to filter a set of values.</span></span> <span data-ttu-id="a4672-1240">たとえば、<b>デルタ</b>関数がいくつか合計することでは、値の等しい組の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1240">For example, by summing several <b>Delta</b> functions you calculate the count of equal pairs.</span></span> <span data-ttu-id="a4672-1241">この関数は、クロネッカーのデルタ関数とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1241">This function is also known as the Kronecker Delta function.</span></span></para>
          <para><span data-ttu-id="a4672-1242">[数値 1] が数値以外の場合は、<b>デルタ</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1242">If number1 is nonnumeric, <b>Delta</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1243">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1243">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1244">数値 2 が数値以外の場合は、<b>デルタ</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1244">If number2 is nonnumeric, <b>Delta</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1245">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1245">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DevSq">
      <MemberSignature Language="C#" Value="public double DevSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DevSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DevSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p472">数値 1, 数値 2, … : 偏差の平方和を求める数値を指定します。引数は 1 ～ 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、単一配列や、配列への参照を引数として使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p472">Number1, number2, ... - are 1 to 30 arguments for which you want to calculate the sum of squared deviations. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-1248">標本の平均値に対する各データの偏差の平方和を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1248">Returns the sum of squares of deviations of data points from their sample mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1249">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1249">Arguments can either be numbers or names, arrays, or references that contain numbers.</span></span> </para>
          <para><span data-ttu-id="a4672-1250">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1250">Logical values and text representations of numbers that you type directly into the list of arguments are counted.</span></span> </para>
          <para><span data-ttu-id="a4672-1251">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1251">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included.</span></span> </para>
          <para><span data-ttu-id="a4672-1252">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1252">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span> </para>
          <para><span data-ttu-id="a4672-1253">偏差の平方和は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1253">The equation for the sum of squared deviations is:</span></span> </para>
          <para><span data-ttu-id="a4672-1254">偏差の平方和の合計の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1254">Figure 1: Equation for the sum of squared deviations</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DGet">
      <MemberSignature Language="C#" Value="public object DGet (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DGet([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DGet (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DGet(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16619)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p473">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p473">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p474">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p474">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p475">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p475">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1262">リストまたはデータベースの列から指定された条件を満たす 1 つの値を抽出します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1262">Extracts a single value from a column of a list or database that matches conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1263">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1263">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1264">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1264">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1265">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1265">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1266">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1266">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1267">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1267">For example:</span></span></para><span data-ttu-id="a4672-1268">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1268">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p478">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p478">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Disc">
      <MemberSignature Language="C#" Value="public double Disc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Disc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Disc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Disc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p479">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p479">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p480">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p480">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1275">現在価値: 額面 $ 100 に対する証券の価値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1275">Pr - the security's price per $100 face value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-1276">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1276">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-1277">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1277">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-1278">証券に対する割引率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1278">Returns the discount rate for a security.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1279">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1279">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-1280">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1280">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-1281">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1281">Problems can occur if dates are entered as text.</span></span> </para>
          <para><span data-ttu-id="a4672-p482">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p482">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p483">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 30 年後に当たる 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p483">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p484">受渡日、満期日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p484">Settlement, maturity, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-1290">受領または成熟度が有効な日付のシリアル番号でない場合、<b>ディスク</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1290">If settlement or maturity is not a valid serial date number, <b>Disc</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1291">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1291">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1292">場合 ≤ 0 または償還 ≤ 0、<b>ディスク</b>が #NUM を返す場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-1292">If pr ≤ 0 or if redemption ≤ 0, <b>Disc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1293">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1293">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1294">場合に&lt;0 または基準&gt;4 では、<b>ディスク</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-1294">If basis &lt; 0 or if basis &gt; 4, <b>Disc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1295">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1295">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1296">場合は受領成熟度、<b>ディスク</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1296">If settlement ≥ maturity, <b>Disc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1297">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1297">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1298">
            <b>ディスク</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1298">
            <b>Disc</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-1299">ディスクの方法を計算するための図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1299">Figure 1: Equation for calculating Disc method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1300">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1300">where:</span></span></para>
          <para><span data-ttu-id="a4672-1301">B = 年の基礎によって、1 年の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1301">B = number of days in a year, depending on the year basis.</span></span></para>
          <para><span data-ttu-id="a4672-1302">DSM = 受渡日と満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1302">DSM = number of days between settlement and maturity.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DMax">
      <MemberSignature Language="C#" Value="public double DMax (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMax([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMax (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMax(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16428)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p489">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p489">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p490">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p490">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p491">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p491">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1310">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1310">Returns the largest number in a column of a list or database that matches conditions you that specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1311">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1311">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1312">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1312">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1313">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1313">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1314">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1314">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1315">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1315">For example:</span></span></para><span data-ttu-id="a4672-1316">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1316">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p494">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p494">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DMin">
      <MemberSignature Language="C#" Value="public double DMin (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMin([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMin (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMin(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p495">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p495">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p496">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p496">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p497">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p497">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1326">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1326">Returns the smallest number in a column of a list or database that matches conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1327">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1327">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1328">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1328">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1329">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1329">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1330">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1330">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1331">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1331">For example:</span></span></para><span data-ttu-id="a4672-1332">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1332">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p500">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p500">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dollar">
      <MemberSignature Language="C#" Value="public string Dollar (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dollar([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dollar (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1335">数値: 数値、数値を含むセルの参照、または戻り値が数値となる数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1335">Number - a number, a reference to a cell containing a number, or a formula that evaluates to a number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p501">桁数: 小数点以下の桁数を指定します。桁数に負の数を指定すると、数値は小数点の左側 (整数部分) の指定した桁 (1 の位を 0 とする) で四捨五入されます。桁数を省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p501">Decimals - the number of digits to the right of the decimal point. If decimals is negative, number is rounded to the left of the decimal point. If you omit decimals, it is assumed to be 2.</span></span></param>
        <summary><span data-ttu-id="a4672-p502">数値を文字列形式に変換し、通貨記号を適用します。この関数の名前および適用される記号は、使用する言語の設定によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p502">The function described in this Help topic converts a number to text format and applies a currency symbol. The name of the function (and the symbol that it applies) depends upon your language settings.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1341">セル] コマンド ([書式] メニュー) で数値を含むセルの書式設定と、 <b>Dollar</b>関数を直接数値を書式設定の主な違いは、<b>結果の数値は文字列に変換</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1341">The major difference between formatting a cell that contains a number with the Cells command (Format menu) and formatting a number directly with the <b>Dollar</b> function is that <b>Dollar</b> converts its result to text.</span></span> <span data-ttu-id="a4672-1342">[セル] コマンドで書式設定された数値は、まだいくつかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1342">A number formatted with the Cells command is still a number.</span></span> <span data-ttu-id="a4672-1343">Microsoft Excel が計算するとき、数値をテキスト値として入力した数値を変換するために、数式で<b>ドル</b>が設定される番号を使用する続行することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1343">You can continue to use numbers formatted with <b>Dollar</b> in formulas, because Microsoft Excel converts numbers entered as text values to numbers when it calculates.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarDe">
      <MemberSignature Language="C#" Value="public double DollarDe (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarDe([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarDe(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarDe (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarDe(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16827)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1344">分子: 分数として表された数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1344">Fractional_dollar - is a number expressed as a fraction.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1345">分母: 分数の分母となる整数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1345">Fraction - the integer to use in the denominator of the fraction.</span></span></param>
        <summary><span data-ttu-id="a4672-p504">分数で表されたドル単位の価格を、小数表示に変換します。分数で表された証券の価格などを、小数で表す場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p504">Converts a dollar price expressed as a fraction into a dollar price expressed as a decimal number. Use DOLLARDE to convert fractional dollar numbers, such as securities prices, to decimal numbers.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p505">分母に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p505">If fraction is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1349">分母が 0 より小さい場合は、<b>分数で表された</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1349">If fraction is less than 0, <b>DollarDe</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1350">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1350">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1351">分母が 0 の場合は、<b>分数で表された</b>が # の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1351">If fraction is 0, <b>DollarDe</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1352">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1352">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarFr">
      <MemberSignature Language="C#" Value="public double DollarFr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarFr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarFr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarFr (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarFr(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1353">小数値: 小数で表された数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1353">Decimal_dollar - is a decimal number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1354">分母: 分数の分母となる整数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1354">Fraction - the integer to use in the denominator of a fraction.</span></span></param>
        <summary><span data-ttu-id="a4672-p508">小数で表されたドル単位の価格を、分数表示に変換します。証券の価格などを分数で表す場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p508">Converts a dollar price expressed as a decimal number into a dollar price expressed as a fraction. Use DOLLARFR to convert decimal numbers to fractional dollar numbers, such as securities prices.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p509">分母に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p509">If fraction is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1358">分母が 0 より小さい場合は、<b>分母</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1358">If fraction is less than 0, <b>DollarFr</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1359">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1359">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1360">分母が 0 の場合は、<b>分数で表す場合</b>は、# の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1360">If fraction is 0, <b>DollarFr</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1361">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1361">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DProduct">
      <MemberSignature Language="C#" Value="public double DProduct (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DProduct([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DProduct (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DProduct(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16573)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p512">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p512">Database is the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p513">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す、引用符なしの番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p513">Field indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p514">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p514">Criteria is the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1369">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの積を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1369">Multiplies the values in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1370">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1370">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1371">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1371">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1372">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1372">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1373">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1373">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1374">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1374">For example:</span></span></para><span data-ttu-id="a4672-1375">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1375">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p517">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p517">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDev">
      <MemberSignature Language="C#" Value="public double DStDev (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDev([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDev (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDev(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p518">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p518">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p519">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p519">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p520">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p520">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1385">リストまたはデータベースの指定された列を検索し、条件を満たすレコードを標本と見なして、母集団の標準偏差を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1385">Estimates the standard deviation of a population based on a sample by using the numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1386">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1386">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1387">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1387">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1388">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1388">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1389">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1389">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1390">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1390">For example:</span></span></para><span data-ttu-id="a4672-1391">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1391">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p523">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p523">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDevP">
      <MemberSignature Language="C#" Value="public double DStDevP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDevP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDevP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDevP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p524">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p524">Database - is the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p525">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p525">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p526">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p526">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1401">リストまたはデータベースの指定された列を検索し、条件を満たすレコードを母集団全体と見なして、母集団の標準偏差を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1401">Calculates the standard deviation of a population based on the entire population by using the numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1402">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1402">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1403">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1403">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1404">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1404">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1405">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1405">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1406">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1406">For example:</span></span></para><span data-ttu-id="a4672-1407">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1407">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p529">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p529">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DSum">
      <MemberSignature Language="C#" Value="public double DSum (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DSum([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DSum (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DSum(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p530">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p530">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p531">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p531">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p532">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p532">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1417">リストまたはデータベースの指定された列を検索し、条件を満たすレコードの合計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1417">Adds the numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1418">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1418">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1419">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1419">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1420">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1420">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1421">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1421">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1422">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1422">For example:</span></span></para><span data-ttu-id="a4672-1423">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1423">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p535">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p535">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy19">
      <MemberSignature Language="C#" Value="public object Dummy19 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy19([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy19(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy19 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2827)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-1426">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1426">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy21">
      <MemberSignature Language="C#" Value="public double Dummy21 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Dummy21([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy21(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy21 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Dummy21(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <summary><span data-ttu-id="a4672-1427">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1427">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public double Duration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Duration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Duration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p536">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p536">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p537">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p537">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1432">利率: 証券の年利を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1432">Coupon - the security's annual coupon rate.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-1433">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1433">Yld - the security's annual yield.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p538">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p538">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-1436">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1436">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-p539">額面を $100 と見なした証券のマコーレー デュレーションを返します。デュレーションは、キャッシュ フローの現在価値の加重平均として定義され、利回りの変化に対する債券価格の反応の指標として使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p539">Returns the Macauley duration for an assumed par value of $100. Duration is defined as the weighted average of the present value of the cash flows and is used as a measure of a bond price's response to changes in yield.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1439">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1439">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-1440">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1440">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-1441">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1441">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-1442">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1442">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p541">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p541">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p542">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p542">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p543">受渡日、満期日、頻度、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p543">Settlement, maturity, frequency, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-1451">受領または成熟度が有効な日付でない場合、#VALUE を<b>期間</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1451">If settlement or maturity is not a valid date, <b>Duration</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1452">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1452">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1453">場合クーポン&lt;0 または利回り&lt;0、<b>期間</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1453">If coupon &lt; 0 or if yld &lt; 0, <b>Duration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1454">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1454">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1455">頻度が 1、2、または 4 以外の数値の場合は、<b>期間</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1455">If frequency is any number other than 1, 2, or 4, <b>Duration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1456">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1456">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1457">場合に&lt;0 または基準&gt;4、<b>期間</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-1457">If basis &lt; 0 or if basis &gt; 4, <b>Duration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1458">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1458">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1459">場合は受領成熟度<b>期間</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1459">If settlement ≥ maturity, <b>Duration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1460">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1460">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DVar">
      <MemberSignature Language="C#" Value="public double DVar (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVar([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVar (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVar(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16431)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p549">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p549">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p550">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p550">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p551">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p551">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1468">リストまたはデータベースの指定された列を検索し、条件を満たすレコードを標本と見なして、母集団の分散を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1468">Estimates the variance of a population based on a sample by using the numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1469">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1469">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1470">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1470">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1471">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1471">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1472">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1472">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1473">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1473">For example:</span></span></para><span data-ttu-id="a4672-1474">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1474">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p554">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p554">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DVarP">
      <MemberSignature Language="C#" Value="public double DVarP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVarP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVarP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVarP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p555">データベース: リストまたはデータベースを構成するセル範囲を指定します。データベースは、行 (レコード) と列 (フィールド) にデータを関連付けたリストです。リストの先頭の行には、各列の見出しが入力されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p555">Database - the range of cells that makes up the list or database. A database is a list of related data in which rows of related information are records, and columns of data are fields. The first row of the list contains labels for each column.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p556">フィールド: 関数の中で使用する列を指定します。フィールドには、半角の二重引用符 (") で囲んだ "樹齢" や "歩どまり" などのような文字列、またはリストでの列の位置を示す番号、たとえば、先頭の列を示す場合は 1、2 番目の列を示す場合は 2 を、引用符なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p556">Field - indicates which column is used in the function. Enter the column label enclosed between double quotation marks, such as "Age" or "Yield," or a number (without quotation marks) that represents the position of the column within the list: 1 for the first column, 2 for the second column, and so on.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p557">検索条件: 指定した条件が設定されているセル範囲を指定します。列見出しと検索条件を指定するセルが少なくとも 1 つずつ含まれている場合は、任意のセル範囲を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p557">Criteria - the range of cells that contains the conditions that you specify. You can use any range for the criteria argument, as long as it includes at least one column label and at least one cell below the column label in which you specify a condition for the column.</span></span></param>
        <summary><span data-ttu-id="a4672-1484">リストまたはデータベースの指定された列を検索し、条件を満たすレコードを母集団全体と見なして、母集団の分散を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1484">Calculates the variance of a population based on the entire population by using the numbers in a column of a list or database that match conditions that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1485">セル内のテキストまたは値を入力するときに、数式を示すために等号 (=) を使用するため Microsoft が評価され、入力した内容です。ただし、予期しないフィルターの結果があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1485">Because the equal sign is used to indicate a formula when you type text or a value in a cell, Microsoft Excel evaluates what you type; however, this may cause unexpected filter results.</span></span> <span data-ttu-id="a4672-1486">テキストまたは値のいずれかの等値比較演算子を指定するには、検索条件範囲内の該当セルに文字列式としての条件を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1486">To indicate an equality comparison operator for either text or a value, type the criteria as a string expression in the appropriate cell in the criteria range:</span></span> </para>
          <para><span data-ttu-id="a4672-1487">= ' のエントリを = '</span><span class="sxs-lookup"><span data-stu-id="a4672-1487">=''=entry''</span></span></para>
          <para><span data-ttu-id="a4672-1488">エントリが、テキストまたは値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1488">Where entry is the text or value you want to find.</span></span> <span data-ttu-id="a4672-1489">例:</span><span class="sxs-lookup"><span data-stu-id="a4672-1489">For example:</span></span></para><span data-ttu-id="a4672-1490">
          <list type="table">
            <item>
              <term>=「="西脇」"</term>
              <description>="西脇"</description> 
            </item>
            <item>
              <description>3000 を =</description> 
              <term>=「= 3000」</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1490">
          <list type="table">
            <item>
              <term>="=Davolio"</term>
              <description>=Davolio</description>
            </item>
            <item>
              <term>="=3000"</term>
              <description>=3000</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p560">テキスト データの抽出では、大文字と小文字は区別されません。ただし、特定の関数を使用することによって、大文字と小文字を区別した検索を実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p560">When filtering text data, Excel does not distinguish between uppercase and lowercase characters. However, you can use a formula to perform a case-sensitive search.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EDate">
      <MemberSignature Language="C#" Value="public double EDate (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EDate([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EDate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EDate (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EDate(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p561">開始日: 起算日を表す日付を指定します。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。たとえば、2008 年 5 月 23 日を入力する場合は、DATE (2008,5,23) を使用します。日付を文字列として入力した場合、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p561">Start_date - a date that represents the start date. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p562">月: 開始日から起算した月数を指定します。月に正の数を指定すると、起算日より後の日付を返し、負の数を指定すると、起算日より前の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p562">Months - the number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.</span></span></param>
        <summary><span data-ttu-id="a4672-p563">開始日から起算して、指定された月数だけ前または後の日付に対応するシリアル値を返します。このメソッドを使用すると、伝票の発行日と同じ日に当たる支払日や満期日の日付を計算することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p563">Returns the serial number that represents the date that is the indicated number of months before or after a specified date (the start_date). Use EDATE to calculate maturity dates or due dates that fall on the same day of the month as the date of issue.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p564">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p564">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-1504"><b>開始日が無効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1504">If start_date is not a valid date, <b>EDate</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1505">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1505">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1506">月に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1506">If months is not an integer, it is truncated.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public double Effect (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Effect([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Effect (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Effect(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1507">名目利率: 名目年利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1507">Nominal_rate - the nominal interest rate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1508">複利計算回数: 1 年あたりの複利計算回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1508">Npery - the number of compounding periods per year.</span></span></param>
        <summary><span data-ttu-id="a4672-1509">指定された名目年利率と 1 年あたりの複利計算回数を基に、実効年利率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1509">Returns the effective annual interest rate, given the nominal annual interest rate and the number of compounding periods per year.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p566">複利計算回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p566">Npery is truncated to an integer. </span></span></para>
          <para><span data-ttu-id="a4672-1511">いずれかの引数が数値以外の場合は、<b>効果</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1511">If either argument is nonnumeric, <b>Effect</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1512">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1512">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1513">場合名目利率 ≤ 0 または複利計算回数&lt;1、<b>効果</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1513">If nominal_rate ≤ 0 or if npery &lt; 1, <b>Effect</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1514">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1514">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1515">
            <b>効果</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1515">
            <b>Effect</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-1516">メソッドの効果を計算するための図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1516">Figure 1: Equation for calculating Effect method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeURL">
      <MemberSignature Language="C#" Value="public object EncodeURL (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EncodeURL([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EncodeURL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeURL (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EncodeURL(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16981)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1517">エンコードするテキスト。</span><span class="sxs-lookup"><span data-stu-id="a4672-1517">Text to be encoded.</span></span></param>
        <summary><span data-ttu-id="a4672-1518">引数が URL エンコードされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1518">URL encodes the argument.</span></span></summary>
        <returns><span data-ttu-id="a4672-1519"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1519"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EoMonth">
      <MemberSignature Language="C#" Value="public double EoMonth (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EoMonth([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EoMonth(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EoMonth (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EoMonth(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16834)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p569">開始日: 起算日を表す日付を指定します。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。たとえば、2008 年 5 月 23 日を入力する場合は、DATE (2008,5,23) を使用します。日付を文字列として入力した場合、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p569">Start_date - a date that represents the starting date. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p570">月: 開始日から起算した月数を指定します。月に正の数を指定すると、起算日より後の日付を返し、負の数を指定すると、起算日より前の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p570">Months - the number of months before or after start_date. A positive value for months yields a future date; a negative value yields a past date.</span></span></param>
        <summary><span data-ttu-id="a4672-p571">開始日から起算して、指定された月数だけ前または後の月の最終日に対応するシリアル値を返します。このメソッドを使用すると、月末に発生する満期日や支払日を計算することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p571">Returns the serial number for the last day of the month that is the indicated number of months before or after start_date. Use EOMONTH to calculate maturity dates or due dates that fall on the last day of the month.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p572">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p572">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-1531"><b>開始日に無効な日付を指定すると、#NUM</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1531">If start_date is not a valid date, <b>EoMonth</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1532">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1532">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1533"><b>開始日と月が無効な日付である場合、#NUM を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1533">If start_date plus months yields an invalid date, <b>EoMonth</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1534">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1534">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf">
      <MemberSignature Language="C#" Value="public double Erf (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16807)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1535">下限の<b>積分</b>の下限です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1535">Lower_limit - the lower bound for integrating <b>Erf</b>.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1536">上限の<b>積分</b>の上限です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1536">Upper_limit - the upper bound for integrating <b>Erf</b>.</span></span> <span data-ttu-id="a4672-1537">省略すると、積分値が 0 と下限の間で統合されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1537">If omitted, Erf integrates between zero and lower_limit.</span></span></param>
        <summary><span data-ttu-id="a4672-1538">下限～上限の範囲で、誤差関数の積分値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1538">Returns the error function integrated between lower_limit and upper_limit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1539">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1539">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1540">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1540">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1541">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1541">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1542">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1542">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1543">下限が数値以外の場合は、<b>上限</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1543">If lower_limit is nonnumeric, <b>Erf</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1544">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1544">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1545">下限が負の場合は、<b>上限</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1545">If lower_limit is negative, <b>Erf</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1546">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1546">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1547">上限が数値以外の場合は、<b>上限</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1547">If upper_limit is nonnumeric, <b>Erf</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1548">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1548">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1549">上限が負の場合は、<b>上限</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1549">If upper_limit is negative, <b>Erf</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1550">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1550">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1551">メソッドの積分値を計算するための図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1551">Figure 1: Equation for calculating Erf method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1552">メソッドの積分値を計算するため、図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1552">Figure 2: Equation for calculating Erf method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf_Precise">
      <MemberSignature Language="C#" Value="public double Erf_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Erf_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1553">下限: 誤差関数を積分するときの下限値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1553">Lower_limit - the lower bound for integrating ERF.</span></span></param>
        <summary><span data-ttu-id="a4672-1554">0 ～下限の範囲で、誤差関数の積分値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1554">Returns the error function integrated between zero and lower_limit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1555">下限が数値以外の場合は、 <b>Erf_Precise</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1555">If lower_limit is nonnumeric, <b>Erf_Precise</b> generates an error.</span></span> <span data-ttu-id="a4672-1556">下限が負の場合は、 <b>Erf_Precise</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1556">If lower_limit is negative, <b>Erf_Precise</b> generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-1557">図 1: Erf_Precise メソッドを計算する式</span><span class="sxs-lookup"><span data-stu-id="a4672-1557">Figure 1: Equation for calculating Erf_Precise method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC">
      <MemberSignature Language="C#" Value="public double ErfC (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1558">最初の引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1558">The first argument.</span></span></param>
        <summary><span data-ttu-id="a4672-1559">指定したパラメーター～無限大の範囲で、相補誤差関数の積分値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1559">Returns the complementary ERF function integrated between the specified parameter  and infinity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1560">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1560">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1561">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1561">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1562">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1562">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1563">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1563">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1564">場合この関数は利用できません、#NAME?エラー、分析ツール アドインを組み込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1564">If this function is not available, and returns the #NAME? error, you need to install and load the Analysis ToolPak add-in.</span></span></para>
          <para><span data-ttu-id="a4672-1565">パラメーターが数値以外の場合は、 <b>ErfC</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1565">If the parameter is nonnumeric, <b>ErfC</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1566">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1566">error value.</span></span></para>
          <para><span data-ttu-id="a4672-1567">パラメーターが負の場合は、 <b>ErfC</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1567">If the parameter is negative, <b>ErfC</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1568">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1568">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC_Precise">
      <MemberSignature Language="C#" Value="public double ErfC_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1569">計算する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1569">The value to compute against.</span></span></param>
        <summary><span data-ttu-id="a4672-1570">指定した値～無限大の範囲で、相補誤差関数の積分値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1570">Returns the complementary error function integrated between the specified value  and infinity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1571">指定した値が数値以外の場合は、 <b>ErfC_Precise</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1571">If the specified value is nonnumeric, <b>ErfC_Precise</b> generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-1572">指定した値が負の場合は、 <b>ErfC_Precise</b>にはエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1572">If the specified value is negative, <b>ErfC_Precise</b> generates an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Even">
      <MemberSignature Language="C#" Value="public double Even (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Even([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Even(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Even (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Even(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1573">数値: 切り上げの対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1573">Number - the value to round.</span></span></param>
        <summary><span data-ttu-id="a4672-p585">指定した数値を最も近い偶数に切り上げた値を返します。この関数を使用して 2 つ 1 組のアイテムを処理することができます。たとえば、梱包容器を表す列に 1 つまたは 2 つのアイテムを入力する場合、アイテムの個数を偶数に切り上げることで、容器の収納量を把握できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p585">Returns number rounded up to the nearest even integer. You can use this function for processing items that come in twos. For example, a packing crate accepts rows of one or two items. The crate is full when the number of items, rounded up to the nearest two, matches the crate's capacity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1578">数値が数値以外の場合は、<b>偶数</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1578">If number is nonnumeric, <b>Even</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1579">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1579">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p587">数値の符号に関係なく、切り上げられた値の絶対値は、数値より大きくなります。数値が既に偶数の値になっている場合、切り上げは行われません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p587">Regardless of the sign of number, a value is rounded up when adjusted away from zero. If number is an even integer, no rounding occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Expon_Dist">
      <MemberSignature Language="C#" Value="public double Expon_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Expon_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expon_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Expon_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1582">X: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1582">X - the value of the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1583">λ: パラメーターの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1583">Lambda - the parameter value.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1584">関数形式にするのには指数関数の形式を示す論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1584">Cumulative - a logical value that indicates which form of the exponential function to provide.</span></span> <span data-ttu-id="a4672-1585">場合<b>は累積的な</b> <b>Expon_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1585">If cumulative is <b>true</b>, <b>Expon_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-p589">指数分布関数を返します。このメソッドは、銀行の ATM で現金を引き出すのにかかる時間など、イベントの間隔をモデル化する場合に使用します。たとえば、EXPON_DIST メソッドを使って、ある処理が 1 分以内に終了する確率を算出することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p589">Returns the exponential distribution. Use EXPON_DIST to model the time between events, such as how long an automated bank teller takes to deliver cash. For example, you can use EXPON_DIST to determine the probability that the process takes at most 1 minute.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1589">場合 x またはラムダ数値以外は、 <b>Expon_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1589">If x or lambda is nonnumeric, <b>Expon_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1590">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1590">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1591">場合 x &lt; 0 <b>Expon_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1591">If x &lt; 0, <b>Expon_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1592">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1592">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1593">場合はラムダ ≤ 0、 <b>Expon_Dist</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1593">If lambda ≤ 0, <b>Expon_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1594">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1594">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1595">確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1595">The equation for the probability density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-1596">確率密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1596">Figure 1: Equation for the probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1597">累積分布関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1597">The equation for the cumulative distribution function is:</span></span></para>
          <para><span data-ttu-id="a4672-1598">分布の累積分布関数の数式を図 2:</span><span class="sxs-lookup"><span data-stu-id="a4672-1598">Figure 2: Equation for the cumulative distribution function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponDist">
      <MemberSignature Language="C#" Value="public double ExponDist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ExponDist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExponDist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ExponDist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1599">X: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1599">X - the value of the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1600">λ: パラメーターの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1600">Lambda - the parameter value.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1601">関数形式にするのには指数関数の形式を示す論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1601">Cumulative - a logical value that indicates which form of the exponential function to provide.</span></span> <span data-ttu-id="a4672-1602">場合<b>は累積的な</b><b>間隔</b>が累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1602">If cumulative is <b>true</b>, <b>ExponDist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-1603">指数分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1603">Returns the exponential distribution.</span></span> <span data-ttu-id="a4672-1604"><b>ExponDist</b>自動銀行の出納係で現金を引き出すのにかかる時間などのイベントまでの時間をモデル化に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1604">Use <b>ExponDist</b> to model the time between events, such as how long an automated bank teller takes to deliver cash.</span></span> <span data-ttu-id="a4672-1605">たとえば、1 分以内にかかる確率を算出するのに<b>間隔</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1605">For example, you can use <b>ExponDist</b> to determine the probability that the process takes at most 1 minute.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1606">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1606">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1607">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1607">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1608">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1608">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1609">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1609">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1610">場合 x またはラムダ数値以外は、<b>間隔</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1610">If x or lambda is nonnumeric, <b>ExponDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1611">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1611">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1612">場合 x &lt; 0、<b>間隔</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1612">If x &lt; 0, <b>ExponDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1613">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1613">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1614">場合はラムダ ≤ 0、<b>間隔</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1614">If lambda ≤ 0, <b>ExponDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1615">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1615">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1616">確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1616">The equation for the probability density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-1617">確率密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1617">Figure 1: Equation for the probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1618">累積分布関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1618">The equation for the cumulative distribution function is:</span></span></para>
          <para><span data-ttu-id="a4672-1619">分布の累積分布関数の数式を図 2:</span><span class="sxs-lookup"><span data-stu-id="a4672-1619">Figure 2: Equation for the cumulative distribution function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist">
      <MemberSignature Language="C#" Value="public double F_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1620">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1620">X - The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1621">Deg_freedom1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1621">Deg_freedom1 - The numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1622">Deg_freedom2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1622">Deg_freedom2 - The denominator degrees of freedom.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-1623">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1623">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-1624">場合<b>は累積的な</b> <b>F_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1624">If cumulative is <b>true</b>, <b>F_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-1625">F 分布の確率関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1625">Returns the F probability distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1626">いずれかの引数が数値以外の場合は、 <b>F_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1626">If any argument is nonnumeric, <b>F_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1627">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1627">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1628">X が負の場合は、 <b>F_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1628">If x is negative, <b>F_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1629">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1629">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p602">deg_freedom1 または deg_freedom2 に正数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p602">If deg_freedom1 or deg_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1631">場合 deg_freedom1 &lt; 1、 <b>F_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1631">If deg_freedom1 &lt; 1, <b>F_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1632">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1632">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1633">場合 deg_freedom &lt; 1、 <b>F_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1633">If deg_freedom &lt; 1, <b>F_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1634">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1634">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist_RT">
      <MemberSignature Language="C#" Value="public double F_Dist_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1635">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1635">X - the value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1636">自由度 1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1636">Degrees_freedom1 - the numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1637">自由度 2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1637">Degrees_freedom2 - the denominator degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-p605">F 分布の右側確率関数の値を返します。この関数を使用すると、2 組のデータを比較して、ばらつきが両者で異なるかどうかを調べることができます。たとえば、テストの成績を男女別に分析して、男子生徒の成績と女子生徒の成績のばらつきが異なるかどうかを検定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p605">Returns the right-tailed F probability distribution. You can use this function to determine whether two data sets have different degrees of diversity. For example, you can examine the test scores of men and women entering high school and determine if the variability in the females is different from that found in the males.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1641">いずれかの引数が数値以外の場合は、 <b>F_Dist_RT</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1641">If any argument is nonnumeric, <b>F_Dist_RT</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1642">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1642">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1643">X が負の場合は、 <b>F_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1643">If x is negative, <b>F_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1644">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1644">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p608">自由度 1 または自由度 2 に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p608">If degrees_freedom1 or degrees_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1646">場合自由度 1 &lt; 1 または自由度 1 の受領 10 ^10、 <b>F_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1646">If degrees_freedom1 &lt; 1 or degrees_freedom1 ≥ 10^10, <b>F_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1647">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1647">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1648">場合自由度 2 &lt; 1 または自由度 2 の受領 10 ^10、 <b>F_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1648">If degrees_freedom2 &lt; 1 or degrees_freedom2 ≥ 10^10, <b>F_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1649">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1649">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1650">
            <b>F_Dist_RT</b>は、F_DIST_RT として計算されます = P (F&gt;x)、F は自由度 1、自由度 2 自由度で、F 分布の確率変数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1650">
            <b>F_Dist_RT</b> is calculated as F_DIST_RT=P( F&gt;x ), where F is a random variable that has an F distribution with degrees_freedom1 and degrees_freedom2 degrees of freedom.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv">
      <MemberSignature Language="C#" Value="public double F_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1651">確率: F 累積分布に関連する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1651">Probability - A probability associated with the F cumulative distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1652">Deg_freedom1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1652">Deg_freedom1 - The numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1653">Deg_freedom2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1653">Deg_freedom2 - The denominator degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-1654">F 分布の確率関数の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1654">Returns the inverse of the F probability distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1655">いずれかの引数が数値以外の場合は、 <b>F_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1655">If any argument is nonnumeric, <b>F_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1656">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1656">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1657">場合確率&lt;0、または確率&gt;1、 <b>F_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1657">If probability &lt; 0 or probability &gt; 1, <b>F_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1658">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1658">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p613">deg_freedom1 または deg_freedom2 に正数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p613">If deg_freedom1 or deg_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1660">場合 deg_freedom1 &lt; 1、または deg_freedom2 &lt; 1、 <b>F_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1660">If deg_freedom1 &lt; 1, or deg_freedom2 &lt; 1, <b>F_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1661">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1661">error value.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv_RT">
      <MemberSignature Language="C#" Value="public double F_Inv_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1662">確率: F 累積分布に関連する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1662">Probability - a probability associated with the F cumulative distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1663">自由度 1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1663">Degrees_freedom1 - the numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1664">自由度 2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1664">Degrees_freedom2 - the denominator degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-p615">F 分布の右側確率関数の逆関数の値を返します。つまり、確率 = F_DIST_RT(x,...) であるとき、F_INV_RT(確率,...) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p615">Returns the inverse of the right-tailed F probability distribution. If p = F_DIST_RT(x,...), then F_INV_RT(p,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p616">F 確率分布は、2 組のデータのばらつきを比較する F 検定で使用されます。たとえば、合衆国と日本の労働者の年収を比較し、両国で年収の分布に類似性があるかどうかを分析することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p616">The F distribution can be used in an F-test that compares the degree of variability in two data sets. For example, you can analyze income distributions in the United States and Canada to determine whether the two countries have a similar degree of income diversity.</span></span></para>
          <para><span data-ttu-id="a4672-1669">いずれかの引数が数値以外の場合は、 <b>F_Inv_RT</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1669">If any argument is nonnumeric, <b>F_Inv_RT</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1670">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1670">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1671">場合確率&lt;0、または確率&gt;1、 <b>F_Inv_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1671">If probability &lt; 0 or probability &gt; 1, <b>F_Inv_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1672">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1672">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p619">自由度 1 または自由度 2 に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p619">If degrees_freedom1 or degrees_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1674">場合自由度 1 &lt; 1 または自由度 1 の受領 10 ^10、 <b>F_Inv_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1674">If degrees_freedom1 &lt; 1 or degrees_freedom1 ≥ 10^10, <b>F_Inv_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1675">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1675">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1676">場合自由度 2 &lt; 1 または自由度 2 の受領 10 ^10、 <b>F_Inv_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1676">If degrees_freedom2 &lt; 1 or degrees_freedom2 ≥ 10^10, <b>F_Inv_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1677">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1677">error value.</span></span></para>
          <para><span data-ttu-id="a4672-1678">F 分布の臨界値を返すには、 
            <b>F_Inv_RT</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1678">
            <b>F_Inv_RT</b> can be used to return critical values from the F distribution.</span></span> <span data-ttu-id="a4672-1679">たとえば、多くの場合、分散分析の計算の出力には、F 統計量、F 確率、および有意水準 0.05 で F の臨界値のデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1679">For example, the output of an ANOVA calculation often includes data for the F statistic, F probability, and F critical value at the 0.05 significance level.</span></span> <span data-ttu-id="a4672-1680">F の臨界値を返すには、 <b>F_Inv_RT</b>の確率引数に有効桁数のレベルを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1680">To return the critical value of F, use the significance level as the probability argument to <b>F_Inv_RT</b>.</span></span></para>
          <para><span data-ttu-id="a4672-1681">確率の値を与え、そのような値 x がシーク<b>F_Inv_RT</b>その F_DIST_RT を (x, 自由度 1, 自由度 2) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1681">Given a value for probability, <b>F_Inv_RT</b> seeks that value x such that F_DIST_RT(x, degrees_freedom1, degrees_freedom2) = probability.</span></span> <span data-ttu-id="a4672-1682"><b>F_Inv_RT</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1682">Thus, precision of <b>F_Inv_RT</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />.</span></span> <span data-ttu-id="a4672-1683"><b>F_Inv_RT</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1683"><b>F_Inv_RT</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-1684">検索は、64 回の反復後が収束しない、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1684">If the search has not converged after 64 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Test">
      <MemberSignature Language="C#" Value="public double F_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1685">配列 1: 比較対象となる一方のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1685">Array1 - the first array or range of data.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1686">配列 2: 比較対象となるもう一方のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1686">Array2 - the second array or range of data.</span></span></param>
        <summary><span data-ttu-id="a4672-p624">F 検定の結果を返します。F 検定により、配列 1 と配列 2 とのデータのばらつきに有意な差が認められない両側確率が返されます。この関数を利用すると、2 つの高等学校で同じテストを実施した場合、両校の生徒の成績に有意な差が認められるかどうかを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p624">Returns the result of an F-test. An F-test returns the two-tailed probability that the variances in array1 and array2 are not significantly different. Use this function to determine whether two samples have different variances. For example, given test scores from public and private schools, you can test whether these schools have different levels of test score diversity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p625">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p625">The arguments must be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p626">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p626">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-1693">配列 1 または配列 2 のデータ ポイントの数が 2 未満である場合、または配列 1 または配列 2 の差異が 0 の場合は、 <b>F_Test</b>が # の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1693">If the number of data points in array1 or array2 is less than 2, or if the variance of array1 or array2 is zero, <b>F_Test</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1694">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1694">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fact">
      <MemberSignature Language="C#" Value="public double Fact (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fact([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fact(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fact (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fact(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p628">数値: 階乗を求める正の数値を指定します。数値に整数以外の値を指定すると、小数点以下が切り捨てられます。数値に負の数を指定すると、エラー値 #NUM! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p628">Number - the nonnegative number you want the factorial of. If number is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-p629">数値の階乗を返します。数値の階乗は、1 ～数値の範囲にある整数の積です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p629">Returns the factorial of a number. The factorial of a number is equal to 1*2*3 *...* number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactDouble">
      <MemberSignature Language="C#" Value="public double FactDouble (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FactDouble([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FactDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FactDouble (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FactDouble(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p630">数値: 二重階乗を求める数値を指定します。数値に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p630">Number - the value for which to return the double factorial. If number is not an integer, it is truncated.</span></span></param>
        <summary><span data-ttu-id="a4672-1701">数値の二重階乗を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1701">Returns the double factorial of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1702">数値が数値以外の場合は、 <b>FactDouble</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1702">If number is nonnumeric, <b>FactDouble</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1703">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1703">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1704">数値が負の場合は、 <b>FactDouble</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1704">If number is negative, <b>FactDouble</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1705">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1705">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1706">数値に偶数を指定した場合は、次の数式が成立します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1706">If number is even:</span></span> </para>
          <para><span data-ttu-id="a4672-1707">図 1: の数式も</span><span class="sxs-lookup"><span data-stu-id="a4672-1707">Figure 1: Equation for even</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1708">数値に奇数を指定した場合は、次の数式が成立します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1708">If number is odd:</span></span></para>
          <para><span data-ttu-id="a4672-1709">奇数ページの図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1709">Figure 2: Equation for odd</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FDist">
      <MemberSignature Language="C#" Value="public double FDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1710">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1710">X - the value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1711">自由度 1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1711">Degrees_freedom1 - the numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1712">自由度 2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1712">Degrees_freedom2 - the denominator degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-p633">F 分布の確率関数の値を返します。この関数を使用すると、2 組のデータを比較して、ばらつきが両者で異なるかどうかを調べることができます。たとえば、テストの成績を男女別に分析して、男子生徒の成績と女子生徒の成績のばらつきが異なるかどうかを検定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p633">Returns the F probability distribution. You can use this function to determine whether two data sets have different degrees of diversity. For example, you can examine the test scores of men and women entering high school and determine if the variability in the females is different from that found in the males.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1716">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1716">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1717">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1717">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1718">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1718">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1719">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1719">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-1720">いずれかの引数が数値以外の場合は、 <b>FDist</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1720">If any argument is nonnumeric, <b>FDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1721">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1721">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1722">X が負の場合は、 <b>FDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1722">If x is negative, <b>FDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1723">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1723">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p637">自由度 1 または自由度 2 に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p637">If degrees_freedom1 or degrees_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1725">場合自由度 1 &lt; 1 または自由度 1 の受領 10 ^10、 <b>FDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1725">If degrees_freedom1 &lt; 1 or degrees_freedom1 ≥ 10^10, <b>FDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1726">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1726">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1727">場合自由度 2 &lt; 1 または自由度 2 の受領 10 ^10、 <b>FDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1727">If degrees_freedom2 &lt; 1 or degrees_freedom2 ≥ 10^10, <b>FDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1728">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1728">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1729">
            <b>Fdist 関数</b>は、fdist 関数として計算されます = P (F&gt;x)、F は自由度 1、自由度 2 自由度で、F 分布の確率変数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1729">
            <b>FDist</b> is calculated as FDIST=P( F&gt;x ), where F is a random variable that has an F distribution with degrees_freedom1 and degrees_freedom2 degrees of freedom.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterXML">
      <MemberSignature Language="C#" Value="public object FilterXML (string Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FilterXML([in]string Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FilterXML(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterXML (Arg1 As String, Arg2 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FilterXML(System::String ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1730">有効な xml 文字列。</span><span class="sxs-lookup"><span data-stu-id="a4672-1730">Valid xml string.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1731">XPath クエリ文字列。</span><span class="sxs-lookup"><span data-stu-id="a4672-1731">XPath query string.</span></span></param>
        <summary><span data-ttu-id="a4672-1732">通常は<b>web サービス</b>の関数呼び出しから返された XML には、特定のデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1732">Get specific data from the returned XML, typically from a <b>WebService</b> function call.</span></span></summary>
        <returns><span data-ttu-id="a4672-1733"><b>VARIANT</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1733"><b>VARIANT</b></span></span></returns>
        <remarks><para><span data-ttu-id="a4672-1734">XPath パラメーターは 1024 文字に制限されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1734">The XPath parameter is limited to 1024 characters.</span></span></para>
          <para><span data-ttu-id="a4672-1735"><b>FILTERXML</b>関数は、ユーザー データを指定したロケールを使用して解析される結果を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1735">The <b>FILTERXML</b> function returns results that are parsed via the user specified data locale.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public double Find (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Find([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1736">ワークシートの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1736">The name of the worksheet.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1737">範囲の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1737">The name of the range.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1738">検索を調整する引数の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1738">The name of an argument to refine the search.</span></span></param>
        <summary><span data-ttu-id="a4672-1739">ワークシートで特定の情報を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1739">Finds specific information in a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindB">
      <MemberSignature Language="C#" Value="public double FindB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FindB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1740">検索文字列: 検索する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1740">Find_text - the text you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1741">対象: 検索文字列を含む文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1741">Within_text - the text containing the text you want to find.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p640">開始位置: 検索を開始する位置を指定します。対象の先頭文字から検索を開始するときは 1 を指定します。開始位置を省略すると、1 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p640">Start_num - specifies the character at which to start the search. The first character in within_text is character number 1. If you omit start_num, it is assumed to be 1.</span></span></param>
        <summary><span data-ttu-id="a4672-1745"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /><b>findb 関数</b>は、2 番目のテキスト文字列内の 1 つのテキスト文字列を検索し、2 番目のテキスト文字列の最初の文字から最初のテキスト文字列の開始位置の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1745"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <b>FindB</b> locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1746">
            <b>重要</b>:<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />はシングル バイト文字を使用する言語での使用を意図したものセット (SBCS)、 <b>findb 関数</b>は、2 バイト文字セット (DBCS) を使用する言語を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1746">
            <b>Important</b>: <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> is intended for use with languages that use the single-byte character set (SBCS), whereas <b>FindB</b> is intended for use with languages that use the double-byte character set (DBCS).</span></span> <span data-ttu-id="a4672-1747">お使いのコンピューター上の既定の言語設定は、戻り値を次のように影響します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1747">The default language setting on your computer affects the return value in the following way:</span></span></para><span data-ttu-id="a4672-1748">
          <list type="bullet">
            <item>
              <description> 
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> 1 バイトまたは 2 バイトとして、既定の言語設定. とも、1 かどうか、各文字を常にカウント</description>
            </item>
            <item> 
              <description> 
                <b>Findb 関数</b>では、DBCS をサポートする言語の編集を有効にして、既定の言語として設定するときに 2 として各 2 バイト文字をカウントします。それ以外の場合、 <b>findb 関数</b>は、1 つとして各文字をカウントします。</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1748">
          <list type="bullet">
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> always counts each character, whether single-byte or double-byte, as 1, no matter what the default language setting is.</description>
            </item>
            <item>
              <description>
                <b>FindB</b> counts each double-byte character as 2 when you have enabled the editing of a language that supports DBCS and then set it as the default language. Otherwise, <b>FindB</b> counts each character as 1.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p642">DBCS をサポートする言語には、日本語、簡体字中国語、繁体字中国語、および韓国語があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p642">The languages that support DBCS include Japanese, Chinese (Simplified), Chinese (Traditional), and Korean. </span></span></para>
          <para><span data-ttu-id="a4672-1750">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /><b>findb 関数</b>は大文字小文字を区別し、ワイルドカード文字を許可しません。</span><span class="sxs-lookup"><span data-stu-id="a4672-1750">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <b>FindB</b> are case sensitive and don't allow wildcard characters.</span></span> <span data-ttu-id="a4672-1751">使用する文字の大文字小文字を区別検索またはワイルドカードを実行しない場合は、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1751">If you don't want to do a case sensitive search or use wildcard characters, you can use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-1752">指定した場合""(空の文字列) の場合、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />検索文字列の最初の文字に一致する (つまり、文字番号開始位置、または 1)。</span><span class="sxs-lookup"><span data-stu-id="a4672-1752">If find_text is "" (empty text), <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> matches the first character in the search string (that is, the character numbered start_num or 1).</span></span> </para>
          <para><span data-ttu-id="a4672-p645">検索文字列にワイルドカード文字を使うことはできません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p645">Find_text cannot contain any wildcard characters. </span></span></para>
          <para><span data-ttu-id="a4672-1754">文字列の検索文字列が表示されない場合<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> <b>findb メソッド</b>は、#VALUE を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1754">If find_text does not appear in within_text, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <b>FindB</b> return the #VALUE!</span></span> <span data-ttu-id="a4672-1755">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1755">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1756">開始位置が 0 より大きい値でない場合<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> <b>findb メソッド</b>は、#VALUE を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1756">If start_num is not greater than zero, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <b>FindB</b> return the #VALUE!</span></span> <span data-ttu-id="a4672-1757">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1757">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1758">開始位置が対象の長さよりも大きい場合<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> <b>findb メソッド</b>は、#VALUE を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1758">If start_num is greater than the length of within_text, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <b>FindB</b> return the #VALUE!</span></span> <span data-ttu-id="a4672-1759">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1759">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1760">開始位置を使用すると、指定した文字数を省略できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1760">Use start_num to skip a specified number of characters.</span></span> <span data-ttu-id="a4672-1761">使用して<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />例として、たとえば、文字列"AYF0093 を使用している.YoungMensApparel"です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1761">Using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> as an example, suppose you are working with the text string "AYF0093.YoungMensApparel".</span></span> <span data-ttu-id="a4672-1762">テキスト文字列の説明部分の最初の"Y"の数を検索するのには開始位置に設定 8 テキストのシリアル番号部分が検索されないようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1762">To find the number of the first "Y" in the descriptive part of the text string, set start_num equal to 8 so that the serial-number portion of the text is not searched.</span></span> <span data-ttu-id="a4672-1763"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />文字 8 で始まって、次の文字で find_text を検出し、数値 9 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1763"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> begins with character 8, finds find_text at the next character, and returns the number 9.</span></span> <span data-ttu-id="a4672-1764"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />常に開始位置が 1 より大きい場合、スキップする文字をカウントしている within_text の最初から文字の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1764"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> always returns the number of characters from the start of within_text, counting the characters you skip if start_num is greater than 1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FInv">
      <MemberSignature Language="C#" Value="public double FInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1765">確率: F 累積分布に関連する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1765">Probability - a probability associated with the F cumulative distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1766">自由度 1: 自由度の分子を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1766">Degrees_freedom1 - the numerator degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1767">自由度 2: 自由度の分母を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1767">Degrees_freedom2 - is the denominator degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-p650">F 分布の確率関数の逆関数の値を返します。つまり、確率 = FDIST(x,...) であるとき、FINV(確率,...) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p650">Returns the inverse of the F probability distribution. If p = FDIST(x,...), then FINV(p,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1770">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1770">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1771">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1771">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1772">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1772">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1773">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1773">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-p652">F 確率分布は、2 組のデータのばらつきを比較する F 検定で使用されます。たとえば、合衆国と日本の労働者の年収を比較し、両国で年収の分布に類似性があるかどうかを分析することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p652">The F distribution can be used in an F-test that compares the degree of variability in two data sets. For example, you can analyze income distributions in the United States and Canada to determine whether the two countries have a similar degree of income diversity.</span></span></para>
          <para><span data-ttu-id="a4672-1776">いずれかの引数が数値以外の場合は、 <b>finv 関数</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1776">If any argument is nonnumeric, <b>FInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1777">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1777">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1778">場合確率&lt;0、または確率&gt;1、 <b>finv 関数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1778">If probability &lt; 0 or probability &gt; 1, <b>FInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1779">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1779">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p655">自由度 1 または自由度 2 に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p655">If degrees_freedom1 or degrees_freedom2 is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-1781">場合自由度 1 &lt; 1 または自由度 1 の受領 10 ^10、 <b>finv 関数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1781">If degrees_freedom1 &lt; 1 or degrees_freedom1 ≥ 10^10, <b>FInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1782">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1782">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1783">場合自由度 2 &lt; 1 または自由度 2 の受領 10 ^10、 <b>finv 関数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1783">If degrees_freedom2 &lt; 1 or degrees_freedom2 ≥ 10^10, <b>FInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1784">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1784">error value.</span></span></para>
          <para><span data-ttu-id="a4672-1785">
            <b>FInv</b> F 分布の臨界値を返すに使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1785">
            <b>FInv</b> can be used to return critical values from the F distribution.</span></span> <span data-ttu-id="a4672-1786">たとえば、多くの場合、分散分析の計算の出力には、F 統計量、F 確率、および有意水準 0.05 で F の臨界値のデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-1786">For example, the output of an ANOVA calculation often includes data for the F statistic, F probability, and F critical value at the 0.05 significance level.</span></span> <span data-ttu-id="a4672-1787">F の臨界値を返すには、 <b>finv 関数</b>の確率引数に有効桁数のレベルを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1787">To return the critical value of F, use the significance level as the probability argument to <b>FInv</b>.</span></span></para>
          <para><span data-ttu-id="a4672-1788"><b>そのような値 x がシークの確率の値を指定した、</b> FDIST (x, 自由度 1, 自由度 2) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1788">Given a value for probability, <b>FInv</b> seeks that value x such that FDIST(x, degrees_freedom1, degrees_freedom2) = probability.</span></span> <span data-ttu-id="a4672-1789"><b>Finv 関数</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1789">Thus, precision of <b>FInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />.</span></span> <span data-ttu-id="a4672-1790"><b>Finv 関数</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1790"><b>FInv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-1791">検索は、64 回の反復後が収束しない、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1791">If the search has not converged after 64 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fisher">
      <MemberSignature Language="C#" Value="public double Fisher (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fisher([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fisher(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fisher (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fisher(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16667)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1792">x: 変換の対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1792">x - a numeric value for which you want the transformation.</span></span></param>
        <summary><span data-ttu-id="a4672-p660">x に対するフィッシャー変換の値を返します。この関数を使うと、非対称分布を正規分布に変換することができます。この関数は、相関係数の仮説検定を行うときに使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p660">Returns the Fisher transformation at x. This transformation produces a function that is normally distributed rather than skewed. Use this function to perform hypothesis testing on the correlation coefficient.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1796">X が数値以外の場合は、<b>フィッシャー</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1796">If x is nonnumeric, <b>Fisher</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1797">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1797">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1798">X ≤-1 の場合、または受領 1 x には、<b>フィッシャー</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1798">If x ≤ -1 or if x ≥ 1, <b>Fisher</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1799">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1799">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1800">フィッシャー変換は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1800">The equation for the Fisher transformation is:</span></span></para>
          <para><span data-ttu-id="a4672-1801">フィッシャー変換の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1801">Figure 1: Equation for the Fisher transformation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FisherInv">
      <MemberSignature Language="C#" Value="public double FisherInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FisherInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FisherInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FisherInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FisherInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16668)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1802">y: 逆変換の対象となる値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1802">y - the value for which you want to perform the inverse of the transformation.</span></span></param>
        <summary><span data-ttu-id="a4672-p663">フィッシャー変換の逆関数を返します。このメソッドは、データ範囲または配列間の相関を分析する場合に使用します。y = FISHER(x) であるとき、FISHERINV(y) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p663">Returns the inverse of the Fisher transformation. Use this transformation when analyzing correlations between ranges or arrays of data. If y = FISHER(x), then FISHERINV(y) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1806">Y が数値以外の場合は、 <b>FisherInv</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1806">If y is nonnumeric, <b>FisherInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1807">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1807">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1808">フィッシャー変換の逆関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1808">The equation for the inverse of the Fisher transformation is:</span></span></para>
          <para><span data-ttu-id="a4672-1809">逆のフィッシャー変換の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1809">Figure 1: Equation for the inverse Fisher transformation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixed">
      <MemberSignature Language="C#" Value="public string Fixed (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fixed([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fixed(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fixed (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1810">数値: 四捨五入して文字列に変換する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1810">Number - the number you want to round and convert to text.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1811">桁数: 小数点以下の桁数を指定します。指定した桁数に四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1811">Decimals - the number of digits to the right of the decimal point.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1812">桁に論理値<b><b>true</b>、桁区切りにカンマを含む</b>場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-1812">No_commas - a logical value that, if <b>true</b>, prevents <b>Fixed</b> from including commas in the returned text.</span></span></param>
        <summary><span data-ttu-id="a4672-1813">数値を四捨五入し、ピリオド (.) とコンマ (,) を使って書式設定した文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1813">Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p665">Microsoft Excel で扱うことができる数値の最大有効桁数は 15 桁ですが、桁数には 127 までの整数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p665">Numbers in Microsoft Excel can never have more than 15 significant digits, but decimals can be as large as 127. </span></span></para>
          <para><span data-ttu-id="a4672-p666">桁数に負の数を指定すると、数値は小数点の左側 (整数部分) の指定した桁 (1 の位を 0 とする) で四捨五入されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p666">If decimals is negative, number is rounded to the left of the decimal point. </span></span></para>
          <para><span data-ttu-id="a4672-p667">桁数を省略すると、2 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p667">If you omit decimals, it is assumed to be 2. </span></span></para>
          <para><span data-ttu-id="a4672-1817">桁では、 <b>false</b>を指定したり、省略すると、し、文字列が返されますコンマを含むいつものようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-1817">If no_commas is <b>false</b> or omitted, then the returned text includes commas as usual.</span></span> </para>
          <para><span data-ttu-id="a4672-1818">主な違い、セルの書式設定の間でセル] コマンド ([書式] メニュー) に数値が含まれていると、FIXED 関数で直接数値を書式設定が<b>固定</b>がテキストにその結果を変換することです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1818">The major difference between formatting a cell containing a number with the Cells command (Format menu) and formatting a number directly with the FIXED function is that <b>Fixed</b> converts its result to text.</span></span> <span data-ttu-id="a4672-1819">[セル] コマンドで書式設定された数値は、まだいくつかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1819">A number formatted with the Cells command is still a number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public double Floor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Floor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16669)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1820">数値: 対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1820">Number - the numeric value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1821">基準値: 倍数の基準となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1821">Significance - the multiple to which you want to round.</span></span></param>
        <summary><span data-ttu-id="a4672-1822">指定された基準値の倍数のうち、最も近い値に数値を切り捨てます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1822">Rounds number down, toward zero, to the nearest multiple of significance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1823">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1823">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1824">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1824">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1825">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1825">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1826">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1826">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1827">いずれかの引数が数値以外の場合は、<b>フロア</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1827">If either argument is nonnumeric, <b>Floor</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1828">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1828">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1829">数値と基準値の符号が異なる場合、<b>フロア</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1829">If number and significance have different signs, <b>Floor</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1830">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1830">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1831">、Number の符号に関係なく値はゼロ丸められます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1831">Regardless of the sign of number, a value is rounded down when adjusted away from zero.</span></span> <span data-ttu-id="a4672-1832">数値が既に基準値の倍数になっている場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1832">If number is an exact multiple of significance, no rounding occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Math">
      <MemberSignature Language="C#" Value="public double Floor_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16976)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1833">丸める数値。</span><span class="sxs-lookup"><span data-stu-id="a4672-1833">The value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1834">数値を丸める対象の倍数。</span><span class="sxs-lookup"><span data-stu-id="a4672-1834">The multiple to which you want to round.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1835">0 以外の数値が指定されると、この関数は 0 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1835">When given a nonzero number, this function will round towards zero.</span></span></param>
        <summary><span data-ttu-id="a4672-1836">最も近い整数値、または基準値の倍数のうちで最も近い値に切り下げます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1836">Rounds a number down, to the nearest integer or to the nearest multiple of significance.</span></span></summary>
        <returns><span data-ttu-id="a4672-1837"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1837"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Precise">
      <MemberSignature Language="C#" Value="public double Floor_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16931)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1838">数値: 対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1838">Number - the numeric value you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1839">基準値: 倍数の基準となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1839">Significance - the multiple to which you want to round.</span></span></param>
        <summary><span data-ttu-id="a4672-1840">指定された基準値の倍数のうち、最も近い値に数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1840">Rounds the specified number to the nearest multiple of significance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1841">によっては、数値と基準値の引数の符号、 <b>Floor_Precise</b>メソッドから離れるか、0 方向に丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1841">Depending on the sign of the number and significance arguments, the <b>Floor_Precise</b> method rounds either away from or towards zero.</span></span></para><span data-ttu-id="a4672-1842">
          <list type="table">
            <item>
              <term>-/-</term>
              <description>ゼロ回</description>
            </item>。
            <item> 
              <term>+/+</term>0 に向かって切り下げる。
            </item> 。
            <item>
              <term>-/+</term>ゼロ回
            </item>。
            <item> 
              <term>+/-</term>0 に向かって切り下げる。
            </item> 。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1842">
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Rounds away from zero.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Rounds toward zero.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Rounds away from zero.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Rounds toward zero.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-1843">いずれかの引数が数値以外の場合は、 <b>Floor_Precise</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1843">If either argument is nonnumeric, the <b>Floor_Precise</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-1844">数値が既に基準値の倍数になっている場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1844">If number is an exact multiple of significance, no rounding occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Forecast">
      <MemberSignature Language="C#" Value="public double Forecast (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Forecast([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Forecast(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Forecast (Arg1 As Double, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Forecast(double Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1845">x: 予測する従属変数の値に対する独立変数の値を、数値で示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1845">X - the data point for which you want to predict a value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1846">既知の y: 既知の従属変数の値が入力されているセル範囲または配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1846">Known_y's - the dependent array or range of data.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1847">既知の x: 既知の独立変数の値が入力されているセル範囲または配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1847">Known_x's - the independent array or range of data.</span></span></param>
        <summary><span data-ttu-id="a4672-p675">既知の値を使用し、将来の値を予測します。予測する値は、x の値に対する y の値です。既知の x と既知の y から得られる回帰線上で、x の値に対する従属変数 (y) の値を予測します。この関数を使うと、将来の売上高、商品在庫量、消費動向などを予測できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p675">Calculates, or predicts, a future value by using existing values. The predicted value is a y-value for a given x-value. The known values are existing x-values and y-values, and the new value is predicted by using linear regression. You can use this function to predict future sales, inventory requirements, or consumer trends.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1852">X が数値以外の場合は、#VALUE を返す<b>予測</b>!</span><span class="sxs-lookup"><span data-stu-id="a4672-1852">If x is nonnumeric, <b>Forecast</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1853">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1853">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1854">既知の y と既知のデータ ポイントの個数が異なる、または場合に、#N/A エラー値<b>の予測</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1854">If known_y's and known_x's are empty or contain a different number of data points, <b>Forecast</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1855">既知の x の分散が 0 の場合 # の DIV と 0 を返します<b>を予測</b>し、!</span><span class="sxs-lookup"><span data-stu-id="a4672-1855">If the variance of known_x's equals zero, then <b>Forecast</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1856">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1856">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1857"><b>予測</b>の数式は、a + bx、場所。</span><span class="sxs-lookup"><span data-stu-id="a4672-1857">The equation for <b>Forecast</b> is a+bx, where:</span></span> </para>
          <para><span data-ttu-id="a4672-1858">予測方法の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-1858">Figure 1: Equation for the Forecast method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1859">そして：</span><span class="sxs-lookup"><span data-stu-id="a4672-1859">And:</span></span></para>
          <para><span data-ttu-id="a4672-1860">予測方法の数式を図 2:</span><span class="sxs-lookup"><span data-stu-id="a4672-1860">Figure 2: Equation for the Forecast method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1861">x と y のサンプルは、AVERAGE(known_x's) (既知の y) の平均値は、です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1861">and where x and y are the sample means AVERAGE(known_x's) and AVERAGE(known y's).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public object Frequency (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Frequency([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Frequency(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Frequency (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Frequency(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16636)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1862">配列の配列、または対象となる周波数をカウントする値のセットへの参照。</span><span class="sxs-lookup"><span data-stu-id="a4672-1862">Data_array - an array of or reference to a set of values for which you want to count frequencies.</span></span> <span data-ttu-id="a4672-1863">データ配列に値が含まれていない場合は、ゼロの配列が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-1863">If data_array contains no values, <b>Frequency</b> returns an array of zeros.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1864">区間配列、または範囲を配列の値をグループ化します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1864">Bins_array - an array of or reference to intervals into which you want to group the values in data_array.</span></span> <span data-ttu-id="a4672-1865">区間配列に値が含まれていない場合、<b>頻度</b>で指定した配列要素の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1865">If bins_array contains no values, <b>Frequency</b> returns the number of elements in data_array.</span></span></param>
        <summary><span data-ttu-id="a4672-1866">どのくらいの頻度を計算値、および数字の縦方向の配列を返しますし、範囲内の値が発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1866">Calculates how often values occur within a range of values, and then returns a vertical array of numbers.</span></span> <span data-ttu-id="a4672-1867">たとえば、スコアの範囲内に含まれるテストの点数の数をカウントするのに<b>周波数</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1867">For example, use <b>Frequency</b> to count the number of test scores that fall within ranges of scores.</span></span> <span data-ttu-id="a4672-1868">配列が返さ<b>れ</b>、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1868">Because <b>Frequency</b> returns an array, it must be entered as an array formula.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1869">返された配布を表示するセル範囲を選択した後、
            <b>頻度</b>は、配列数式として入力されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1869">
            <b>Frequency</b> is entered as an array formula after you select a range of adjacent cells into which you want the returned distribution to appear.</span></span> </para>
          <para><span data-ttu-id="a4672-1870">返される配列内の要素の数は、1 つ区間配列内の要素の数よりも詳細です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1870">The number of elements in the returned array is one more than the number of elements in bins_array.</span></span> <span data-ttu-id="a4672-1871">返される配列内の余分な要素は、最も高い間隔を超えた値の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1871">The extra element in the returned array returns the count of any values above the highest interval.</span></span> <span data-ttu-id="a4672-1872">などの 3 つの範囲 (間隔) の 3 つのセルに入力された値をカウントするとき必ず結果を得るのために 4 つのセルの<b>間隔</b>を入力してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-1872">For example, when counting three ranges of values (intervals) that are entered into three cells, be sure to enter <b>Frequency</b> into four cells for the results.</span></span> <span data-ttu-id="a4672-1873">余分のセルは、3 番目の間隔の値より大きい値は、データ配列の値の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1873">The extra cell returns the number of values in data_array that are greater than the third interval value.</span></span> </para>
          <para><span data-ttu-id="a4672-1874">
            <b>頻度</b>は、空白セルやテキストを無視します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1874">
            <b>Frequency</b> ignores blank cells and text.</span></span> </para>
          <para><span data-ttu-id="a4672-1875">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-1875">Formulas that return arrays must be entered as array formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public double FTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1876">配列 1: 比較対象となる一方のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1876">Array1 - the first array or range of data.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1877">配列 2: 比較対象となるもう一方のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1877">Array2 - the second array or range of data.</span></span></param>
        <summary><span data-ttu-id="a4672-p685">F 検定の結果を返します。F 検定により、配列 1 と配列 2 とのデータのばらつきに有意な差が認められない両側確率が返されます。この関数を利用すると、2 つの高等学校で同じテストを実施した場合、両校の生徒の成績に有意な差が認められるかどうかを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p685">Returns the result of an F-test. An F-test returns the two-tailed probability that the variances in array1 and array2 are not significantly different. Use this function to determine whether two samples have different variances. For example, given test scores from public and private schools, you can test whether these schools have different levels of test score diversity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1882">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1882">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1883">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1883">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1884">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1884">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-1885">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1885">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-p687">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p687">The arguments must be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p688">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p688">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-1888">配列 1 または配列 2 のデータ ポイントの数が 2 未満である場合、または配列 1 または配列 2 の差異が 0 の場合は、<b>場合</b>は、# の DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1888">If the number of data points in array1 or array2 is less than 2, or if the variance of array1 or array2 is zero, <b>FTest</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-1889">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1889">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fv">
      <MemberSignature Language="C#" Value="public double Fv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1890">利率: 投資の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1890">Rate - the interest rate per period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1891">期間: 投資期間全体での支払い回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1891">Nper - the total number of payment periods in an annuity.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p690">定期支払額: 毎回の支払額を指定します。投資期間内に支払額を変更することはできません。通常、定期支払額には元金と利息が含まれますが、その他の手数料や税金は含まれません。定期支払額を省略した場合は、現在価値を必ず指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p690">Pmt - the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but no other fees or taxes. If pmt is omitted, you must include the pv argument.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p691">現在価値: 現在の投資額、または、将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。現在価値を省略した場合は 0 (ゼロ) を指定したと見なされ、定期支払額を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p691">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now. If pv is omitted, it is assumed to be 0 (zero), and you must include the pmt argument.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p692">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。支払期日を省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p692">Type - the number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0.</span></span></param>
        <summary><span data-ttu-id="a4672-1899">定額の支払いを定期的に行い、利率が一定であると仮定して、投資の将来価値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1899">Returns the future value of an investment based on periodic, constant payments and a constant interest rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1900"><b>Fv</b>の引数のより詳細な説明と財務関数の詳細についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1900">For a more complete description of the arguments in <b>Fv</b> and for more information on annuity functions, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</span></span></para><span data-ttu-id="a4672-1901">
          <list type="table">
            <item>
              <term>0</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-1901">
          <list type="table">
            <item>
              <term>0</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p693">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p693">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper. </span></span></para>
          <para><span data-ttu-id="a4672-1905">すべての引数に関して、定額預金の支払いのような出金は負の数で表し、配当金のような入金は正の数で表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1905">For all the arguments, cash you pay out, such as deposits to savings, is represented by negative numbers; cash you receive, such as dividend checks, is represented by positive numbers.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FVSchedule">
      <MemberSignature Language="C#" Value="public double FVSchedule (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FVSchedule([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FVSchedule(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FVSchedule (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FVSchedule(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1906">元金: 投資の現在価値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1906">Principal - the present value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1907">利率配列: 投資期間内の変動金利を配列として指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1907">Schedule - an array of interest rates to apply.</span></span></param>
        <summary><span data-ttu-id="a4672-p694">投資期間内の一連の金利を複利計算することにより、初期投資の元金の将来価値を返します。このメソッドは、金利が変動または調整されるような投資の将来価値を計算する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p694">Returns the future value of an initial principal after applying a series of compound interest rates. Use FVSCHEDULE to calculate the future value of an investment with a variable or adjustable rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1910">スケジュールの値は、数値または空白セル。#VALUE を作成するその他の値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1910">The values in schedule can be numbers or blank cells; any other value produces the #VALUE!</span></span> <span data-ttu-id="a4672-1911">エラー値が<b>返されます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-1911">error value for <b>FVSchedule</b>.</span></span> <span data-ttu-id="a4672-1912">空白セルがゼロと見なされる (関係のない)。</span><span class="sxs-lookup"><span data-stu-id="a4672-1912">Blank cells are taken as zeros (no interest).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public double Gamma (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1913">ガンマを計算する対象の値。</span><span class="sxs-lookup"><span data-stu-id="a4672-1913">The value for which you want to calculate Gamma.</span></span></param>
        <summary><span data-ttu-id="a4672-1914">Gamma 関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1914">Returns the Gamma function value.</span></span></summary>
        <returns><span data-ttu-id="a4672-1915"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-1915"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Dist">
      <MemberSignature Language="C#" Value="public double Gamma_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1916">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1916">X - the value at which you want to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1917">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1917">Alpha - a parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1918">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1918">Beta - a parameter to the distribution.</span></span> <span data-ttu-id="a4672-1919">場合 β = 1, <b>Gamma_Dist</b>は、標準 γ 分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1919">If beta = 1, <b>Gamma_Dist</b> returns the standard gamma distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-1920">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1920">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-1921">場合<b>は累積的な</b> <b>Gamma_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1921">If cumulative is <b>true</b>, <b>Gamma_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-p698">ガンマ分布関数の値を返します。この関数を使うと、正規分布に従わないデータの分析を行うことができます。ガンマ分布は待ち行列分析などで使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p698">Returns the gamma distribution. You can use this function to study variables that may have a skewed distribution. The gamma distribution is commonly used in queuing analysis.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1925">X、アルファ、ベータ版では、数値以外、 <b>Gamma_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1925">If x, alpha, or beta is nonnumeric, <b>Gamma_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1926">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1926">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1927">場合 x &lt; 0 <b>Gamma_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1927">If x &lt; 0, <b>Gamma_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1928">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1928">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1929">場合アルファ ≤ 0 または β ≤ 0、 <b>Gamma_Dist</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-1929">If alpha ≤ 0 or if beta ≤ 0, <b>Gamma_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1930">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1930">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1931">ガンマ確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1931">The equation for the gamma probability density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-1932">図 1: ガンマ確率密度関数</span><span class="sxs-lookup"><span data-stu-id="a4672-1932">Figure 1: Gamma probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1933">また、標準ガンマ確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1933">The standard gamma probability density function is:</span></span></para>
          <para><span data-ttu-id="a4672-1934">図 2: 標準ガンマ確率密度関数</span><span class="sxs-lookup"><span data-stu-id="a4672-1934">Figure 2: Standard gamma probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1935">Α = 1、 <b>Gamma_Dist</b>は、指数分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1935">When alpha = 1, <b>Gamma_Dist</b> returns the exponential distribution with:</span></span></para>
          <para><span data-ttu-id="a4672-1936">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1936">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1937">正の整数 n の場合は、α = n/2、β = 2、および累積的な = <b>true</b>、 <b>Gamma_Dist</b>を返します (n 個の自由度では 1 - CHIDIST(x)) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1937">For a positive integer n, when alpha = n/2, beta = 2, and cumulative = <b>true</b>, <b>Gamma_Dist</b> returns (1 - CHIDIST(x)) with n degrees of freedom.</span></span> </para>
          <para><span data-ttu-id="a4672-1938">Α が正の整数の<b>Gamma_Dist</b>は、アーラン分布とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1938">When alpha is a positive integer, <b>Gamma_Dist</b> is also known as the Erlang distribution.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Inv">
      <MemberSignature Language="C#" Value="public double Gamma_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1939">確率: ガンマ確率分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1939">Probability - the probability associated with the gamma distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1940">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1940">Alpha - a parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1941">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1941">Beta - a parameter to the distribution.</span></span> <span data-ttu-id="a4672-1942">場合 β = 1, <b>Gamma_Inv</b>は、標準 γ 分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1942">If beta = 1, <b>Gamma_Inv</b> returns the standard gamma distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p704">ガンマ分布の累積分布関数の逆関数の値を返します。つまり、確率 = GAMMA_DIST(x,...) であるとき、GAMMA_INV(確率,...) = x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p704">Returns the inverse of the gamma cumulative distribution. If p = GAMMA_DIST(x,...), then GAMMA_INV(p,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1945">この関数は、正規分布に従わないと見られる変数を分析する場合に使います。</span><span class="sxs-lookup"><span data-stu-id="a4672-1945">You can use this function to study a variable whose distribution may be skewed.</span></span></para>
          <para><span data-ttu-id="a4672-1946">いずれかの引数が文字列の場合は、 <b>Gamma_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1946">If any argument is text, <b>Gamma_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1947">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1947">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1948">場合確率&lt;0、または確率&gt;1、 <b>Gamma_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1948">If probability &lt; 0 or probability &gt; 1, <b>Gamma_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1949">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1949">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1950">場合アルファ ≤ 0 または β ≤ 0、 <b>Gamma_Inv</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-1950">If alpha ≤ 0 or if beta ≤ 0, <b>Gamma_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1951">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1951">error value.</span></span></para>
          <para><span data-ttu-id="a4672-1952">確率の値を与え、そのような値 x がシーク<b>Gamma_Inv</b>その GAMMA_DIST を (x、アルファ、ベータ版では TRUE) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1952">Given a value for probability, <b>Gamma_Inv</b> seeks that value x such that GAMMA_DIST(x, alpha, beta, TRUE) = probability.</span></span> <span data-ttu-id="a4672-1953"><b>Gamma_Inv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1953">Thus, precision of <b>Gamma_Inv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />.</span></span> <span data-ttu-id="a4672-1954"><b>Gamma_Inv</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1954"><b>Gamma_Inv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-1955">結果は 100 回反復後収束しないが、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1955">If the search has not converged after 100 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaDist">
      <MemberSignature Language="C#" Value="public double GammaDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16670)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1956">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1956">X - the value at which you want to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1957">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1957">Alpha - a parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1958">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1958">Beta - a parameter to the distribution.</span></span> <span data-ttu-id="a4672-1959">場合 β = 1 の場合、<b>値</b>には、標準 γ 分布が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1959">If beta = 1, <b>GammaDist</b> returns the standard gamma distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-1960">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1960">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-1961">場合<b>は累積的な</b>累積分布関数の値に<b>値</b>が返されますかどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1961">If cumulative is <b>true</b>, <b>GammaDist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-p711">ガンマ分布関数の値を返します。この関数を使うと、正規分布に従わないデータの分析を行うことができます。ガンマ分布は待ち行列分析などで使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p711">Returns the gamma distribution. You can use this function to study variables that may have a skewed distribution. The gamma distribution is commonly used in queuing analysis.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1965">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1965">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1966">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1966">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1967">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1967">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1968">X、アルファ、ベータ版では、数値、<b>値</b>には、#VALUE が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1968">If x, alpha, or beta is nonnumeric, <b>GammaDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1969">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1969">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1970">場合 x &lt; 0 で、<b>値</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1970">If x &lt; 0, <b>GammaDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1971">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1971">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1972">場合アルファ ≤ 0 または β ≤ 0 の<b>場合</b>#NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-1972">If alpha ≤ 0 or if beta ≤ 0, <b>GammaDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1973">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1973">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1974">ガンマ確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1974">The equation for the gamma probability density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-1975">図 1: ガンマ確率密度関数</span><span class="sxs-lookup"><span data-stu-id="a4672-1975">Figure 1: Gamma probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1976">また、標準ガンマ確率密度関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1976">The standard gamma probability density function is:</span></span></para>
          <para><span data-ttu-id="a4672-1977">図 2: 標準ガンマ確率密度関数</span><span class="sxs-lookup"><span data-stu-id="a4672-1977">Figure 2: Standard gamma probability density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1978">Α = 1、<b>値</b>には、指数分布が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1978">When alpha = 1, <b>GammaDist</b> returns the exponential distribution with:</span></span></para>
          <para><span data-ttu-id="a4672-1979">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-1979">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-1980">正の整数 n の場合は、α = n/2、β = 2、および累積的な = <b>true</b><b>値</b>を返します (n 個の自由度では 1 - CHIDIST(x)) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1980">For a positive integer n, when alpha = n/2, beta = 2, and cumulative = <b>true</b>, <b>GammaDist</b> returns (1 - CHIDIST(x)) with n degrees of freedom.</span></span> </para>
          <para><span data-ttu-id="a4672-1981">Α が正の整数の<b>場合</b>は、アーラン分布とも呼ばれるれます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1981">When alpha is a positive integer, <b>GammaDist</b> is also known as the Erlang distribution.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaInv">
      <MemberSignature Language="C#" Value="public double GammaInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16671)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-1982">確率: ガンマ確率分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1982">Probability - the probability associated with the gamma distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-1983">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1983">Alpha - a parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-1984">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1984">Beta - a parameter to the distribution.</span></span> <span data-ttu-id="a4672-1985">場合 β = 1 の場合、<b>標準ガンマ分布の値が返されます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-1985">If beta = 1, <b>GammaInv</b> returns the standard gamma distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p718">ガンマ分布の累積分布関数の逆関数の値を返します。つまり、確率 = GAMMADIST(x,...) であるとき、GAMMAINV(確率,...) = x となるような x の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p718">Returns the inverse of the gamma cumulative distribution. If p = GAMMADIST(x,...), then GAMMAINV(p,...) = x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-1988">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1988">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-1989">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-1989">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-1990">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-1990">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-1991">この関数は、正規分布に従わないと見られる変数を分析する場合に使います。</span><span class="sxs-lookup"><span data-stu-id="a4672-1991">You can use this function to study a variable whose distribution may be skewed.</span></span></para>
          <para><span data-ttu-id="a4672-1992">いずれかの引数が文字列の場合は、<b>指定した</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1992">If any argument is text, <b>GammaInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-1993">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1993">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1994">場合確率&lt;0、または確率&gt;1 を<b>指定した</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1994">If probability &lt; 0 or probability &gt; 1, <b>GammaInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1995">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1995">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-1996">場合アルファ ≤ 0 または β ≤ 0 で、<b>指定した</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-1996">If alpha ≤ 0 or if beta ≤ 0, <b>GammaInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-1997">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-1997">error value.</span></span></para>
          <para><span data-ttu-id="a4672-1998"><b>指定した</b>確率の値を与え、そのような値 x がシーク (x、アルファ、ベータ版では TRUE) は、その値の確率を = します。</span><span class="sxs-lookup"><span data-stu-id="a4672-1998">Given a value for probability, <b>GammaInv</b> seeks that value x such that GAMMADIST(x, alpha, beta, TRUE) = probability.</span></span> <span data-ttu-id="a4672-1999"><b>指定した</b>有効桁数がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-1999">Thus, precision of <b>GammaInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />.</span></span> <span data-ttu-id="a4672-2000"><b>指定した</b>反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2000"><b>GammaInv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-2001">検索は、64 回の反復後が収束しない、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2001">If the search has not converged after 64 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn">
      <MemberSignature Language="C#" Value="public double GammaLn (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2002">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2002">X - the value for which you want to calculate GAMMALN.</span></span></param>
        <summary><span data-ttu-id="a4672-2003">ガンマ関数 Γ(x) の値の自然対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2003">Returns the natural logarithm of the gamma function, Γ(x).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2004">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2004">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-2005">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2005">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-2006">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2006">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-2007">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2007">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-2008">X が数値以外の場合は、 <b>GammaLn</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2008">If x is nonnumeric, <b>GammaLn</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2009">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2009">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2010"><b>GammaLn</b>は x ≤ 0 の場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2010">If x ≤ 0, <b>GammaLn</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2011">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2011">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p727">i を整数とするとき、自然対数の底 e の GAMMALN(i) 乗は (i-1)! と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p727">The number e raised to the GAMMALN(i) power, where i is an integer, returns the same result as (i - 1)!. </span></span></para>
          <para><span data-ttu-id="a4672-2013">
            <b>GammaLn</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2013">
            <b>GammaLn</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2014">GammaLn メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2014">Figure 1: Equation for the GammaLn method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2015">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-2015">Where:</span></span></para>
          <para><span data-ttu-id="a4672-2016">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2016">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn_Precise">
      <MemberSignature Language="C#" Value="public double GammaLn_Precise (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn_Precise([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn_Precise (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn_Precise(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16929)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2017">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2017">X - the value for which you want to calculate GAMMALN.</span></span></param>
        <summary><span data-ttu-id="a4672-2018">ガンマ関数 Γ(x) の値の自然対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2018">Returns the natural logarithm of the gamma function, Γ(x).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2019">X が数値以外の場合は、 <b>GammaLn_Precise</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2019">If x is nonnumeric, the <b>GammaLn_Precise</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-2020">≤ 0、x は、 <b>GammaLn_Precise</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2020">If x ≤ 0, the <b>GammaLn_Precise</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-p730">i を整数とするとき、自然対数の底 e の GAMMALN(i) 乗は (i-1)! と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p730">The number e raised to the GAMMALN(i) power, where i is an integer, returns the same result as (i - 1)!. </span></span></para>
          <para><span data-ttu-id="a4672-2022">GammaLn メソッドの値は、次の数式で計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2022">GAMMALN is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2023">GammaLn_Precise メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2023">Figure 1: Equation for the GammaLn_Precise method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2024">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-2024">Where:</span></span></para>
          <para><span data-ttu-id="a4672-2025">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2025">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gauss">
      <MemberSignature Language="C#" Value="public double Gauss (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gauss([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gauss(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gauss (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gauss(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2026">分布を求める値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2026">The value for which you want the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-2027">標準正規分布の累積分布関数より小さい 0.5 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2027">Returns 0.5 less than the standard normal cumulative distribution.</span></span></summary>
        <returns><span data-ttu-id="a4672-2028"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2028"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gcd">
      <MemberSignature Language="C#" Value="public double Gcd (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gcd(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gcd (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p731">数値 1, 数値 2, … : 最大公約数を求める数値を指定します。引数は 1 ～ 29 個まで指定できます。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p731">Number1, number2, ... - 1 to 29 values. If any value is not an integer, it is truncated.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p732">複数の整数の最大公約数を返します。最大公約数とは、引数の数値 1、数値 2 … に指定されたすべての整数に共通する約数の中で、最も大きい約数をいいます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p732">Returns the greatest common divisor of two or more integers. The greatest common divisor is the largest integer that divides both number1 and number2 without a remainder.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2033">いずれかの引数が数値以外の場合は、<b>最大公約数</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2033">If any argument is nonnumeric, <b>Gcd</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2034">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2034">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2035"><b>最大公約数</b>は、いずれかの引数が 0 より小さい場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2035">If any argument is less than zero, <b>Gcd</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2036">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2036">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p735">1 はあらゆる整数の約数となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p735">One divides any value evenly. </span></span></para>
          <para><span data-ttu-id="a4672-2038">素数には、その数自体と 1 以外に約数がありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2038">A prime number has only itself and one as even divisors.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoMean">
      <MemberSignature Language="C#" Value="public double GeoMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeoMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeoMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p736">数値 1, 数値 2, … : 相乗平均を計算するため、最大 30 個までの数値を指定できます。半角のコンマ (,) で区切られた引数の代わりに、数値配列または配列に対するセル参照を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p736">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mean. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p737">正の数から成る配列またはセル範囲のデータの相乗平均を返します。GeoMean メソッドを利用すると、利率が変動する場合の複利計算で、平均成長率を計算することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p737">Returns the geometric mean of an array or range of positive data. For example, you can use GEOMEAN to calculate average growth rate given compound interest with variable rates.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p738">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p738">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p739">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p739">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p740">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p740">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p741">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p741">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-2047">≤ 0 のデータ場合は、<b>引数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2047">If any data point ≤ 0, <b>GeoMean</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2048">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2048">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2049">相乗平均は次の式で与えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2049">The equation for the geometric mean is:</span></span> </para>
          <para><span data-ttu-id="a4672-2050">幾何平均の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2050">Figure 1: Equation for the geometric mean</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GeStep">
      <MemberSignature Language="C#" Value="public double GeStep (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeStep([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeStep(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeStep (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16803)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2051">数値: しきい値と比較する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2051">Number - the value to test against step.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2052">ステップのしきい値となる値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2052">Step - the threshold value.</span></span> <span data-ttu-id="a4672-2053"><b>ステップの値を省略すると、0 を指定したと見なされます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2053">If you omit a value for step, <b>GeStep</b> uses zero.</span></span></param>
        <summary><span data-ttu-id="a4672-2054">受領の数は、次のステップの場合は 1 を返します。それ以外の場合、0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2054">Returns 1 if number ≥ step; returns 0 (zero) otherwise.</span></span> <span data-ttu-id="a4672-2055">値のセットをフィルター処理するのにには、この関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2055">Use this function to filter a set of values.</span></span> <span data-ttu-id="a4672-2056">などの複数の<b>GeStep</b>関数の和では、しきい値を超える値の個数を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2056">For example, by summing several <b>GeStep</b> functions you calculate the count of values that exceed a threshold.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2057">いずれかの引数が数値以外の場合は、 <b>GeStep</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2057">If any argument is nonnumeric, <b>GeStep</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2058">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2058">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Growth">
      <MemberSignature Language="C#" Value="public object Growth (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Growth([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Growth (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2059">既知の y: 既にわかっている y の値の系列で、y = b\*m^x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2059">Known_y's - the set of y-values you already know in the relationship y = b\*m^x.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2060">既知の x: 既にわかっている x の値の系列で、y = b\*m^x という関係になります。この引数は省略してもかまいません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2060">Known_x's - an optional set of x-values that you may already know in the relationship y = b\*m^x.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2061">新しい x の新しい x の値の対応する y の値を<b>増加</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2061">New_x's - new x-values for which you want <b>Growth</b> to return corresponding y-values.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2062">定数: 定数 b を 1 にするかどうかを論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2062">Const - a logical value specifying whether to force the constant b to equal 1.</span></span></param>
        <summary><span data-ttu-id="a4672-2063">既存のデータを使用して、予測指数拡張を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2063">Calculates predicted exponential growth by using existing data.</span></span> <span data-ttu-id="a4672-2064"><b>拡張</b>は、既存の x 値と y の値を使用して、指定した新規の x 値の系列の y 値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2064"><b>Growth</b> returns the y-values for a series of new x-values that you specify by using existing x-values and y-values.</span></span> <span data-ttu-id="a4672-2065">既存の x 値と y の値を指数曲線に合わせて<b>Growth</b>ワークシート関数を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2065">You can also use the <b>Growth</b> worksheet function to fit an exponential curve to existing x-values and y-values.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p747">既知の y の配列が 1 つの列に入力されている場合、既知の x の各列はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p747">If the array known_y's is in a single column, then each column of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p748">既知の y の配列が 1 つの行に入力されている場合、既知の x の各行はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p748">If the array known_y's is in a single row, then each row of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-2068">0 または負の値の既知の数値のいずれかの場合は、<b>成長</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2068">If any of the numbers in known_y's is 0 or negative, <b>Growth</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2069">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2069">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p750">既知の x の配列には、1 つまたは複数の変数の系列を指定することができます。変数の系列が 1 つである場合、既知の y と既知の x は、両者の次元が同じであれば、どのような形の範囲であってもかまいません。変数の系列が複数である場合、既知の y は 1 行または 1 列のセル範囲でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p750">The array known_x's can include one or more sets of variables. If only one variable is used, known_y's and known_x's can be ranges of any shape, as long as they have equal dimensions. If more than one variable is used, known_y's must be a vector (that is, a range with a height of one row or a width of one column). </span></span></para>
          <para><span data-ttu-id="a4672-p751">既知の x を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p751">If known_x's is omitted, it is assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-p752">新しい x には、既知の x と同様にそれぞれ独立した変数が入力されている 1 つの列 (または 1 つの行) を指定する必要があります。既知の y が 1 つの列に入力されている場合、既知の x と新しい x は同じ列数でなければなりません。また、既知の y が 1 つの行に入力されている場合、既知の x と新しい x は同じ行数でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p752">New_x's must include a column (or row) for each independent variable, just as known_x's does. So, if known_y's is in a single column, known_x's and new_x's must have the same number of columns. If known_y's is in a single row, known_x's and new_x's must have the same number of rows. </span></span></para>
          <para><span data-ttu-id="a4672-p753">新しい x を省略すると、既知の x と同じ値であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p753">If new_x's is omitted, it is assumed to be the same as known_x's. </span></span></para>
          <para><span data-ttu-id="a4672-p754">既知の x と新しい x の両方を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p754">If both known_x's and new_x's are omitted, they are assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-2081">場合定数を<b>true</b>または省略すると、b の値も計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2081">If const is <b>true</b> or omitted, b is calculated normally.</span></span> </para>
          <para><span data-ttu-id="a4672-2082">場合定数が<b>false の場合</b>b が 1 に設定し、m の値が調整されるように y = m ^ x です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2082">If const is <b>false</b>, b is set equal to 1 and the m-values are adjusted so that y = m^x.</span></span> </para>
          <para><span data-ttu-id="a4672-p757">計算結果が配列となる数式は、適切なセル範囲を選択した後、その中に配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p757">Formulas that return arrays must be entered as array formulas after selecting the correct number of cells. </span></span></para>
          <para><span data-ttu-id="a4672-2084">既知の x のような引数に配列定数を指定するときは、半角のコンマ (,) を使って同じ行の値を区切り、半角のセミコロン (;) を使って各行を区切ります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2084">When entering an array constant for an argument such as known_x's, use commas to separate values in the same row and semicolons to separate rows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HarMean">
      <MemberSignature Language="C#" Value="public double HarMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HarMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HarMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p758">数値 1, 数値 2, … : 相乗平均を計算するため、最大 30 個までの数値を指定できます。半角のコンマ (,) で区切られた引数の代わりに、数値配列または配列に対するセル参照を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p758">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mean. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p759">1 組の数値の調和平均を返します。調和平均は、逆数の算術平均 (相加平均) に対する逆数として定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p759">Returns the harmonic mean of a data set. The harmonic mean is the reciprocal of the arithmetic mean of reciprocals.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p760">調和平均、相乗平均、相加平均の間には、調和平均 <= 相乗平均 <= 相加平均という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p760">The harmonic mean is always less than the geometric mean, which is always less than the arithmetic mean. </span></span></para>
          <para><span data-ttu-id="a4672-p761">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p761">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p762">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p762">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p763">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p763">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p764">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p764">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-2094">≤ 0 のデータ場合は、<b>引数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2094">If any data point ≤ 0, <b>HarMean</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2095">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2095">error value.</span></span> <span data-ttu-id="a4672-2096">調和平均は次の式で計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2096">The equation for the harmonic mean is:</span></span> </para>
          <para><span data-ttu-id="a4672-2097">調和平均の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2097">Figure 1: Equation for the harmonic mean</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Bin">
      <MemberSignature Language="C#" Value="public string Hex2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p766">数値: 変換する 16 進数を文字列として指定します。数値に指定できる文字数は 10 文字 (40 ビット) までです。数値の最上位のビット (右から 40 番目のビット) は符号を表し、残りの 39 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p766">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters. The most significant bit of number is the sign bit (40th bit from the right). The remaining 9 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2103">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2103">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-2104">場所が省略されると、 <b>Hex2Bin</b>が必要な文字の最小数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2104">If places is omitted, <b>Hex2Bin</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-2105">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2105">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-2106">16 進数を 2 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2106">Converts a hexadecimal number to binary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2107">負の数である場合、 <b>Hex2Bin</b>が場所を無視し、10-文字バイナリ数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2107">If number is negative, <b>Hex2Bin</b> ignores places and returns a 10-character binary number.</span></span> </para>
          <para><span data-ttu-id="a4672-p769">数値が負の数である場合、数値に FFFFFFFE00 より小さい値を指定することはできません。数値が正の数である場合、数値に 1FF より大きい値を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p769">If number is negative, it cannot be less than FFFFFFFE00, and if number is positive, it cannot be greater than 1FF. </span></span></para>
          <para><span data-ttu-id="a4672-2109">番号が 16 進数ではない場合、 <b>Hex2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2109">If number is not a valid hexadecimal number, <b>Hex2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2110">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2110">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2111"><b>Hex2Bin</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2111">If <b>Hex2Bin</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-2112">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2112">error value.</span></span> <span data-ttu-id="a4672-2113">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2113">If places is not an integer, it is truncated.</span></span> </para>
          <para><span data-ttu-id="a4672-2114">場所が数値以外の場合は、 <b>Hex2Bin</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2114">If places is nonnumeric, <b>Hex2Bin</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2115">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2115">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2116">桁数が負の場合、 <b>Hex2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2116">If places is negative, <b>Hex2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2117">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2117">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Dec">
      <MemberSignature Language="C#" Value="public string Hex2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Hex2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p774">数値: 変換する 16 進数を文字列として指定します。数値に指定できる文字数は 10 文字 (40 ビット) までです。数値の最上位のビットは符号を表し、残りの 39 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p774">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters (40 bits). The most significant bit of number is the sign bit. The remaining 39 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <summary><span data-ttu-id="a4672-2123">16 進数を 10 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2123">Converts a hexadecimal number to decimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2124">番号が 16 進数でない場合は、 <b>Hex2Dec</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2124">If number is not a valid hexadecimal number, <b>Hex2Dec</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2125">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2125">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Oct">
      <MemberSignature Language="C#" Value="public string Hex2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16770)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p776">数値: 変換する 16 進数を文字列として指定します。数値に指定できる文字数は 10 文字 (40 ビット) までです。数値の最上位のビットは符号を表し、残りの 39 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p776">Number - the hexadecimal number you want to convert. Number cannot contain more than 10 characters. The most significant bit of number is the sign bit. The remaining 39 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2131">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2131">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-2132">場所が省略されると、 <b>Hex2Oct</b>が必要な文字の最小数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2132">If places is omitted, <b>Hex2Oct</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-2133">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2133">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-2134">16 進数を 8 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2134">Converts a hexadecimal number to octal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2135">負の数である場合、 <b>Hex2Oct</b>が場所を無視し、10-文字 8 進数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2135">If number is negative, <b>Hex2Oct</b> ignores places and returns a 10-character octal number.</span></span> </para>
          <para><span data-ttu-id="a4672-p779">数値が負の数である場合、数値に FFE0000000 より小さい負の数を指定することはできません。数値が正の数である場合、数値に 1FFFFFFF より大きい正の数を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p779">If number is negative, it cannot be less than FFE0000000, and if number is positive, it cannot be greater than 1FFFFFFF. </span></span></para>
          <para><span data-ttu-id="a4672-2137">番号が 16 進数ではない場合、 <b>Hex2Oct</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2137">If number is not a valid hexadecimal number, <b>Hex2Oct</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2138">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2138">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2139"><b>Hex2Oct</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2139">If <b>Hex2Oct</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-2140">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2140">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p782">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p782">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-2142">場所が数値以外の場合は、 <b>Hex2Oct</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2142">If places is nonnumeric, <b>Hex2Oct</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2143">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2143">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2144">桁数が負の場合、 <b>Hex2Oct</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2144">If places is negative, <b>Hex2Oct</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2145">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2145">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HLookup">
      <MemberSignature Language="C#" Value="public object HLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object HLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p785">検索値: 範囲の上端行で検索する値を指定します。検索値には、値、セル参照、または文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p785">Lookup_value - the value to be found in the first row of the table. Lookup_value can be a value, a reference, or a text string.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p786">範囲: 目的のデータが含まれるテーブルを指定します。セル範囲の参照、またはセル範囲名を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p786">Table_array - a table of information in which data is looked up. Use a reference to a range or a range name.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2150">行番号の行番号を範囲に一致する値を返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2150">Row_index_num - the row number in table_array from which the matching value will be returned.</span></span> <span data-ttu-id="a4672-2151">1 の指定では、範囲の最初の行の値が返されます、2 の指定などと、範囲の 2 番目の行の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2151">A row_index_num of 1 returns the first row value in table_array, a row_index_num of 2 returns the second row value in table_array, and so on.</span></span> <span data-ttu-id="a4672-2152">行番号が 1 未満の場合は、 <b>HLookup</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2152">If row_index_num is less than 1, <b>HLookup</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2153">エラー値です。行番号が範囲の行数より大きい場合は、 <b>HLookup</b>は、#REF を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-2153">error value; if row_index_num is greater than the number of rows on table_array, <b>HLookup</b> returns the #REF!</span></span> <span data-ttu-id="a4672-2154">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2154">error value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2155">検索の型が正確に一致するか、近似値を検索するのには、 <b>HLookup</b>を使用するかを指定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2155">Range_lookup - a logical value that specifies whether you want <b>HLookup</b> to find an exact match or an approximate match.</span></span> <span data-ttu-id="a4672-2156">場合<b>は true</b>または省略すると、近似値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2156">If <b>true</b> or omitted, an approximate match is returned.</span></span> <span data-ttu-id="a4672-2157">つまり、厳密な一致が見つからない場合は、検索値未満である次の最大値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2157">In other words, if an exact match is not found, the next largest value that is less than lookup_value is returned.</span></span> <span data-ttu-id="a4672-2158">場合は<b>false</b>、 <b>HLookup</b>を正確に一致すると見つかります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2158">If <b>false</b>, <b>HLookup</b> will find an exact match.</span></span> <span data-ttu-id="a4672-2159">1 つが見つからない場合、エラー値 #n/a が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2159">If one is not found, the error value #N/A is returned.</span></span></param>
        <summary><span data-ttu-id="a4672-2160">テーブルの一番上の行または値の配列内の値を検索し、同じ列でテーブルまたは配列で指定した行から値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2160">Searches for a value in the top row of a table or an array of values, and then returns a value in the same column from a row you specify in the table or array.</span></span> <span data-ttu-id="a4672-2161">データ、テーブルの上部に、比較する値がある行で、行の指定された番号を検索する場合は、HLookup を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2161">Use HLookup when your comparison values are located in a row across the top of a table of data, and you want to look down a specified number of rows.</span></span> <span data-ttu-id="a4672-2162">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />を検索するデータの左側の列で、比較する値のある場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-2162">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> when your comparison values are located in a column to the left of the data you want to find.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2163"><b>検索値が見つからない、</b>検索の型は、 <b>true</b>の場合、検索値より小さい最大の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2163">If <b>HLookup</b> can't find lookup_value, and range_lookup is <b>true</b>, it uses the largest value that is less than lookup_value.</span></span> </para>
          <para><span data-ttu-id="a4672-2164">検査値が範囲の最初の行の最小値より小さい場合は、 <b>HLookup</b>は、#N/A エラー値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2164">If lookup_value is smaller than the smallest value in the first row of table_array, <b>HLookup</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p792">検索の型が FALSE で、検索値が文字列の場合、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p792">If range_lookup is FALSE and lookup_value is text, you can use the wildcard characters, question mark (?) and asterisk (\*), in lookup_value. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeom_Dist">
      <MemberSignature Language="C#" Value="public double HypGeom_Dist (double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]bool Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeom_Dist(double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2168">標本の成功数: 標本内で成功する数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2168">Sample_s - the number of successes in the sample.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2169">標本数: 標本数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2169">Number_sample - the size of the sample.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2170">母集団の成功数: 母集団内で成功する数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2170">Population_s - the number of successes in the population.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2171">母集団の大きさ: 母集団全体の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2171">Number_population - the population size.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-2172">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2172">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-2173">累積的な場合は<b>true</b>、 <b>HypGeom_Dist</b>は、累積分布関数の値を取得し、かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2173">If cumulative is <b>true</b>, then <b>HypGeom_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability mass function.</span></span></param>
        <summary><span data-ttu-id="a4672-2174">超幾何分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2174">Returns the hypergeometric distribution.</span></span> <span data-ttu-id="a4672-2175"><b>HypGeom_Dist</b>は、指定された標本数、母集団の成功数、母集団の大きさを指定されたサンプル成功数の確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2175"><b>HypGeom_Dist</b> returns the probability of a given number of sample successes, given the sample size, population successes, and population size.</span></span> <span data-ttu-id="a4672-2176">各観測には、成功または失敗のいずれかと等しい確率で指定されたサイズの各サブセットを選択した場合、母集団が有限の問題を<b>HypGeom_Dist</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2176">Use <b>HypGeom_Dist</b> for problems with a finite population, where each observation is either a success or a failure, and where each subset of a given size is chosen with equal likelihood.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p795">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p795">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-2178">いずれかの引数が数値以外の場合は、 <b>HypGeom_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2178">If any argument is nonnumeric, <b>HypGeom_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2179">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2179">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2180">場合標本の成功数&lt;0 または標本の成功数がより大きい、小さい方の標本数または母集団の成功数は、 <b>HypGeom_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2180">If sample_s &lt; 0 or sample_s is greater than the lesser of number_sample or population_s, <b>HypGeom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2181">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2181">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2182">標本の成功数よりも小さい場合の 0 (標本数 - 母集団の大きさ + 母集団の成功数)、 <b>HypGeom_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2182">If sample_s is less than the larger of 0 or (number_sample - number_population + population_s), <b>HypGeom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2183">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2183">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2184">場合標本数 ≤ 0 または標本数&gt; <b>HypGeom_Dist</b>が #NUM を返す、母集団の大きさです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2184">If number_sample ≤ 0 or number_sample &gt; number_population, <b>HypGeom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2185">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2185">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2186">場合母集団の成功数 ≤ 0 または母集団の成功数&gt; <b>HypGeom_Dist</b>が #NUM を返す、母集団の大きさです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2186">If population_s ≤ 0 or population_s &gt; number_population, <b>HypGeom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2187">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2187">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2188">母集団の大きさの ≤ 0、 <b>HypGeom_Dist</b>は、#NUM を返します。 場合、</span><span class="sxs-lookup"><span data-stu-id="a4672-2188">If number_population ≤ 0, <b>HypGeom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2189">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2189">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2190">超幾何分布は次の式で与えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2190">The equation for the hypergeometric distribution is:</span></span> </para>
          <para><span data-ttu-id="a4672-2191">超幾何分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2191">Figure 1: Equation for the hypergeometric distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2192">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2192">where:</span></span></para>
          <para><span data-ttu-id="a4672-2193">x = 標本の成功数</span><span class="sxs-lookup"><span data-stu-id="a4672-2193">x = sample_s</span></span></para>
          <para><span data-ttu-id="a4672-2194">n = 標本数</span><span class="sxs-lookup"><span data-stu-id="a4672-2194">n = number_sample</span></span></para>
          <para><span data-ttu-id="a4672-2195">M = 母集団の成功数</span><span class="sxs-lookup"><span data-stu-id="a4672-2195">M = population_s</span></span></para>
          <para><span data-ttu-id="a4672-2196">N = 母集団の大きさ</span><span class="sxs-lookup"><span data-stu-id="a4672-2196">N = number_population</span></span></para>
          <para><span data-ttu-id="a4672-2197">有限母集団からの交換せずに、サンプリングでは、 
            <b>HypGeom_Dist</b>が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2197">
            <b>HypGeom_Dist</b> is used in sampling without replacement from a finite population.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeomDist">
      <MemberSignature Language="C#" Value="public double HypGeomDist (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeomDist(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2198">標本の成功数: 標本内で成功する数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2198">Sample_s - the number of successes in the sample.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2199">標本数: 標本数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2199">Number_sample - the size of the sample.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2200">母集団の成功数: 母集団内で成功する数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2200">Population_s - the number of successes in the population.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2201">母集団の大きさ: 母集団全体の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2201">Number_population - the population size.</span></span></param>
        <summary><span data-ttu-id="a4672-2202">超幾何分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2202">Returns the hypergeometric distribution.</span></span> <span data-ttu-id="a4672-2203"><b>HypGeomDist</b>は、指定された標本数、母集団の成功数、母集団の大きさを指定されたサンプル成功数の確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2203"><b>HypGeomDist</b> returns the probability of a given number of sample successes, given the sample size, population successes, and population size.</span></span> <span data-ttu-id="a4672-2204">各観測では、成功または失敗、および指定されたサイズの各サブセットが同じ可能性で選択は、母集団が有限で問題の<b>HypGeomDist</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2204">Use <b>HypGeomDist</b> for problems with a finite population, where each observation is either a success or a failure, and where each subset of a given size is chosen with equal likelihood.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2205">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2205">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-2206">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2206">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-2207">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2207">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-2208">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2208">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-p804">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p804">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-2210"><b>HypGeomDist</b>は、いずれかの引数が数値以外の場合は、#VALUE を返します!</span><span class="sxs-lookup"><span data-stu-id="a4672-2210">If any argument is nonnumeric, <b>HypGeomDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2211">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2211">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2212">場合標本の成功数&lt;0、または標本の成功数が小さい方より大きい標本数または母集団の成功数、 <b>HypGeomDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2212">If sample_s &lt; 0 or sample_s is greater than the lesser of number_sample or population_s, <b>HypGeomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2213">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2213">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2214">標本の成功数よりも小さい場合のか (標本数 - 母集団の大きさ + 母集団の成功数) の場合、 <b>HypGeomDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2214">If sample_s is less than the larger of 0 or (number_sample - number_population + population_s), <b>HypGeomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2215">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2215">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2216">場合標本数 ≤ 0 または標本数&gt;母集団の大きさ、HYPGEOMDIST が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2216">If number_sample ≤ 0 or number_sample &gt; number_population, HYPGEOMDIST returns the #NUM!</span></span> <span data-ttu-id="a4672-2217">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2217">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2218">場合母集団の成功数 ≤ 0 または母集団の成功数&gt;母集団の大きさ、 <b>HypGeomDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2218">If population_s ≤ 0 or population_s &gt; number_population, <b>HypGeomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2219">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2219">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2220">母集団の大きさの ≤ 0、 <b>HypGeomDist</b>は、#NUM を返します。 場合、</span><span class="sxs-lookup"><span data-stu-id="a4672-2220">If number_population ≤ 0, <b>HypGeomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2221">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2221">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2222">超幾何分布は次の式で与えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2222">The equation for the hypergeometric distribution is:</span></span> </para>
          <para><span data-ttu-id="a4672-2223">超幾何分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2223">Figure 1: Equation for the hypergeometric distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2224">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2224">where:</span></span></para>
          <para><span data-ttu-id="a4672-2225">x = 標本の成功数</span><span class="sxs-lookup"><span data-stu-id="a4672-2225">x = sample_s</span></span></para>
          <para><span data-ttu-id="a4672-2226">n = 標本数</span><span class="sxs-lookup"><span data-stu-id="a4672-2226">n = number_sample</span></span></para>
          <para><span data-ttu-id="a4672-2227">M = 母集団の成功数</span><span class="sxs-lookup"><span data-stu-id="a4672-2227">M = population_s</span></span></para>
          <para><span data-ttu-id="a4672-2228">N = 母集団の大きさ</span><span class="sxs-lookup"><span data-stu-id="a4672-2228">N = number_population</span></span></para>
          <para><span data-ttu-id="a4672-2229">
            <b>HypGeomDist</b>は、母集団が有限から交換せずに、サンプリングに使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2229">
            <b>HypGeomDist</b> is used in sampling without replacement from a finite population.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IfError">
      <MemberSignature Language="C#" Value="public object IfError (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfError([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfError(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfError (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfError(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2230">値: エラーかどうかをチェックする引数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2230">Value - the argument that is checked for an error.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p811">エラーの場合の値: 数式がエラーとして評価される場合に返す値です。評価されるエラーの種類は、#N/A、#VALUE!、#REF!、#DIV/0!、#NUM!、#NAME?、および #NULL! です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p811">Value_if_error - the value to return if the formula evaluates to an error. The following error types are evaluated: #N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!.</span></span></param>
        <summary><span data-ttu-id="a4672-2233">かどうか、数式にするとエラーを指定する値を返します。それ以外の場合、数式の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2233">Returns a value you specify if a formula evaluates to an error; otherwise, returns the result of the formula.</span></span> <span data-ttu-id="a4672-2234"><b>IfError</b>関数を使用してトラップして数式のエラーを処理します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2234">Use the <b>IfError</b> function to trap and handle errors in a formula.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2235">値またはエラーの場合に空のセルがある場合として扱わ<b>れます空の文字列値</b>("")。</span><span class="sxs-lookup"><span data-stu-id="a4672-2235">If value or value_if_error is an empty cell, <b>IfError</b> treats it as an empty string value ("").</span></span> </para>
          <para><span data-ttu-id="a4672-2236">値が配列数式の場合は、値で指定した範囲の各セルの結果の配列が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-2236">If value is an array formula, <b>IfError</b> returns an array of results for each cell in the range specified in value.</span></span> <span data-ttu-id="a4672-2237">次の 2 つ目の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2237">See the second example below.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IfNa">
      <MemberSignature Language="C#" Value="public object IfNa (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfNa([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfNa(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfNa (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfNa(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16974)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2238">value: 任意の値、式、または参照。</span><span class="sxs-lookup"><span data-stu-id="a4672-2238">value: Any value or expression or reference.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2239">value_if_na: 任意の値、式、または参照。</span><span class="sxs-lookup"><span data-stu-id="a4672-2239">value_if_na: Any value or expression or reference.</span></span></param>
        <summary><span data-ttu-id="a4672-2240">式が #N/A に解決されると、指定した値を返します。それ以外の場合は、式の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2240">Returns the value you specify if the expression resolves to #N/A, otherwise returns the result of the expression.</span></span></summary>
        <returns><span data-ttu-id="a4672-2241"><b>VARIANT</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2241"><b>VARIANT</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImAbs">
      <MemberSignature Language="C#" Value="public string ImAbs (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImAbs([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImAbs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImAbs (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImAbs(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2242">複素数: 絶対値を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2242">Inumber - a complex number for which you want the absolute value.</span></span></param>
        <summary><span data-ttu-id="a4672-2243">文字列 "x+yi" または "x+yj" の形式で指定された複素数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2243">Returns the absolute value (modulus) of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2244">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2244">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2245">複素数の絶対値は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2245">The absolute value of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2246">複素数の絶対値の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2246">Figure 1: Equation for absolute value of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2247">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2247">where:</span></span></para>
          <para><span data-ttu-id="a4672-2248">z = x + イ</span><span class="sxs-lookup"><span data-stu-id="a4672-2248">z = x + yi</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Imaginary">
      <MemberSignature Language="C#" Value="public double Imaginary (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Imaginary([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Imaginary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imaginary (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Imaginary(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2249">複素数: 虚数係数を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2249">Inumber - a complex number for which you want the imaginary coefficient.</span></span></param>
        <summary><span data-ttu-id="a4672-2250">文字列 "x+yi" または "x+yj" の形式で指定された複素数の虚数係数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2250">Returns the imaginary coefficient of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2251">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2251">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImArgument">
      <MemberSignature Language="C#" Value="public string ImArgument (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImArgument([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImArgument(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImArgument (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImArgument(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16791)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2252">複素数: 引数 θ を求める複素数を、文字列 "x+yi" または "x+yj" の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2252">Inumber is a complex number for which you want the argument theta.</span></span></param>
        <summary><span data-ttu-id="a4672-2253">引数 (シータ) ラジアンで表わした角度を返すようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2253">Returns the argument (theta), an angle expressed in radians, such that:</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2254">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2254">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2255">
            <b>されて</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2255">
            <b>ImArgument</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2256">されてメソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2256">Figure 1: Equation for the ImArgument method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2257">ここで、</span><span class="sxs-lookup"><span data-stu-id="a4672-2257">Where:</span></span></para>
          <para><span data-ttu-id="a4672-2258">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2258">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2259">and</span><span class="sxs-lookup"><span data-stu-id="a4672-2259">and</span></span></para>
          <para><span data-ttu-id="a4672-2260">z = x + イ</span><span class="sxs-lookup"><span data-stu-id="a4672-2260">z = x + yi</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImConjugate">
      <MemberSignature Language="C#" Value="public string ImConjugate (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImConjugate([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImConjugate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImConjugate (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImConjugate(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16792)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2261">複素数: 共役を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2261">Inumber - a complex number for which you want the conjugate.</span></span></param>
        <summary><span data-ttu-id="a4672-2262">文字列 "x+yi" または "x+yj" の形式で指定された複素数の複素共役を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2262">Returns the complex conjugate of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2263">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2263">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2264">複素数の共役は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2264">The conjugate of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2265">複素数の共役の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2265">Figure 1: Equation for conjugate of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCos">
      <MemberSignature Language="C#" Value="public string ImCos (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCos([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCos(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCos (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCos(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2266">複素数: コサインを求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2266">Inumber - a complex number for which you want the cosine.</span></span></param>
        <summary><span data-ttu-id="a4672-2267">文字列 "x+yi" または "x+yj" の形式で指定された複素数のコサインを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2267">Returns the cosine of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2268">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2268">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2269">複素数が論理値の場合は、<b>されて</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2269">If inumber is a logical value, <b>ImCos</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2270">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2270">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2271">複素数のコサインは、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2271">The cosine of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2272">複素数のコサインを図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2272">Figure 1: Cosine of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCosh">
      <MemberSignature Language="C#" Value="public string ImCosh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCosh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCosh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCosh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCosh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16978)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2273">双曲線余弦を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2273">Complex number for which you want the hyperbolic cosine.</span></span></param>
        <summary><span data-ttu-id="a4672-2274">複素数の双曲線余弦 (ハイパーボリック コサイン) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2274">Returns the hyperbolic cosine of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2275"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2275"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCot">
      <MemberSignature Language="C#" Value="public string ImCot (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCot([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCot (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCot(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2276">余接を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2276">Complex number for which you want the cotangent.</span></span></param>
        <summary><span data-ttu-id="a4672-2277">複素数の余接を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2277">Returns the cotangent of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2278"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2278"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsc">
      <MemberSignature Language="C#" Value="public string ImCsc (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsc([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsc(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsc (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsc(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2279">余割を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2279">Complex number for which you want the cosecant.</span></span></param>
        <summary><span data-ttu-id="a4672-2280">複素数の余割 (コセカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2280">Returns the cosecant of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2281"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2281"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsch">
      <MemberSignature Language="C#" Value="public string ImCsch (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsch([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsch (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsch(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2282">双曲線余割を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2282">Complex number for which you want the hyperbolic cosecant.</span></span></param>
        <summary><span data-ttu-id="a4672-2283">複素数の双曲線余割 (ハイパーボリック コセカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2283">Returns the hyperbolic cosecant of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2284"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2284"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImDiv">
      <MemberSignature Language="C#" Value="public string ImDiv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImDiv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImDiv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImDiv (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImDiv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2285">複素数 1: 割り算の分子または被除数となる複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2285">Inumber1 - the complex numerator or dividend.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2286">複素数 2: 割り算の分母または除数となる複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2286">Inumber2 - the complex denominator or divisor.</span></span></param>
        <summary><span data-ttu-id="a4672-2287">文字列 "x+yi" または "x+yj" の形式で指定された 2 つの複素数の商を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2287">Returns the quotient of two complex numbers in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2288">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2288">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2289">2 つの複素数の商は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2289">The quotient of two complex numbers is:</span></span> </para>
          <para><span data-ttu-id="a4672-2290">図 1: 2 つの複素数の商</span><span class="sxs-lookup"><span data-stu-id="a4672-2290">Figure 1: Quotient of two complex numbers</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImExp">
      <MemberSignature Language="C#" Value="public string ImExp (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImExp([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImExp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImExp (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImExp(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16790)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2291">複素数: べき乗を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2291">Inumber - a complex number for which you want the exponential.</span></span></param>
        <summary><span data-ttu-id="a4672-2292">文字列 "x+yi" または "x+yj" の形式で指定された複素数のべき乗を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2292">Returns the exponential of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2293">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2293">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2294">複素数のべき乗は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2294">The exponential of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2295">図 1: 複素数の指数</span><span class="sxs-lookup"><span data-stu-id="a4672-2295">Figure 1: Exponential of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLn">
      <MemberSignature Language="C#" Value="public string ImLn (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLn([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLn(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLn (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLn(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2296">複素数: 自然対数を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2296">Inumber - a complex number for which you want the natural logarithm.</span></span></param>
        <summary><span data-ttu-id="a4672-2297">文字列 "x+yi" または "x+yj" の形式で指定された複素数の自然対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2297">Returns the natural logarithm of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2298">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2298">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2299">複素数の自然対数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2299">The natural logarithm of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2300">複素数の自然対数を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2300">Figure 1: Natural logarithm of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2301">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2301">where:</span></span></para>
          <para><span data-ttu-id="a4672-2302">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2302">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog10">
      <MemberSignature Language="C#" Value="public string ImLog10 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog10([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog10 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog10(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2303">複素数: 常用対数を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2303">Inumber - a complex number for which you want the common logarithm.</span></span></param>
        <summary><span data-ttu-id="a4672-2304">文字列 "x+yi" または "x+yj" の形式で指定された複素数の 10 を底とする対数 (常用対数) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2304">Returns the common logarithm (base 10) of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2305">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2305">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2306">複素数の常用対数は、自然対数を使って計算することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2306">The common logarithm of a complex number can be calculated from the natural logarithm as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2307">複素数の常用対数の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2307">Figure 1: Equation for common logarithm of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog2">
      <MemberSignature Language="C#" Value="public string ImLog2 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog2([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog2(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog2 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog2(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16786)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2308">複素数: 2 を底とする対数を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2308">Inumber - a complex number for which you want the base-2 logarithm.</span></span></param>
        <summary><span data-ttu-id="a4672-2309">文字列 "x+yi" または "x+yj" の形式で指定された複素数の 2 を底とする対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2309">Returns the base-2 logarithm of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2310">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2310">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2311">複素数の 2 を底とする対数は、自然対数を使って計算することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2311">The base-2 logarithm of a complex number can be calculated from the natural logarithm as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2312">複素数の 2 を底とする対数の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2312">Figure 1: Equation for base-2 logarithm of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImPower">
      <MemberSignature Language="C#" Value="public string ImPower (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImPower([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImPower(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImPower (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImPower(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16782)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2313">複素数: べき乗を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2313">Inumber - a complex number you want to raise to a power.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2314">数値: 複素数を底とするべき乗の指数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2314">Number - the power to which you want to raise the complex number.</span></span></param>
        <summary><span data-ttu-id="a4672-2315">文字列 "x+yi" または "x+yj" の形式で指定された複素数の整数乗を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2315">Returns a complex number in x + yi or x + yj text format raised to a power.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2316">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2316">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2317">数値が数値以外の場合は、<b>値</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2317">If number is nonnumeric, <b>ImPower</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2318">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2318">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p827">数値には、整数、分数、または負の数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p827">Number can be an integer, fractional, or negative. </span></span></para>
          <para><span data-ttu-id="a4672-2320">複素数を底とするべき乗は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2320">A complex number raised to a power is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2321">図 1: 数式の複雑な数値を累乗しました。</span><span class="sxs-lookup"><span data-stu-id="a4672-2321">Figure 1: Equation complex number raised to a power</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2322">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2322">where:</span></span></para>
          <para><span data-ttu-id="a4672-2323">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2323">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2324">、および</span><span class="sxs-lookup"><span data-stu-id="a4672-2324">and:</span></span></para>
          <para><span data-ttu-id="a4672-2325">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2325">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2326">、および</span><span class="sxs-lookup"><span data-stu-id="a4672-2326">and:</span></span></para>
          <para><span data-ttu-id="a4672-2327">図 4: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2327">Figure 4: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImProduct">
      <MemberSignature Language="C#" Value="public string ImProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p828">複素数 1, 複素数 2, … : 積を求める複素数を指定します。引数は 1 ～ 29 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p828">Inumber1, inumber2,… - 1 to 29 complex numbers to multiply.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-2330">文字列 "x+yi" または "x+yj" の形式で指定された 2 ～ 29 個の複素数の積を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2330">Returns the product of 2 to 29 complex numbers in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2331">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2331">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2332">2 つの複素数の積は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2332">The product of two complex numbers is:</span></span></para>
          <para><span data-ttu-id="a4672-2333">図 1: 2 つの複素数の積</span><span class="sxs-lookup"><span data-stu-id="a4672-2333">Figure 1: Product of two complex numbers</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImReal">
      <MemberSignature Language="C#" Value="public double ImReal (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ImReal([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImReal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImReal (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ImReal(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2334">複素数: 実数係数を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2334">Inumber - a complex number for which you want the real coefficient.</span></span></param>
        <summary><span data-ttu-id="a4672-2335">文字列 "x+yi" または "x+yj" の形式で指定された複素数の実数係数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2335">Returns the real coefficient of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2336">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2336">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSec">
      <MemberSignature Language="C#" Value="public string ImSec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2337">双曲線余割を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2337">Complex number for which you want the hyperbolic cosecant.</span></span></param>
        <summary><span data-ttu-id="a4672-2338">複素数の双曲線余割 (ハイパーボリック コセカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2338">Returns the hyperbolic cosecant of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2339"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2339"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSech">
      <MemberSignature Language="C#" Value="public string ImSech (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSech([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSech(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSech (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSech(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2340">双曲線正割を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2340">Complex number for which you want the hyperbolic secant.</span></span></param>
        <summary><span data-ttu-id="a4672-2341">複素数の正割 (セカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2341">Returns the secant of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2342"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2342"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSin">
      <MemberSignature Language="C#" Value="public string ImSin (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSin([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSin(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSin (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSin(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2343">複素数: サインを求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2343">Inumber - a complex number for which you want the sine.</span></span></param>
        <summary><span data-ttu-id="a4672-2344">文字列 "x+yi" または "x+yj" の形式で指定された複素数のサインを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2344">Returns the sine of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2345">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2345">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2346">複素数のサインは、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2346">The sine of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2347">複素数のサインを図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2347">Figure 1: Sine of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSinh">
      <MemberSignature Language="C#" Value="public string ImSinh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSinh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSinh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSinh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSinh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16977)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2348">双曲線正接を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2348">Complex number for which you want the hyperbolic sine.</span></span></param>
        <summary><span data-ttu-id="a4672-2349">複素数の双曲線正弦 (ハイパーボリック サイン) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2349">Returns the hyperbolic sine of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2350"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2350"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSqrt">
      <MemberSignature Language="C#" Value="public string ImSqrt (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSqrt([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSqrt(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSqrt (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSqrt(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2351">複素数: 平方根を求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2351">Inumber - a complex number for which you want the square root.</span></span></param>
        <summary><span data-ttu-id="a4672-2352">文字列 "x+yi" または "x+yj" の形式で指定された複素数の平方根を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2352">Returns the square root of a complex number in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2353">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2353">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> <span data-ttu-id="a4672-2354">複素数の平方根は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2354">The square root of a complex number is:</span></span> </para>
          <para><span data-ttu-id="a4672-2355">図 1: 複素数の平方根を求めます</span><span class="sxs-lookup"><span data-stu-id="a4672-2355">Figure 1: Square root of a complex number</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2356">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2356">where:</span></span></para>
          <para><span data-ttu-id="a4672-2357">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2357">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2358">、および</span><span class="sxs-lookup"><span data-stu-id="a4672-2358">and:</span></span></para>
          <para><span data-ttu-id="a4672-2359">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2359">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2360">、および</span><span class="sxs-lookup"><span data-stu-id="a4672-2360">and:</span></span></para>
          <para><span data-ttu-id="a4672-2361">図 4: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2361">Figure 4: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSub">
      <MemberSignature Language="C#" Value="public string ImSub (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSub([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSub(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSub (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSub(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16780)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2362">複素数 1: 複素数 2 から減算する複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2362">Inumber1 - the complex number from which to subtract inumber2.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2363">複素数 2: 複素数 1 から減算する複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2363">Inumber2 - the complex number to subtract from inumber1.</span></span></param>
        <summary><span data-ttu-id="a4672-2364">文字列 "x+yi" または "x+yj" の形式で指定された 2 つの複素数の差を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2364">Returns the difference of two complex numbers in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2365">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2365">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span></para>
          <para><span data-ttu-id="a4672-2366">2 つの複素数の差は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2366">The difference of two complex numbers is:</span></span></para>
          <para><span data-ttu-id="a4672-2367">図 1: 2 つの複素数の差</span><span class="sxs-lookup"><span data-stu-id="a4672-2367">Figure 1: Difference of two complex numbers</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSum">
      <MemberSignature Language="C#" Value="public string ImSum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2368">複素数 1, 複素数 2, … : 和を求める複素数を指定します。引数は 1 ～ 29 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2368">Inumber1,inumber2,... - 1 to 29 complex numbers to add.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-2369">文字列 "x+yi" または "x+yj" の形式で指定された 2 ～ 29 個の複素数の和を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2369">Returns the sum of two or more complex numbers in x + yi or x + yj text format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2370">使用<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />を実数と虚数係数を複素数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2370">Use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> to convert real and imaginary coefficients into a complex number.</span></span> </para>
          <para><span data-ttu-id="a4672-2371">2 つの複素数の和は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2371">The sum of two complex numbers is:</span></span></para>
          <para><span data-ttu-id="a4672-2372">図 1: 2 つの複素数の和</span><span class="sxs-lookup"><span data-stu-id="a4672-2372">Figure 1: Sum of two complex numbers</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImTan">
      <MemberSignature Language="C#" Value="public string ImTan (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImTan([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImTan(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImTan (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImTan(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2373">タンジェントを求める複素数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2373">Complex number for which you want the tangent.</span></span></param>
        <summary><span data-ttu-id="a4672-2374">複素数の正接 (タンジェント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2374">Returns the tangent of a complex number.</span></span></summary>
        <returns><span data-ttu-id="a4672-2375"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2375"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public object Index (object Arg1, double Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Index([in]object Arg1, [in]float64 Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Index (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p833">配列または範囲: セル範囲または配列定数を指定します。セル範囲形式の場合は、1 つまたは複数のセルの参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p833">Array or Reference - a range of cells or an array constant. For references, it is the reference to one or more cell ranges.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p834">行番号: 配列の中にあり、値を返す行を数値で指定します。行番号を省略した場合は、必ず列番号を指定する必要があります。セル範囲形式の場合は、範囲の中にあり、セル参照を返すセルの行位置を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p834">Row_num - selects the row in array from which to return a value. If row_num is omitted, column_num is required. For references, the number of the row in reference from which to return a reference</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p835">列番号: 配列の中にあり、値を返す列を数値で指定します。列番号を省略した場合は、必ず行番号を指定する必要があります。セル範囲形式の場合は、範囲の中にあり、セル参照を返すセルの列位置を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p835">Column_num - selects the column in array from which to return a value. If column_num is omitted, row_num is required. For reference, the number of the column in reference from which to return a reference.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2384">領域の参照を返す場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2384">Area_num - only used when returning references.</span></span> <span data-ttu-id="a4672-2385">中から行番号と列番号の積集合を返す対象となる範囲を選択します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2385">Selects a range in reference from which to return the intersection of row_num and column_num.</span></span> <span data-ttu-id="a4672-2386">最初に選択または入力された領域は、番号 1、2 番目は 2 というようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2386">The first area selected or entered is numbered 1, the second is 2, and so on.</span></span> <span data-ttu-id="a4672-2387">領域を省略すると、<b>インデックス</b>が 1 の領域を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2387">If area_num is omitted, <b>Index</b> uses area 1.</span></span></param>
        <summary><span data-ttu-id="a4672-2388">値またはテーブルまたは範囲内の値への参照を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2388">Returns a value or the reference to a value from within a table or range.</span></span> <span data-ttu-id="a4672-2389"><b>Index</b>関数の 2 つの形式があります。 配列形式とセル範囲形式です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2389">There are two forms of the <b>Index</b> function: the array form and the reference form.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2390">配列形式</span><span class="sxs-lookup"><span data-stu-id="a4672-2390">Array form</span></span></para>
          <para><span data-ttu-id="a4672-2391">行番号と列番号で指定されるテーブルまたは配列の要素の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2391">Returns the value of an element in a table or an array, selected by the row and column number indexes.</span></span></para>
          <para><span data-ttu-id="a4672-2392"><b>インデックス</b>を作成する最初の引数が配列定数である場合は、配列形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2392">Use the array form if the first argument to <b>Index</b> is an array constant.</span></span></para>
          <para><span data-ttu-id="a4672-2393">行番号と列番号の両方の引数を使用する場合は、行番号と列の交差部分にあるセルの値が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-2393">If both the row_num and column_num arguments are used, <b>Index</b> returns the value in the cell at the intersection of row_num and column_num.</span></span> </para>
          <para><span data-ttu-id="a4672-2394"><b>行番号または列番号を 0 (ゼロ) に設定すると、それぞれ列全体または行の値の配列が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2394">If you set row_num or column_num to 0 (zero), <b>Index</b> returns the array of values for the entire column or row, respectively.</span></span> <span data-ttu-id="a4672-2395">配列として返される値を使用するには、行のセルの水平方向の範囲内と垂直方向の列のセル範囲に配列数式として<b>Index</b>関数を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2395">To use values returned as an array, enter the <b>Index</b> function as an array formula in a horizontal range of cells for a row, and in a vertical range of cells for a column.</span></span> <span data-ttu-id="a4672-2396">配列数式を入力するには、ctrl キーと SHIFT キーを押しながら ENTER を押します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2396">To enter an array formula, press CTRL+SHIFT+ENTER.</span></span> </para>
          <para><span data-ttu-id="a4672-2397">行番号と列番号は、配列内のセルをポイントする必要があります。それ以外の場合、<b>インデックス</b>は、#REF を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-2397">Row_num and column_num must point to a cell within array; otherwise, <b>Index</b> returns the #REF!</span></span> <span data-ttu-id="a4672-2398">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2398">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2399">参照フォーム</span><span class="sxs-lookup"><span data-stu-id="a4672-2399">Reference form</span></span></para>
          <para><span data-ttu-id="a4672-p841">指定された行と列が交差する位置にあるセルの参照を返します。隣接しない複数のセル範囲を指定した場合、その中から任意の領域を選択できます。範囲で指定した各領域が 1 行または 1 列である場合、行番号または列番号はそれぞれ省略することができます。たとえば、範囲が 1 行のみである場合は、INDEX(範囲,列番号) と指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p841">Returns the reference of the cell at the intersection of a particular row and column. If the reference is made up of nonadjacent selections, you can pick the selection to look in. If each area in reference contains only one row or column, the row_num or column_num argument, respectively, is optional. For example, for a single row reference, use INDEX(reference,,column_num). </span></span></para>
          <para><span data-ttu-id="a4672-2404">行番号と列番号が特定のセルを選択して参照し、領域には、特定の範囲が選択され、: 行番号 1 は、範囲の最初の行、列番号 1 は、最初の列とします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2404">After reference and area_num have selected a particular range, row_num and column_num select a particular cell: row_num 1 is the first row in the range, column_num 1 is the first column, and so on.</span></span> <span data-ttu-id="a4672-2405"><b>インデックス</b>を使用して返された参照は、行番号と列の交差部分です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2405">The reference returned by <b>Index</b> is the intersection of row_num and column_num.</span></span> </para>
          <para><span data-ttu-id="a4672-2406"><b>行番号または列番号を 0 (ゼロ) に設定すると、それぞれ列全体または行の参照が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2406">If you set row_num or column_num to 0 (zero), <b>Index</b> returns the reference for the entire column or row, respectively.</span></span></para>
          <para><span data-ttu-id="a4672-2407">行番号、列番号、および領域は、参照内のセルをポイントする必要があります。それ以外の場合、<b>インデックス</b>は、#REF を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-2407">Row_num, column_num, and area_num must point to a cell within reference; otherwise, <b>Index</b> returns the #REF!</span></span> <span data-ttu-id="a4672-2408">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2408">error value.</span></span> <span data-ttu-id="a4672-2409">行番号と列番号を省略すると、領域で指定された参照の領域が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-2409">If row_num and column_num are omitted, <b>Index</b> returns the area in reference specified by area_num.</span></span> </para>
          <para><span data-ttu-id="a4672-2410"><b>Index</b>関数の結果の参照は、ほかのように解釈されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2410">The result of the <b>Index</b> function is a reference and is interpreted as such by other formulas.</span></span> <span data-ttu-id="a4672-2411">関数、セル参照または値としてインデックスの戻り値を使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2411">Depending on the formula, the return value of INDEX may be used as a reference or as a value.</span></span> <span data-ttu-id="a4672-2412">たとえば、数式のセル ("width"、インデックス (a1: b2、1, 2)) は、CELL("width",B1) と同じです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2412">For example, the formula CELL("width",INDEX(A1:B2,1,2)) is equivalent to CELL("width",B1).</span></span> <span data-ttu-id="a4672-2413">CELL 関数は、セル参照とインデックスの戻り値を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2413">The CELL function uses the return value of INDEX as a cell reference.</span></span> <span data-ttu-id="a4672-2414">一方、2\*INDEX(A1:B2,1,2) の数式は、セル B1 の数値に<b>インデックス</b>の戻り値を変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2414">On the other hand, a formula such as 2\*INDEX(A1:B2,1,2) translates the return value of <b>Index</b> into the number in cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intercept">
      <MemberSignature Language="C#" Value="public double Intercept (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Intercept([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intercept (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Intercept(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2415">既知の y: 観測またはデータの従属範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2415">Known_y's - the dependent set of observations or data.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2416">既知の x: 観測またはデータの独立範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2416">Known_x's - the independent set of observations or data.</span></span></param>
        <summary><span data-ttu-id="a4672-2417">既存の x 値と y の値を使用して、直線が y 軸を交差するが、ポイントを計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2417">Calculates the point at which a line will intersect the y-axis by using existing x-values and y-values.</span></span> <span data-ttu-id="a4672-2418">切片は、回帰直線の既知の x 値と既知の y 値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2418">The intercept point is based on a best-fit regression line plotted through the known x-values and known y-values.</span></span> <span data-ttu-id="a4672-2419">0 (ゼロ) は、独立変数と従属変数の値を決定するときは、<b>インターセプト</b>関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2419">Use the <b>Intercept</b> function when you want to determine the value of the dependent variable when the independent variable is 0 (zero).</span></span> <span data-ttu-id="a4672-2420">たとえば、室温と高く、データ ポイントが作成されたときに、0 ° C で、金属の電気抵抗を予測するため<b>を受け取る</b>関数を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2420">For example, you can use the <b>Intercept</b> function to predict a metal's electrical resistance at 0°C when your data points were taken at room temperature and higher.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p846">引数には、数値、数値配列、あるいは数値を含む範囲を参照する名前またはセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p846">The arguments should be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p847">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p847">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-2423">既知の y と既知のデータ ポイントの個数が異なる、データ ポイントが含まれていない場合は、#N/A エラー値を返します<b>をインターセプト</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2423">If known_y's and known_x's contain a different number of data points or contain no data points, <b>Intercept</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2424">回帰直線の切片 a は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2424">The equation for the intercept of the regression line, a, is:</span></span></para>
          <para><span data-ttu-id="a4672-2425">回帰直線の切片の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2425">Figure 1: Equation for the intercept of the regression line</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2426">また、回帰直線の傾き b は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2426">where the slope, b, is calculated as:</span></span></para>
          <para><span data-ttu-id="a4672-2427">傾きの図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2427">Figure 2: Equation for the slope</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2428">ここで、x は標本平均 AVERAGE(既知の x)、y は標本平均 AVERAGE(既知の y) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2428">and where x and y are the sample means AVERAGE(known_x's) and AVERAGE(known_y's).</span></span></para>
          <para><span data-ttu-id="a4672-2429"><b>インターセプト</b>をで使用される基になるアルゴリズムと<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />関数で使用されている基になるアルゴリズムとは異なる、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2429">The underlying algorithm used in the <b>Intercept</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> functions is different than the underlying algorithm used in the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> function.</span></span> <span data-ttu-id="a4672-2430">データが不定で共線性と、これらのアルゴリズムの違いは異なる結果につながります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2430">The difference between these algorithms can lead to different results when data is undetermined and collinear.</span></span> <span data-ttu-id="a4672-2431">たとえば、既知の y 引数のデータ要素が 0、既知の x 引数のデータ要素が 1 の場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-2431">For example, if the data points of the known_y's argument are 0 and the data points of the known_x's argument are 1:</span></span> </para><span data-ttu-id="a4672-2432">
          <list type="bullet">
            <item>
              <description>
                <b>インターセプト</b>し、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> #DIV または 0 を返します。エラーです。の<b>インターセプト</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />のアルゴリズムは、1 つの答えを探すように設計されていて、ここですることができます複数の回答です。</description>
            </item> 
            <item>
              <description> 
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> 0 の値を返します。<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />アルゴリズムは、共線性のデータに対して適切な結果を返すように設計されていて、ここで少なくとも 1 つの解が求められます</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2432">
          <list type="bullet">
            <item>
              <description>
                <b>Intercept</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> return a #DIV/0! error. The <b>Intercept</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> algorithm is designed to look for one and only one answer, and in this case there can be more than one answer. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> returns a value of 0. The <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> algorithm is designed to return reasonable results for collinear data, and in this case at least one answer can be found.</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IntRate">
      <MemberSignature Language="C#" Value="public double IntRate (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IntRate([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IntRate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IntRate (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p850">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p850">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p851">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p851">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2437">投資額: 証券への投資額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2437">Investment - the amount invested in the security.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2438">償還価額: 満期日における証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2438">Redemption - the amount to be received at maturity.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-2439">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2439">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-2440">全額投資された証券の利率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2440">Returns the interest rate for a fully invested security.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-2441"><list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2441"><list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p852">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p852">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p853">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p853">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p854">受渡日、満期日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p854">Settlement, maturity, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-2450"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2450">If settlement or maturity is not a valid date, <b>IntRate</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2451">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2451">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2452">場合投資 ≤ 0 または償還 ≤ 0 で<b>ある</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-2452">If investment ≤ 0 or if redemption ≤ 0, <b>IntRate</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2453">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2453">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2454">場合に&lt;0 または基準&gt;4 で<b>ある</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-2454">If basis &lt; 0 or if basis &gt; 4, <b>IntRate</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2455">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2455">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2456">場合は受領成熟度で<b>ある</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2456">If settlement ≥ maturity, <b>IntRate</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2457">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2457">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2458">
            <b>ある</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2458">
            <b>IntRate</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2459">あるメソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2459">Figure 1: Equation for the IntRate method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2460">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2460">where:</span></span></para>
          <para><span data-ttu-id="a4672-2461">B = 年の基礎によって、1 年の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2461">B = number of days in a year, depending on the year basis.</span></span></para>
          <para><span data-ttu-id="a4672-2462">DIM = 受渡日から満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2462">DIM = number of days from settlement to maturity.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ipmt">
      <MemberSignature Language="C#" Value="public double Ipmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ipmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ipmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2463">利率: 投資の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2463">Rate - the interest rate per period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2464">期: 金利支払額を求める期を 1 ～期間の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2464">Per - the period for which you want to find the interest and must be in the range 1 to nper.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2465">期間: 投資期間全体での支払い回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2465">Nper - the total number of payment periods in an annuity.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2466">現在価値: 現在の投資額、または、将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2466">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p859">将来価値: 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 を指定したと見なされます。たとえば、ローンなどの借入金の将来価値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p859">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-p860">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。支払期日を省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p860">Type - the number 0 or 1 and indicates when payments are due. If type is omitted, it is assumed to be 0.</span></span></param>
        <summary><span data-ttu-id="a4672-2471">定額の支払いを定期的に行い、利率が一定であると仮定して、投資期間内の指定された期に支払われる金利を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2471">Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-2472"><list type="table">
            <item>
              <term>0</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2472"><list type="table">
            <item>
              <term>0</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p861">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p861">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper. </span></span></para>
          <para><span data-ttu-id="a4672-2476">すべての引数に関して、定額預金の支払いのような出金は負の数で表し、配当金のような入金は正の数で表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2476">For all the arguments, cash you pay out, such as deposits to savings, is represented by negative numbers; cash you receive, such as dividend checks, is represented by positive numbers.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Irr">
      <MemberSignature Language="C#" Value="public double Irr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Irr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Irr (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2477">範囲: 数値を含む配列またはセル参照を指定します。これらの数値は、定期的に発生する一連の支払い (負の値) と収益 (正の値) に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2477">Values - an array or a reference to cells that contain numbers for which you want to calculate the internal rate of return.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2478">推定値: Irr メソッドの計算結果に近いと思われる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2478">Guess - a number that you guess is close to the result of IRR.</span></span></param>
        <summary><span data-ttu-id="a4672-p862">一連の定期的なキャッシュ フローに対する内部利益率を返します。個人年金などの投資では、キャッシュ フローの差し引きが 0 である必要はありません。ただし、キャッシュ フローとは、月や年などのような一定期間をおいて、必ず発生するものでなければなりません。内部利益率とは、一定の期間ごとに発生する支払い (負の数) と収益 (正の数) から成る投資効率を表す利率のことです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p862">Returns the internal rate of return for a series of cash flows represented by the numbers in values. These cash flows do not have to be even, as they would be for an annuity. However, the cash flows must occur at regular intervals, such as monthly or annually. The internal rate of return is the interest rate received for an investment consisting of payments (negative values) and income (positive values) that occur at regular periods.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p863">内部利益率を計算するには、正の値と負の値が範囲に少なくとも 1 つずつ含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p863">Values must contain at least one positive value and one negative value to calculate the internal rate of return. </span></span></para>
          <para><span data-ttu-id="a4672-p864">範囲に入力されている値の順序は、キャッシュ フローの順序であると見なされます。支払額と収益額を入力するときは、その順序と符号に注意してください。(支払額は負の値、収益額は正の値)。</span><span class="sxs-lookup"><span data-stu-id="a4672-p864">IRR uses the order of values to interpret the order of cash flows. Be sure to enter your payment and income values in the sequence you want. </span></span></para>
          <para><span data-ttu-id="a4672-2486">範囲に文字列、論理値、または空白セルが含まれる場合、これらは無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2486">If an array or reference argument contains text, logical values, or empty cells, those values are ignored.</span></span></para>
          <para><span data-ttu-id="a4672-2487">Microsoft Excel では、 <b>irr 関数</b>の計算に反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2487">Microsoft Excel uses an iterative technique for calculating <b>Irr</b>.</span></span> <span data-ttu-id="a4672-2488">推定値から始めて、 <b>Irr</b>順に計算結果が 0.00001% 以内になるまでです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2488">Starting with guess, <b>Irr</b> cycles through the calculation until the result is accurate within 0.00001 percent.</span></span> <span data-ttu-id="a4672-2489"><b>Irr 関数</b>は、結果を見つけられない場合は 20 とすると、#NUM!</span><span class="sxs-lookup"><span data-stu-id="a4672-2489">If <b>Irr</b> can't find a result that works after 20 tries, the #NUM!</span></span> <span data-ttu-id="a4672-2490">エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2490">error value is returned.</span></span> </para>
          <para><span data-ttu-id="a4672-2491">ほとんどの場合は、 <b>irr 関数</b>の計算の推定値を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2491">In most cases you do not need to provide guess for the <b>Irr</b> calculation.</span></span> <span data-ttu-id="a4672-2492">推定値を省略すると、0.1 (10%) と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2492">If guess is omitted, it is assumed to be 0.1 (10 percent).</span></span> </para>
          <para><span data-ttu-id="a4672-2493"><b>Irr</b>は、#NUM を示します。 場合、</span><span class="sxs-lookup"><span data-stu-id="a4672-2493">If <b>Irr</b> gives the #NUM!</span></span> <span data-ttu-id="a4672-2494">エラー値、または予測した結果がない場合は、もう一度別の値を推定値にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2494">error value, or if the result is not close to what you expected, try again with a different value for guess.</span></span></para>
          <para><span data-ttu-id="a4672-2495">
            <b>Irr 関数</b>と密接な関係<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、正味の現在値の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2495">
            <b>Irr</b> is closely related to <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, the net present value function.</span></span> <span data-ttu-id="a4672-2496"><b>Irr 関数</b>によって計算された利益率は、0 (ゼロ) の正味現在価値に対応する利率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2496">The rate of return calculated by <b>Irr</b> is the interest rate corresponding to a 0 (zero) net present value.</span></span> <span data-ttu-id="a4672-2497">次の数式を示して 方法<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>irr 関数</b>が関連付けられているとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2497">The following formula demonstrates how <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> and <b>Irr</b> are related:</span></span></para>
          <para><span data-ttu-id="a4672-2498">NPV(IRR(B1:B6),B1:B6) 3.60E に等しい-08 [3.60E の値、 <b>irr 関数</b>の計算の精度内に-08 が効果的に 0 (ゼロ) です]。</span><span class="sxs-lookup"><span data-stu-id="a4672-2498">NPV(IRR(B1:B6),B1:B6) equals 3.60E-08 [Within the accuracy of the <b>Irr</b> calculation, the value 3.60E-08 is effectively 0 (zero).]</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsErr">
      <MemberSignature Language="C#" Value="public bool IsErr (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsErr([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsErr(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsErr (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsErr(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p869">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p869">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2501">値の型をチェックし、値が #n/a を除くエラー値を参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2501">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value refers to any error value except #N/A.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2502">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2502">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2503">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2503">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2504">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2504">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2505">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2505">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2506">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2506">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public bool IsError (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsError([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsError(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p872">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p872">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2509">値の型をチェックし、値がエラー値を参照する場合は、 <b>true</b>または<b>false</b>によってを返します (#n/a、#VALUE!、#REF!、#DIV/0!、#NUM!、#NAME?、または #NULL!)。</span><span class="sxs-lookup"><span data-stu-id="a4672-2509">Checks the type of value and returns <b>true</b> or <b>false</b> depending on if the value refers to any error value (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2510">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2510">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2511">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2511">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2512">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2512">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2513">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2513">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2514">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2514">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEven([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsEven(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEven (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEven(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16804)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p875">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p875">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2517">値の型をチェックし、値が偶数の場合、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2517">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value is even.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2518">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2518">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2519">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2519">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2520">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2520">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2521">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2521">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2522">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2522">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFormula">
      <MemberSignature Language="C#" Value="public bool IsFormula (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFormula([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsFormula(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFormula (Arg1 As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFormula(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16973)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p878">テストするセル参照を指定します。セル範囲、数式、またはセルを参照する名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p878">Reference to the cell you want to test. Reference can be a cell reference, a formula, or name that refers to a cell.</span></span></param>
        <summary><span data-ttu-id="a4672-2525">および参照、数式を含むセルには<b>TRUE</b>または<b>FALSE</b>が返されますかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2525">Checks whether a reference is to a cell containing a formula, and returns <b>TRUE</b> or <b>FALSE</b>.</span></span></summary>
        <returns><span data-ttu-id="a4672-2526"><b>BOOL</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2526"><b>BOOL</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogical">
      <MemberSignature Language="C#" Value="public bool IsLogical (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLogical([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsLogical(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLogical (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLogical(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16582)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p879">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p879">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2529">値の型をチェックし、値が論理値を参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2529">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value refers to a logical value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2530">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2530">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2531">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2531">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2532">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2532">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2533">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2533">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2534">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2534">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNA">
      <MemberSignature Language="C#" Value="public bool IsNA (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNA([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNA(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNA (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNA(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p882">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p882">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2537">値の型をチェックし、値がエラー値 #n/a: (値がない) を参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2537">Checks the type of value and returns <b>true</b> or <b>false</b> depending on if the value refers to the #N/A (value not available) error value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2538">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2538">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2539">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2539">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2540">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2540">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2541">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2541">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2542">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2542">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNonText">
      <MemberSignature Language="C#" Value="public bool IsNonText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNonText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNonText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNonText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNonText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p885">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p885">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2545">値の型をチェックし、値が文字列以外の任意の項目を参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2545">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value refers to any item that is not text.</span></span> <span data-ttu-id="a4672-2546">(ことを返します<b>true</b>の値が空白のセルを参照する場合に注意してください)。</span><span class="sxs-lookup"><span data-stu-id="a4672-2546">(Note that this function returns <b>true</b> if value refers to a blank cell.)</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2547">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2547">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2548">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2548">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2549">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2549">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2550">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2550">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2551">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2551">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public bool IsNumber (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNumber([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumber (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNumber(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p889">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p889">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2554">値の型をチェックし、値が数値を参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2554">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value refers to a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2555">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2555">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2556">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2556">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2557">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2557">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2558">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2558">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2559">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2559">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ISO_Ceiling">
      <MemberSignature Language="C#" Value="public double ISO_Ceiling (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ISO_Ceiling([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ISO_Ceiling(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ISO_Ceiling (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16907)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2560">数値: 対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2560">Number - The value to be rounded.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p892">基準値 - 省略可能です。数値はこの基準値の倍数に切り上げられます。基準値を省略した場合の既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p892">Significance - The optional multiple to which number is to be rounded. If significance is omitted, its default value is 1.</span></span></param>
        <summary><span data-ttu-id="a4672-2563">指定した基準値の倍数のうち、最も近い整数値に切り上げた値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2563">Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOdd">
      <MemberSignature Language="C#" Value="public bool IsOdd (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsOdd([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsOdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOdd (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOdd(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p893">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p893">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2566">値の型をチェックし、値が奇数の場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2566">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value is odd.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2567">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2567">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2568">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2568">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2569">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2569">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2570">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2570">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2571">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2571">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsoWeekNum">
      <MemberSignature Language="C#" Value="public double IsoWeekNum (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IsoWeekNum([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsoWeekNum(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsoWeekNum (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16968)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2572">日付と時刻のコードは Excel で日付と時刻の計算に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2572">Date-time code used by Excel for date and time calculation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2573">この引数は、この関数では使用できません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2573">This argument is not available in the function.</span></span></param>
        <summary><span data-ttu-id="a4672-2574">特定の日付の年の ISO 週数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2574">Returns the ISO week number of the year for a given date.</span></span></summary>
        <returns><span data-ttu-id="a4672-2575"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2575"><b>DOUBLE</b></span></span></returns>
        <remarks><para><span data-ttu-id="a4672-2576">特定の日付の年で、[ISO8601] カレンダーの曜日の序数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2576">Returns the ordinal number of the [ISO8601] calendar week in the year for the given date.</span></span> <span data-ttu-id="a4672-2577">ISO 8601 では、カレンダーの週として、月曜日から始まる 7 日の時間間隔とその年の最初の木曜日が含まれていると 1 年の最初の週を定義します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2577">ISO 8601 defines the calendar week as a time interval of seven calendar days starting with a Monday, and the first calendar week of a year as the one that includes the first Thursday of that year.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ispmt">
      <MemberSignature Language="C#" Value="public double Ispmt (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ispmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ispmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ispmt(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16734)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2578">利率: 投資の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2578">Rate - the interest rate for the investment.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2579">期: 金利支払額を求める期を 1 ～期間の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2579">Per - the period for which you want to find the interest, and must be between 1 and nper.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2580">期間: 投資期間全体での支払回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2580">Nper - the total number of payment periods for the investment.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p897">現在価値: 投資の現在価値、つまり、将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p897">Pv - the present value of the investment. For a loan, pv is the loan amount.</span></span></param>
        <summary><span data-ttu-id="a4672-p898">投資期間内の指定された期に支払われる金利を返します。この関数は、Lotus 1-2-3 関数との互換性を保つために用意されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p898">Calculates the interest paid during a specific period of an investment. This function is provided for compatibility with Lotus 1-2-3.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p899">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p899">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper. </span></span></para>
          <para><span data-ttu-id="a4672-p900">すべての引数に関して、定額預金の支払いのような出金は負の数で表し、配当金のような入金は正の数で表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p900">For all the arguments, the cash you pay out, such as deposits to savings or other withdrawals, is represented by negative numbers; the cash you receive, such as dividend checks and other deposits, is represented by positive numbers. </span></span></para>
          <para><span data-ttu-id="a4672-2589">財務関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2589">For additional information about financial functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsText">
      <MemberSignature Language="C#" Value="public bool IsText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p901">テストの対象: テストするデータを指定します。引数には、空白セル、エラー値、論理値、文字列、数値、セル参照、または対象となるデータを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p901">Value - the value you want tested. Value can be a blank (empty cell), error, logical, text, number, or reference value, or a name referring to any of these, that you want to test.</span></span></param>
        <summary><span data-ttu-id="a4672-2592">値の型をチェックし、値がテキストを参照する場合は、 <b>true</b>または<b>false</b>によってを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2592">Checks the type of value and returns <b>true</b> or <b>false</b> depending if the value refers to text.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2593">IS 関数の引数は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2593">The value arguments of the IS functions are not converted.</span></span> <span data-ttu-id="a4672-2594">など、ほとんどその他の関数で、数値が必要な場所は、文字列値「19」は数値 19 に変換されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2594">For example, in most other functions where a number is required, the text value "19" is converted to the number 19.</span></span> <span data-ttu-id="a4672-2595">ただし、数式 ISNUMBER("19") で、「19」はありませんから変換、テキスト値、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />関数は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2595">However, in the formula ISNUMBER("19"), "19" is not converted from a text value, and the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> function returns <b>false</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2596">IS 関数は、数式の計算結果をテストするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2596">The IS functions are useful in formulas for testing the outcome of a calculation.</span></span> <span data-ttu-id="a4672-2597">IF 関数を組み合わせると、数式でのエラーを検索するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2597">When combined with the IF function, they provide a method for locating errors in formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThaiDigit">
      <MemberSignature Language="C#" Value="public bool IsThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsThaiDigit (Arg1 As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-2598">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2598">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kurt">
      <MemberSignature Language="C#" Value="public double Kurt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Kurt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Kurt (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p904">数値 1、数値 2 ...: 尖度を計算するため、最大 30 個までの数値を指定します。引数をコンマ (,) で区切って指定する代わりに、単一配列または配列への参照を引数として使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p904">Number1, number2, ... - 1 to 30 arguments for which you want to calculate kurtosis. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p905">引数として指定したデータの尖度を返します。尖度とは、対象となるデータの分布を標準分布と比較して、度数分布曲線の相対的な鋭角度または平たん度を表した数値です。尖度が正の数になる場合、度数分布曲線が相対的に鋭角になっていることを表し、負の数になる場合は、相対的に平たんになっていることを表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p905">Returns the kurtosis of a data set. Kurtosis characterizes the relative peakedness or flatness of a distribution compared with the normal distribution. Positive kurtosis indicates a relatively peaked distribution. Negative kurtosis indicates a relatively flat distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p906">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p906">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p907">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p907">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p908">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p908">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p909">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p909">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-2609">データ ポイントが 4 つより少ない場合、またはサンプルの標準偏差が 0 に等しい場合は、 <b>Kurt</b>は #DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2609">If there are fewer than four data points, or if the standard deviation of the sample equals zero, <b>Kurt</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-2610">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2610">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2611">尖度は次のように定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2611">Kurtosis is defined as:</span></span> </para>
          <para><span data-ttu-id="a4672-2612">図 1: 尖度方程式</span><span class="sxs-lookup"><span data-stu-id="a4672-2612">Figure 1: Kurtosis equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2613">s は標本に基づいた標準偏差を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2613">where s is the sample standard deviation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Large">
      <MemberSignature Language="C#" Value="public double Large (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Large([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Large(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Large (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Large(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2614">範囲: 抽出の対象となる値が入力されている配列またはデータの範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2614">Array - the array or range of data for which you want to determine the k-th largest value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2615">順位: 抽出する値の、大きい方から数えた順位を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2615">K - the position (from the largest) in the array or cell range of data to return.</span></span></param>
        <summary><span data-ttu-id="a4672-2616">データ セットに k-th 最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2616">Returns the k-th largest value in a data set.</span></span> <span data-ttu-id="a4672-2617">相対位置に基づいて値を選択するのには、この関数を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2617">You can use this function to select a value based on its relative standing.</span></span> <span data-ttu-id="a4672-2618">などは最高に戻るには、<b>大</b>、2 位、または第 3 位のスコアを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2618">For example, you can use <b>Large</b> to return the highest, runner-up, or third-place score.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2619">配列が空の場合は、<b>大</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2619">If array is empty, <b>Large</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2620">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2620">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2621">≤ 0 または k は、データの数より大きいかどうかは次のようにポイントしている場合、<b>大</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2621">If k ≤ 0 or if k is greater than the number of data points, <b>Large</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2622">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2622">error value.</span></span></para>
          <para><span data-ttu-id="a4672-2623">n を範囲に含まれているデータ要素の数とするとき、LARGE(範囲,1) は対象となるデータの最大値を返します。また、LARGE(範囲,n) は対象となるデータの最小値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2623">If n is the number of data points in a range, then LARGE(array,1) returns the largest value, and LARGE(array,n) returns the smallest value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Lcm">
      <MemberSignature Language="C#" Value="public double Lcm (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Lcm([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lcm(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lcm (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p914">数値 1、数値 2 ...: 最小公倍数を求める数値を指定します。引数は最大 30 個まで指定できます。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p914">Number1, number2,... - 1 to 29 values for which you want the least common multiple. If value is not an integer, it is truncated.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p915">複数の整数の最小公倍数を返します。最小公倍数とは、引数数値 1、数値 2 ... に指定されたすべての整数に共通する倍数の中で、最も小さい倍数のことです。LCM 関数は、分母の異なる分数の和を求める場合などに使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p915">Returns the least common multiple of integers. The least common multiple is the smallest positive integer that is a multiple of all integer arguments number1, number2, and so on. Use LCM to add fractions with different denominators.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2629">いずれかの引数が数値以外の場合は、 <b>Lcm</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2629">If any argument is nonnumeric, <b>Lcm</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2630">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2630">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2631"><b>Lcm</b>は、いずれかの引数が 0 より小さい場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2631">If any argument is less than zero, <b>Lcm</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2632">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2632">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LinEst">
      <MemberSignature Language="C#" Value="public object LinEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2633">既知の y: 既にわかっている y の値の系列で、y = mx + b という関係になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2633">Known_y's - the set of y-values you already know in the relationship y = mx + b.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2634">既知の x: 既にわかっている x の値の系列で、y = mx + b という関係になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2634">Known_x's - an optional set of x-values that you may already know in the relationship y = mx + b.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2635">定数: 定数 b を 0 にするかどうかを論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2635">Const - a logical value specifying whether to force the constant b to equal 0.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2636">補正: 回帰指数曲線の補正項を追加情報として返すかどうかを、論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2636">Stats - a logical value specifying whether to return additional regression statistics.</span></span></param>
        <summary><span data-ttu-id="a4672-p918">"最小二乗法" を使って指定したデータに最もよく当てはまる直線を算出し、この直線を記述する配列を返すことによって直線の補正項を計算します。この関数では、配列の値を返すので、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p918">Calculates the statistics for a line by using the "least squares" method to calculate a straight line that best fits your data, and returns an array that describes the line. Because this function returns an array of values, it must be entered as an array formula.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2639">直線は次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2639">The equation for the line is:</span></span></para>
          <para><span data-ttu-id="a4672-2640">y = mx + b または</span><span class="sxs-lookup"><span data-stu-id="a4672-2640">y = mx + b or</span></span></para>
          <para><span data-ttu-id="a4672-2641">y = m1x1 + m2x2 + ... + b (独立変数 x の範囲が複数の場合)</span><span class="sxs-lookup"><span data-stu-id="a4672-2641">y = m1x1 + m2x2 + ... + b (if there are multiple ranges of x-values)</span></span></para>
          <para><span data-ttu-id="a4672-2642">場所、従属変数 y は独立変数 x の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2642">where the dependent y-value is a function of the independent x-values.</span></span> <span data-ttu-id="a4672-2643">M の値は、各 x 値に対応する係数で、b は定数値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2643">The m-values are coefficients corresponding to each x-value, and b is a constant value.</span></span> <span data-ttu-id="a4672-2644">Y、x、および m はベクトルであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2644">Note that y, x, and m can be vectors.</span></span> <span data-ttu-id="a4672-2645"><b>Linest 関数</b>を返す配列 {mn、ミネソタ-1,..., m1, b}。</span><span class="sxs-lookup"><span data-stu-id="a4672-2645">The array that <b>LinEst</b> returns is {mn,mn-1,...,m1,b}.</span></span> <span data-ttu-id="a4672-2646"><b>LinEst</b>では、追加回帰統計情報を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2646"><b>LinEst</b> can also return additional regression statistics.</span></span></para>
          <para><span data-ttu-id="a4672-p920">既知の y の配列が 1 つの列に入力されている場合、既知の x の各列はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p920">If the array known_y's is in a single column, then each column of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p921">既知の y の配列が 1 つの行に入力されている場合、既知の x の各行はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p921">If the array known_y's is in a single row, then each row of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p922">既知の x の配列には、1 つまたは複数の変数の系列を指定することができます。変数の系列が 1 つである場合、既知の y と既知の x は、両者の次元が同じであれば、どのような形の範囲であってもかまいません。変数の系列が複数である場合、既知の y は 1 行または 1 列のセル範囲でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p922">The array known_x's can include one or more sets of variables. If only one variable is used, known_y's and known_x's can be ranges of any shape, as long as they have equal dimensions. If more than one variable is used, known_y's must be a vector (that is, a range with a height of one row or a width of one column). </span></span></para>
          <para><span data-ttu-id="a4672-p923">既知の x を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p923">If known_x's is omitted, it is assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-2654">場合定数を<b>true</b>または省略すると、b の値も計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2654">If const is <b>true</b> or omitted, b is calculated normally.</span></span> </para>
          <para><span data-ttu-id="a4672-2655">場合定数が<b>false の場合</b>b を 0 に設定されて、m の値が y に合わせて調整されます = mx です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2655">If const is <b>false</b>, b is set equal to 0 and the m-values are adjusted to fit y = mx.</span></span> </para>
          <para><span data-ttu-id="a4672-2656">統計 (stats) は、 <b>truuue</b>は、<b>配列</b>が返されます、追加回帰統計、ため、返される配列は {mn、ミネソタ-1、...、m1、b; sen と、sen と-1,..., se1, seb; r2 を予測します。F、df; ssreg、ssresid} です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2656">If stats is <b>truuue</b>, <b>LinEst</b> returns the additional regression statistics, so the returned array is {mn,mn-1,...,m1,b;sen,sen-1,...,se1,seb;r2,sey;F,df;ssreg,ssresid}.</span></span> </para>
          <para><span data-ttu-id="a4672-2657">統計 (stats) は、 <b>false</b>を指定したり、省略した場合、だけ、m 係数と定数 b<b>配列</b>が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2657">If stats is <b>false</b> or omitted, <b>LinEst</b> returns only the m-coefficients and the constant b.</span></span> </para>
          <para><span data-ttu-id="a4672-2658">次のような回帰直線の補正項が追加情報として返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2658">The additional regression statistics are as follows.</span></span></para><span data-ttu-id="a4672-2659">
          <list type="table">
            <item>
              <term>se1、se2、...、sen と</term>
              <description>標準誤差の値が係数 m1、m2、..., mn</description> 
            </item> 。
            <item> 
              <term>seb</term>
              <description>定数 b の標準誤差の値 (seb = #n/a は、定数が<b>false の場合</b>).</description> 
            </item>
            <item> 
              <term>r2</term>
              <description>決定の係数です。推定と実際の y 値を比較し、範囲は 0 から 1 までの値にします。サンプルの完全な相関関係がある 1 である場合、y の予測値と実際の y の値との間の違いはありません。他の極端な例として、決定の係数が 0 の場合回帰方程式は y の値を予測する場合に便利です。</description> 
            </item> 
            <item> 
              <term>sey</term>
              <description>y 見積もりの標準的なエラーです</description>
            </item>。
            <item> 
              <term>F</term>
              <description>、F 補正項または F 観測値です。F 補正項を使用して従属と独立変数の間で観察された関係が偶然によるものかどうかを決定します</description>
            </item>。
            <item> 
              <term>df</term>
              <description>の自由度。統計テーブルで F の臨界値を検索するための自由度を使用します。F 補正項をテーブル内で検索する値が返されます、信頼の決定には、 <b>LinEst</b>によってモデルのレベルを比較します。</description> 
            </item> 
            <item> 
              <term>ssreg</term>
              <description>回帰の平方和です</description>
            </item>。
            <item> 
              <term>ssresid</term>
              <description>残余の平方和です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2659">
          <list type="table">
            <item>
              <term>se1,se2,...,sen</term>
              <description>The standard error values for the coefficients m1,m2,...,mn.</description>
            </item>
            <item>
              <term>seb</term>
              <description>The standard error value for the constant b (seb = #N/A when const is <b>false</b>).</description>
            </item>
            <item>
              <term>r2</term>
              <description>The coefficient of determination. Compares estimated and actual y-values, and ranges in value from 0 to 1. If it is 1, there is a perfect correlation in the sample — there is no difference between the estimated y-value and the actual y-value. At the other extreme, if the coefficient of determination is 0, the regression equation is not helpful in predicting a y-value. </description>
            </item>
            <item>
              <term>sey</term>
              <description>The standard error for the y estimate.</description>
            </item>
            <item>
              <term>F</term>
              <description>The F statistic, or the F-observed value. Use the F statistic to determine whether the observed relationship between the dependent and independent variables occurs by chance.</description>
            </item>
            <item>
              <term>df</term>
              <description>The degrees of freedom. Use the degrees of freedom to help you find F-critical values in a statistical table. Compare the values you find in the table to the F statistic returned by <b>LinEst</b> to determine a confidence level for the model. </description>
            </item>
            <item>
              <term>ssreg</term>
              <description>The regression sum of squares.</description>
            </item>
            <item>
              <term>ssresid</term>
              <description>The residual sum of squares.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-2660">次の図では、回帰直線の追加補正項が返される順序を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2660">The following illustration shows the order in which the additional regression statistics are returned.</span></span></para>
          <para><span data-ttu-id="a4672-2661">図 1: ワークシート</span><span class="sxs-lookup"><span data-stu-id="a4672-2661">Figure 1: Worksheet</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2662">任意の直線の傾きと y 切片を記述することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2662">You can describe any straight line with the slope and the y-intercept:</span></span> </para>
          <para><span data-ttu-id="a4672-2663">傾き (m):</span><span class="sxs-lookup"><span data-stu-id="a4672-2663">Slope (m):</span></span></para>
          <para>
<span data-ttu-id="a4672-2664">M として書き込まれる多くの場合、直線の傾きを検索するに 2 つの点 (x1, y1)、行と (x2、y2)。傾きが (y2 が y1) と (x 2 - x 1)。</span><span class="sxs-lookup"><span data-stu-id="a4672-2664">To find the slope of a line, often written as m, take two points on the line, (x1,y1) and (x2,y2); the slope is equal to (y2 - y1)/(x2 - x1).</span></span></para>
          <para><span data-ttu-id="a4672-2665">Y 切片 (b)。</span><span class="sxs-lookup"><span data-stu-id="a4672-2665">Y-intercept (b):</span></span></para>
          <para>
<span data-ttu-id="a4672-2666">B として書き込まれる多くの場合、直線の y 切片は、直線が y 軸と交差する位置の y の値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2666">The y-intercept of a line, often written as b, is the value of y at the point where the line crosses the y-axis.</span></span></para>
          <para><span data-ttu-id="a4672-2667">直線の方程式は、y = mx+b とします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2667">The equation of a straight line is y = mx + b.</span></span> <span data-ttu-id="a4672-2668">M と b の値がわかれば、y または x の値をこの方程式にケーブルを差し込んで、行の任意の点を求めることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2668">Once you know the values of m and b, you can calculate any point on the line by plugging the y- or x-value into that equation.</span></span> <span data-ttu-id="a4672-2669">使用することも、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2669">You can also use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" /> function.</span></span></para>
          <para><span data-ttu-id="a4672-2670">独立変数 x の値が 1 つだけがある場合は、次の数式を使って、傾きと y 切片の値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2670">When you have only one independent x-variable, you can obtain the slope and y-intercept values directly by using the following formulas:</span></span> </para>
          <para><span data-ttu-id="a4672-2671">スロープ。</span><span class="sxs-lookup"><span data-stu-id="a4672-2671">Slope:</span></span></para>
          <para>
<span data-ttu-id="a4672-2672">=INDEX(LINEST(known_y's,known_x's),1)</span><span class="sxs-lookup"><span data-stu-id="a4672-2672">=INDEX(LINEST(known_y's,known_x's),1)</span></span></para>
          <para><span data-ttu-id="a4672-2673">Y 切片:</span><span class="sxs-lookup"><span data-stu-id="a4672-2673">Y-intercept:</span></span></para>
          <para>
<span data-ttu-id="a4672-2674">INDEX(LINEST(既知の y, 既知の x),2)</span><span class="sxs-lookup"><span data-stu-id="a4672-2674">=INDEX(LINEST(known_y's,known_x's),2)</span></span></para>
          <para><span data-ttu-id="a4672-2675"><b>LineEst</b>で計算した直線の精度は、データの散布の度合いによって異なります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2675">The accuracy of the line calculated by <b>LineEst</b> depends on the degree of scatter in your data.</span></span> <span data-ttu-id="a4672-2676">直線データより正確な<b>LineEst</b>モデルです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2676">The more linear the data, the more accurate the <b>LineEst</b> model.</span></span> <span data-ttu-id="a4672-2677"><b>LineEst</b>では、最小 2 乗法のメソッドを使用して、最適なデータを決定するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2677"><b>LineEst</b> uses the method of least squares for determining the best fit for the data.</span></span> <span data-ttu-id="a4672-2678">独立変数 x の値が 1 つだけがある場合は、m と b の計算は、次の数式に基づいてください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2678">When you have only one independent x-variable, the calculations for m and b are based on the following formulas:</span></span> </para>
          <para><span data-ttu-id="a4672-2679">図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2679">Figure 2: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2680">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2680">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-2681">ここで、x は標本平均 AVERAGE(既知の x)、y は標本平均 AVERAGE(既知の y) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2681">where x and y are sample means, i.e., x = AVERAGE(known x's) and y = AVERAGE(known_y's).</span></span></para>
          <para><span data-ttu-id="a4672-2682">行と曲線の調整機能の<b>LineEst</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" />直線または、データに適合する指数曲線を計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2682">The line- and curve-fitting functions <b>LineEst</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" /> can calculate the best straight line or exponential curve that fits your data.</span></span> <span data-ttu-id="a4672-2683">ただし、データに適合する 2 つの最適な結果を決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2683">However, you have to decide which of the two results best fits your data.</span></span> <span data-ttu-id="a4672-2684">指数曲線の直線、または拡張 (既知の y, 既知の x) の直線を求めることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2684">You can calculate TREND(known_y's,known_x's) for a straight line, or GROWTH(known_y's, known_x's) for an exponential curve.</span></span> <span data-ttu-id="a4672-2685">新しい x の引数がない場合、これらの関数は、直線または曲線は、実際のデータ ポイントの上に予測される y の値の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2685">These functions, without the new_x's argument, return an array of y-values predicted along that line or curve at your actual data points.</span></span> <span data-ttu-id="a4672-2686">予測値と実際の値を比較できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2686">You can then compare the predicted values with the actual values.</span></span> <span data-ttu-id="a4672-2687">比較の両方のグラフを作成することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2687">You may want to chart them both for a visual comparison.</span></span> </para>
          <para><span data-ttu-id="a4672-2688">回帰分析では、Microsoft Excel は、予測される y の値と実際の y の値との間の平方差をポイントごとに計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2688">In regression analysis, Microsoft Excel calculates for each point the squared difference between the y-value estimated for that point and its actual y-value.</span></span> <span data-ttu-id="a4672-2689">これらの平方差の合計は、残余の平方和、ssresid 和と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2689">The sum of these squared differences is called the residual sum of squares, ssresid.</span></span> <span data-ttu-id="a4672-2690">Microsoft Excel では、正方形、総平方和の合計が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2690">Microsoft Excel then calculates the total sum of squares, sstotal.</span></span> <span data-ttu-id="a4672-2691">定数 = <b>true</b>、または、省略すると、平方和の合計は、実際の y の値と y の値の平均値の平方差の合計。</span><span class="sxs-lookup"><span data-stu-id="a4672-2691">When const = <b>true</b>, or omitted, the total sum of squares is the sum of the squared differences between the actual y-values and the average of the y-values.</span></span> <span data-ttu-id="a4672-2692">定数 = <b>false</b>、平方和の合計は、(個々 の y の値から y の平均値を減算する) ことがなく実際の y の値の平方和の合計です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2692">When const = <b>false</b>, the total sum of squares is the sum of the squares of the actual y-values (without subtracting the average y-value from each individual y-value).</span></span> <span data-ttu-id="a4672-2693">回帰平方和、ssreg を参照して、: ssreg = 総平方和 - ssresid。</span><span class="sxs-lookup"><span data-stu-id="a4672-2693">Then regression sum of squares, ssreg, can be found from: ssreg = sstotal - ssresid.</span></span> <span data-ttu-id="a4672-2694">残余の平方和を総平方和を比較が小さいほど、決定、r2 は、回帰分析で得られたどれだけの方程式の指標となる係数の値説明間の関係が大きいほど、変数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2694">The smaller the residual sum of squares is, compared with the total sum of squares, the larger the value of the coefficient of determination, r2, which is an indicator of how well the equation resulting from the regression analysis explains the relationship among the variables.</span></span> <span data-ttu-id="a4672-2695">ssreg/総平方和を r2 に相当します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2695">r2 equals ssreg/sstotal.</span></span> </para>
          <para><span data-ttu-id="a4672-2696">場合によっては、1 つまたは複数の X 列の (を想定しています Y と X の列には) その他の X 列が存在する場合の他の予測値がない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2696">In some cases, one or more of the X columns (assume that Y’s and X’s are in columns) may have no additional predictive value in the presence of the other X columns.</span></span> <span data-ttu-id="a4672-2697">つまり、X 列が 1 つまたは複数を排除することが生じることが均等に正確な予測される Y の値にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2697">In other words, eliminating one or more X columns might lead to predicted Y values that are equally accurate.</span></span> <span data-ttu-id="a4672-2698">その場合は列 X 冗長回帰モデルから省略する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2698">In that case these redundant X columns should be omitted from the regression model.</span></span> <span data-ttu-id="a4672-2699">この現象と呼ばれます場合は、「冗長な X 列は冗長な X 列の倍数の和として表すことができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2699">This phenomenon is called “collinearity” because any redundant X column can be expressed as a sum of multiples of the non-redundant X columns.</span></span> <span data-ttu-id="a4672-2700"><b>LinEst</b>は、共線性をチェックし、それらを識別するときに冗長な X 列を回帰モデルから削除します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2700"><b>LinEst</b> checks for collinearity and removes any redundant X columns from the regression model when it identifies them.</span></span> <span data-ttu-id="a4672-2701">削除された X 列は、 <b>LinEst</b>出力の係数を 0 と se を 0 として識別できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2701">Removed X columns can be recognized in <b>LinEst</b> output as having 0 coefficients as well as 0 se’s.</span></span> <span data-ttu-id="a4672-2702">1 つまたは複数の列が冗長として削除されると、し、df が影響を受けます df は、予測のために実際に使用されている列の X の数に依存するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2702">If one or more columns are removed as redundant, then df is affected because df depends on the number of X columns actually used for predictive purposes.</span></span> <span data-ttu-id="a4672-2703">に df が変更された場合は、冗長な X 列が削除されると、sey の値 F にも影響し、。</span><span class="sxs-lookup"><span data-stu-id="a4672-2703">If df is changed because redundant X columns are removed, values of sey and F are also affected.</span></span> <span data-ttu-id="a4672-2704">共線性をまれにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2704">Collinearity should be relatively rare in practice.</span></span> <span data-ttu-id="a4672-2705">ただしである可能性が高いが発生する唯一の 0 と 1 に冗長な x 列が含まれている場合は、1 つのケースは、実験の件名は、かどうかの指標としてのまたは特定のグループのメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2705">However, one case where it is more likely to arise is when some X columns contain only 0’s and 1’s as indicators of whether a subject in an experiment is or is not a member of a particular group.</span></span> <span data-ttu-id="a4672-2706">定数 = <b>true</b>または省略すると、 <b>LinEst</b>が効果的に挿入、追加の X 切片をモデル化する 1 のすべての列。</span><span class="sxs-lookup"><span data-stu-id="a4672-2706">If const = <b>true</b> or omitted, <b>LinEst</b> effectively inserts an additional X column of all 1’s to model the intercept.</span></span> <span data-ttu-id="a4672-2707">各対象者、またはそうでない場合は 0 と 1 列があるし、列 (メス)、または 0 の場合は、各件名のない場合は、この後者の列もある場合は冗長なエントリは、「男性インジケーター」のエントリを引いてから入手できます。列 1 のすべての他の列内のエントリからは、 <b>LineEst</b>で追加されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2707">If you have a column with a 1 for each subject if male, or 0 if not, and you also have a column with a 1 for each subject if female, or 0 if not, this latter column is redundant because entries in it can be obtained from subtracting the entry in the “male indicator” column from the entry in the additional column of all 1’s added by <b>LineEst</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-2708">共線性が原因でモデルから削除される X 列がない場合、df が次のように計算されます: 既知の x の k 列がある場合、const = <b>true</b>または省略すると、し、df = n – k – 1 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2708">df is calculated as follows when no X columns are removed from the model due to collinearity: if there are k columns of known_x’s and const = <b>true</b> or omitted, then df = n – k – 1.</span></span> <span data-ttu-id="a4672-2709">定数 = <b>false</b>は、df = n の k です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2709">If const = <b>false</b>, then df = n - k.</span></span> <span data-ttu-id="a4672-2710">どちらの場合も、各列が共線性のため削除 X df 1 ずつ増えています。</span><span class="sxs-lookup"><span data-stu-id="a4672-2710">In both cases, each X column removed due to collinearity increases df by 1.</span></span> </para>
          <para><span data-ttu-id="a4672-2711">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2711">Formulas that return arrays must be entered as array formulas.</span></span> <span data-ttu-id="a4672-2712">引数として known_x など配列定数を入力するときは、コンマを使用して、同じ行と同じセミコロンの値を区切る。</span><span class="sxs-lookup"><span data-stu-id="a4672-2712">When entering an array constant such as known_x's as an argument, use commas to separate values in the same row and semicolons to separate rows.</span></span> <span data-ttu-id="a4672-2713">区切り文字は、[地域と言語のオプション コントロール パネルのロケール設定によって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2713">Separator characters may be different depending on your locale setting in Regional and Language Options in Control Panel.</span></span> </para>
          <para><span data-ttu-id="a4672-2714">回帰演算式によって予測計算された y の値は、演算式を決定するときに使用した y の値の範囲外では、有効な値にならない場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2714">Note that the y-values predicted by the regression equation may not be valid if they are outside the range of the y-values you used to determine the equation.</span></span> <span data-ttu-id="a4672-2715"><b>LinEst</b>関数で使用される基になるアルゴリズムで使用されている基になるアルゴリズムとは異なる、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2715">The underlying algorithm used in the <b>LinEst</b> function is different than the underlying algorithm used in the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> functions.</span></span> <span data-ttu-id="a4672-2716">データが不定で共線性と、これらのアルゴリズムの違いは異なる結果につながります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2716">The difference between these algorithms can lead to different results when data is undetermined and collinear.</span></span> <span data-ttu-id="a4672-2717">たとえば、既知の y 引数のデータ要素が 0、既知の x 引数のデータ要素が 1 の場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-2717">For example, if the data points of the known_y's argument are 0 and the data points of the known_x's argument are 1:</span></span> </para>
          <para><span data-ttu-id="a4672-2718">
            <b>LineEst</b>は、0 の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2718">
            <b>LineEst</b> returns a value of 0.</span></span> <span data-ttu-id="a4672-2719"><b>LinEst</b>のアルゴリズムは、共線性のデータに対して適切な結果を返すように設計されていて、ここで少なくとも 1 つの解が求められます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2719">The <b>LinEst</b> algorithm is designed to return reasonable results for collinear data, and in this case at least one answer can be found.</span></span> <span data-ttu-id="a4672-2720"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> #DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2720"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> return a #DIV/0!</span></span> <span data-ttu-id="a4672-2721">エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2721">error.</span></span> <span data-ttu-id="a4672-2722"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />のアルゴリズムは、1 つの答えを探すように設計されていて、ここですることができます複数の回答です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2722">The <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> algorithm is designed to look for one and only one answer, and in this case there can be more than one answer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ln">
      <MemberSignature Language="C#" Value="public double Ln (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ln([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ln(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ln (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ln(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2723">数値: 自然対数を求める正の実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2723">Number - the positive real number for which you want the natural logarithm.</span></span></param>
        <summary><span data-ttu-id="a4672-p937">数値の自然対数を返します。自然対数とは、定数 e (2.71828182845904) を底とする対数のことです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p937">Returns the natural logarithm of a number. Natural logarithms are based on the constant e (2.71828182845904).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2726">
            <b>Ln</b>は、EXP 関数の逆関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2726">
            <b>Ln</b> is the inverse of the EXP function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public double Log (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2727">数値: 対数を求める正の実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2727">Number - the positive real number for which you want the logarithm.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p938">底: 対数の底を指定します。底を省略すると、10 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p938">Base - the base of the logarithm. If base is omitted, it is assumed to be 10.</span></span></param>
        <summary><span data-ttu-id="a4672-2730">指定された数を底とする数値の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2730">Returns the logarithm of a number to the base you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public double Log10 (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log10([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log10 (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Log10(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2731">数値: 10 を底とする対数 (常用対数) を求める正の実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2731">Number - the positive real number for which you want the base-10 logarithm.</span></span></param>
        <summary><span data-ttu-id="a4672-2732">数値の底が 10 の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2732">Returns the base-10 logarithm of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEst">
      <MemberSignature Language="C#" Value="public object LogEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LogEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2733">既知の y: 既にわかっている y の値の系列で、y = b\*m^x という関係が成り立ちます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2733">Known_y's - the set of y-values you already know in the relationship y = b\*m^x.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2734">既知の x: 既にわかっている x の値の系列で、y = b\*m^x という関係になります。この引数は省略してもかまいません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2734">Known_x's - an optional set of x-values that you may already know in the relationship y = b\*m^x.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2735">定数: 定数 b を 1 にするかどうかを論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2735">Const - a logical value specifying whether to force the constant b to equal 1.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2736">補正: 回帰指数曲線の補正項を追加情報として返すかどうかを、論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2736">Stats - a logical value specifying whether to return additional regression statistics.</span></span></param>
        <summary><span data-ttu-id="a4672-p939">回帰分析では、データに適合する指数曲線を計算し、この曲線を表す値の配列を返します。この関数は値の配列を返すため、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p939">In regression analysis, calculates an exponential curve that fits your data and returns an array of values that describes the curve. Because this function returns an array of values, it must be entered as an array formula.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2739">指数曲線は次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2739">The equation for the curve is:</span></span></para>
          <para><span data-ttu-id="a4672-2740">y = b\*m^x または</span><span class="sxs-lookup"><span data-stu-id="a4672-2740">y = b\*m^x or</span></span></para>
          <para><span data-ttu-id="a4672-2741">y = (b *(m1^x1)*(m2^x2)\*_) (x の値が複数ある場合)</span><span class="sxs-lookup"><span data-stu-id="a4672-2741">y = (b *(m1^x1)*(m2^x2)\*_) (if there are multiple x-values)</span></span></para>
          <para><span data-ttu-id="a4672-2742">場所、従属変数 y は独立変数 x の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2742">where the dependent y-value is a function of the independent x-values.</span></span> <span data-ttu-id="a4672-2743">M の値は、各指数の x の値に対応する底で、b は定数値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2743">The m-values are bases corresponding to each exponent x-value, and b is a constant value.</span></span> <span data-ttu-id="a4672-2744">Y、x、および m はベクトルであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2744">Note that y, x, and m can be vectors.</span></span> <span data-ttu-id="a4672-2745"><b>LogEst</b>を返す配列 {mn、ミネソタ-1,..., m1, b}。</span><span class="sxs-lookup"><span data-stu-id="a4672-2745">The array that <b>LogEst</b> returns is {mn,mn-1,...,m1,b}.</span></span></para>
          <para><span data-ttu-id="a4672-p941">既知の y の配列が 1 つの列に入力されている場合、既知の x の各列はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p941">If the array known_y's is in a single column, then each column of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p942">既知の y の配列が 1 つの行に入力されている場合、既知の x の各行はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p942">If the array known_y's is in a single row, then each row of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p943">既知の x の配列には、1 つまたは複数の変数の系列を指定することができます。変数の系列が 1 つだけの場合、既知の y と既知の x は、双方の次元が同じである限り、どのような形の範囲でも指定できます。複数の変数を使用する場合、既知の y はセル範囲 (1 行または 1 列の範囲で、ベクトル範囲とも呼ばれます) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p943">The array known_x's can include one or more sets of variables. If only one variable is used, known_y's and known_x's can be ranges of any shape, as long as they have equal dimensions. If more than one variable is used, known_y's must be a range of cells with a height of one row or a width of one column (which is also known as a vector). </span></span></para>
          <para><span data-ttu-id="a4672-p944">既知の x を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p944">If known_x's is omitted, it is assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-2753">場合定数を<b>true</b>または省略すると、b の値も計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2753">If const is <b>true</b> or omitted, b is calculated normally.</span></span></para>
          <para><span data-ttu-id="a4672-2754">場合定数が<b>false の場合</b>b を 1 に、設定、および y m の値が調整 = m ^ x です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2754">If const is <b>false</b>, b is set equal to 1, and the m-values are fitted to y = m^x.</span></span></para>
          <para><span data-ttu-id="a4672-2755"><b>統計 (stats) が<b>true</b>の場合は、返されます、追加回帰統計、ため、返される配列は</b>{mn、ミネソタ-1、...、m1、b; sen と、sen と-1,..., se1, seb; r 2 を予測します。F、df; ssreg、ssresid} です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2755">If stats is <b>true</b>, <b>LogEst</b> returns the additional regression statistics, so the returned array is {mn,mn-1,...,m1,b;sen,sen-1,...,se1,seb;r 2,sey; F,df;ssreg,ssresid}.</span></span> </para>
          <para><span data-ttu-id="a4672-2756"><b>統計 (stats) は、 <b>false</b>を指定したり、省略すると場合、のみ、m 係数と定数 b 返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2756">If stats is <b>false</b> or omitted, <b>LogEst</b> returns only the m-coefficients and the constant b.</span></span> </para>
          <para><span data-ttu-id="a4672-2757">追加回帰統計の詳細についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-2757">For more information about additional regression statistics, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />.</span></span></para>
          <para><span data-ttu-id="a4672-2758">プロット データを指数曲線に近づけば、ほどの計算された行がデータに適合します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2758">The more a plot of your data resembles an exponential curve, the better the calculated line will fit your data.</span></span> <span data-ttu-id="a4672-2759">ように<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />、 <b>logest 関数</b>は、値間の関係を記述する値の配列を返しますが、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> 、データを直線に対応<b>LogEst</b>では、指数曲線に適合します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2759">Like <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />, <b>LogEst</b> returns an array of values that describes a relationship among the values, but <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> fits a straight line to your data; <b>LogEst</b> fits an exponential curve.</span></span> <span data-ttu-id="a4672-2760">詳細については、「<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2760">For more information, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-2761">独立変数 x の値が 1 つだけがある場合は、ときに、次の数式を使用して直接 y 切片 (b) の値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2761">When you have only one independent x-variable, you can obtain y-intercept (b) values directly by using the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-2762">Y 切片 (b)。</span><span class="sxs-lookup"><span data-stu-id="a4672-2762">Y-intercept (b):</span></span></para>
          <para>
<span data-ttu-id="a4672-2763">INDEX(LOGEST(known_y's,known_x's),2)</span><span class="sxs-lookup"><span data-stu-id="a4672-2763">INDEX(LOGEST(known_y's,known_x's),2)</span></span></para>
          <para><span data-ttu-id="a4672-2764">Y を使用することができます = b \* m ^ x、y の値を予測する数式 Excel に用意されていますが、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />にこの操作を実行する関数。</span><span class="sxs-lookup"><span data-stu-id="a4672-2764">You can use the y = b\*m^x equation to predict future values of y, but Microsoft Excel provides the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" /> function to do this for you.</span></span> <span data-ttu-id="a4672-2765">詳細については、「<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2765">For more information, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />.</span></span></para>
          <para><span data-ttu-id="a4672-p949">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p949">Formulas that return arrays must be entered as array formulas. </span></span></para>
          <para><span data-ttu-id="a4672-p950">既知の x のような引数に配列定数を指定するとき、同じ行の値を区切るには半角のコンマ (,) を使い、各行を区切るには半角のセミコロン (;) を使います。なお、区切り文字は、コントロール パネルの [地域と言語のオプション] のロケール設定によって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p950">When entering an array constant such as known_x's as an argument, use commas to separate values in the same row and semicolons to separate rows. Separator characters may be different depending on your locale setting in Regional and Language Options in Control Panel. </span></span></para>
          <para><span data-ttu-id="a4672-2769">回帰方程式によって予測計算された y の値は、方程式を決定するときに使用した y の値の範囲外では、適切な値にならない場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2769">You should note that the y-values predicted by the regression equation may not be valid if they are outside the range of y-values you used to determine the equation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInv">
      <MemberSignature Language="C#" Value="public double LogInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2770">確率: 対数正規型分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2770">Probability - a probability associated with the lognormal distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2771">平均: ln(x) の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2771">Mean - the mean of ln(x).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2772">標準偏差: ln(x) の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2772">Standard_dev - the standard deviation of ln(x).</span></span></param>
        <summary><span data-ttu-id="a4672-2773">対数正規型分布は、対数的に変換されたデータを分析する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2773">Use the lognormal distribution to analyze logarithmically transformed data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2774">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2774">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-2775">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2775">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-2776">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2776">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-2777">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2777">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-2778">いずれかの引数が数値以外の場合、 <b>LogInv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2778">If any argument is nonnumeric, <b>LogInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2779">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2779">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2780">場合確率&lt;= 0、または確率&gt;= 1、 <b>LogInv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2780">If probability &lt;= 0 or probability &gt;= 1, <b>LogInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2781">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2781">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2782">場合標準偏差&lt;= 0、 <b>LogInv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2782">If standard_dev &lt;= 0, <b>LogInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2783">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2783">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2784">対数正規型分布関数の逆関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2784">The inverse of the lognormal distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-2785">対数正規型分布関数の逆関数の値は、図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2785">Figure 1: Inverse of the lognormal distribution function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Dist">
      <MemberSignature Language="C#" Value="public double LogNorm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2786">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2786">X - The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2787">平均: ln(x) の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2787">Mean - The mean of ln(x).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2788">標準偏差: ln(x) の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2788">Standard_dev - The standard deviation of ln(x).</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2789">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2789">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-2790">場合<b>は累積的な</b> <b>LogNorm_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2790">If cumulative is <b>true</b>, <b>LogNorm_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-p956">x の対数正規分布の確率を返します。ln(x) は、平均と標準偏差を引数にする正規型分布になります。この関数は、対数的に変換されたデータを分析する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p956">Returns the lognormal distribution of x, where ln(x) is normally distributed with parameters mean and standard_dev. Use this function to analyze data that has been logarithmically transformed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2793">いずれかの引数が数値以外の場合は、 <b>LogNorm_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2793">If any argument is nonnumeric, <b>LogNorm_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2794">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2794">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2795">X ≤ 0 または標準偏差 ≤ 0、 <b>LogNorm_Dist</b>が #NUM を返す場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-2795">If x ≤ 0 or if standard_dev ≤ 0, <b>LogNorm_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2796">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2796">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2797">対数正規累積分布関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2797">The equation for the lognormal cumulative distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-2798">対数正規累積分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2798">Figure 1: Equation for the lognormal cumulative distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Inv">
      <MemberSignature Language="C#" Value="public double LogNorm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2799">確率: 対数正規型分布に伴う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2799">Probability - A probability associated with the lognormal distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2800">平均: ln(x) の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2800">Mean - The mean of ln(x).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2801">標準偏差: ln(x) の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2801">Standard_dev - The standard deviation of ln(x).</span></span></param>
        <summary><span data-ttu-id="a4672-p959">対数正規型の累積分布関数の逆関数を返します。対数正規型分布は、対数的に変換されたデータを分析する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p959">Returns the inverse of the lognormal cumulative distribution function. Use the lognormal distribution to analyze logarithmically transformed data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2804">いずれかの引数が数値以外の場合は、 <b>LogNorm_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2804">If any argument is nonnumeric, <b>LogNorm_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2805">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2805">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2806">場合確率&lt;= 0、または確率&gt;= 1、 <b>LogNorm_Inv</b> #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2806">If probability &lt;= 0 or probability &gt;= 1, <b>LogNorm_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2807">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2807">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2808">場合標準偏差&lt;= 0、 <b>LogNorm_Inv</b> #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2808">If standard_dev &lt;= 0, <b>LogNorm_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2809">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2809">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2810">対数正規型分布関数の逆関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2810">The inverse of the lognormal distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-2811">対数正規型分布関数の逆関数の値は、図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2811">Figure 1: Inverse of the lognormal distribution function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNormDist">
      <MemberSignature Language="C#" Value="public double LogNormDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNormDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16674)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2812">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2812">X - the value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2813">平均: ln(x) の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2813">Mean - the mean of ln(x).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2814">標準偏差: ln(x) の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2814">Standard_dev - the standard deviation of ln(x).</span></span></param>
        <summary><span data-ttu-id="a4672-p963">x の対数正規分布の累積分布関数の値を返します。ln(x) は、引数平均と標準偏差による正規型分布です。この関数は、対数的に変換されたデータを分析する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p963">Returns the cumulative lognormal distribution of x, where ln(x) is normally distributed with parameters mean and standard_dev. Use this function to analyze data that has been logarithmically transformed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2817">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2817">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-2818">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2818">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-2819">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2819">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-2820">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2820">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-2821">いずれかの引数が数値以外の場合は、 <b>LogNormDist</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2821">If any argument is nonnumeric, <b>LogNormDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2822">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2822">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2823">X ≤ 0 または標準偏差 ≤ 0、 <b>LogNormDist</b>が #NUM を返す場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-2823">If x ≤ 0 or if standard_dev ≤ 0, <b>LogNormDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2824">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2824">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2825">対数正規累積分布関数は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2825">The equation for the lognormal cumulative distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-2826">対数正規累積分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2826">Figure 1: Equation for the lognormal cumulative distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public object Lookup (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lookup([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lookup (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16412)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2827">検査値の<b>最初のベクターで検索</b>する値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2827">Lookup_value - A value that <b>Lookup</b> searches for in the first vector.</span></span> <span data-ttu-id="a4672-2828">検査値は、数値、テキスト、論理値、名前または値を参照する参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2828">Lookup_value can be a number, text, a logical value, or a name or reference that refers to a value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p968">検査範囲または配列: ベクトル形式では、1 行または 1 列のみのセル範囲を指定します。検査範囲には、文字列、数値、または論理値を指定できます。配列形式では、検査値と比較する文字列、数値、または論理値を含むセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p968">Lookup_vector or Array - In Vector form, a range that contains only one row or one column. The values in lookup_vector can be text, numbers, or logical values. In array form, a range of cells that contains text, numbers, or logical values that you want to compare with lookup_value.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p969">対応範囲: ベクトル形式でのみ使用します。1 行または 1 列のみの範囲を指定します。対応範囲は検査範囲と同じサイズあることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p969">Result_vector - Only used with the Vector form. A range that contains only one row or column. It must be the same size as lookup_vector.</span></span></param>
        <summary><span data-ttu-id="a4672-p970">1 行または 1 列のみのセル範囲、または配列に含まれる値を返します。LOOKUP 関数には、ベクトル形式と配列形式の 2 つの構文形式があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p970">Returns a value either from a one-row or one-column range or from an array. The LOOKUP function has two syntax forms:  the vector form and the array form.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-2837"><list type="table">
            <item>
              <term>値と 2 番目の 1 行または 1 列の範囲内の同じ位置から値を取得、1 行または 1 列範囲 (ベクトル) で検索</term>
              <description>ベクトル形式</description>
              <description>を検索する値または値が経時変化との大規模なリストがある場合は、ベクトル形式を使用します</description>
            </item>。小さな値と値のリストがある場合、
            <item>
              <term>ファイルの場所で最初の行または列を指定した配列の値、最後の行または列の配列の同じ位置から値を返す</term>
              <description>配列形式</description>
              <description>の配列を使用してフォームを一定に保つ時間の経過とともに</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2837"><list type="table">
            <item>
              <term>Look in a one-row or one-column range (known as a vector) for a value and return a value from the same position in a second one-row or one-column range</term>
              <description>Vector form</description>
              <description>Use the vector form when you have a large list of values to look up or when the values may change over time.</description>
            </item>
            <item>
              <term>Look in the first row or column of an array for the specified value and return a value from the same position in the last row or column of the array</term>
              <description>Array form</description>
              <description>Use the array form when you have a small list of values and the values remain constant over time.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-2838">
            <b>注</b>: 7 つ以上の条件のテストの IF 関数の代わりに、 <b>Lookup</b>関数を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2838">
            <b>Note</b>: You can also use the <b>Lookup</b> function as an alternative the IF function for elaborate tests or tests for more than seven conditions.</span></span> <span data-ttu-id="a4672-2839">配列形式の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2839">See the examples in the array form.</span></span></para>
          <para><span data-ttu-id="a4672-2840">ベクトル形式</span><span class="sxs-lookup"><span data-stu-id="a4672-2840">Vector form</span></span></para>
          <para><span data-ttu-id="a4672-2841">ベクトルとは、1 つだけの行または 1 列の範囲です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2841">A vector is a range of only one row or one column.</span></span> <span data-ttu-id="a4672-2842">ベクトル形式の<b>lookup 関数</b>は、値の 1 行または 1 列範囲 (ベクトルと呼ばれます) の検索し、2 つ目の 1 行または 1 列の範囲内の同じ位置から値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2842">The vector form of <b>Lookup</b> looks in a one-row or one-column range (known as a vector) for a value and returns a value from the same position in a second one-row or one-column range.</span></span> <span data-ttu-id="a4672-2843">一致する値を含む範囲を指定するときは、この形式の<b>Lookup</b>関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2843">Use this form of the <b>Lookup</b> function when you want to specify the range that contains the values that you want to match.</span></span> <span data-ttu-id="a4672-2844">その他の形式の<b>lookup 関数</b>は、最初の列または行を自動的に検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2844">The other form of <b>Lookup</b> automatically looks in the first column or row.</span></span></para>
          <para><span data-ttu-id="a4672-2845">
            <b>重要</b>: 検査範囲内の値を昇順で配置しなければなりません。.、-2、-1、0、1、2、...、A ~ Z, <b>false</b>, <b>true を指定</b>します。それ以外の場合、<b>参照</b>では、正しい値が得られない場合がします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2845">
            <b>Important</b>: The values in lookup_vector must be placed in ascending order: ...,-2, -1, 0, 1, 2, ..., A-Z, <b>false</b>, <b>true</b>; otherwise, <b>Lookup</b> may not give the correct value.</span></span> <span data-ttu-id="a4672-2846">大文字と小文字のテキストは、同じです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2846">Uppercase and lowercase text are equivalent.</span></span></para>
          <para><span data-ttu-id="a4672-p974">検査値が見つからない場合は、検査範囲に含まれている検査値以下の最大の値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p974">If LOOKUP can't find the lookup_value, it matches the largest value in lookup_vector that is less than or equal to lookup_value. </span></span></para>
          <para><span data-ttu-id="a4672-2848">検査値が検査範囲の最小値より小さい場合は、<b>ルックアップ</b>は、#N/A エラー値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2848">If lookup_value is smaller than the smallest value in lookup_vector, <b>Lookup</b> gives the #N/A error value.</span></span></para>
          <para><span data-ttu-id="a4672-2849">配列形式</span><span class="sxs-lookup"><span data-stu-id="a4672-2849">Array form</span></span></para>
          <para><span data-ttu-id="a4672-2850">配列形式の<b>lookup 関数</b>では、最初の行または列の指定された値の配列の検索し、最後の行または列の配列の同じ位置から値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2850">The array form of <b>Lookup</b> looks in the first row or column of an array for the specified value and returns a value from the same position in the last row or column of the array.</span></span> <span data-ttu-id="a4672-2851">最初の行または列の配列は、一致する値がある場合は、この形式の<b>lookup 関数</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2851">Use this form of <b>Lookup</b> when the values that you want to match are in the first row or column of the array.</span></span> <span data-ttu-id="a4672-2852">列または行の場所を指定するときに、他の形式の<b>lookup 関数</b>を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2852">Use the other form of <b>Lookup</b> when you want to specify the location of the column or row.</span></span></para>
          <para><span data-ttu-id="a4672-2853">
            <b>ヒント</b>: 一般を使用して、最善の方法が、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />または<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />配列形式の<b>lookup 関数</b>ではなく関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2853">
            <b>Tip</b>: In general, it's best to use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />or <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />function instead of the array form of <b>Lookup</b>.</span></span> <span data-ttu-id="a4672-2854">この形式の<b>lookup 関数</b>は、ほかのスプレッドシート プログラムとの互換性のため提供されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-2854">This form of <b>Lookup</b> is provided for compatibility with other spreadsheet programs.</span></span></para>
          <para><span data-ttu-id="a4672-2855"><b>検査値が見つからない</b>場合は、検査値と等しいかそれより小さい値である配列の最大値を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2855">If <b>Lookup</b> can't find the lookup_value, it uses the largest value in the array that is less than or equal to lookup_value.</span></span></para>
          <para><span data-ttu-id="a4672-2856"><b>検査値が先頭行または先頭列配列の次元) の最小値より小さい場合は、エラー値 #n/a が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2856">If lookup_value is smaller than the smallest value in the first row or column (depending on the array dimensions), <b>Lookup</b> returns the #N/A error value.</span></span></para>
          <para><span data-ttu-id="a4672-2857">配列形式の<b>lookup 関数</b>では、非常のような<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2857">The array form of <b>Lookup</b> is very similar to the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> functions.</span></span> <span data-ttu-id="a4672-2858">違いは、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />最初の行で検査値を検索<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />では、最初の列を検索し、<b>配列の次元に応じて検索</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2858">The difference is that <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> searches for lookup_value in the first row, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> searches in the first column, and <b>Lookup</b> searches according to the dimensions of array.</span></span></para>
          <para><span data-ttu-id="a4672-2859">配列の場合は高さ (行数より列)、<b>最初の行で検査値が検索</b>されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2859">If array covers an area that is wider than it is tall (more columns than rows), <b>Lookup</b> searches for lookup_value in the first row.</span></span></para>
          <para><span data-ttu-id="a4672-2860">配列が正方形または高さよりも大きい場合は、全体 (列数より行数)、<b>最初の列で検索</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2860">If array is square or is taller than it is wide (more rows than columns), <b>Lookup</b> searches in the first column.</span></span></para>
          <para><span data-ttu-id="a4672-2861"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />、下または横方向には、インデックスを作成できますが、<b>参照</b>は常に行または列内の最後の値を選択します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2861">With <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />, you can index down or across, but <b>Lookup</b> always selects the last value in the row or column.</span></span></para>
          <para><span data-ttu-id="a4672-2862">
            <b>重要</b>: 昇順で配列内の値を配置する必要があります:...、-2、-1、0、1, 2,..., A ~ Z, <b>false</b>, <b>true を指定</b>します。それ以外の場合、<b>参照</b>では、正しい値が得られない場合がします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2862">
            <b>Important</b>: The values in array must be placed in ascending order: ...,-2, -1, 0, 1, 2, ..., A-Z, <b>false</b>, <b>true</b>; otherwise, <b>Lookup</b> may not give the correct value.</span></span> <span data-ttu-id="a4672-2863">大文字と小文字のテキストは、同じです。</span><span class="sxs-lookup"><span data-stu-id="a4672-2863">Uppercase and lowercase text are equivalent.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public double Match (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Match([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Match(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2864">検査値: 表の中で必要な項目を検索するために使用する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2864">Lookup_value - the value you use to find the value you want in a table.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p979">検査範囲: 検査値を含む隣接したセル範囲を指定します。検査範囲は、配列または配列に対するセル参照を指定してもかまいません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p979">Lookup_array - a contiguous range of cells containing possible lookup values. Lookup_array must be an array or an array reference.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p980">照合の型: -1、0、1 の数値のいずれかを指定します。照合の型には、検査範囲の中で検査値を探す方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p980">Match_type - the number -1, 0, or 1. Match_type specifies how Microsoft Excel matches lookup_value with values in lookup_array.</span></span></param>
        <summary><span data-ttu-id="a4672-2869">指定された順序で指定された値と一致する配列内の項目の相対位置を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2869">Returns the relative position of an item in an array that matches a specified value in a specified order.</span></span> <span data-ttu-id="a4672-2870"><b>一致</b>を使用して、いずれかではなく、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" />項目そのものではなく範囲内の項目の位置を作成する必要があるときに機能します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2870">Use <b>Match</b> instead of one of the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" /> functions when you need the position of an item in a range instead of the item itself.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2871">検査値は、検査範囲に一致する値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2871">Lookup_value is the value you want to match in lookup_array.</span></span> <span data-ttu-id="a4672-2872">などの電話番号帳で他のユーザーの数を確認するときに参照の値として、人の名前を使用しているが、電話番号は、目的の値。</span><span class="sxs-lookup"><span data-stu-id="a4672-2872">For example, when you look up someone's number in a telephone book, you are using the person's name as the lookup value, but the telephone number is the value you want.</span></span></para>
          <para><span data-ttu-id="a4672-2873">検査値には、数値、文字列、論理値、またはこれらの値に対するセル参照を指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2873">Lookup_value can be a value (number, text, or logical value) or a cell reference to a number, text, or logical value.</span></span></para>
          <para><span data-ttu-id="a4672-2874">照合の型が 1 の場合<b>と</b>は、検査値以下の最大値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2874">If match_type is 1, <b>Match</b> finds the largest value that is less than or equal to lookup_value.</span></span> <span data-ttu-id="a4672-2875">昇順で並べ替えておく必要があります:...-2、-1、0、1、2、...、A ~ Z, <b>false</b>, <b>true を指定</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2875">Lookup_array must be placed in ascending order: ...-2, -1, 0, 1, 2, ..., A-Z, <b>false</b>, <b>true</b>.</span></span></para>
          <para><span data-ttu-id="a4672-2876">照合の型が 0 の場合は、<b>一致するもの</b>は、検査値に等しい最初の値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2876">If match_type is 0, <b>Match</b> finds the first value that is exactly equal to lookup_value.</span></span> <span data-ttu-id="a4672-2877">任意の順序で検査ができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2877">Lookup_array can be in any order.</span></span></para>
          <para><span data-ttu-id="a4672-2878">照合の型が-1 の場合<b>と</b>は、検査値以上の最小の値を検索します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2878">If match_type is -1, <b>Match</b> finds the smallest value that is greater than or equal to lookup_value.</span></span> <span data-ttu-id="a4672-2879">降順に並べ替えておく必要があります<b>true</b>、 <b>false</b>、Z は、.。2、1、0、-1、-2、...、およびようにします。照合の型を省略した場合は 1 であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2879">Lookup_array must be placed in descending order: <b>true</b>, <b>false</b>, Z-A, ...2, 1, 0, -1, -2, ..., and so on.If match_type is omitted, it is assumed to be 1.</span></span></para>
          <para><span data-ttu-id="a4672-2880">
            <b>一致するもの</b>では、値自体ではなく、検査範囲内で一致する値の位置を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2880">
            <b>Match</b> returns the position of the matched value within lookup_array, not the value itself.</span></span> <span data-ttu-id="a4672-2881">たとえば、MATCH("b",{"a","b","c"},0) は、2、{"a""b"、"c"} の配列内には、"b"の相対的な位置を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2881">For example, MATCH("b",{"a","b","c"},0) returns 2, the relative position of "b" within the array {"a","b","c"}.</span></span> </para>
          <para><span data-ttu-id="a4672-2882">
            <b>一致するもの</b>では、このテキスト値に一致するときは、大文字と小文字の文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-2882">
            <b>Match</b> does not distinguish between uppercase and lowercase letters when matching text values.</span></span> </para>
          <para><span data-ttu-id="a4672-2883"><b>一致</b>一致の検索に失敗した場合、#N/A エラー値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2883">If <b>Match</b> is unsuccessful in finding a match, it returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p989">検索の型が 0 で、検索値が文字列の場合、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のチルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p989">If match_type is 0 and lookup_value is text, you can use the wildcard characters, question mark (?) and asterisk (\*), in lookup_value. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public double Max (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Max([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Max (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2887">数値 1、数値 2 ...: 最大の数値を見つけるため、1 ～ 30 個までの数値を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2887">Number1, number2, ... - 1 to 30 numbers for which you want to find the maximum value.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-2888">引数リストに含まれる最大の数値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2888">Returns the largest value in a set of values.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p990">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p990">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p991">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p991">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p992">引数に配列またはセル範囲の参照を指定した場合、その中に含まれる数値だけが計算の対象となります。配列やセル範囲に含まれる空白セル、論理値、または文字列はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p992">If an argument is an array or reference, only numbers in that array or reference are used. Empty cells, logical values, or text in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-2893">引数に数値が含まれない場合、<b>最大値</b>は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2893">If the arguments contain no numbers, <b>Max</b> returns 0 (zero).</span></span> </para>
          <para><span data-ttu-id="a4672-p994">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p994">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-2895">セル参照に計算の一部として論理値や数値を表す文字列を含める場合を使用して、<see cref="MAXA" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2895">If you want to include logical values and text representations of numbers in a reference as part of the calculation, use the <see cref="MAXA" /> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDeterm">
      <MemberSignature Language="C#" Value="public double MDeterm (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDeterm([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDeterm(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDeterm (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MDeterm(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2896">配列: 行数と列数が等しい数値配列 (正方行列) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2896">Array - a numeric array with an equal number of rows and columns.</span></span></param>
        <summary><span data-ttu-id="a4672-2897">配列の行列式を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2897">Returns the matrix determinant of an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2898">たとえば、a1: c3 のセル範囲、配列を指定することができます。配列定数として次のように {1,2,3; 4,5,6; 7,8,9} です。またはこれらのいずれかの名前として。<b>MDeterm</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2898">Array can be given as a cell range, for example, A1:C3; as an array constant, such as {1,2,3;4,5,6;7,8,9}; or as a name to either of these.<b>MDeterm</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2899">エラーとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-2899">error when:</span></span> </para>
          <para><span data-ttu-id="a4672-p996">配列に空白または文字列が含まれるセルがある。</span><span class="sxs-lookup"><span data-stu-id="a4672-p996">Any cells in array are empty or contain text. </span></span></para>
          <para><span data-ttu-id="a4672-p997">配列の行数と列数が等しくない。</span><span class="sxs-lookup"><span data-stu-id="a4672-p997">Array does not have an equal number of rows and columns. </span></span></para>
          <para><span data-ttu-id="a4672-p998">配列のサイズが 73 列、73 行を超える。</span><span class="sxs-lookup"><span data-stu-id="a4672-p998">The size of array exceeds 73 columns by 73 rows. </span></span></para>
          <para><span data-ttu-id="a4672-2903">行列式は、配列内の値から派生した数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2903">The matrix determinant is a number derived from the values in array.</span></span> <span data-ttu-id="a4672-2904">3 つの行と 3 列配列で、a1: c3 の行列式として定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2904">For a three-row, three-column array, A1:C3, the determinant is defined as:</span></span> </para>
          <code>MDETERM(A1:C3)</code>
          <para><span data-ttu-id="a4672-2905">と等しい</span><span class="sxs-lookup"><span data-stu-id="a4672-2905">equals</span></span></para>
          <code>A1*(B2*C3-B3*C2) + A2*(B3*C1-B1*C3) + A3*(B1*C2-B2*C1)</code>
          <para><span data-ttu-id="a4672-p1000">行列式は、一般に、多変数の連立方程式を解くために使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1000">Matrix determinants are generally used for solving systems of mathematical equations that involve several variables. </span></span></para>
          <para><span data-ttu-id="a4672-2907">
            <b>MDeterm</b>は、約 16 計算が完了しないと、小さな数値エラーの先頭の桁の精度で計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2907">
            <b>MDeterm</b> is calculated with an accuracy of approximately 16 digits, which may lead to a small numeric error when the calculation is not complete.</span></span> <span data-ttu-id="a4672-2908">たとえば、1E 16 でゼロから特異な行列の行列式が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2908">For example, the determinant of a singular matrix may differ from zero by 1E-16.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDuration">
      <MemberSignature Language="C#" Value="public double MDuration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDuration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDuration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDuration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1002">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1002">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1003">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1003">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2913">利率: 証券の年利を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2913">Coupon - the security's annual coupon rate.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-2914">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2914">Yld - the security's annual yield.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p1004">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1004">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-2917">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2917">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-2918">額面価格を $100 と仮定して、証券に対する修正マコーレー デュレーションを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2918">Returns the modified Macauley duration for a security with an assumed par value of $100.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2919">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2919">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-2920">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2920">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-2921">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2921">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-p1006">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1006">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1007">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 30 年後に当たる 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1007">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date is January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1008">受渡日、満期日、頻度、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1008">Settlement, maturity, frequency, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-2930"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-2930">If settlement or maturity is not a valid date, <b>MDuration</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2931">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2931">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2932">場合利回り&lt;0 またはクーポン&lt;0、<b>指定</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2932">If yld &lt; 0 or if coupon &lt; 0, <b>MDuration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2933">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2933">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2934">頻度が 1、2、または 4 以外の数値の場合は、<b>指定</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2934">If frequency is any number other than 1, 2, or 4, <b>MDuration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2935">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2935">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2936">場合に&lt;0 または基準&gt;4 では、<b>指定</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-2936">If basis &lt; 0 or if basis &gt; 4, <b>MDuration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2937">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2937">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2938">場合は受領成熟度、<b>指定</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2938">If settlement ≥ maturity, <b>MDuration</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-2939">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2939">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2940">修正デュレーションは、次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2940">Modified duration is defined as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-2941">修正デュレーションの式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-2941">Figure 1: Equation for modified duration</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Median([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2942">数値 1、数値 2 ...: メジアンを計算するため、1 個から 30 個までの数値を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2942">Number1, number2, ... - 1 to 30 numbers for which you want the median.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1014">引数リストに含まれる数値のメジアン (中央値) を返します。メジアンとは、引数リストの数値を小さいものから大きなものに順に並べたとき、その中央にくる数値のことです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1014">Returns the median of the given numbers. The median is the number in the middle of a set of numbers.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2945">集合内の数値の数は偶数である場合、<b>中央値</b>は中央の 2 つの数値の平均を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2945">If there is an even number of numbers in the set, then <b>Median</b> calculates the average of the two numbers in the middle.</span></span> <span data-ttu-id="a4672-2946">2 番目の数式の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-2946">See the second formula in the example.</span></span></para>
          <para><span data-ttu-id="a4672-p1016">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1016">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1017">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1017">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1018">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1018">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-2950">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2950">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span></para>
          <para><span data-ttu-id="a4672-2951">
            <b>注</b>: <b>Median</b>関数中心傾向、統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2951">
            <b>Note</b>: The <b>Median</b> function measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-2952">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-2952">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-2953">
          <list type="bullet">
            <item>
              <description>平均算術平均、数字のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>メジアン数値グループの中央数であるテストの結果、半分の数値、中央値よりも大きい値があり、半分の数値が中央値より小さい値を持ちます。2、3、3、5、7、および 10 のメジアンは 4 です</description>
            </item>。
            <item>
              <description>モード数値グループで最も頻繁に出現する数値です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2953">
          <list type="bullet">
            <item>
              <description>Average which is the arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median which is the middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4.</description>
            </item>
            <item>
              <description>Mode which is the most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1020">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1020">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public double Min (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Min([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Min (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2956">数値 1、数値 2 ...: 最小の数値を見つけるため、1 ～ 30 個までの数値を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2956">Number1, number2, ... - 1 to 30 numbers for which you want to find the minimum value.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-2957">引数リストに含まれる最小の数値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2957">Returns the smallest number in a set of values.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1021">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1021">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1022">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1022">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1023">引数に配列またはセル範囲の参照を指定した場合、その中に含まれる数値だけが計算の対象となります。配列やセル範囲に含まれる空白セル、論理値、または文字列はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1023">If an argument is an array or reference, only numbers in that array or reference are used. Empty cells, logical values, or text in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-2962">引数に数値が含まれない場合、<b>最小値</b>は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2962">If the arguments contain no numbers, <b>Min</b> returns 0.</span></span> </para>
          <para><span data-ttu-id="a4672-p1025">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1025">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-2964">セル参照に計算の一部として論理値や数値を表す文字列を含める場合は、MINA 関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2964">If you want to include logical values and text representations of numbers in a reference as part of the calculation, use the MINA function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MInverse">
      <MemberSignature Language="C#" Value="public object MInverse (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MInverse([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MInverse(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MInverse (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MInverse(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2965">配列: 行数と列数が等しい数値配列 (正方行列) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2965">Array - a numeric array with an equal number of rows and columns.</span></span></param>
        <summary><span data-ttu-id="a4672-2966">行列の逆行列を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2966">Returns the inverse matrix for the matrix stored in an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1026">配列に指定できる最大サイズは、52 列掛ける 52 行です。このサイズを超える場合、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1026">The size of the array must not exceed 52 columns by 52 rows. If it does, the function returns a #VALUE! error. </span></span></para>
          <para><span data-ttu-id="a4672-p1027">配列には、A1:C3 のようなセル範囲、{1,2,3;4,5,6;7,8,9} のような配列定数、またはこのどちらかを参照する名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1027">Array can be given as a cell range, such as A1:C3; as an array constant, such as {1,2,3;4,5,6;7,8,9}; or as a name for either of these. </span></span></para>
          <para><span data-ttu-id="a4672-2971"><b>MInverse</b>は、配列内の任意のセルまたはテキストが含まれている、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2971">If any cells in array are empty or contain text, <b>MInverse</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-2972">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2972">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-2973">
            <b>MInverse</b>は、また、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2973">
            <b>MInverse</b> also returns the #VALUE!</span></span> <span data-ttu-id="a4672-2974">配列が同じ数の行と列を持っていない場合は、エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2974">error value if array does not have an equal number of rows and columns.</span></span> </para>
          <para><span data-ttu-id="a4672-p1030">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1030">Formulas that return arrays must be entered as array formulas. </span></span></para>
          <para><span data-ttu-id="a4672-p1031">逆行列は、行列式と同様に、多変数の連立方程式を解くために使用されます。行列とその逆行列の積は、単位行列 (右下がりの対角線上にある成分の値がすべて 1 で、その他の成分がすべて 0 であるような正方行列) となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1031">Inverse matrices, like determinants, are generally used for solving systems of mathematical equations involving several variables. The product of a matrix and its inverse is the identity matrix — the square array in which the diagonal values equal 1, and all other values equal 0. </span></span></para>
          <para><span data-ttu-id="a4672-p1032">2 行 2 列の行列がどのように計算されるかを示します。セル範囲 A1:B2 にはそれぞれ a、b、c、d という数値が含まれているとします。次の表は、行列 A1:B2 の逆行列を示しています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1032">As an example of how a two-row, two-column matrix is calculated, suppose that the range A1:B2 contains the letters a, b, c, and d that represent any four numbers. The following table shows the inverse of the matrix A1:B2. </span></span></para><span data-ttu-id="a4672-2980">
          <list type="table">
            <item>
              <term>行 1</term>
              <description>d/(*d、a b*c)</description>
              <description>b/(b*c、* d)</description> 
            </item>
            <item>
              <term>行 2</term>
              <description>c/(b*c、* d)</description>
              <description>、または (*d、a b*c)</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-2980">
          <list type="table">
            <item>
              <term>Row 1</term>
              <description>d/(a*d-b*c)</description>
              <description>b/(b*c-a*d)</description>
            </item>
            <item>
              <term>Row 2</term>
              <description>c/(b*c-a*d)</description>
              <description>a/(a*d-b*c)</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-2981">
            <b>MInverse</b>は、約 16、キャンセルが完了しないと、小さな数値エラーの先頭の桁の精度で計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-2981">
            <b>MInverse</b> is calculated with an accuracy of approximately 16 digits, which may lead to a small numeric error when the cancellation is not complete.</span></span> </para>
          <para><span data-ttu-id="a4672-2982">いくつかの正方行列は反転することはできませんし、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2982">Some square matrices cannot be inverted and will return the #NUM!</span></span> <span data-ttu-id="a4672-2983">エラー値が<b>返されます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-2983">error value with <b>MInverse</b>.</span></span> <span data-ttu-id="a4672-2984">逆行行列の行列式は 0 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2984">The determinant for a noninvertable matrix is 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MIrr">
      <MemberSignature Language="C#" Value="public double MIrr (object Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MIrr([in]object Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MIrr(System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIrr (Arg1 As Object, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MIrr(System::Object ^ Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1035">範囲: 数値を含む配列またはセル参照を指定します。これらの数値は、定期的に発生する一連の支払い (負の値) と収益 (正の値) に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1035">Values - an array or a reference to cells that contain numbers. These numbers represent a series of payments (negative values) and income (positive values) occurring at regular periods.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-2987">安全利率: 支払額 (負のキャッシュ フロー) に対する利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2987">Finance_rate - the interest rate you pay on the money used in the cash flows.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-2988">危険利率: 収益額 (正のキャッシュ フロー) に対する利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2988">Reinvest_rate - the interest rate you receive on the cash flows as you reinvest them.</span></span></param>
        <summary><span data-ttu-id="a4672-p1036">一連の定期的なキャッシュ フローに基づいて、修正内部利益率を返します。MIRR 関数では、投資原価と現金の再投資に対する受取利率 (危険利率) の両方が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1036">Returns the modified internal rate of return for a series of periodic cash flows. MIRR considers both the cost of the investment and the interest received on reinvestment of cash.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-2991">値は、1 つ以上の正の値と変更された内部利益率を計算する 1 つの負の値を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-2991">Values must contain at least one positive value and one negative value to calculate the modified internal rate of return.</span></span> <span data-ttu-id="a4672-2992">それ以外の場合、 <b>MIrr</b> #DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2992">Otherwise, <b>MIrr</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-2993">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2993">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1038">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1038">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-2995">
            <b>MIrr</b>は、キャッシュ フローの順序を解釈するために、値の順序を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2995">
            <b>MIrr</b> uses the order of values to interpret the order of cash flows.</span></span> <span data-ttu-id="a4672-2996">シーケンスでは正しい記号 (正の値、収益額、支払額は負の値) での支払いと収入値を入力することを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2996">Be sure to enter your payment and income values in the sequence you want and with the correct signs (positive values for cash received, negative values for cash paid).</span></span> </para>
          <para><span data-ttu-id="a4672-2997">N はキャッシュ フローの数、frate、利率、rrate では、利率、 <b>MIrr</b>の数式です。</span><span class="sxs-lookup"><span data-stu-id="a4672-2997">If n is the number of cash flows in values, frate is the finance_rate, and rrate is the reinvest_rate, then the formula for <b>MIrr</b> is:</span></span> </para>
          <para><span data-ttu-id="a4672-2998">MIrr メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-2998">Figure 1: Formula for MIrr method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MMult">
      <MemberSignature Language="C#" Value="public object MMult (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MMult([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MMult(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MMult (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MMult(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16549)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-2999">配列 1、配列 2: 行列積を求める 2 つの配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-2999">Array1, array2 - the arrays you want to multiply.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3000">配列 1、配列 2: 行列積を求める 2 つの配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3000">Array1, array2 - the arrays you want to multiply.</span></span></param>
        <summary><span data-ttu-id="a4672-p1040">2 つの配列の行列積を返します。計算結果は、行数が配列 1 と同じで、列数が配列 2 と同じ配列になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1040">Returns the matrix product of two arrays. The result is an array with the same number of rows as array1 and the same number of columns as array2.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1041">配列 1 の列数は、配列 2 の行数と等しい必要があります。また、両方の配列には数値だけが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1041">The number of columns in array1 must be the same as the number of rows in array2, and both arrays must contain only numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1042">配列 1、配列 2 には、セル範囲、配列定数、またはその参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1042">Array1 and array2 can be given as cell ranges, array constants, or references. </span></span></para>
          <para><span data-ttu-id="a4672-3005">
            <b>づれ</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3005">
            <b>MMult</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3006">エラーとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-3006">error when:</span></span> </para>
          <para><span data-ttu-id="a4672-p1044">いずれかのセルが空白であるか、文字列が含まれている。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1044">Any cells are empty or contain text. </span></span></para>
          <para><span data-ttu-id="a4672-p1045">配列 1 の列数が配列 2 の行数と異なる。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1045">The number of columns in array1 is different from the number of rows in array2. </span></span></para>
          <para><span data-ttu-id="a4672-p1046">計算結果の配列が合計 5,461 セル以上になる。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1046">The size of the resulting array is equal to or greater than a total of 5,461 cells. </span></span></para>
          <para><span data-ttu-id="a4672-3010">2 つの配列 b、c の行列積である配列 a は次のように定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3010">The matrix product array a of two arrays b and c is:</span></span> </para>
          <para><span data-ttu-id="a4672-3011">図 1: 行列積である配列の 2 つの配列 b、c の</span><span class="sxs-lookup"><span data-stu-id="a4672-3011">Figure1: Matrix product array a of two arrays b and c</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3012">ここでは、i = 行数、j = 列数を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3012">where i is the row number, and j is the column number.</span></span></para>
          <para><span data-ttu-id="a4672-3013">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3013">Formulas that return arrays must be entered as array formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public double Mode (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1047">数値 1、数値 2 ...: 計算の対象となる最大 30 個までの引数を指定できます。また、半角のコンマ (,) で区切られた数値の代わりに、配列またはセル範囲を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1047">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3016">配列またはセル範囲として指定されたデータの中で、最も頻繁に出現する値 (最頻値) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3016">Returns the most frequently occurring, or repetitive, value in an array or range of data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3017">正確さの向上を提供することがあり、名前がその使用方法をより効果的に反映 1 つまたは複数の新しい関数を使用して、この関数は交換済み。</span><span class="sxs-lookup"><span data-stu-id="a4672-3017">This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3018">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3018">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3019">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3019">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3020">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3020">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-p1049">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1049">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1050">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1050">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1051">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1051">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-3024">データ セットに重複するデータ ポイントが含まれていない場合、<b>モード</b>は、エラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3024">If the data set contains no duplicate data points, <b>Mode</b> returns the #N/A error value.</span></span></para>
          <para><span data-ttu-id="a4672-3025">
            <b>注</b>:<b>モード</b>関数メジャー中心的な傾向、統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3025">
            <b>Note</b>: The <b>Mode</b> function measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-3026">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-3026">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-3027">
          <list type="bullet">
            <item>
              <description>平均算術平均、数字のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>メジアン数値グループの中央数であるテストの結果、半分の数値、中央値よりも大きい値があり、半分の数値が中央値より小さい値を持ちます。たとえば、2、3、3、5、7、および 10 のメジアンは 4 です。</description>
            </item>
            <item>
              <description>モードが、最も頻繁に発生している数値のグループの番号です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3027">
          <list type="bullet">
            <item>
              <description>Average which is the arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median which is the middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4. </description>
            </item>
            <item>
              <description>Mode which is the most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1053">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1053">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Mult">
      <MemberSignature Language="C#" Value="public object Mode_Mult (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Mode_Mult([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Mult (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3030">数値 1: 計算の対象となる最初の引数の数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3030">Number1 - The first number argument for which you want to calculate the mode.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1054">数値 2 ～ 数値 30: 計算の対象となる 2 番目から 30 番目までの引数の数値を指定します。また、半角のコンマ (,) で区切られた数値の代わりに、配列またはセル範囲を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1054">Number2 - Number30 - Number arguments from 2 to 30 for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3033">配列またはセル範囲として指定されたデータの中で、最も頻繁に出現する値 (最頻値) の垂直配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3033">Returns a vertical array of the most frequently occurring, or repetitive, values in an array or range of data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1055">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1055">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1056">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1056">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1057">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1057">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-3037">データ セットに重複するデータ ポイントが含まれていない場合、 <b>Mode_Mult</b>は、エラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3037">If the data set contains no duplicate data points, <b>Mode_Mult</b> returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Sngl">
      <MemberSignature Language="C#" Value="public double Mode_Sngl (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode_Sngl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Sngl (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1058">数値 1、数値 2 ...: 計算の対象となる引数を最大 30 個まで指定します。また、半角のコンマ (,) で区切られた数値の代わりに、配列またはセル範囲を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1058">Number1, number2, ... - 1 to 30 arguments for which you want to calculate the mode. You can also use a single array or a reference to an array instead of arguments separated by commas (,).</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3040">配列またはセル範囲として指定されたデータの中で、最も頻繁に出現する値 (最頻値) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3040">Returns the most frequently occurring, or repetitive, value in an array or range of data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1059">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1059">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1060">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1060">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1061">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1061">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-3044">データ セットに重複するデータ ポイントが含まれていない場合、 <b>Mode_Sngl</b>は、エラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3044">If the data set contains no duplicate data points, <b>Mode_Sngl</b> returns the #N/A error value.</span></span></para>
          <para><span data-ttu-id="a4672-3045">
            <b>注</b>: <b>Mode_Sngl</b>関数での中心傾向の統計的分布における数値グループの中央の場所であります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3045">
            <b>Note</b>: The <b>Mode_Sngl</b> function measures central tendency, which is the location of the center of a group of numbers in a statistical distribution.</span></span> <span data-ttu-id="a4672-3046">中心傾向を表す指標は、3 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-3046">The three most common measures of central tendency are:</span></span></para><span data-ttu-id="a4672-3047">
          <list type="bullet">
            <item>
              <description>は算術平均を平均して、番号のグループを追加して、それらの数値の個数で割ることによって計算されます。たとえば、2、3、3、5、7、および 10 の平均値は割ることによって、5 であります。</description>
            </item>
            <item>
              <description>中央のメジアンを計算する数値のグループの数; は、メジアンより大きい値を持つ数値を半分と中央値より小さい値を持つ数値が半分。たとえば、2、3、3、5、7、および 10 のメジアンは 4 です。</description>
            </item>
            <item>
              <description>モード数値グループで最も頻繁に出現する数です。2、3、3、5、7、および 10 のモードは 3 です</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3047">
          <list type="bullet">
            <item>
              <description>Average The arithmetic mean, and is calculated by adding a group of numbers and then dividing by the count of those numbers. For example, the average of 2, 3, 3, 5, 7, and 10 is 30 divided by 6, which is 5. </description>
            </item>
            <item>
              <description>Median The middle number of a group of numbers; that is, half the numbers have values that are greater than the median, and half the numbers have values that are less than the median. For example, the median of 2, 3, 3, 5, 7, and 10 is 4. </description>
            </item>
            <item>
              <description>Mode The most frequently occurring number in a group of numbers. For example, the mode of 2, 3, 3, 5, 7, and 10 is 3.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1063">数値のグループが対称分布の場合には、これら 3 つの中心傾向の測度の値は同じになります。数値のグループが非対称分布の場合には、値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1063">For a symmetrical distribution of a group of numbers, these three measures of central tendency are all the same. For a skewed distribution of a group of numbers, they can be different.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MRound">
      <MemberSignature Language="C#" Value="public double MRound (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MRound([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MRound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MRound (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MRound(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3050">数値: 切り上げの対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3050">Number - the value to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3051">倍数: 四捨五入した数値が、その倍数となるような数値を指定します。つまり、倍数は、四捨五入した数値の約数になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3051">Multiple - the multiple to which you want to round number.</span></span></param>
        <summary><span data-ttu-id="a4672-3052">指定された値の倍数になるように、数値を四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3052">Returns a number rounded to the desired multiple.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3053">
            <b>倍数</b>に丸め、ゼロでは、複数の数値を除算した剰余が倍数の半分の値以上である場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-3053">
            <b>MRound</b> rounds up, away from zero, if the remainder of dividing number by multiple is greater than or equal to half the value of multiple.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiNomial">
      <MemberSignature Language="C#" Value="public double MultiNomial (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MultiNomial([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MultiNomial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MultiNomial (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3054">数値 1、数値 2 ...: 計算の対象となる数値を最大 29 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3054">Number1,number2, ... - 1 to 29 values for which you want the multinomial.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3055">指定された数値の和の階乗と、指定された数値の階乗の積との比を返します。つまり、多項係数を求めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3055">Returns the ratio of the factorial of a sum of values to the product of factorials.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3056">いずれかの引数が数値以外の場合は、<b>数値</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3056">If any argument is nonnumeric, <b>MultiNomial</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3057">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3057">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3058"><b>数値</b>は、いずれかの引数が 0 より小さい場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3058">If any argument is less than zero, <b>MultiNomial</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3059">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3059">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3060">多項係数の計算は次のように定義されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3060">The multinomial is:</span></span> </para>
          <para><span data-ttu-id="a4672-3061">数値メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3061">Figure 1: Equation for MultiNomial method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Munit">
      <MemberSignature Language="C#" Value="public object Munit (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Munit([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Munit(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Munit (Arg1 As Double) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Munit(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16966)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3062">求める単位行列の次元を指定する整数。</span><span class="sxs-lookup"><span data-stu-id="a4672-3062">Integer specifying the dimension of the unit matrix that you want to return.</span></span></param>
        <summary><span data-ttu-id="a4672-3063">指定された次元の単位行列を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3063">Returns the unit matrix for the specified dimension.</span></span></summary>
        <returns><span data-ttu-id="a4672-3064"><b>VARIANT</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3064"><b>VARIANT</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinom_Dist">
      <MemberSignature Language="C#" Value="public double NegBinom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3065">失敗数: 試行が失敗する回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3065">Number_f - the number of failures.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3066">成功数: 分析のしきい値となる、試行が成功する回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3066">Number_s - the threshold number of successes.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3067">成功率: 試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3067">Probability_s - the probability of a success.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3068">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3068">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-3069">場合<b>は累積的な</b> <b>NegBinom_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3069">If cumulative is <b>true</b>, <b>NegBinom_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-3070">負の二項分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3070">Returns the negative binomial distribution.</span></span> <span data-ttu-id="a4672-3071"><b>NegBinom_Dist</b>がある、成功、成功する前に指定した回数失敗、成功の確率が成功する確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3071"><b>NegBinom_Dist</b> returns the probability that there will be number_f failures before the number_s-th success, when the constant probability of a success is probability_s.</span></span> <span data-ttu-id="a4672-3072">この関数は、成功数は固定であり、試行の回数は、変数が二項分布と似ています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3072">This function is similar to the binomial distribution, except that the number of successes is fixed, and the number of trials is variable.</span></span> <span data-ttu-id="a4672-3073">、二項分布のような試行は独立するいると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3073">Like the binomial, trials are assumed to be independent.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3074">など優れるリフレックスで 10 人を検索する必要があり、応募者がこれらの資格を持っている確率は 0.3 をことがわかっています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3074">For example, you need to find 10 people with excellent reflexes, and you know the probability that a candidate has these qualifications is 0.3.</span></span> <span data-ttu-id="a4672-3075"><b>NegBinom_Dist</b>では、面接する候補者の不適切な数 10 個すべての修飾された候補者を見つける前に確率を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3075"><b>NegBinom_Dist</b> calculates the probability that you will interview a certain number of unqualified candidates before finding all 10 qualified candidates:</span></span> </para>
          <para><span data-ttu-id="a4672-p1069">失敗数、成功数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1069">Number_f and number_s are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3077">いずれかの引数が数値以外の場合は、 <b>NegBinom_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3077">If any argument is nonnumeric, <b>NegBinom_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3078">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3078">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3079">場合成功率&lt;0 または確率&gt;1、 <b>NegBinom_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3079">If probability_s &lt; 0 or if probability &gt; 1, <b>NegBinom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3080">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3080">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3081">場合失敗&lt;0 または成功数&lt;1、 <b>NegBinom_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3081">If number_f &lt; 0 or number_s &lt; 1, <b>NegBinom_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3082">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3082">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3083">負の二項分布は、次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3083">The equation for the negative binomial distribution is:</span></span> </para>
          <para><span data-ttu-id="a4672-3084">図 1: 負の二項分布の数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3084">Figure 1: Equation for the negative binomial distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3085">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3085">where:</span></span></para>
          <para><span data-ttu-id="a4672-3086">x は失敗数、r は成功数で、p は成功率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3086">x is number_f, r is number_s, and p is probability_s.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinomDist">
      <MemberSignature Language="C#" Value="public double NegBinomDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinomDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3087">失敗数: 試行が失敗する回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3087">Number_f - the number of failures.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3088">成功数: 分析のしきい値となる、試行が成功する回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3088">Number_s - the threshold number of successes.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3089">成功率: 試行が成功する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3089">Probability_s - the probability of a success.</span></span></param>
        <summary><span data-ttu-id="a4672-3090">負の二項分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3090">Returns the negative binomial distribution.</span></span> <span data-ttu-id="a4672-3091">NegBinomDist がある、成功、成功する前に指定した回数失敗、成功の確率が成功する確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3091">NegBinomDist returns the probability that there will be number_f failures before the number_s-th success, when the constant probability of a success is probability_s.</span></span> <span data-ttu-id="a4672-3092">この関数は、成功数は固定であり、試行の回数は、変数が二項分布と似ています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3092">This function is similar to the binomial distribution, except that the number of successes is fixed, and the number of trials is variable.</span></span> <span data-ttu-id="a4672-3093">、二項分布のような試行は独立するいると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3093">Like the binomial, trials are assumed to be independent.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3094">正確さの向上を提供することがあり、名前がその使用方法をより効果的に反映 1 つまたは複数の新しい関数を使用して、この関数は交換済み。</span><span class="sxs-lookup"><span data-stu-id="a4672-3094">This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3095">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3095">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3096">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3096">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3097">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3097">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-3098">など優れるリフレックスで 10 人を検索する必要があり、応募者がこれらの資格を持っている確率は 0.3 をことがわかっています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3098">For example, you need to find 10 people with excellent reflexes, and you know the probability that a candidate has these qualifications is 0.3.</span></span> <span data-ttu-id="a4672-3099"><b>NegBinomDist</b>は、面接する候補者の不適切な数 10 個すべての修飾された候補者を見つける前に確率を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3099"><b>NegBinomDist</b> calculates the probability that you will interview a certain number of unqualified candidates before finding all 10 qualified candidates.</span></span> </para>
          <para><span data-ttu-id="a4672-p1076">失敗数、成功数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1076">Number_f and number_s are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3101">いずれかの引数が数値以外の場合は、 <b>NegBinomDist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3101">If any argument is nonnumeric, <b>NegBinomDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3102">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3102">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3103">場合成功率&lt;0 または確率&gt;1、 <b>NegBinomDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3103">If probability_s &lt; 0 or if probability &gt; 1, <b>NegBinomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3104">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3104">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3105">場合失敗&lt;0 または成功数&lt;1、 <b>NegBinomDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3105">If number_f &lt; 0 or number_s &lt; 1, <b>NegBinomDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3106">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3106">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3107">負の二項分布は、次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3107">The equation for the negative binomial distribution is:</span></span> </para>
          <para><span data-ttu-id="a4672-3108">図 1: 負の二項分布の数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3108">Figure 1: Equation for the negative binomial distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3109">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3109">where:</span></span></para>
          <para><span data-ttu-id="a4672-3110">x は失敗数、r は成功数で、p は成功率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3110">x is number_f, r is number_s, and p is probability_s.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays">
      <MemberSignature Language="C#" Value="public double NetworkDays (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3111">開始日: 起算日を表す日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3111">Start_date - a date that represents the start date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3112">終了日: 対象期間の最終日を表す日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3112">End_date - a date that represents the end date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1080">休日: 国民の祝日や夏期休暇など、稼動日数の計算から除外する日を表す日付を指定します。この引数は省略することができます。日付を含む一連のセルか、日付を示すシリアル値の配列定数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1080">Holidays - an optional range of one or more dates to exclude from the working calendar, such as state and federal holidays and floating holidays. The list can be either a range of cells that contains the dates or an array constant of the serial numbers that represent the dates.</span></span></param>
        <summary><span data-ttu-id="a4672-3115">開始日と終了日の間には、全体の稼働日の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3115">Returns the number of whole working days between start_date and end_date.</span></span> <span data-ttu-id="a4672-3116">稼働日は、週末や祝日に識別される日付を除外します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3116">Working days exclude weekends and any dates identified in holidays.</span></span> <span data-ttu-id="a4672-3117">見越計上する従業員の福利厚生を計算する使用<b>NetworkDays</b>は、特定の期間中に作業日の数に基づいています。</span><span class="sxs-lookup"><span data-stu-id="a4672-3117">Use <b>NetworkDays</b> to calculate employee benefits that accrue based on the number of days worked during a specific term.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3118">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3118">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3119">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3119">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3120">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3120">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-p1083">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1083">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-3124"><b>いずれかの引数が無効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3124">If any argument is not a valid date, <b>NetworkDays</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3125">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3125">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays_Intl">
      <MemberSignature Language="C#" Value="public double NetworkDays_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16904)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1085">開始日: 差分を計算するための起算日です。開始日は、終了日よりも前か、同じか、または後にすることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1085">Start_date - The start date for which the difference is to be computed. The start_date can be earlier than, the same as, or later than the end_date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1086">終了日: 差分を計算するための最終日です。開始日は、終了日よりも前か、同じか、または後にすることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1086">End_date - The end date for which the difference is to be computed. The start_date can be earlier than, the same as, or later than the end_date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3130">週末に-、日、週の週末の日付、開始日と終了日の間の全体の稼働日の数には含まれませんを示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3130">Weekend - Indicates the days of the week that are weekend days and are not included in the number of whole working days between start_date and end_date.</span></span> <span data-ttu-id="a4672-3131">週末は、週末の番号または週末のタイミングを指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3131">Weekend is a weekend number or string that specifies when weekends occur.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1088">祭日: 稼動日数の計算から除外する日付のセットです。このパラメーターは、日付が入力されているセル範囲、または日付を表すシリアル値の配列定数です。祭日の日付またはシリアル値は任意の順序で指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1088">Holidays - An optional set of one or more dates that are to be excluded from the working day calendar. Holidays is a range of cells that contain the dates, or an array constant of the serial values that represent those dates. The ordering of dates or serial values in holidays can be arbitrary.</span></span></param>
        <summary><span data-ttu-id="a4672-p1089">週末の曜日と日数を示すパラメーターを使用して、2 つの日付の間に含まれる稼動日の日数を返します。週末、および祭日として指定されている日は、稼動日と見なされません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1089">Returns the number of whole workdays between two dates using parameters to indicate which and how many days are weekend days. Weekend days and any days that are specified as holidays are not considered as workdays.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1090">開始日が終了日よりも後の場合、戻り値の符号は負になり、値の大きさは稼働日数になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1090">If start_date is later than end_date, the return value will be negative, and the magnitude will be the number of whole workdays. </span></span></para>
          <para><span data-ttu-id="a4672-3138">開始日が現在の日付の基準値の範囲外にある場合は、 <b>NetworkDays_Intl</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3138">If start_date is out of range for the current date base value, <b>NetworkDays_Intl</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3139">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3139">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3140">終了日が現在の日付の基準値の範囲外にある場合は、 <b>NetworkDays_Intl</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3140">If end_date is out of range for the current date base value, <b>NetworkDays_Intl</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3141">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3141">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3142">週末文字列の長さが無効なまたは無効な文字が含まれていますは、 <b>NetworkDays_Intl</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3142">If a weekend string is of invalid length or contains invalid characters, <b>NetworkDays_Intl</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3143">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3143">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nominal">
      <MemberSignature Language="C#" Value="public double Nominal (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Nominal([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Nominal(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Nominal (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Nominal(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3144">実効利率: 実効年利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3144">Effect_rate - the effective interest rate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3145">複利計算回数: 1 年あたりの複利計算回数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3145">Npery - the number of compounding periods per year.</span></span></param>
        <summary><span data-ttu-id="a4672-3146">指定された実効年利率と 1 年あたりの複利計算回数を元に、名目年利率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3146">Returns the nominal annual interest rate, given the effective rate and the number of compounding periods per year.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1094">複利計算回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1094">Npery is truncated to an integer. </span></span></para>
          <para><span data-ttu-id="a4672-3148">いずれかの引数が数値以外の場合は、<b>公称値</b>#VALUE を返す、!</span><span class="sxs-lookup"><span data-stu-id="a4672-3148">If either argument is nonnumeric, <b>Nominal</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3149">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3149">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3150">場合実効 ≤ 0 または複利計算回数&lt;1、<b>名目</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3150">If effect_rate ≤ 0 or if npery &lt; 1, <b>Nominal</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3151">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3151">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3152">
            <b>公称値</b>に関連して<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" />次の式に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-3152">
            <b>Nominal</b> is related to <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" /> as shown in the following equation:</span></span> </para>
          <para><span data-ttu-id="a4672-3153">図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3153">Figure 1: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Dist">
      <MemberSignature Language="C#" Value="public double Norm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3154">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3154">X - The value for which you want the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3155">平均: 対象となる分布の算術平均 (相加平均) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3155">Mean - The arithmetic mean of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3156">標準偏差: 対象となる分布の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3156">Standard_dev - The standard deviation of the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3157">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3157">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-3158">場合<b>は累積的な</b> <b>Norm_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3158">If cumulative is <b>true</b>, <b>Norm_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability mass function.</span></span></param>
        <summary><span data-ttu-id="a4672-p1098">指定した平均と標準偏差に対する正規分布関数の値を返します。この関数は、仮説検定を始めとする統計学の幅広い分野に応用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1098">Returns the normal distribution for the specified mean and standard deviation. This function has a wide range of applications in statistics, including hypothesis testing.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3161">平均または標準偏差が数値以外の場合は、 <b>Norm_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3161">If mean or standard_dev is nonnumeric, <b>Norm_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3162">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3162">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3163">場合は標準偏差 ≤ 0、 <b>Norm_Dist</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3163">If standard_dev ≤ 0, <b>Norm_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3164">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3164">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3165">平均 = 0、標準偏差 = 1、および累積的な<b>true</b>= <b>Norm_Dist</b>は、標準正規分布を返します<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3165">If mean = 0, standard_dev = 1, and cumulative = <b>true</b>, <b>Norm_Dist</b> returns the standard normal distribution, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-3166">正規密度関数の数式 (累積的な = <b>false</b>) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3166">The equation for the normal density function (cumulative = <b>false</b>) is:</span></span> </para>
          <para><span data-ttu-id="a4672-3167">正規密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-3167">Figure 1: Equation for the normal density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3168">関数形式が<b>true</b>数式は、負の無限大から指定した数式の x の積分です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3168">When cumulative = <b>true</b>, the formula is the integral from negative infinity to x of the given formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Inv">
      <MemberSignature Language="C#" Value="public double Norm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16884)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3169">確率: 正規分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3169">Probability - A probability corresponding to the normal distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3170">平均: 対象となる分布の算術平均 (相加平均) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3170">Mean - The arithmetic mean of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3171">標準偏差: 対象となる分布の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3171">Standard_dev - The standard deviation of the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-3172">指定した平均と標準偏差に対する正規分布の累積分布関数の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3172">Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3173">いずれかの引数が数値以外の場合は、 <b>Norm_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3173">If any argument is non-numeric, <b>Norm_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3174">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3174">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3175">場合確率&lt;= 0 または確率&gt;= 1、 <b>Norm_Inv</b> #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3175">If probability &lt;= 0 or if probability &gt;= 1, <b>Norm_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3176">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3176">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3177">場合は標準偏差 ≤ 0、 <b>Norm_Inv</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3177">If standard_dev ≤ 0, <b>Norm_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3178">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3178">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3179">平均 = 0 かつ標準偏差 = 1、 <b>Norm_Inv</b>を使用して、標準正規分布関数 (を参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3179">If mean = 0 and standard_dev = 1, <b>Norm_Inv</b> uses the standard normal distribution (see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />).</span></span></para>
          <para><span data-ttu-id="a4672-3180">確率の値を与え、そのような値 x がシーク<b>Norm_Inv</b>その NORM_DIST を (x、平均、標準偏差、TRUE) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3180">Given a value for probability, <b>Norm_Inv</b> seeks that value x such that NORM_DIST(x, mean, standard_dev, TRUE) = probability.</span></span> <span data-ttu-id="a4672-3181"><b>Norm_Inv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3181">Thus, precision of <b>Norm_Inv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Dist">
      <MemberSignature Language="C#" Value="public double Norm_S_Dist (double Arg1, bool Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Dist([in]float64 Arg1, [in]bool Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Dist (Arg1 As Double, Arg2 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Dist(double Arg1, bool Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3182">z: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3182">Z - The value for which you want the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3183">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3183">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-3184">場合<b>は累積的な</b> <b>Norm_S_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3184">If cumulative is <b>true</b>, <b>Norm_S_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability mass function.</span></span></param>
        <summary><span data-ttu-id="a4672-p1107">標準正規分布の累積分布関数の値を返します。この分布は、平均が 0 (ゼロ) で標準偏差が 1 である正規分布に対応します。正規分布表の代わりにこの関数を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1107">Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one. Use this function in place of a table of standard normal curve areas.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3188">Z が数値以外の場合は、 <b>Norm_S_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3188">If z is non-numeric, <b>Norm_S_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3189">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3189">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3190">分布の標準密度関数の数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3190">The equation for the standard normal density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-3191">分布の標準密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-3191">Figure 1: Equation for the standard normal density function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Inv">
      <MemberSignature Language="C#" Value="public double Norm_S_Inv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Inv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Inv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Inv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3192">確率: 正規分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3192">Probability - A probability corresponding to the normal distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p1109">標準正規分布の累積分布関数の逆関数の値を返します。この分布は、平均が 0 (ゼロ) で標準偏差が 1 である正規分布に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1109">Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 (zero) and a standard deviation of one.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3195">確率が数値以外の場合は、 <b>Norm_S_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3195">If probability is non-numeric, <b>Norm_S_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3196">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3196">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3197">場合確率&lt;0 または確率&gt;1、 <b>Norm_S_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3197">If probability &lt; 0 or if probability &gt; 1, <b>Norm_S_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3198">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3198">error value.</span></span></para>
          <para><span data-ttu-id="a4672-3199">このような z 値が<b>Norm_S_Inv</b>シークの確率の値が指定する NORM_S_DIST(z) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3199">Given a value for probability, <b>Norm_S_Inv</b> seeks that value z such that NORM_S_DIST(z) = probability.</span></span> <span data-ttu-id="a4672-3200"><b>Norm_S_Inv</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3200">Thus, precision of <b>Norm_S_Inv</b>depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />.</span></span> <span data-ttu-id="a4672-3201"><b>Norm_S_Inv</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3201"><b>Norm_S_Inv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-3202">結果は 100 回反復後収束しないが、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3202">If the search has not converged after 100 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormDist">
      <MemberSignature Language="C#" Value="public double NormDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16677)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3203">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3203">X - the value for which you want the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3204">平均: 対象となる分布の算術平均 (相加平均) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3204">Mean - the arithmetic mean of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3205">標準偏差: 対象となる分布の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3205">Standard_dev - the standard deviation of the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3206">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3206">Cumulative - a logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-3207">場合<b>は累積的な</b>累積分布関数の値を返す<b>式</b>かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3207">If cumulative is <b>true</b>, <b>NormDist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability mass function.</span></span></param>
        <summary><span data-ttu-id="a4672-p1114">指定した平均と標準偏差に対する正規分布関数の値を返します。この関数は、仮説検定を始めとする統計学の幅広い分野に応用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1114">Returns the normal distribution for the specified mean and standard deviation. This function has a very wide range of applications in statistics, including hypothesis testing.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3210">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3210">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3211">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3211">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3212">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3212">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3213">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3213">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-3214">平均または標準偏差が数値以外の場合は、<b>式</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3214">If mean or standard_dev is nonnumeric, <b>NormDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3215">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3215">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3216">場合は標準偏差 ≤ 0 では、<b>式</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3216">If standard_dev ≤ 0, <b>NormDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3217">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3217">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3218">平均 = 0、標準偏差 = 1、および累積的な = <b>true</b><b>式</b>は、標準正規分布関数、<b>式</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3218">If mean = 0, standard_dev = 1, and cumulative = <b>true</b>, <b>NormDist</b> returns the standard normal distribution, <b>NormDist</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-3219">正規密度関数の数式 (累積的な = <b>false</b>) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3219">The equation for the normal density function (cumulative = <b>false</b>) is:</span></span> </para>
          <para><span data-ttu-id="a4672-3220">正規密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-3220">Figure 1: Equation for the normal density function</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3221">関数形式が<b>true</b>数式は、負の無限大から指定した数式の x の積分です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3221">When cumulative = <b>true</b>, the formula is the integral from negative infinity to x of the given formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormInv">
      <MemberSignature Language="C#" Value="public double NormInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16679)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3222">確率: 正規分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3222">Probability - a probability corresponding to the normal distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3223">平均: 対象となる分布の算術平均 (相加平均) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3223">Mean - the arithmetic mean of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3224">標準偏差: 対象となる分布の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3224">Standard_dev - the standard deviation of the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-3225">指定した平均と標準偏差に対する正規分布の累積分布関数の逆関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3225">Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3226">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3226">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3227">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3227">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3228">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3228">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3229">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3229">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-3230">いずれかの引数が数値以外の場合は、<b>ある場合</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3230">If any argument is nonnumeric, <b>NormInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3231">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3231">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3232">場合確率&lt;0 または確率&gt;1 で<b>ある場合</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3232">If probability &lt; 0 or if probability &gt; 1, <b>NormInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3233">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3233">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3234">場合は標準偏差 ≤ 0 で<b>ある場合</b>#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3234">If standard_dev ≤ 0, <b>NormInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3235">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3235">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3236">平均 = 0 かつ標準偏差 = 1 で<b>ある場合</b>は、標準正規分布を使用して (を参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3236">If mean = 0 and standard_dev = 1, <b>NormInv</b> uses the standard normal distribution (see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />).</span></span> </para>
          <para><span data-ttu-id="a4672-3237"><b>NormInv</b>確率の値を与え、そのような値 x がシークする式を (x、平均、標準偏差、TRUE) = 確率。</span><span class="sxs-lookup"><span data-stu-id="a4672-3237">Given a value for probability, <b>NormInv</b> seeks that value x such that NORMDIST(x, mean, standard_dev, TRUE) = probability.</span></span> <span data-ttu-id="a4672-3238"><b>ある場合</b>の有効桁数がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3238">Thus, precision of <b>NormInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />.</span></span> <span data-ttu-id="a4672-3239"><b>ある場合</b>は、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3239"><b>NormInv</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-3240">結果は 100 回反復後収束しないが、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3240">If the search has not converged after 100 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSDist">
      <MemberSignature Language="C#" Value="public double NormSDist (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSDist([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSDist (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSDist(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3241">z: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3241">Z - the value for which you want the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p1125">標準正規分布の累積分布関数の値を返します。この分布は、平均が 0 (ゼロ) で標準偏差が 1 である正規分布に対応します。正規分布表の代わりにこの関数を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1125">Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one. Use this function in place of a table of standard normal curve areas.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3245">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3245">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3246">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3246">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3247">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3247">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3248">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3248">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-3249">Z が数値以外の場合は、 <b>NormSDist</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3249">If z is nonnumeric, <b>NormSDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3250">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3250">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3251">分布の標準密度関数の数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3251">The equation for the standard normal density function is:</span></span> </para>
          <para><span data-ttu-id="a4672-3252">分布の標準密度関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-3252">Figure 1: Equation for the standard normal density function</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSInv">
      <MemberSignature Language="C#" Value="public double NormSInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3253">確率: 正規分布における確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3253">Probability - a probability corresponding to the normal distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p1128">標準正規分布の累積分布関数の逆関数の値を返します。この分布は、平均が 0 で標準偏差が 1 である正規分布に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1128">Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3256">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3256">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3257">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3257">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3258">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3258">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3259">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3259">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-3260">確率が数値以外の場合、 <b>normsinv 関数</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3260">If probability is nonnumeric, <b>NormSInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3261">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3261">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3262">場合確率&lt;= 0 または確率&gt;= 1、 <b>normsinv 関数</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3262">If probability &lt;= 0 or if probability &gt;= 1, <b>NormSInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3263">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3263">error value.</span></span></para>
          <para><span data-ttu-id="a4672-3264"><b>Normsinv 関数</b>の確率の値が指定値このような z がシークする normsdist (z) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3264">Given a value for probability, <b>NormSInv</b> seeks that value z such that NORMSDIST(z) = probability.</span></span> <span data-ttu-id="a4672-3265"><b>Normsinv 関数</b>の有効桁数がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3265">Thus, precision of <b>NormSInv</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public double NPer (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NPer([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3266">利率: 投資の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3266">Rate - the interest rate per period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1133">定期支払額: 毎回の支払額を指定します。投資期間内に支払額を変更することはできません。通常、定期支払額には元金と利息が含まれますが、その他の手数料や税金は含まれません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1133">Pmt - the payment made each period; it cannot change over the life of the annuity. Typically, pmt contains principal and interest but no other fees or taxes.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3269">現在価値: 現在の投資額、または、将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3269">Pv - the present value, or the lump-sum amount that a series of future payments is worth right now.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1134">将来価値: 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 を指定したと見なされます。たとえば、ローンなどの借入金の将来価値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1134">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3272">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3272">Type - the number 0 or 1 and indicates when payments are due.</span></span></param>
        <summary><span data-ttu-id="a4672-3273">定額の支払いを定期的に行い、利率が一定であると仮定して、投資に必要な期間 (支払回数) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3273">Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-3274"><list type="table">
            <item>
              <term>0 または省略</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3274"><list type="table">
            <item>
              <term>0 or omitted</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Npv">
      <MemberSignature Language="C#" Value="public double Npv (double Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Npv([in]float64 Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Npv (Arg1 As Double, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3275">割引率: 投資期間を通じて一定の割引率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3275">Rate - the rate of discount over the length of one period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3276">値 1、値 2 ...: 支払額 (負の値) と収益額 (正の値) を指定します。引数は 1 ～ 29 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3276">Value1, value2, ... - 1 to 29 arguments representing the payments and income.</span></span></param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3277">投資の正味現在価値を、割引率、将来行われる一連の支払い (負の値)、およびその収益 (正の値) を使って算出します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3277">Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1135">値 1、値 2 ... は定期的に、各期末に発生するものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1135">Value1, value2, ... must be equally spaced in time and occur at the end of each period. </span></span></para>
          <para><span data-ttu-id="a4672-3279">
            <b>Npv</b>は、キャッシュ フローの順序を解釈するために、value1... value2 の順序を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3279">
            <b>Npv</b> uses the order of value1, value2, ... to interpret the order of cash flows.</span></span> <span data-ttu-id="a4672-3280">支払いと収入値を正しい順序で入力することを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3280">Be sure to enter your payment and income values in the correct sequence.</span></span> </para>
          <para><span data-ttu-id="a4672-p1137">引数が数値、空白セル、論理値、または数値のテキスト表現の場合はそれぞれ計算の対象となりますが、エラー値および数値に変換できないテキストの場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1137">Arguments that are numbers, empty cells, logical values, or text representations of numbers are counted; arguments that are error values or text that cannot be translated into numbers are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1138">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1138">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored.</span></span></para>
          <para><span data-ttu-id="a4672-3284"><b>Npv</b>の投資は、値 1 のキャッシュ フローの日付の前に 1 つの期間を開始し、リストの最後のキャッシュ フローで終了します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3284">The <b>Npv</b> investment begins one period before the date of the value1 cash flow and ends with the last cash flow in the list.</span></span> <span data-ttu-id="a4672-3285"><b>Npv</b>の計算は、将来のキャッシュ フローに基づきます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3285">The <b>Npv</b> calculation is based on future cash flows.</span></span> <span data-ttu-id="a4672-3286">最初のピリオドの先頭に最初のキャッシュ フローが発生した場合は、 <b>npv 関数</b>の結果を引数に含まれていない最初の値を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3286">If your first cash flow occurs at the beginning of the first period, the first value must be added to the <b>Npv</b> result, not included in the values arguments.</span></span> <span data-ttu-id="a4672-3287">詳細については、次の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-3287">For more information, see the examples below.</span></span> </para>
          <para><span data-ttu-id="a4672-3288"><b>Npv</b>の数式は、n の値の一覧で、キャッシュ フローの数がある場合です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3288">If n is the number of cash flows in the list of values, the formula for <b>Npv</b> is:</span></span> </para>
          <para><span data-ttu-id="a4672-3289">図 1: 数式は、Npv メソッドを</span><span class="sxs-lookup"><span data-stu-id="a4672-3289">Figure 1: Formula for the Npv method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3290">
            <b>Npv 関数</b>では、ような<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />関数 (現在価値)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3290">
            <b>Npv</b> is similar to the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> function (present value).</span></span> <span data-ttu-id="a4672-3291">PV と<b>Npv</b>の間の主な違いは、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />キャッシュ フローの最後に、または期間の開始時に開始します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3291">The primary difference between PV and <b>Npv</b> is that <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> allows cash flows to begin either at the end or at the beginning of the period.</span></span> <span data-ttu-id="a4672-3292">変数<b>Npv</b>キャッシュ フロー値とは異なり<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />キャッシュ フローは投資期間を通じて一定である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3292">Unlike the variable <b>Npv</b> cash flow values, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> cash flows must be constant throughout the investment.</span></span> <span data-ttu-id="a4672-3293">財務関数の詳細についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3293">For information about annuities and financial functions, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-3294">
            <b>Npv 関数</b>にも関連して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />関数 (内部利益率)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3294">
            <b>Npv</b> is also related to the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" /> function (internal rate of return).</span></span> <span data-ttu-id="a4672-3295"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" /><b>npv 関数</b>が 0 に等しいのレートは、: 計算、...) = 0 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3295"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" /> is the rate for which <b>Npv</b> equals zero: NPV(IRR(...), ...) = 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberValue">
      <MemberSignature Language="C#" Value="public double NumberValue (string Arg1, string Arg2, string Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NumberValue([in]string Arg1, [in]string Arg2, [in]string Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NumberValue(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NumberValue (Arg1 As String, Arg2 As String, Arg3 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NumberValue(System::String ^ Arg1, System::String ^ Arg2, System::String ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16969)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3296">変換する、数値を表す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3296">String representing the number you want to convert.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3297">文字列で小数点区切り記号として使用する文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3297">Character used as the decimal separator in the string.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3298">文字列で桁区切り記号として使用する文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3298">Character used as the group separator in the string.</span></span></param>
        <summary><span data-ttu-id="a4672-3299">ロケールに依存しない方法でテキストを数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3299">Converts text to number in a locale-independent manner.</span></span></summary>
        <returns><span data-ttu-id="a4672-3300"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3300"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Bin">
      <MemberSignature Language="C#" Value="public string Oct2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1142">数値: 変換する 8 進数を指定します。数値に指定できる文字数は 10 文字までです。数値の最上位のビットは符号を表し、残りの 29 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1142">Number - the octal number you want to convert. Number may not contain more than 10 characters. The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3306">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3306">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-3307">場所が省略されると、 <b>Oct2Bin</b>が必要な文字の最小数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3307">If places is omitted, <b>Oct2Bin</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-3308">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3308">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-3309">8 進数を 2 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3309">Converts an octal number to binary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3310">負の数である場合、 <b>Oct2Bin</b>が場所を無視し、10-文字バイナリ数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3310">If number is negative, <b>Oct2Bin</b> ignores places and returns a 10-character binary number.</span></span> </para>
          <para><span data-ttu-id="a4672-p1145">数値が負の数である場合、数値に 7777777000 より小さい値を指定することはできません。数値が正の数である場合、数値に 777 より大きい値を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1145">If number is negative, it cannot be less than 7777777000, and if number is positive, it cannot be greater than 777. </span></span></para>
          <para><span data-ttu-id="a4672-3312">番号が有効な 8 進数ではない場合、 <b>Oct2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3312">If number is not a valid octal number, <b>Oct2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3313">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3313">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3314"><b>Oct2Bin</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3314">If <b>Oct2Bin</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-3315">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3315">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1148">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1148">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3317">場所が数値以外の場合は、 <b>Oct2Bin</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3317">If places is nonnumeric, <b>Oct2Bin</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3318">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3318">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3319">桁数が負の場合、 <b>Oct2Bin</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3319">If places is negative, <b>Oct2Bin</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3320">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3320">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Dec">
      <MemberSignature Language="C#" Value="public string Oct2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Oct2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1151">数値: 変換する 8 進数を指定します。数値に指定できる文字数は 10 文字 (30 ビット) までです。数値の最上位のビットは符号を表し、残りの 29 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1151">Number - the octal number you want to convert. Number may not contain more than 10 octal characters (30 bits). The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <summary><span data-ttu-id="a4672-3326">8 進数を 10 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3326">Converts an octal number to decimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3327">番号が有効な 8 進数でない場合は、 <b>Oct2Dec</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3327">If number is not a valid octal number, <b>Oct2Dec</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3328">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3328">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Hex">
      <MemberSignature Language="C#" Value="public string Oct2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1153">数値: 変換する 8 進数を指定します。数値に指定できる文字数は 10 文字 (30 ビット) までです。数値の最上位のビットは符号を表し、残りの 29 ビットは数値の大きさを表します。負の数は 2 の補数を使って表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1153">Number - the octal number you want to convert. Number may not contain more than 10 octal characters (30 bits). The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3334">場所で使用する文字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3334">Places - the number of characters to use.</span></span> <span data-ttu-id="a4672-3335">場所が省略されると、 <b>Oct2Hex</b>が必要な文字の最小数を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3335">If places is omitted, <b>Oct2Hex</b> uses the minimum number of characters necessary.</span></span> <span data-ttu-id="a4672-3336">場所は、戻り値の先頭に 0 (ゼロ) をスペースに便利です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3336">Places is useful for padding the return value with leading 0s (zeros).</span></span></param>
        <summary><span data-ttu-id="a4672-3337">8 進数を 16 進数に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3337">Converts an octal number to hexadecimal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3338">負の数である場合、 <b>Oct2Hex</b>は場所を無視し、10 桁の 16 進数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3338">If number is negative, <b>Oct2Hex</b> ignores places and returns a 10-character hexadecimal number.</span></span> </para>
          <para><span data-ttu-id="a4672-3339">番号が有効な 8 進数ではない場合、 <b>Oct2Hex</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3339">If number is not a valid octal number, <b>Oct2Hex</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3340">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3340">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3341"><b>Oct2Hex</b>文字よりも大きくする必要がある場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3341">If <b>Oct2Hex</b> requires more than places characters, it returns the #NUM!</span></span> <span data-ttu-id="a4672-3342">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3342">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1158">桁数に整数以外の値を指定すると、小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1158">If places is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3344">場所が数値以外の場合は、 <b>Oct2Hex</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3344">If places is nonnumeric, <b>Oct2Hex</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3345">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3345">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3346">桁数が負の場合、 <b>Oct2Hex</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3346">If places is negative, <b>Oct2Hex</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3347">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3347">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Odd">
      <MemberSignature Language="C#" Value="public double Odd (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Odd([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Odd(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Odd (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Odd(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3348">数値: 切り上げの対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3348">Number - the value to round.</span></span></param>
        <summary><span data-ttu-id="a4672-3349">数値を切り上げて、最も近い奇数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3349">Returns number rounded up to the nearest odd integer.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3350">数値が数値以外の場合は、<b>奇数</b>#VALUE を返す、!</span><span class="sxs-lookup"><span data-stu-id="a4672-3350">If number is nonnumeric, <b>Odd</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3351">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3351">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1162">数値の符号に関係なく、切り上げられた値の絶対値は、数値より大きくなります。数値が既に奇数の値になっている場合、切り上げは行われません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1162">Regardless of the sign of number, a value is rounded up when adjusted away from zero. If number is an odd integer, no rounding occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFPrice">
      <MemberSignature Language="C#" Value="public double OddFPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16846)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1163">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1163">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1164">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1164">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3358">発行日: 証券の発行日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3358">Issue - the security's issue date.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3359">初回利払日: 証券の最初の利払日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3359">First_coupon - the security's first coupon date.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3360">利率: 証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3360">Rate - the security's interest rate.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3361">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3361">Yld - the security's annual yield.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-3362">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3362">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-p1165">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1165">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg9"><span data-ttu-id="a4672-3365">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3365">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3366">1 期目の日数が半端な証券に対して、額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3366">Returns the price per $100 face value of a security having an odd (short or long) first period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-3367"><list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3367"><list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1166">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1166">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1167">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1167">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1168">受渡日、満期日、発行日、初回利払日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1168">Settlement, maturity, issue, first_coupon, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3376"><b>受渡日、満期日、問題、または初回利払日が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3376">If settlement, maturity, issue, or first_coupon is not a valid date, <b>OddFPrice</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3377">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3377">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3378">場合レート&lt;0 または利回り&lt;0、 <b>OddFPrice</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3378">If rate &lt; 0 or if yld &lt; 0, <b>OddFPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3379">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3379">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3380">場合に&lt;0 または基準&gt;4 では、 <b>OddFPrice</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3380">If basis &lt; 0 or if basis &gt; 4, <b>OddFPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3381">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3381">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3382">次の条件を満たす必要があります。<b>OddFPrice</b>はそれ以外の場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3382">The following date condition must be satisfied; otherwise, <b>OddFPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3383">エラー値:</span><span class="sxs-lookup"><span data-stu-id="a4672-3383">error value:</span></span> </para>
          <para><span data-ttu-id="a4672-3384">成熟度&gt;初回利払日&gt;決済&gt;の問題</span><span class="sxs-lookup"><span data-stu-id="a4672-3384">maturity &gt; first_coupon &gt; settlement &gt; issue</span></span></para>
          <para> </para>
          <para><span data-ttu-id="a4672-3385">
            <b>OddFPrice</b>は次のように計算されます: 短い最初の利息。</span><span class="sxs-lookup"><span data-stu-id="a4672-3385">
            <b>OddFPrice</b> is calculated as follows: Odd short first coupon:</span></span></para>
          <para><span data-ttu-id="a4672-3386">図 1: 短い最初の利息</span><span class="sxs-lookup"><span data-stu-id="a4672-3386">Figure 1: Odd short first coupon</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3387">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3387">where:</span></span></para>
          <para><span data-ttu-id="a4672-3388">A = 利息計算期間の初日から受渡日までの日数) までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3388">A = number of days from the beginning of the coupon period to the settlement date (accrued days).</span></span></para>
          <para><span data-ttu-id="a4672-3389">DSC =、受渡日から次の利払日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3389">DSC = number of days from the settlement to the next coupon date.</span></span></para>
          <para><span data-ttu-id="a4672-3390">DFC = 最初の利息の先頭から最初の利払日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3390">DFC = number of days from the beginning of the odd first coupon to the first coupon date.</span></span></para>
          <para><span data-ttu-id="a4672-3391">E = 利払期間の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3391">E = number of days in the coupon period.</span></span></para>
          <para><span data-ttu-id="a4672-3392">N = 受渡日と償還日の間で買掛金の割引券の番号です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3392">N = number of coupons payable between the settlement date and the redemption date.</span></span> <span data-ttu-id="a4672-3393">(この数値に分数が含まれている場合これは次の整数にします。)</span><span class="sxs-lookup"><span data-stu-id="a4672-3393">(If this number contains a fraction, it is raised to the next whole number.)</span></span></para>
          <para><span data-ttu-id="a4672-3394">長い最初の利息日</span><span class="sxs-lookup"><span data-stu-id="a4672-3394">Odd long first coupon:</span></span></para>
          <para><span data-ttu-id="a4672-3395">図 2: 奇数時間最初の利息日</span><span class="sxs-lookup"><span data-stu-id="a4672-3395">Figure 2: Odd long first coupon</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3396">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3396">where:</span></span></para>
          <para><span data-ttu-id="a4672-3397">Ai =、i 番目または最後の開始からの日数、準利札期の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3397">Ai = number of days from the beginning of the ith, or last, quasi-coupon period within odd period.</span></span></para>
          <para><span data-ttu-id="a4672-3398">DCi = 日数を日付の日 (発行日) から最初の擬似利払 (に = 1) または擬似利払期間の日数 (i = 2,...、私 = NC)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3398">DCi = number of days from dated date (or issue date) to first quasi-coupon (i = 1) or number of days in quasi-coupon (i = 2,..., i = NC).</span></span></para>
          <para><span data-ttu-id="a4672-3399">DSC = 受渡日から次の利払日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3399">DSC = number of days from settlement to next coupon date.</span></span></para>
          <para><span data-ttu-id="a4672-3400">E = 利払期間の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3400">E = number of days in coupon period.</span></span></para>
          <para><span data-ttu-id="a4672-3401">N = 最初の実際の利払日と償還日の買掛金の割引券の番号です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3401">N = number of coupons payable between the first real coupon date and redemption date.</span></span> <span data-ttu-id="a4672-3402">(この数値に分数が含まれている場合これは次の整数にします。)</span><span class="sxs-lookup"><span data-stu-id="a4672-3402">(If this number contains a fraction, it is raised to the next whole number.)</span></span></para>
          <para><span data-ttu-id="a4672-3403">NC = 半端な期に収まる擬似利払期間の数。</span><span class="sxs-lookup"><span data-stu-id="a4672-3403">NC = number of quasi-coupon periods that fit in odd period.</span></span> <span data-ttu-id="a4672-3404">(この数値に分数が含まれている場合これは次の整数にします。)</span><span class="sxs-lookup"><span data-stu-id="a4672-3404">(If this number contains a fraction, it is raised to the next whole number.)</span></span></para>
          <para><span data-ttu-id="a4672-3405">NLi = 日数がフルの i 番目または最後の準利札期の標準の長さ。</span><span class="sxs-lookup"><span data-stu-id="a4672-3405">NLi = normal length in days of the full ith, or last, quasi-coupon period within odd period.</span></span></para>
          <para><span data-ttu-id="a4672-3406">Nq = 受渡日と初回利払日の間の完全な擬似利払期間の数。</span><span class="sxs-lookup"><span data-stu-id="a4672-3406">Nq = number of whole quasi-coupon periods between settlement date and first coupon.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFYield">
      <MemberSignature Language="C#" Value="public double OddFYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16847)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1176">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1176">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1177">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1177">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3411">発行日: 証券の発行日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3411">Issue - the security's issue date.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3412">初回利払日: 証券の最初の利払日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3412">First_coupon - the security's first coupon date.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3413">利率: 証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3413">Rate - the security's interest rate.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3414">現在価値: 証券の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3414">Pr - the security's price.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-3415">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3415">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-p1178">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1178">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg9"><span data-ttu-id="a4672-3418">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3418">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3419">1 期目の日数が半端な証券の利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3419">Returns the yield of a security that has an odd (short or long) first period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3420">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3420">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3421">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3421">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3422">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3422">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3423">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3423">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1180">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1180">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1181">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1181">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1182">受渡日、満期日、発行日、初回利払日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1182">Settlement, maturity, issue, first_coupon, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3432"><b>受渡日、満期日、問題、または初回利払日が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3432">If settlement, maturity, issue, or first_coupon is not a valid date, <b>OddFYield</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3433">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3433">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3434">場合レート&lt;0 または #NUM を返すならば ≤ 0 で<b>ある</b>かどうかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3434">If rate &lt; 0 or if pr ≤ 0, <b>OddFYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3435">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3435">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3436">場合に&lt;0 または基準&gt;4 で<b>ある</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3436">If basis &lt; 0 or if basis &gt; 4, <b>OddFYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3437">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3437">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3438">次の条件を満たす必要があります。<b>それ以外の場合、#NUM を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3438">The following date condition must be satisfied; otherwise, <b>OddFYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3439">エラー値:</span><span class="sxs-lookup"><span data-stu-id="a4672-3439">error value:</span></span> </para>
          <para><span data-ttu-id="a4672-3440">成熟度&gt;初回利払日&gt;決済&gt;の問題</span><span class="sxs-lookup"><span data-stu-id="a4672-3440">maturity &gt; first_coupon &gt; settlement &gt; issue</span></span></para>
          <para><span data-ttu-id="a4672-3441">Excel では、反復計算の手法を使って、<b>ある</b>を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3441">Excel uses an iterative technique to calculate <b>OddFYield</b>.</span></span> <span data-ttu-id="a4672-3442">この関数は、関数を使用する数式に基づくニュートン法を使用して<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3442">This function uses the Newton method based on the formula used for the function <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="a4672-3443">指定された利回りの推定価格が価格の近くになるまで、利回りは 100 回反復が変更されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3443">The yield is changed through 100 iterations until the estimated price with the given yield is close to the price.</span></span> <span data-ttu-id="a4672-3444">参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />に<b>ある</b>を使用する数式。</span><span class="sxs-lookup"><span data-stu-id="a4672-3444">See <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> for the formula that <b>OddFYield</b> uses.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLPrice">
      <MemberSignature Language="C#" Value="public double OddLPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16844)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1188">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1188">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1189">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1189">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3449">最終利払日: 証券の最後の利払日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3449">Last_interest - the security's last coupon date.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3450">利率: 証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3450">Rate - the security's interest rate.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3451">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3451">Yld - the security's annual yield.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3452">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3452">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-p1190">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1190">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-3455">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3455">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3456">最終利払期間の日数が半端な証券に対して、額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3456">Returns the price per $100 face value of a security having an odd (short or long) last coupon period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3457">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3457">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3458">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3458">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3459">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3459">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3460">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3460">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1192">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1192">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1193">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1193">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1194">受渡日、満期日、最終利払日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1194">Settlement, maturity, last_interest, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3469"><b>受渡日、満期日、最終利払が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3469">If settlement, maturity, or last_interest is not a valid date, <b>OddLPrice</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3470">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3470">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3471">場合レート&lt;0 または利回り&lt;0 <b>OddLPrice</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3471">If rate &lt; 0 or if yld &lt; 0, <b>OddLPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3472">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3472">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3473">場合に&lt;0 または基準&gt;4 <b>OddLPrice</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3473">If basis &lt; 0 or if basis &gt; 4, <b>OddLPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3474">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3474">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3475">次の条件を満たす必要があります。<b>OddLPrice</b>はそれ以外の場合、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3475">The following date condition must be satisfied; otherwise, <b>OddLPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3476">エラー値:</span><span class="sxs-lookup"><span data-stu-id="a4672-3476">error value:</span></span> </para>
          <para><span data-ttu-id="a4672-3477">成熟度&gt;決済&gt;最終利払日</span><span class="sxs-lookup"><span data-stu-id="a4672-3477">maturity &gt; settlement &gt; last_interest</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLYield">
      <MemberSignature Language="C#" Value="public double OddLYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16845)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1199">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1199">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1200">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1200">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3482">最終利払日: 証券の最後の利払日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3482">Last_interest - the security's last coupon date.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3483">利率: 証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3483">Rate - the security's interest rate.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3484">現在価値: 証券の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3484">Pr - the security's price.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3485">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3485">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-p1201">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1201">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-3488">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3488">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3489">最終期の日数が半端な証券の利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3489">Returns the yield of a security that has an odd (short or long) last period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3490">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3490">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3491">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3491">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3492">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3492">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3493">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3493">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1203">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1203">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1204">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1204">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1205">受渡日、満期日、最終利払日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1205">Settlement, maturity, last_interest, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3502"><b>受渡日、満期日、最終利払が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3502">If settlement, maturity, or last_interest is not a valid date, <b>OddLYield</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3503">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3503">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3504">場合レート&lt;0 または #NUM を返すならば ≤ 0 で<b>ある</b>かどうかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3504">If rate &lt; 0 or if pr ≤ 0, <b>OddLYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3505">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3505">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3506">場合に&lt;0 または基準&gt;4 で<b>ある</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3506">If basis &lt; 0 or if basis &gt; 4, <b>OddLYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3507">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3507">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3508">次の条件を満たす必要があります。<b>それ以外の場合、#NUM を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3508">The following date condition must be satisfied; otherwise, <b>OddLYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3509">エラー値:</span><span class="sxs-lookup"><span data-stu-id="a4672-3509">error value:</span></span> </para>
          <para><span data-ttu-id="a4672-3510">成熟度&gt;決済&gt;最終利払日</span><span class="sxs-lookup"><span data-stu-id="a4672-3510">maturity &gt; settlement &gt; last_interest</span></span> </para>
          <para><span data-ttu-id="a4672-3511">
            <b>ある</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3511">
            <b>OddLYield</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-3512">あるメソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3512">Figure 1: Equation for OddLYield method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3513">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3513">where:</span></span></para>
          <para><span data-ttu-id="a4672-3514">Ai = 奇数の期間から数えて償還前に、の最後の利払日、i 回目の日数や、最後の準利札期の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3514">Ai = number of accrued days for the ith, or last, quasi-coupon period within odd period counting forward from last interest date before redemption.</span></span></para>
          <para><span data-ttu-id="a4672-3515">DCi = 実際の利払期間の長さで区切られたように、i 番目または最後の擬似利払期間の日数の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3515">DCi = number of days counted in the ith, or last, quasi-coupon period as delimited by the length of the actual coupon period.</span></span></para>
          <para><span data-ttu-id="a4672-3516">NC = 半端な期に収まる擬似利払期間の数この数値に分数が含まれている場合に、次の整数に発生します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3516">NC = number of quasi-coupon periods that fit in odd period; if this number contains a fraction it will be raised to the next whole number.</span></span></para>
          <para><span data-ttu-id="a4672-3517">NLi = 日数が i 回目または最後の準利札期の利払期間です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3517">NLi = normal length in days of the ith, or last, quasi-coupon period within odd coupon period.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public bool Or (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Or([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3518">Logical1、... - 2 1 から 30 個までの条件をテストするには、 <b>true</b>または<b>false</b>のいずれかができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3518">Logical1,logical2,... - 1 to 30 conditions you want to test that can be either <b>true</b> or <b>false</b>.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3519">を返します<b>true の</b>場合はいずれかの引数は<b>true</b>です。すべての引数が<b>false</b>の場合は<b>false</b>を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3519">Returns <b>true</b> if any argument is <b>true</b>; returns <b>false</b> if all arguments are <b>false</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3520">引数に論理値<b>true</b>または<b>false</b>などを論理値を含む配列または参照にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-3520">The arguments must evaluate to logical values such as <b>true</b> or <b>false</b>, or in arrays or references that contain logical values.</span></span> </para>
          <para><span data-ttu-id="a4672-p1211">引数として指定した配列や参照に、文字列または空白セルが含まれる場合、これらの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1211">If an array or reference argument contains text or empty cells, those values are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-3522">指定した範囲に論理値が含まれていない場合、<b>または</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3522">If the specified range contains no logical values, <b>Or</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3523">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3523">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3524"><b>または</b>配列数式を使用すると、配列の値が発生したかどうかを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-3524">You can use an <b>Or</b> array formula to see if a value occurs in an array.</span></span> <span data-ttu-id="a4672-3525">配列数式を入力するには、ctrl キーと SHIFT キーを押しながら ENTER を押します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3525">To enter an array formula, press CTRL+SHIFT+ENTER.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4672-p1214">指定されたオブジェクトの親オブジェクトを返します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1214">Returns the parent object for the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PDuration">
      <MemberSignature Language="C#" Value="public double PDuration (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PDuration([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PDuration(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PDuration (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PDuration(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3528">期間ごとの利率。</span><span class="sxs-lookup"><span data-stu-id="a4672-3528">Interest rate per period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3529">投資の現在価値。</span><span class="sxs-lookup"><span data-stu-id="a4672-3529">Present value of the investment.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3530">希望する投資の将来価値。</span><span class="sxs-lookup"><span data-stu-id="a4672-3530">Desired future value of the investment.</span></span></param>
        <summary><span data-ttu-id="a4672-3531">投資が指定した金額に達するまでに必要な期間を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3531">Returns the number of periods required by an investment to reach a specified value.</span></span></summary>
        <returns><span data-ttu-id="a4672-3532"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3532"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pearson">
      <MemberSignature Language="C#" Value="public double Pearson (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pearson([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pearson (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pearson(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3533">配列 1: 複数の独立変数に対応するデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3533">Array1 - a set of independent values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3534">配列 2: 複数の従属変数に対応するデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3534">Array2 - a set of dependent values.</span></span></param>
        <summary><span data-ttu-id="a4672-3535">ピアソンの積率相関係数 r の値を返します。r は -1.0 から 1.0 の範囲の数値で、2 組のデータ間での線形相関の程度を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3535">Returns the Pearson product moment correlation coefficient, r, a dimensionless index that ranges from -1.0 to 1.0 inclusive and reflects the extent of a linear relationship between two data sets.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1215">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1215">The arguments must be either numbers or names, array constants, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1216">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1216">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-3538"><b>Array1 と array2 が空のデータ ポイント数が異なる、または #N/A エラー値が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3538">If array1 and array2 are empty or have a different number of data points, <b>Pearson</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3539">ピアソンの積率相関係数 r を表す数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3539">The formula for the Pearson product moment correlation coefficient, r, is:</span></span> </para>
          <para><span data-ttu-id="a4672-3540">図 1: Pearson 製品時点相関係数</span><span class="sxs-lookup"><span data-stu-id="a4672-3540">Figure 1: Pearson product moment correlation coefficient</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3541">ここで、x は標本平均 AVERAGE(配列 1)、y は標本平均 AVERAGE(配列 2) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3541">where x and y are the sample means AVERAGE(array1) and AVERAGE(array2).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile">
      <MemberSignature Language="C#" Value="public double Percentile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3542">配列: 相対的な位置を決定するため、数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3542">Array - the array or range of data that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3543">率: 0 ～ 1 の範囲で、目的の百分位の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3543">K - the percentile value in the range 0..1, inclusive.</span></span></param>
        <summary><span data-ttu-id="a4672-p1218">配列のデータの中で、百分率で率に位置する値を返します。PERCENTILE 関数は入学試験などの合否ラインなどを決めるときに利用します。たとえば、PERSENTILE 関数を使って、成績が上位 10% の志願者を合格とすることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1218">Returns the k-th percentile of values in a range. You can use this function to establish a threshold of acceptance. For example, you can decide to examine candidates who score above the 90th percentile.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3547">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3547">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3548">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3548">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3549">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3549">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3550">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3550">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" /> method.</span></span> </para>
          <para><span data-ttu-id="a4672-3551">配列が空の場合は、<b>百分位</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3551">If array is empty, <b>Percentile</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3552">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3552">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3553">K が数値以外の場合は、<b>百分位数</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3553">If k is nonnumeric, <b>Percentile</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3554">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3554">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3555">K の場合&lt;0 と k &gt; 1、<b>百分位</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3555">If k is &lt; 0 or if k &gt; 1, <b>Percentile</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3556">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3556">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3557">K が 1 の倍数でない場合または (n-1)、k 番目の百分位数の値を決定するのには<b>百分位</b>を補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3557">If k is not a multiple of 1/(n - 1), <b>Percentile</b> interpolates to determine the value at the k-th percentile.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Exc">
      <MemberSignature Language="C#" Value="public double Percentile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16885)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3558">配列: 相対的な位置を決定するため、配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3558">Array - The array or range of data that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3559">率: 0 ～ 1 (0 と 1 を除く) の範囲で、目的の百分位の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3559">K - The percentile value in the range 0..1, exclusive.</span></span></param>
        <summary><span data-ttu-id="a4672-3560">配列のデータの中で、百分率で率に位置する値を返します。率は、0 ～ 1 (0 と 1 を除く) の範囲の値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3560">Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3561">配列が空の場合は、 <b>Percentile_Exc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3561">If array is empty, <b>Percentile_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3562">エラー値</span><span class="sxs-lookup"><span data-stu-id="a4672-3562">error value</span></span> </para>
          <para><span data-ttu-id="a4672-3563">K が数値以外の場合は、 <b>Percentile_Exc</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3563">If k is nonnumeric, <b>Percentile_Exc</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3564">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3564">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3565">K ≤ 0 または k 受領 1、 <b>Percentile_Exc</b>が #NUM を返す場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-3565">If k is ≤ 0 or if k ≥ 1, <b>Percentile_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3566">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3566">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3567">K が 1 の倍数でない場合または (n-1)、k 番目の百分位数の値を決定する<b>Percentile_Exc</b>を補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3567">If k is not a multiple of 1/(n - 1), <b>Percentile_Exc</b> interpolates to determine the value at the k-th percentile.</span></span> </para>
          <para><span data-ttu-id="a4672-3568">
            <b>Percentile_Exc</b>は、指定の百分位数の値が配列内の 2 つの値の間にあるときに補間されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3568">
            <b>Percentile_Exc</b> will interpolate when the value for the specified percentile lies between two values in the array.</span></span> <span data-ttu-id="a4672-3569">百分位数を指定すると、k の補間できないこと Excel が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3569">If it cannot interpolate for the percentile, k specified, Excel will return #NUM!</span></span> <span data-ttu-id="a4672-3570">エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3570">error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Inc">
      <MemberSignature Language="C#" Value="public double Percentile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16886)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3571">配列: 相対的な位置を決定するため、配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3571">Array - The array or range of data that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3572">率: 0 ～ 1 (0 と 1 を含む) の範囲で、目的の百分位の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3572">K - The percentile value in the range 0..1, inclusive.</span></span></param>
        <summary><span data-ttu-id="a4672-p1228">配列のデータの中で、百分率で率に位置する値を返します。この関数は入学試験などの合否ラインなどを決めるときに利用します。たとえば、この関数を使って、成績が上位 10% の志願者を合格とすることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1228">Returns the k-th percentile of values in a range. You can use this function to establish a threshold of acceptance. For example, you can examine candidates who score above the 90th percentile.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3576">配列が空の場合は、 <b>Percentile_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3576">If array is empty, <b>Percentile_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3577">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3577">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3578">K が数値以外の場合は、 <b>Percentile_Inc</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3578">If k is nonnumeric, <b>Percentile_Inc</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3579">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3579">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3580">K の場合&lt;0 と k &gt; 1、 <b>Percentile_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3580">If k is &lt; 0 or if k &gt; 1, <b>Percentile_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3581">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3581">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3582">K が 1 の倍数でない場合または (n-1)、k 番目の百分位数の値を決定する<b>Percentile_Inc</b>を補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3582">If k is not a multiple of 1/(n - 1), <b>Percentile_Inc</b> interpolates to determine the value at the k-th percentile.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank">
      <MemberSignature Language="C#" Value="public double PercentRank (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3583">配列: 相対的な位置を決定するため、数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3583">Array - the array or range of data with numeric values that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3584">x: ランクを調べる値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3584">X - the value for which you want to know the rank.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3585">基準値が返される百分率の有効桁数の番号を識別する長整数型 (オプション) の値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3585">Significance - an optional value that identifies the number of significant digits for the returned percentage value.</span></span> <span data-ttu-id="a4672-3586">省略すると、<b>小数点</b>3 桁の数字 (0.xxx) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3586">If omitted, <b>PercentRank</b> uses three digits (0.xxx).</span></span></param>
        <summary><span data-ttu-id="a4672-3587">データ セットの割合として、データ セットの値のランクを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3587">Returns the rank of a value in a data set as a percentage of the data set.</span></span> <span data-ttu-id="a4672-3588">この関数は、データ セット内の値の相対的な位置を評価するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3588">This function can be used to evaluate the relative standing of a value within a data set.</span></span> <span data-ttu-id="a4672-3589">たとえば、テストのスコアのすべての間での適性テスト スコアの順位を評価するために<b>小数点</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3589">For example, you can use <b>PercentRank</b> to evaluate the standing of an aptitude test score among all scores for the test.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3590">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3590">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3591">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3591">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3592">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3592">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3593">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3593">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-3594">配列が空の場合は、<b>小数点</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3594">If array is empty, <b>PercentRank</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3595">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3595">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3596">場合意味&lt;1<b>小数点</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3596">If significance &lt; 1, <b>PercentRank</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3597">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3597">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3598">X には、配列内の値のいずれかと一致しません、する場合は、正しい順位を計算するのには<b>小数点</b>が補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3598">If x does not match one of the values in array, <b>PercentRank</b> interpolates to return the correct percentage rank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Exc">
      <MemberSignature Language="C#" Value="public double PercentRank_Exc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Exc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Exc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16887)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3599">配列: 相対的な位置を決定するため、数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3599">Array - The array or range of data with numeric values that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3600">x: ランクを調べる値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3600">X - The value for which you want to know the rank.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3601">基準値が返される百分率の有効桁数の番号を識別する値。</span><span class="sxs-lookup"><span data-stu-id="a4672-3601">Significance - A value that identifies the number of significant digits for the returned percentage value.</span></span> <span data-ttu-id="a4672-3602">省略すると、 <b>PercentRank_Exc</b>は 3 桁の数字 (0.xxx) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3602">If omitted, <b>PercentRank_Exc</b> uses three digits (0.xxx).</span></span></param>
        <summary><span data-ttu-id="a4672-3603">データ セット内の値のランクを、データ セットに対するパーセント (0 ～ 1、0 と 1 は除く) の値で返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3603">Returns the rank of a value in a data set as a percentage (0..1, exclusive) of the data set.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3604">配列が空の場合は、 <b>PercentRank_Exc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3604">If array is empty, <b>PercentRank_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3605">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3605">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3606">場合意味&lt;1、 <b>PercentRank_Exc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3606">If significance &lt; 1, <b>PercentRank_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3607">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3607">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3608">X には、配列内の値のいずれかと一致しません、する場合は、正しい順位を計算するのには<b>PercentRank_Exc</b>が補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3608">If x does not match one of the values in array, <b>PercentRank_Exc</b> interpolates to return the correct percentage rank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Inc">
      <MemberSignature Language="C#" Value="public double PercentRank_Inc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Inc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Inc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16888)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3609">配列: 相対的な位置を決定するため、数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3609">Array - The array or range of data with numeric values that defines relative standing.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3610">x: ランクを調べる値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3610">X - The value for which you want to know the rank.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3611">基準値が返される百分率の有効桁数の番号を識別する長整数型 (オプション) の値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3611">Significance - An optional value that identifies the number of significant digits for the returned percentage value.</span></span> <span data-ttu-id="a4672-3612">省略すると、 <b>PercentRank_Inc</b>は 3 桁の数字 (0.xxx) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3612">If omitted, <b>PercentRank_Inc</b> uses three digits (0.xxx).</span></span></param>
        <summary><span data-ttu-id="a4672-3613">パーセンテージ (含まれる) データ ・ セットのデータ セットの値のランクを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3613">Returns the rank of a value in a data set as a percentage (0..1, inclusive) of the data set.</span></span> <span data-ttu-id="a4672-3614">この関数は、データ セット内の値の相対的な位置を評価するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3614">This function can be used to evaluate the relative standing of a value within a data set.</span></span> <span data-ttu-id="a4672-3615">たとえば、テストのスコアのすべての間での適性テスト スコアの順位を評価するために<b>PercentRank_Inc</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3615">For example, you can use <b>PercentRank_Inc</b> to evaluate the standing of an aptitude test score among all scores for the test.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3616">配列が空の場合は、 <b>PercentRank_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3616">If array is empty, <b>PercentRank_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3617">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3617">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3618">場合意味&lt;1、 <b>PercentRank_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3618">If significance &lt; 1, <b>PercentRank_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3619">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3619">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3620">X には、配列内の値のいずれかと一致しません、する場合は、正しい順位を計算するのには<b>PercentRank_Inc</b>が補間します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3620">If x does not match one of the values in array, <b>PercentRank_Inc</b> interpolates to return the correct percentage rank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Permut">
      <MemberSignature Language="C#" Value="public double Permut (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permut([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permut(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permut (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permut(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3621">標本数: 対象の総数を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3621">Number - an integer that describes the number of objects.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3622">抜き取り数: 順列計算のために選択する対象の個数を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3622">Number_chosen - an integer that describes the number of objects in each permutation.</span></span></param>
        <summary><span data-ttu-id="a4672-p1244">標本数個から抜き取り数個を選択する場合の順列を返します。順列とは、順序に着目して選択した対象や事象の組み合わせ数を計算したもので、順序に関係なく計算される組み合わせとは異なります。PERMUT 関数は宝くじなどの当選確率を計算するために利用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1244">Returns the number of permutations for a given number of objects that can be selected from number objects. A permutation is any set or subset of objects or events where internal order is significant. Permutations are different from combinations, for which the internal order is not significant. Use this function for lottery-style probability calculations.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1245">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1245">Both arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3628">番号または抜き取りが数値以外の場合は、 <b>Permut</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3628">If number or number_chosen is nonnumeric, <b>Permut</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3629">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3629">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3630">場合数 ≤ 0 または抜き取り&lt;0、 <b>Permut</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3630">If number ≤ 0 or if number_chosen &lt; 0, <b>Permut</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3631">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3631">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3632">数値の場合&lt;抜き取り、 <b>Permut</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3632">If number &lt; number_chosen, <b>Permut</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3633">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3633">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3634">順列は、次の演算式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3634">The equation for the number of permutations is:</span></span> </para>
          <para><span data-ttu-id="a4672-3635">順列の数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-3635">Figure 1: Equation for the number of permutations</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Permutationa">
      <MemberSignature Language="C#" Value="public double Permutationa (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permutationa([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permutationa(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permutationa (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permutationa(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3636">すべてのオブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="a4672-3636">Total number of objects.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3637">各順列のオブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="a4672-3637">Number of objects in each permutation.</span></span></param>
        <summary><span data-ttu-id="a4672-3638">すべてのオブジェクトから指定された数のオブジェクト (繰り返しを含む) を選択する場合の順列の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3638">Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the total objects.</span></span></summary>
        <returns><span data-ttu-id="a4672-3639"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3639"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phi">
      <MemberSignature Language="C#" Value="public double Phi (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Phi([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phi(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phi (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Phi(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3640">標準正規分布の密度を求める数値。</span><span class="sxs-lookup"><span data-stu-id="a4672-3640">Number for which you want the density of the standard normal distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-3641">標準正規分布の密度関数の値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3641">Returns the value of the density function for a standard normal distribution.</span></span></summary>
        <returns><span data-ttu-id="a4672-3642"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3642"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public string Phonetic (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Phonetic([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phonetic (Arg1 As Range) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Phonetic(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3643">範囲: ふりがなの文字列を含む 1 つまたは複数のセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3643">Reference - a text string or a reference to a single cell or a range of cells that contain a furigana text string.</span></span></param>
        <summary><span data-ttu-id="a4672-3644">ふりがなの文字列を抽出します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3644">Extracts the phonetic (furigana) characters from a text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3645">セル範囲を参照している場合は、セル範囲の左上隅に指定されているふりがなの文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3645">If reference is a range of cells, the furigana text string in the upper-left corner cell of the range is returned.</span></span> </para>
          <para><span data-ttu-id="a4672-3646">隣接しないセル範囲を参照している場合は、#N/A エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3646">If the reference is a range of nonadjacent cells, the #N/A error value is returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public double Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pi() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pi" />
      <MemberSignature Language="VB.NET" Value="Public Function Pi () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pi();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4672-3647">円周率πの近似値である数値 3.14159265358979 を返します。この数値の精度は 15 桁です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3647">Returns the number 3.14159265358979, the mathematical constant pi, accurate to 15 digits.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public double Pmt (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3648">利率: ローンの利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3648">Rate - the interest rate for the loan.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3649">期間: ローン期間全体での支払回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3649">Nper - the total number of payments for the loan.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3650">現在価値: ローンの現在価値、つまり、将来行われる一連の支払いを現時点で一括払いした場合の合計金額、または元金を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3650">Pv - the present value, or the total amount that a series of future payments is worth now; also known as the principal.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1249">将来価値: 将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 (ゼロ) を指定したと見なされます。たとえば、借入額の将来価値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1249">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3653">支払期日: 支払いが行われる時期を、数値の 0 (ゼロ) または 1 で指定します。支払期日を省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3653">Type - the number 0 (zero) or 1 and indicates when payments are due.</span></span></param>
        <summary><span data-ttu-id="a4672-3654">一定利率の支払いが定期的に行われる場合の、ローンの定期支払額を算出します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3654">Calculates the payment for a loan based on constant payments and a constant interest rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3655"><b>Pmt</b>の引数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3655">For a more complete description of the arguments in <b>Pmt</b>, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> function.</span></span></para><span data-ttu-id="a4672-3656">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3656">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-3657"><b>Pmt</b>によって返された支払には、元金と利息が含まれていますが、準備金の支払の手数料や税金なしローンで。</span><span class="sxs-lookup"><span data-stu-id="a4672-3657">The payment returned by <b>Pmt</b> includes principal and interest but no taxes, reserve payments, or fees sometimes associated with loans.</span></span> </para>
          <para><span data-ttu-id="a4672-p1251">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1251">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at an annual interest rate of 12 percent, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12 percent for rate and 4 for nper.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson">
      <MemberSignature Language="C#" Value="public double Poisson (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3661">イベント数: 生じる事象の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3661">X - the number of events.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3662">平均: 一定の時間内に起きる事象の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3662">Mean - the expected numeric value.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1252">関数形式: 確率分布を計算する関数形式を、論理値で指定します。関数形式に TRUE を指定した場合、生起するランダムな事象の数がゼロからイベント数の範囲であるような累積ポアソン確率が計算されます。FALSE の場合は、生起する事象の数が正確にイベント数となるようなポアソン確率が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1252">Cumulative - a logical value that determines the form of the probability distribution returned. If cumulative is TRUE, POISSON returns the cumulative Poisson probability that the number of random events occurring will be between zero and x inclusive; if FALSE, it returns the Poisson probability mass function that the number of events occurring will be exactly x.</span></span></param>
        <summary><span data-ttu-id="a4672-p1253">ポアソン確率の値を返します。通常、ポアソン分布は一定の時間内に起きる事象の数を予測するために利用されます。たとえば、ポアソン分布を使って、高速道路の料金所を 1 分間に通過する自動車の台数を予測することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1253">Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in 1 minute.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3667">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3667">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3668">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3668">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3669">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3669">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3670">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3670">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-p1255">イベント数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1255">If x is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3672">場合 x の平均に数値以外が、 <b>Poisson</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3672">If x or mean is nonnumeric, <b>Poisson</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3673">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3673">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3674">場合 x &lt; 0、<b>ポワソン</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3674">If x &lt; 0, <b>Poisson</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3675">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3675">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3676">場合は平均値 ≤ 0 の場合、 <b>Poisson</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3676">If mean ≤ 0, <b>Poisson</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3677">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3677">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3678">
            <b>ポワソン</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3678">
            <b>Poisson</b> is calculated as follows.</span></span> </para>
          <para><span data-ttu-id="a4672-3679">累積的な = <b>false を指定</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3679">For cumulative = <b>false</b>:</span></span></para>
          <para><span data-ttu-id="a4672-3680">図 1: Calcuation の累積的な場合は false</span><span class="sxs-lookup"><span data-stu-id="a4672-3680">Figure 1: Calcuation when cumulative is false</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3681">累積的な = <b>true を指定</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3681">For cumulative = <b>true</b>:</span></span></para>
          <para><span data-ttu-id="a4672-3682">図 2: Calcuation の累積的な場合は true</span><span class="sxs-lookup"><span data-stu-id="a4672-3682">Figure 2: Calcuation when cumulative is true</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson_Dist">
      <MemberSignature Language="C#" Value="public double Poisson_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16889)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3683">イベント数: 生じる事象の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3683">X - The number of events.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3684">平均: 一定の時間内に起きる事象の平均値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3684">Mean - The expected numeric value.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3685">関数形式: 確率分布の形式を決定する論理値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3685">Cumulative - A logical value that determines the form of the probability distribution returned.</span></span> <span data-ttu-id="a4672-3686">場合<b>は累積的な</b> <b>Poisson_Dist</b>のあるランダムな事象の数が 0 (ゼロ) から x 回の間で累積ポワソン確率を返します。かどうかは<b>false</b>を返します、ポアソン確率発生するイベントの数が正確になることです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3686">If cumulative is <b>true</b>, <b>Poisson_Dist</b> returns the cumulative Poisson probability that the number of random events occurring will be between 0 (zero) and x inclusive; if <b>false</b>, it returns the Poisson probability mass function that the number of events occurring will be exactly x.</span></span></param>
        <summary><span data-ttu-id="a4672-p1261">ポアソン確率の値を返します。通常、ポアソン分布は一定の時間内に起きる事象の数を予測するために利用されます。たとえば、ポアソン分布を使って、高速道路の料金所を 1 分間に通過する自動車の台数を予測することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1261">Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in one minute.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1262">イベント数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1262">If x is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3690">場合 x 平均に数値以外は、 <b>Poisson_Dist</b>が、#VALUE を返すのか!</span><span class="sxs-lookup"><span data-stu-id="a4672-3690">If x or mean is nonnumeric, <b>Poisson_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3691">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3691">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3692">場合 x &lt; 0 <b>Poisson_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3692">If x &lt; 0, <b>Poisson_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3693">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3693">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3694">場合は平均値 ≤ 0、 <b>Poisson_Dist</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3694">If mean ≤ 0, <b>Poisson_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3695">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3695">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3696">
            <b>Poisson_Dist</b>として計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3696">
            <b>Poisson_Dist</b> is calculated as follows.</span></span> </para>
          <para><span data-ttu-id="a4672-3697">累積的な = <b>false を指定</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3697">For cumulative = <b>false</b>:</span></span></para>
          <para><span data-ttu-id="a4672-3698">図 1: Calcuation の累積的な場合は false</span><span class="sxs-lookup"><span data-stu-id="a4672-3698">Figure 1: Calcuation when cumulative is false</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3699">累積的な = <b>true を指定</b>します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3699">For cumulative = <b>true</b>:</span></span></para>
          <para><span data-ttu-id="a4672-3700">図 2: Calcuation の累積的な場合は true</span><span class="sxs-lookup"><span data-stu-id="a4672-3700">Figure 2: Calcuation when cumulative is true</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Power([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Power(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Power (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Power(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1267">数値: べき乗の底を指定します。数値には任意の実数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1267">Number - the base number. It can be any real number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3703">指数: 数値を底とするべき乗の指数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3703">Power - the exponent to which the base number is raised.</span></span></param>
        <summary><span data-ttu-id="a4672-3704">数値のべき乗を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3704">Returns the result of a number raised to a power.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ppmt">
      <MemberSignature Language="C#" Value="public double Ppmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ppmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ppmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3705">利率: 投資の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3705">Rate - the interest rate per period.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3706">期: 期を 1 ～期間の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3706">Per - the period and must be in the range 1 to nper.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3707">期間: 投資期間全体での支払い回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3707">Nper - the total number of payment periods in an annuity.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3708">現在価値: 投資の現在価値、つまり将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3708">Pv - the present value — the total amount that a series of future payments is worth now.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p1268">将来価値: 将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 (ゼロ) を指定したと見なされます。たとえば、借入額の将来価値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1268">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3711">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3711">Type - the number 0 or 1 and indicates when payments are due.</span></span></param>
        <summary><span data-ttu-id="a4672-3712">定額の支払いを定期的に行い、利率が一定であると仮定して、投資の指定した期に支払われる元金を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3712">Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3713"><b>Ppmt</b>の引数の詳細についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-3713">For a more complete description of the arguments in <b>Ppmt</b>, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</span></span></para><span data-ttu-id="a4672-3714">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3714">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1269">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1269">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Price">
      <MemberSignature Language="C#" Value="public double Price (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Price([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Price(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Price (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16825)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1270">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1270">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1271">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1271">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3722">利率: 証券の年利を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3722">Rate - the security's annual coupon rate.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3723">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3723">Yld - the security's annual yield.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3724">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3724">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-p1272">頻度: 年間の利息支払回数を指定します。年 1 回の場合は頻度 = 1、年 2 回の場合は頻度 = 2、四半期ごとの場合は頻度 = 4 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1272">Frequency - the number of coupon payments per year. For annual payments, frequency = 1; for semiannual, frequency = 2; for quarterly, frequency = 4.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-3727">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3727">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3728">定期的に利息が支払われる証券に対して、額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3728">Returns the price per $100 face value of a security that pays periodic interest.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3729">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3729">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3730">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3730">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3731">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3731">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3732">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3732">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1274">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1274">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1275">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1275">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1276">受渡日、満期日、頻度、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1276">Settlement, maturity, frequency, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3741">受領または成熟度が有効な日付でない場合、<b>価格</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3741">If settlement or maturity is not a valid date, <b>Price</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3742">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3742">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3743">場合利回り&lt;0 または率&lt;0、<b>価格</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3743">If yld &lt; 0 or if rate &lt; 0, <b>Price</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3744">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3744">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3745">場合は償還額 ≤ 0、<b>価格</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3745">If redemption ≤ 0, <b>Price</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3746">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3746">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3747">頻度が 1、2、または 4 以外の数値の場合は、<b>価格</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3747">If frequency is any number other than 1, 2, or 4, <b>Price</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3748">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3748">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3749">場合に&lt;0 または基準&gt;4 では、<b>価格</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3749">If basis &lt; 0 or if basis &gt; 4, <b>Price</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3750">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3750">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3751">場合は受領成熟度<b>価格</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3751">If settlement ≥ maturity, <b>Price</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3752">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3752">error value.</span></span> <span data-ttu-id="a4672-3753"><b>価格</b>として計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3753"><b>Price</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-3754">価格方法について図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3754">Figure 1: Equation for Price method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3755">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3755">where:</span></span></para>
          <para><span data-ttu-id="a4672-3756">DSC = 受渡日から次の利払日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3756">DSC = number of days from settlement to next coupon date.</span></span></para>
          <para><span data-ttu-id="a4672-3757">E = 受渡日を含む利払期間の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3757">E = number of days in coupon period in which the settlement date falls.</span></span></para>
          <para><span data-ttu-id="a4672-3758">N = 受渡日と償還日の間で買掛金の割引券の番号です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3758">N = number of coupons payable between settlement date and redemption date.</span></span></para>
          <para><span data-ttu-id="a4672-3759">A = 利払期間の初日から受渡日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3759">A = number of days from beginning of coupon period to settlement date.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceDisc">
      <MemberSignature Language="C#" Value="public double PriceDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1283">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1283">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1284">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1284">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3764">割引率: 証券の割引率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3764">Discount - the security's discount rate.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3765">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3765">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3766">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3766">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3767">割引証券の額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3767">Returns the price per $100 face value of a discounted security.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3768">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3768">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3769">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3769">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3770">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3770">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3771">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3771">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1286">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1286">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1287">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1287">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1288">受渡日、満期日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1288">Settlement, maturity, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3780"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3780">If settlement or maturity is not a valid date, <b>PriceDisc</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3781">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3781">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3782">場合 ≤ 0 または償還 ≤ 0 で<b>ある</b>が #NUM を返すかどうかの割引です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3782">If discount ≤ 0 or if redemption ≤ 0, <b>PriceDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3783">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3783">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3784">場合に&lt;0 または基準&gt;4 で<b>ある場合</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3784">If basis &lt; 0 or if basis &gt; 4, <b>PriceDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3785">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3785">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3786">場合は受領成熟度で<b>ある場合</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3786">If settlement ≥ maturity, <b>PriceDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3787">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3787">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3788">
            <b>率</b>として計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3788">
            <b>PriceDisc</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-3789">あるメソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3789">Figure 1: Equation for PriceDisc method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3790">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3790">where:</span></span></para>
          <para><span data-ttu-id="a4672-3791">B = 年単位に応じて、1 年の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3791">B = number of days in year, depending on year basis.</span></span></para>
          <para><span data-ttu-id="a4672-3792">DSM = 受渡日から満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3792">DSM = number of days from settlement to maturity.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceMat">
      <MemberSignature Language="C#" Value="public double PriceMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16815)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1293">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1293">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1294">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1294">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3797">発行日: 証券の発行日を指定します。日付にはシリアル値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3797">Issue - the security's issue date, expressed as a serial date number.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3798">利率: 発行日の証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3798">Rate - the security's interest rate at date of issue.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3799">利回り: 証券の年間配当を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3799">Yld - the security's annual yield.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3800">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3800">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-3801">満期日に利息が支払われる証券に対して、額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3801">Returns the price per $100 face value of a security that pays interest at maturity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3802">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3802">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-3803">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3803">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-3804">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3804">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-3805">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3805">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1296">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1296">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1297">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1297">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1298">受渡日、満期日、発行日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1298">Settlement, maturity, issue, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-3814">受渡日、満期日、または問題が有効な日付でない場合、<b>受渡</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3814">If settlement, maturity, or issue is not a valid date, <b>PriceMat</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3815">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3815">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3816">場合レート&lt;0 または利回り&lt;0、<b>受渡</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3816">If rate &lt; 0 or if yld &lt; 0, <b>PriceMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3817">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3817">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3818">場合に&lt;0 または基準&gt;4、<b>受渡</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-3818">If basis &lt; 0 or if basis &gt; 4, <b>PriceMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3819">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3819">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3820">場合は受領成熟度、<b>受渡</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3820">If settlement ≥ maturity, <b>PriceMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3821">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3821">error value.</span></span> <span data-ttu-id="a4672-3822"><b>受渡</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3822"><b>PriceMat</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-3823">受渡方法を図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-3823">Figure 1: Equation for PriceMat method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3824">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3824">where:</span></span></para>
          <para><span data-ttu-id="a4672-3825">B = 年単位に応じて、1 年の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3825">B = number of days in year, depending on year basis.</span></span></para>
          <para><span data-ttu-id="a4672-3826">DSM = 受渡日から満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3826">DSM = number of days from settlement to maturity.</span></span></para>
          <para><span data-ttu-id="a4672-3827">DIM = 問題から満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3827">DIM = number of days from issue to maturity.</span></span></para>
          <para><span data-ttu-id="a4672-3828">A = 問題から受渡日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3828">A = number of days from issue to settlement.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Prob">
      <MemberSignature Language="C#" Value="public double Prob (object Arg1, object Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Prob([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prob (Arg1 As Object, Arg2 As Object, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3829">x 範囲: 確率範囲と対応関係にある数値 x 含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3829">X_range - the range of numeric values of x with which there are associated probabilities.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3830">確率範囲: x 範囲に含まれるそれぞれの数値に対応する確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3830">Prob_range - a set of probabilities associated with values in x_range.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3831">下限: 対象となる数値の下限を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3831">Lower_limit - the lower bound on the value for which you want a probability.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-3832">上限: 省略可能な引数で、対象となる数値の上限を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3832">Upper_limit - the optional upper bound on the value for which you want a probability.</span></span></param>
        <summary><span data-ttu-id="a4672-p1303">x 範囲に含まれる値が下限と上限との間に収まる確率を返します。上限を省略すると、x 範囲に含まれる値が下限と等しくなる確率が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1303">Returns the probability that values in a range are between two limits. If upper_limit is not supplied, returns the probability that values in x_range are equal to lower_limit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3835">確率 ≤ 0 の値のいずれかの確率の値のいずれかの場合、または&gt;1、<b>確率</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3835">If any value in prob_range ≤ 0 or if any value in prob_range &gt; 1, <b>Prob</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3836">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3836">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3837">場合は確率範囲 ¹ 1、<b>確率</b>の値の合計が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3837">If the sum of the values in prob_range ¹ 1, <b>Prob</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3838">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3838">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3839"><b>上限を省略すると、下限に等しくなる確率を返します。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3839">If upper_limit is omitted, <b>Prob</b> returns the probability of being equal to lower_limit.</span></span> </para>
          <para><span data-ttu-id="a4672-3840"><b>X 範囲と確率範囲のデータ ポイント数が異なると、エラー値 #n/a が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-3840">If x_range and prob_range contain a different number of data points, <b>Prob</b> returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Product">
      <MemberSignature Language="C#" Value="public double Product (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Product([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Product (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16567)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3841">数値 1、数値 2 ...: 積を計算する数値を指定します。引数は 1 ～ 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3841">Number1, number2, ... - 1 to 30 numbers that you want to multiply.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-3842">引数リストの積を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3842">Multiplies all the numbers given as arguments and returns the product.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3843">引数に指定した数値、論理値、数値を表す文字列は、計算に使用されますが、エラー値、数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3843">Arguments that are numbers, logical values, or text representations of numbers are counted; arguments that are error values or text that cannot be translated into numbers cause errors.</span></span> </para>
          <para><span data-ttu-id="a4672-p1307">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。配列あるいはセル範囲に含まれる空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1307">If an argument is an array or reference, only numbers in the array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Proper">
      <MemberSignature Language="C#" Value="public string Proper (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Proper([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Proper(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Proper (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Proper(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3846">文字列: 文字列、戻り値が文字列となる数式、または文字列を含むセルの参照を指定します。文字列を指定する場合は、半角の二重引用符 (") で囲む必要があります。文字列に英字が含まれていない場合は、文字列がそのまま返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3846">Text - text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing the text you want to partially capitalize.</span></span></param>
        <summary><span data-ttu-id="a4672-p1308">文字列中の英単語の先頭文字を大文字に、2 文字目以降の英字を小文字に変換します。文字列中の英字以外の文字は変換されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1308">Capitalizes the first letter in a text string and any other letters in text that follow any character other than a letter. Converts all other letters to lowercase letters.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pv">
      <MemberSignature Language="C#" Value="public double Pv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1309">利率: 投資の利率を指定します。たとえば、年利 10% の自動車ローンを利用して月払いで返済を行う場合、月単位の金利は 10%/12 = 0.83% となります。この場合、数式には 10%/12、0.83%、または 0.0083 の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1309">Rate - the interest rate per period. For example, if you obtain an automobile loan at a 10 percent annual interest rate and make monthly payments, your interest rate per month is 10%/12, or 0.83%. You would enter 10%/12, or 0.83%, or 0.0083, into the formula as the rate.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1310">期間: 投資期間全体での支払回数の合計を指定します。たとえば、4 年ローンを利用して月払いで返済を行う場合、このローンの支払回数は 4\*12 = 48 となります。この場合、数式には 48 の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1310">Nper - the total number of payment periods in an annuity. For example, if you get a four-year car loan and make monthly payments, your loan has 4\*12 (or 48) periods. You would enter 48 into the formula for nper.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1311">定期支払額: 毎回の支払額を指定します。投資期間内に支払額を変更することはできません。通常、定期支払額には元金と利息が含まれますが、その他の手数料や税金は含まれません。たとえば、100 万円を年利 12% の 4 年ローンで借り入れた場合、毎月の返済額は 26,334 円になります。定期支払額は、-26334 のように負の値として指定します。定期支払額を省略した場合は、将来価値を必ず指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1311">Pmt - the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. For example, the monthly payments on a $10,000, four-year car loan at 12 percent are $263.33. You would enter -263.33 into the formula as the pmt. If pmt is omitted, you must include the fv argument.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1312">将来価値: 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 を指定したと見なされます。たとえば、ローンなどの借入金の将来価値は 0 になります。たとえば、18 年間で 500 万円をためることを目標にした場合、この投資の将来価値は 5,000,000 になります。投資期間の金利を予測することにより、毎月の貯蓄額を決めることができます。将来価値を省略した場合は、定期支払額を必ず指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1312">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0). For example, if you want to save $50,000 to pay for a special project in 18 years, then $50,000 is the future value. You could then make a conservative guess at an interest rate and determine how much you must save each month. If fv is omitted, you must include the pmt argument.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3864">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3864">Type - the number 0 or 1 and indicates when payments are due.</span></span></param>
        <summary><span data-ttu-id="a4672-p1313">投資の現在価値を返します。現在価値とは、将来行われる一連の支払いを、現時点で一括払いした場合の合計金額をいいます。たとえば、借金をした場合、借入金額の合計が、貸方に対する現在価値となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1313">Returns the present value of an investment. The present value is the total amount that a series of future payments is worth now. For example, when you borrow money, the loan amount is the present value to the lender.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-3868"><list type="table">
            <item>
              <term>0 または省略</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3868"><list type="table">
            <item>
              <term>0 or omitted</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1314">利率と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、利率には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、利率に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1314">Make sure that you are consistent about the units you use for specifying rate and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 12%/12 for rate and 4\*12 for nper. If you make annual payments on the same loan, use 12% for rate and 4 for nper. </span></span></para>
          <para><span data-ttu-id="a4672-3872">財務関数は、以下が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3872">The following functions apply to annuities:</span></span> </para><span data-ttu-id="a4672-3873">
          <list type="table">
            <item>
              <term>支払</term>
              <description>PPMT</description> 
            </item>
            <item> 
              <term>CUMPRINC</term>
              <description>PV</description> 
            </item>
            <item>
              <term>将来</term>の
              <description>レート</description>
            </item>
            <item>
              <term>金利</term>
              <description>XIRR</description> 
            </item>
            <item> 
              <term>IPMT</term>
              <description>XNPV</description> 
            </item>
            <item> 
              <term>PMT</term> 
              <description /> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3873">
          <list type="table">
            <item>
              <term>CUMIPMT</term>
              <description>PPMT</description>
            </item>
            <item>
              <term>CUMPRINC</term>
              <description>PV</description>
            </item>
            <item>
              <term>FV</term>
              <description>RATE</description>
            </item>
            <item>
              <term>FVSCHEDULE</term>
              <description>XIRR</description>
            </item>
            <item>
              <term>IPMT</term>
              <description>XNPV</description>
            </item>
            <item>
              <term>PMT</term>
              <description />
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-3874">一定額の支払いを一定期間の継続的な一連の定額です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3874">An annuity is a series of constant cash payments made over a continuous period.</span></span> <span data-ttu-id="a4672-3875">自動車ローンまたは住宅ローンは、投資に必要です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3875">For example, a car loan or a mortgage is an annuity.</span></span> <span data-ttu-id="a4672-3876">詳細については、各関数の説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-3876">For more information, see the description for each annuity function.</span></span> </para>
          <para><span data-ttu-id="a4672-p1316">投資関数では、すべての引数に関して、定額預金の支払いのような出金は負の数で表し、配当金のような入金は正の数で表します。たとえば、銀行口座の預金 10 万円を引数として使用する場合、預金者側は -100000、銀行側では 100000 と指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1316">In annuity functions, cash you pay out, such as a deposit to savings, is represented by a negative number; cash you receive, such as a dividend check, is represented by a positive number. For example, a $1,000 deposit to the bank would be represented by the argument -1000 if you are the depositor and by the argument 1000 if you are the bank. </span></span></para>
          <para><span data-ttu-id="a4672-p1317">財務関数の引数は、相互に関連しています。たとえば、利率が 0 でない場合は、次の数式が成立します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1317">Microsoft Excel solves for one financial argument in terms of the others. If rate is not 0, then: </span></span></para>
          <para><span data-ttu-id="a4672-3881">図 1: 数式のレートがない場合 0</span><span class="sxs-lookup"><span data-stu-id="a4672-3881">Figure 1: Equation when rate is not 0</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-3882">0 の場合レートし。</span><span class="sxs-lookup"><span data-stu-id="a4672-3882">If rate is 0, then:</span></span></para>
          <para><span data-ttu-id="a4672-3883">(定期支払額 \* 期間) + 現在価値 + 将来価値 = 0</span><span class="sxs-lookup"><span data-stu-id="a4672-3883">(pmt \* nper) + pv + fv = 0</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile">
      <MemberSignature Language="C#" Value="public double Quartile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3884">配列: 対象となる数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3884">Array - the array or cell range of numeric values for which you want the quartile value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3885">戻り値: 戻り値として返される四分位数の内容を、0 ～ 4 の数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3885">Quart - indicates which value to return.</span></span></param>
        <summary><span data-ttu-id="a4672-3886">データ セットの四分ボックスをオンにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-3886">Returns the quartile of a data set.</span></span> <span data-ttu-id="a4672-3887">四分位数よく使用されます、営業および調査データの母集団を複数のグループに分割します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3887">Quartiles often are used in sales and survey data to divide populations into groups.</span></span> <span data-ttu-id="a4672-3888">たとえば、母集団の中の収入の上位 25% を検索するのに<b>25%</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3888">For example, you can use <b>Quartile</b> to find the top 25 percent of incomes in a population.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3889">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3889">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3890">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3890">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3891">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3891">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3892">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3892">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" /> methods.</span></span></para><span data-ttu-id="a4672-3893">
          <list type="table">
            <item>
              <term>0</term>
              <description>最小値</description>
            </item>
            <item> 
              <term>1</term>
              <description>最初の 25% (25 位)</description> 
            </item>
            <item> 
              <term>2</term>
              <description>の中央値の値 (50 パーセン タイル)</description> 
            </item>
            <item> 
              <term>3</term>
              <description>25% の第 3 (位 75%)</description> 
            </item>
            <item> 
              <term>4</term>
              <description>最大値</description>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3893">
          <list type="table">
            <item>
              <term>0</term>
              <description>Minimum value</description>
            </item>
            <item>
              <term>1</term>
              <description>First quartile (25th percentile)</description>
            </item>
            <item>
              <term>2</term>
              <description>Median value (50th percentile)</description>
            </item>
            <item>
              <term>3</term>
              <description>Third quartile (75th percentile)</description>
            </item>
            <item>
              <term>4</term>
              <description>Maximum value</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-3894">配列が空の場合は、 <b>25%</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3894">If array is empty, <b>Quartile</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3895">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3895">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1321">戻り値に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1321">If quart is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3897">場合クォート&lt;0 またはクォート&gt;4、 <b>25%</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3897">If quart &lt; 0 or if quart &gt; 4, <b>Quartile</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3898">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3898">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3899">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />クオートが 0 (ゼロ)、2、4、それぞれ<b>25%</b>と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3899">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> return the same value as <b>Quartile</b> when quart is equal to 0 (zero), 2, and 4, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Exc">
      <MemberSignature Language="C#" Value="public double Quartile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16890)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3900">配列: 対象となる数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3900">Array - The array or cell range of numeric values for which you want the quartile value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3901">戻り値: 戻り値として返される四分位数の内容を、0 ～ 4 の数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3901">Quart - The value to return.</span></span></param>
        <summary><span data-ttu-id="a4672-3902">0 ～ 1 (0 と 1 を除く) の百分位の値に基づいて、配列に含まれるデータから四分位数を抽出します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3902">Returns the quartile of the data set, based on percentile values from 0..1, exclusive.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3903">配列が空の場合は、 <b>Quartile_Exc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3903">If array is empty, <b>Quartile_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3904">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3904">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1324">戻り値に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1324">If quart is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3906">場合戻り ≤ 0 または受領 4、 <b>Quartile_Exc</b>のクォートが #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-3906">If quart ≤ 0 or if quart ≥ 4, <b>Quartile_Exc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3907">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3907">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3908">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />クオートが 0 (ゼロ)、2、4、それぞれ<b>Quartile_Exc</b>と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3908">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> return the same value as <b>Quartile_Exc</b> when quart is equal to 0 (zero), 2, and 4, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Inc">
      <MemberSignature Language="C#" Value="public double Quartile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3909">配列: 対象となる数値データを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3909">Array - the array or cell range of numeric values for which you want the quartile value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3910">戻り値: 戻り値として返される四分位数の内容を、0 ～ 4 の数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3910">Quart - The value to return.</span></span></param>
        <summary><span data-ttu-id="a4672-p1326">0 ～ 1 (0 と 1 を含む) の百分位の値に基づいて、配列に含まれるデータから四分位数を抽出します。四分位数は、市場調査などのデータで、母集団を複数のグループに分割するために利用されます。たとえば、Quartile_Inc メソッドを使って、母集団の中から所得金額が全体の上位 25% を占めるグループを選び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1326">Returns the quartile of a data set based on percentile values from 0..1, inclusive. Quartiles often are used in sales and survey data to divide populations into groups. For example, you can use QUARTILE_INC to find the top 25 percent of incomes in a population.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3914">配列が空の場合は、 <b>Quartile_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3914">If array is empty, <b>Quartile_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3915">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3915">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1328">戻り値に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1328">If quart is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-3917">場合クォート&lt;0 またはクォート&gt;4、 <b>Quartile_Inc</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3917">If quart &lt; 0 or if quart &gt; 4, <b>Quartile_Inc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-3918">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3918">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-3919">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />クオートが 0 (ゼロ)、2、4、それぞれ<b>Quartile_Inc</b>と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3919">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> return the same value as <b>Quartile_Inc</b> when quart is equal to 0 (zero), 2, and 4, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quotient">
      <MemberSignature Language="C#" Value="public double Quotient (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quotient([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quotient(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quotient (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quotient(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3920">分子: 被除数 (割られる数) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3920">Numerator - the dividend.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3921">分母: 除数 (割る数) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3921">Denominator - the divisor.</span></span></param>
        <summary><span data-ttu-id="a4672-p1330">除算の商の整数部を返します。商の余り (小数部) を切り捨てる場合に、この関数を使います。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1330">Returns the integer portion of a division. Use this function when you want to discard the remainder of a division.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3924">いずれかの引数が数値以外の場合は、<b>商</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3924">If either argument is nonnumeric, <b>Quotient</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-3925">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3925">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public double Radians (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Radians([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Radians(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Radians (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Radians(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3926">角度: ラジアンに変換する角度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3926">Angle - an angle in degrees that you want to convert.</span></span></param>
        <summary><span data-ttu-id="a4672-3927">度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3927">Converts degrees to radians.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandBetween">
      <MemberSignature Language="C#" Value="public double RandBetween (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RandBetween([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RandBetween(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RandBetween (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RandBetween(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16848)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3928">最小値: 乱数の最小値を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3928">Bottom - the smallest integer RANDBETWEEN will return.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-3929">最大値: 乱数の最大値を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3929">Top - the largest integer RANDBETWEEN will return.</span></span></param>
        <summary><span data-ttu-id="a4672-p1332">指定された範囲内の整数の乱数を返します。ワークシートが再計算されるたびに新しい乱数が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1332">Returns a random integer number between the numbers you specify. A new random integer number is returned every time the worksheet is calculated.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public double Rank (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3932">数値: 範囲内での順位 (位置) を調べる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3932">Number - the number whose rank you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1333">範囲: 数値を含むセル範囲の参照または名前、または数値配列を指定します。範囲内に含まれている数値だけが計算の対象となり、そこに含まれている文字列、空白セル、論理値は無視されます。また、範囲内にエラー値が含まれていると、そのエラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1333">Ref - an array of, or a reference to, a list of numbers. Nonnumeric values in ref are ignored.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3935">順序: 数値の順位を決めるため、範囲内の数値を並べ替える方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3935">Order - a number specifying how to rank number.</span></span></param>
        <summary><span data-ttu-id="a4672-p1334">順序に従って範囲内の数値を並べ替えたとき、数値が何番目に位置するかを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1334">Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.)</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3939">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3939">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-3940">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3940">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-3941">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-3941">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-3942">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3942">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-p1336">順序に 0 を指定するか、順序を省略すると、範囲内の数値が ... 3、2、1 のように降順に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1336">If order is 0 (zero) or omitted, Microsoft Excel ranks number as if ref were a list sorted in descending order. </span></span></para>
          <para><span data-ttu-id="a4672-3944">順序に 0 以外の数値を指定すると、範囲内の数値が 1、2、3, ... のように昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3944">If order is any nonzero value, Microsoft Excel ranks number as if ref were a list sorted in ascending order.</span></span></para>
          <para><span data-ttu-id="a4672-3945">
            <b>ランク</b>をは、同じランクに重複する番号を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3945">
            <b>Rank</b> gives duplicate numbers the same rank.</span></span> <span data-ttu-id="a4672-3946">ただし、重複する番号が存在することは、それ以降の数値のランクを影響します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3946">However, the presence of duplicate numbers affects the ranks of subsequent numbers.</span></span> <span data-ttu-id="a4672-3947">たとえば、整数のリストで昇順に並べ替えられます場合は、10 回が表示されますが、その 11 (順位が 6 の数値はありません) 7 のランクは、第 5 のランクがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3947">For example, in a list of integers sorted in ascending order, if the number 10 appears twice and has a rank of 5, then 11 would have a rank of 7 (no number would have a rank of 6).</span></span></para>
          <para><span data-ttu-id="a4672-3948">目的によっては、ので、同順位を考慮したランクの定義を使用することも 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a4672-3948">For some purposes one might want to use a definition of rank that takes ties into account.</span></span> <span data-ttu-id="a4672-3949">前の例では、いずれかが必要とする変更後の順位を 5.5 10 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3949">In the previous example, one would want a revised rank of 5.5 for the number 10.</span></span> <span data-ttu-id="a4672-3950">これは、<b>ランク</b>によって返される値を次の補正係数を追加することによって実行できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3950">This can be done by adding the following correction factor to the value returned by <b>Rank</b>.</span></span> <span data-ttu-id="a4672-3951">この補正因子は降順でランクが計算される場合の両方 (注文 = 0 または省略した場合) の順序を昇順または (順序 = 0 以外の値)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3951">This correction factor is appropriate both for the case where rank is computed in descending order (order = 0 or omitted) or ascending order (order = nonzero value).</span></span></para>
          <para><span data-ttu-id="a4672-3952">リンク付けされている ranks=[COUNT(ref) + 1 の-ランク (数値、参照、0) – ランク (数値、参照、1) の補正係数]/2。</span><span class="sxs-lookup"><span data-stu-id="a4672-3952">Correction factor for tied ranks=[COUNT(ref) + 1 – RANK(number, ref, 0) – RANK(number, ref, 1)]/2.</span></span></para>
          <para><span data-ttu-id="a4672-3953">次の例では、RANK(A2,A1:A5,1) が 3 に等しい。</span><span class="sxs-lookup"><span data-stu-id="a4672-3953">In the following example, RANK(A2,A1:A5,1) equals 3.</span></span> <span data-ttu-id="a4672-3954">補正因子は (5 + 1 – 2 – 3)/2 = 0.5 となるので、同順位を考慮して訂正した順位は、3 + 0.5 = 3.5。</span><span class="sxs-lookup"><span data-stu-id="a4672-3954">The correction factor is (5 + 1 – 2 – 3)/2 = 0.5 and the revised rank that takes ties into account is 3 + 0.5 = 3.5.</span></span> <span data-ttu-id="a4672-3955">Ref の数が 1 回だけ発生した場合<b>ランク</b>を対の調整する必要がないので補正因子は 0 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3955">If number occurs only once in ref, the correction factor will be 0, since <b>Rank</b> would not have to be adjusted for a tie.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Avg">
      <MemberSignature Language="C#" Value="public double Rank_Avg (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Avg([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Avg (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16892)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3956">数値: 範囲内での順位 (位置) を調べる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3956">Number - The number whose rank you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1340">範囲: 数値を含むセル範囲の参照か名前、または数値配列を指定します。範囲内に含まれている数値だけが計算の対象となり、そこに含まれている文字列、空白セル、論理値は無視されます。また、範囲内にエラー値が含まれていると、そのエラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1340">Ref - An array of, or a reference to, a list of numbers. Non-numeric values in reference are ignored.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1341">順序: 数値の順位を決めるため、範囲内の数値を並べ替える方法を指定します。順序に 0 を指定するか、順序を省略すると、範囲内の数値が ... 3、2、1 のように降順に並べ替えられます。順序に 0 以外の数値を指定すると、範囲内の数値が 1、2、3, ... のように昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1341">Order - A number that specifies how to rank number. If the order is 0 (zero) or omitted, Microsoft Excel ranks the number as if the reference was a list sorted in descending order. If the order is any non-zero value, Microsoft Excel ranks number as if the reference were a list sorted in ascending order.</span></span></param>
        <summary><span data-ttu-id="a4672-p1342">順序に従って範囲内の数値を並べ替えたとき、特定の数値が何番目に位置するかを返します。複数の値が同じ順位の場合、平均順位が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1342">Returns the rank of a number in a list of numbers; that is its size relative to other values in the list. If more than one value has the same rank, the average rank is returned.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Eq">
      <MemberSignature Language="C#" Value="public double Rank_Eq (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Eq([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Eq (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16893)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3964">数値: 範囲内での順位 (位置) を調べる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3964">Number - The number whose rank you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1343">範囲: 数値を含むセル範囲の参照か名前、または数値配列を指定します。範囲内に含まれている数値だけが計算の対象となり、そこに含まれている文字列、空白セル、論理値は無視されます。また、範囲内にエラー値が含まれていると、そのエラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1343">Ref - An array of, or a reference to, a list of numbers. Non-numeric values in reference are ignored.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3967">順序: 数値の順位を決めるため、範囲内の数値を並べ替える方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3967">Order - A number that specifies how to rank the number.</span></span></param>
        <summary><span data-ttu-id="a4672-p1344">順序に従って範囲内の数値を並べ替えたとき、数値が何番目に位置するかを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1344">Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.)</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1345">順序に 0 を指定するか、順序を省略すると、範囲内の数値が ... 3、2、1 のように降順に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1345">If the order is 0 (zero) or omitted, Microsoft Excel ranks the number as if the reference was a list sorted in descending order. </span></span></para>
          <para><span data-ttu-id="a4672-3972">順序に 0 以外の数値を指定すると、範囲内の数値が 1、2、3, ... のように昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3972">If the order is any non-zero value, Microsoft Excel ranks the number as if the reference was a list sorted in ascending order.</span></span></para>
          <para><span data-ttu-id="a4672-3973">
            <b>Rank_Eq</b>は、同じランクに重複する番号を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3973">
            <b>Rank_Eq</b> gives duplicate numbers the same rank.</span></span> <span data-ttu-id="a4672-3974">ただし、重複する番号が存在することは、それ以降の数値のランクを影響します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3974">However, the presence of duplicate numbers affects the ranks of subsequent numbers.</span></span> <span data-ttu-id="a4672-3975">たとえば、整数のリストで昇順に並べ替えられます場合は、10 回が表示されますが、その 11 (順位が 6 の数値はありません) 7 のランクは、第 5 のランクがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3975">For example, in a list of integers sorted in ascending order, if the number 10 appears twice and has a rank of 5, then 11 would have a rank of 7 (no number would have a rank of 6).</span></span></para>
          <para><span data-ttu-id="a4672-3976">目的によって関係を考慮したランクの定義を使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-3976">For some purposes you might want to use a definition of rank that takes ties into account.</span></span> <span data-ttu-id="a4672-3977">前の例では、10 の順位を 5.5 に変更されたとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-3977">In the previous example, you would want a revised rank of 5.5 for the number 10.</span></span> <span data-ttu-id="a4672-3978">これを行うには、 <b>Rank_Eq</b>によって返される値を次の補正係数を追加します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3978">To do this, add the following correction factor to the value returned by <b>Rank_Eq</b>.</span></span> <span data-ttu-id="a4672-3979">この補正因子は降順でランクが計算される場合の両方 (注文 = 0 または省略した場合) の順序を昇順または (順序 = 0 以外の値)。</span><span class="sxs-lookup"><span data-stu-id="a4672-3979">This correction factor is appropriate both for the case where rank is computed in descending order (order = 0 or omitted) or ascending order (order = nonzero value).</span></span></para>
          <para><span data-ttu-id="a4672-3980">リンク付けされている ranks=[COUNT(ref) + 1-RANK_EQ (番号は、ref、0) – RANK_EQ の補正係数 (番号、参照、次の例の 1)]/2.In、RANK_EQ(A2,A1:A5,1) が 3 に等しい。</span><span class="sxs-lookup"><span data-stu-id="a4672-3980">Correction factor for tied ranks=[COUNT(ref) + 1 – RANK_EQ(number, ref, 0) – RANK_EQ(number, ref, 1)]/2.In the following example, RANK_EQ(A2,A1:A5,1) equals 3.</span></span> <span data-ttu-id="a4672-3981">補正因子は (5 + 1 – 2 – 3)/2 = 0.5 となるので、同順位を考慮して訂正した順位は、3 + 0.5 = 3.5。</span><span class="sxs-lookup"><span data-stu-id="a4672-3981">The correction factor is (5 + 1 – 2 – 3)/2 = 0.5 and the revised rank that takes ties into account is 3 + 0.5 = 3.5.</span></span> <span data-ttu-id="a4672-3982">Ref の数が 1 回だけ発生した場合<b>Rank_Eq</b>は、引き分けを調整する必要がないので補正因子は 0 を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3982">If number occurs only once in ref, the correction factor will be 0, since <b>Rank_Eq</b> would not have to be adjusted for a tie.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public double Rate (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rate([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-3983">期間: 投資期間全体での支払い回数の合計を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3983">Nper - the total number of payment periods in an annuity.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1349">定期支払額: 毎回の支払額を指定します。投資期間内に支払額を変更することはできません。通常、定期支払額には元金と利息が含まれますが、その他の手数料や税金は含まれません。定期支払額を省略した場合は、必ず将来価値を指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1349">Pmt - the payment made each period and cannot change over the life of the annuity. Typically, pmt includes principal and interest but no other fees or taxes. If pmt is omitted, you must include the fv argument.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-3987">現在価値: 投資の現在価値、つまり将来行われる一連の支払いを現時点で一括払いした場合の合計金額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3987">Pv - the present value — the total amount that a series of future payments is worth now.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1350">将来価値: 投資の将来価値、つまり最後の支払いを行った後に残る現金の収支を指定します。将来価値を省略すると、0 を指定したと見なされます。たとえば、ローンなどの借入金の将来価値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1350">Fv - the future value, or a cash balance you want to attain after the last payment is made. If fv is omitted, it is assumed to be 0 (the future value of a loan, for example, is 0).</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-3990">支払期日: 支払いがいつ行われるかを、数値の 0 または 1 で指定します。省略すると、0 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-3990">Type - the number 0 or 1 and indicates when payments are due.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-3991">推定値: 利率がおよそどれくらいになるかを推定した値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-3991">Guess - your guess for what the rate will be.</span></span></param>
        <summary><span data-ttu-id="a4672-p1351">投資の利率を返します。Rate メソッドの計算には、反復計算の手法が使用されるため、適切な解が見つからないか、複数の解が同時に見つかることになります。反復計算を 20 回実行した時点で、計算結果の収束値が 0.0000001 以下にならない場合は、エラー値 #NUM! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1351">Returns the interest rate per period of an annuity. RATE is calculated by iteration and can have zero or more solutions. If the successive results of RATE do not converge to within 0.0000001 after 20 iterations, RATE returns the #NUM! error value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-3996">Nper の引数、pmt、pv、fv、タイプ、参照の詳細については<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />です。</span><span class="sxs-lookup"><span data-stu-id="a4672-3996">For a complete description of the arguments nper, pmt, pv, fv, and type, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</span></span></para><span data-ttu-id="a4672-3997">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>期間の最後に</description>
            </item>
            <item>
              <description>期間の先頭に</description> 
              <term>1</term>
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-3997">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>At the end of the period</description>
            </item>
            <item>
              <term>1</term>
              <description>At the beginning of the period</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1352">推定値を省略すると、10% が計算に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1352">If you omit guess, it is assumed to be 10 percent. </span></span></para>
          <para><span data-ttu-id="a4672-3999"><b>レート</b>が収束しない場合は、推定値に異なる値をしてみてください。</span><span class="sxs-lookup"><span data-stu-id="a4672-3999">If <b>Rate</b> does not converge, try different values for guess.</span></span> <span data-ttu-id="a4672-4000"><b>通常収束推定値が 0 と 1 の間です。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4000"><b>Rate</b> usually converges if guess is between 0 and 1.</span></span></para>
          <para><span data-ttu-id="a4672-p1354">推定値と期間を指定するときは、時間的な単位を一致させる必要があります。たとえば、年利 12% の 4 年ローンを月払いで返済する場合、推定値には 12%/12 = 1 (%) を、また期間には 4\*12 = 48 (月) を指定します。また、これと同じローンを年払いで返済する場合は、推定値に 12 (%)、期間に 4 (年) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1354">Make sure that you are consistent about the units you use for specifying guess and nper. If you make monthly payments on a four-year loan at 12 percent annual interest, use 12%/12 for guess and 4\*12 for nper. If you make annual payments on the same loan, use 12% for guess and 4 for nper.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Received">
      <MemberSignature Language="C#" Value="public double Received (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Received([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Received(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Received (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1355">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1355">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1356">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1356">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4008">投資額: 証券への投資額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4008">Investment - the amount invested in the security.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4009">割引率: 証券の割引率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4009">Discount - the security's discount rate.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-4010">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4010">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-4011">全額投資された証券に対して、満期日に支払われる金額を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4011">Returns the amount received at maturity for a fully invested security.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4012">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4012">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-4013">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4013">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-4014">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4014">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-4015">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4015">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1358">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1358">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1359">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1359">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1360">受渡日、満期日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1360">Settlement, maturity, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4024"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4024">If settlement or maturity is not a valid date, <b>Received</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4025">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4025">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4026">場合投資 ≤ 0 または割引 ≤ 0、<b>受信</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-4026">If investment ≤ 0 or if discount ≤ 0, <b>Received</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4027">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4027">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4028">場合に&lt;0 または基準&gt;4 では、<b>受信</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-4028">If basis &lt; 0 or if basis &gt; 4, <b>Received</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4029">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4029">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4030">かどうか受領成熟度に、受信が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4030">If settlement ≥ maturity, Received returns the #NUM!</span></span> <span data-ttu-id="a4672-4031">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4031">error value.</span></span> <span data-ttu-id="a4672-4032"><b>受信日時</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4032"><b>Received</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-4033">受信メソッドについて図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4033">Figure 1: Equation for Received method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4034">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4034">where:</span></span></para>
          <para><span data-ttu-id="a4672-4035">B = 年の基礎によって、1 年の日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4035">B = number of days in a year, depending on the year basis.</span></span></para>
          <para><span data-ttu-id="a4672-4036">DIM = 問題から満期日までの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4036">DIM = number of days from issue to maturity.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Replace([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4037">置き換えを行う文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4037">Text in which you want to replace some characters.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4038">内の文字の位置を<paramref name="Arg1" />を交換する<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4038">The position of the character in <paramref name="Arg1" /> that you want to replace with <paramref name="Arg4" />.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4039">文字数<paramref name="Arg1" />を<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />に置き換える方法<paramref name="Arg4" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4039">The number of characters in <paramref name="Arg1" /> that you want the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> method to replace with <paramref name="Arg4" />.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4040">テキスト内の文字を置き換える<paramref name="Arg1" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4040">Text that will replace characters in <paramref name="Arg1" />.</span></span></param>
        <summary><span data-ttu-id="a4672-4041">指定した文字の数に従って、テキスト文字列の一部を別のテキスト文字列に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4041">Replaces part of a text string, based on the number of characters you specify, with a different text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceB">
      <MemberSignature Language="C#" Value="public string ReplaceB (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReplaceB([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceB (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceB(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16591)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4042">文字列: 中の文字を置き換える対象テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4042">Old_text - text in which you want to replace some characters.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4043">開始位置: 置換文字列と置き換える先頭文字の位置 (文字番号) を数値で指定します。文字列の先頭文字の位置が 1 になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4043">Start_num - the position of the character in old_text that you want to replace with new_text.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4044">文字数: 置換文字列と置き換える文字列の文字数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4044">Num_chars - the number of characters in old_text that you want REPLACE to replace with new_text.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4045">置換文字列: 文字列の一部と置き換える文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4045">New_text - the text that will replace characters in old_text.</span></span></param>
        <summary><span data-ttu-id="a4672-4046">ReplaceB メソッドは、文字列中の指定されたバイト数の文字を別の文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4046">REPLACEB replaces part of a text string, based on the number of bytes you specify, with a different text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4047">
            <b>重要</b>:<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />はシングル バイト文字を使用する言語での使用を意図したものセット (SBCS) で、 <b>ReplaceB</b>が 2 バイト文字セット (DBCS) を使用する言語で使用するために意図したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4047">
            <b>Important</b>: <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> is intended for use with languages that use the single-byte character set (SBCS), whereas <b>ReplaceB</b> is intended for use with languages that use the double-byte character set (DBCS).</span></span> <span data-ttu-id="a4672-4048">お使いのコンピューター上の既定の言語設定は、戻り値を次のように影響します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4048">The default language setting on your computer affects the return value in the following way:</span></span></para>
          <para><span data-ttu-id="a4672-4049">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />常に 1 バイトまたは 2 バイト、1 は、既定の言語の設定に関係なくかどうかは、それぞれの文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4049">
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> always counts each character, whether single-byte or double-byte, as 1, no matter what the default language setting is.</span></span> </para>
          <para><span data-ttu-id="a4672-4050">
            <b>ReplaceB</b>関数では、DBCS をサポートする言語の編集を有効にして、既定の言語として設定するときに、各 2 バイト文字が 2 として数えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4050">
            <b>ReplaceB</b> counts each double-byte character as 2 when you have enabled the editing of a language that supports DBCS and then set it as the default language.</span></span> <span data-ttu-id="a4672-4051"><b>それ以外の場合、数え各文字 1 とします。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4051">Otherwise, <b>ReplaceB</b> counts each character as 1.</span></span> </para>
          <para><span data-ttu-id="a4672-p1368">DBCS をサポートする言語には、日本語、簡体字中国語、繁体字中国語、および韓国語があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1368">The languages that support DBCS include Japanese, Chinese (Simplified), Chinese (Traditional), and Korean. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rept">
      <MemberSignature Language="C#" Value="public string Rept (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Rept([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rept(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rept (Arg1 As String, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Rept(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4053">文字列: 繰り返す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4053">Text - the text you want to repeat.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4054">繰り返し回数: 文字列を繰り返す回数を、正の数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4054">Number_times - a positive number specifying the number of times to repeat text.</span></span></param>
        <summary><span data-ttu-id="a4672-p1369">文字列を指定された回数だけ繰り返して表示します。このメソッドを使用して、セル幅全体に文字列を表示することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1369">Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4057"><b>繰り返し回数が 0 (ゼロ) のかどうかは、rept</b> ""(空の文字列) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4057">If number_times is 0 (zero), <b>Rept</b> returns "" (empty text).</span></span> </para>
          <para><span data-ttu-id="a4672-p1371">繰り返し回数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1371">If number_times is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-4059"><b>Rept</b>関数の結果は、32,767 文字より長くすることはできませんまたは #VALUE が返さ<b>れます</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-4059">The result of the <b>Rept</b> function cannot be longer than 32,767 characters, or <b>Rept</b> returns #VALUE!.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Roman">
      <MemberSignature Language="C#" Value="public string Roman (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Roman([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Roman(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Roman (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16738)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4060">数値: 変換するアラビア数字を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4060">Number - the Arabic numeral you want converted.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1373">書式: ローマ数字の書式を数値で指定します。0 を指定すると、古典的な書式でローマ数字が表示されます。書式の値が大きくなるほど、ローマ数字は簡便な形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1373">Form - a number specifying the type of roman numeral you want. The roman numeral style ranges from Classic to Simplified, becoming more concise as the value of form increases.</span></span></param>
        <summary><span data-ttu-id="a4672-4063">テキストとしてアラビア数字をローマ数字に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4063">Converts an Arabic numeral to roman, as text.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-4064"><list type="table">
            <item>
              <term>0 または省略</term>
              <description>クラシック</description>
            </item>。
            <item> 
              <term>1</term>
              <description>より簡単です</description>
            </item>。
            <item> 
              <term>2</term>
              <description>より簡単です</description>
            </item>。
            <item> 
              <term>3</term>
              <description>より簡単です</description>
            </item>。
            <item> 
              <term>4</term>
              <description>簡素化します</description>
            </item>。
            <item>
              <term>
                <b>真</b>
              </term>
              <description>クラシック</description>
            </item>。
            <item> 
              <term>
                <b>false</b>
              </term>
              <description>簡体字</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4064"><list type="table">
            <item>
              <term>0 or omitted</term>
              <description>Classic.</description>
            </item>
            <item>
              <term>1</term>
              <description>More concise.</description>
            </item>
            <item>
              <term>2</term>
              <description>More concise.</description>
            </item>
            <item>
              <term>3</term>
              <description>More concise.</description>
            </item>
            <item>
              <term>4</term>
              <description>Simplified.</description>
            </item>
            <item>
              <term>
                <b>true</b>
              </term>
              <description>Classic.</description>
            </item>
            <item>
              <term>
                <b>false</b>
              </term>
              <description>Simplified.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1374">数値に負の値を指定すると、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1374">If number is negative, the #VALUE! error value is returned. </span></span></para>
          <para><span data-ttu-id="a4672-p1375">数値に 3999 より大きい値を指定すると、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1375">If number is greater than 3999, the #VALUE! error value is returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public double Round (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Round([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Round (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Round(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4069">数値: 四捨五入の対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4069">Number - the number you want to round.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4070">桁数: 数値を四捨五入した結果の桁数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4070">Num_digits - specifies the number of digits to which you want to round number.</span></span></param>
        <summary><span data-ttu-id="a4672-4071">数値を四捨五入して指定された桁数にします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4071">Rounds a number to a specified number of digits.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4072">桁数に正の数を指定すると、数値は小数点の右側 (小数点以下) で四捨五入され、小数点以下の桁数が桁数に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4072">If num_digits is greater than 0 (zero), then number is rounded to the specified number of decimal places.</span></span> </para>
          <para><span data-ttu-id="a4672-4073">桁数に 0 を指定すると、数値は最も近い整数として四捨五入されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4073">If num_digits is 0, then number is rounded to the nearest integer.</span></span> </para>
          <para><span data-ttu-id="a4672-4074">桁数に負の数を指定すると、数値は小数点の左側 (整数部分) の指定した桁 (1 の位を 0 とする) に四捨五入されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4074">If num_digits is less than 0, then number is rounded to the left of the decimal point.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtDown">
      <MemberSignature Language="C#" Value="public double RoundBahtDown (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtDown([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtDown(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtDown (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtDown(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4075">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4075">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtUp">
      <MemberSignature Language="C#" Value="public double RoundBahtUp (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtUp([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtUp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtUp (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtUp(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4076">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4076">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundDown">
      <MemberSignature Language="C#" Value="public double RoundDown (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundDown([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundDown(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundDown (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundDown(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16597)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4077">数値: 切り捨ての対象となる実数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4077">Number - any real number that you want rounded down.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4078">桁数: 数値を切り上げた結果の桁数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4078">Num_digits - the number of digits to which you want to round number.</span></span></param>
        <summary><span data-ttu-id="a4672-4079">数値を指定された桁数で切り捨てます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4079">Rounds a number down, toward zero.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4080">
            <b>RoundDown</b>の動作と同じように<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />、点を除いて、常に数値を切り捨てます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4080">
            <b>RoundDown</b> behaves like <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, except that it always rounds a number down.</span></span> </para>
          <para><span data-ttu-id="a4672-p1377">桁数に正の数を指定すると、数値は小数点の右 (小数点以下) の指定した桁で切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1377">If num_digits is greater than 0 (zero), then number is rounded down to the specified number of decimal places. </span></span></para>
          <para><span data-ttu-id="a4672-p1378">桁数に 0 を指定すると、数値は最も近い整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1378">If num_digits is 0, then number is rounded down to the nearest integer. </span></span></para>
          <para><span data-ttu-id="a4672-4083">桁数に負の数を指定すると、数値は小数点の左 (整数部分) の指定した桁 (1 の位を 0 とする) に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4083">If num_digits is less than 0, then number is rounded down to the left of the decimal point.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundUp">
      <MemberSignature Language="C#" Value="public double RoundUp (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundUp([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundUp(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundUp (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundUp(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4084">数値: 切り上げの対象となる実数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4084">Number - any real number that you want rounded up.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4085">桁数: 数値を切り上げた結果の桁数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4085">Num_digits - the number of digits to which you want to round number.</span></span></param>
        <summary><span data-ttu-id="a4672-4086">数値を指定された桁数に切り上げます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4086">Rounds a number up, away from 0 (zero).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4087">
            <b>RoundUp</b>の動作と同じように<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />常に数値を四捨五入することを除いて、です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4087">
            <b>RoundUp</b> behaves like <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, except that it always rounds a number up.</span></span> </para>
          <para><span data-ttu-id="a4672-p1380">桁数に正の数を指定すると、数値は小数点の右 (小数点以下) の指定した桁に切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1380">If num_digits is greater than 0 (zero), then number is rounded up to the specified number of decimal places. </span></span></para>
          <para><span data-ttu-id="a4672-p1381">桁数に 0 を指定すると、数値は最も近い整数に切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1381">If num_digits is 0, then number is rounded up to the nearest integer. </span></span></para>
          <para><span data-ttu-id="a4672-p1382">桁数に負の数を指定すると、数値は小数点の左 (整数部分) の指定した桁 (1 の位を 0 とする) に切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1382">If num_digits is less than 0, then number is rounded up to the left of the decimal point. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rri">
      <MemberSignature Language="C#" Value="public double Rri (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rri([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rri(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rri (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Rri(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4091">投資の期間。</span><span class="sxs-lookup"><span data-stu-id="a4672-4091">Number of periods for the investment.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4092">投資の現在価値。</span><span class="sxs-lookup"><span data-stu-id="a4672-4092">Present value of the investment.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4093">投資の将来価値。</span><span class="sxs-lookup"><span data-stu-id="a4672-4093">Future value of the investment.</span></span></param>
        <summary><span data-ttu-id="a4672-4094">投資の成長に対する等価利率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4094">Returns an equivalent interest rate for the growth of an investment.</span></span></summary>
        <returns><span data-ttu-id="a4672-4095"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4095"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RSq">
      <MemberSignature Language="C#" Value="public double RSq (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RSq([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RSq(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSq (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RSq(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4096">既知の y: 直線回帰のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4096">Known_y's - an array or range of data points.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4097">既知の x: 直線回帰のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4097">Known_x's - an array or range of data points.</span></span></param>
        <summary><span data-ttu-id="a4672-4098">既知の y と既知の x では、データ ポイントから Pearson 製品時点相関係数の 2 乗を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4098">Returns the square of the Pearson product moment correlation coefficient through data points in known_y's and known_x's.</span></span> <span data-ttu-id="a4672-4099">詳細については、「<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="a4672-4099">For more information, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />.</span></span> <span data-ttu-id="a4672-4100">R 2 乗値は、x の分散に起因する y の分散の比率として解釈できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4100">The r-squared value can be interpreted as the proportion of the variance in y attributable to the variance in x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1384">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1384">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1385">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1385">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1386">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1386">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1387">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1387">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4105"><b>RSq</b>は、既知の y と既知のデータ ポイントの個数が異なる、または場合、#N/A エラー値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4105">If known_y's and known_x's are empty or have a different number of data points, <b>RSq</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4106">既知の y と既知の x にデータが 1 つしか含ま<b>れない</b>は #DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4106">If known_y's and known_x's contain only 1 data point, <b>RSq</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-4107">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4107">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4108">ピアソンの積率相関係数 r を表す方程式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4108">The equation for the Pearson product moment correlation coefficient, r, is:</span></span> </para>
          <para><span data-ttu-id="a4672-4109">図 1: Pearson 製品時点相関係数</span><span class="sxs-lookup"><span data-stu-id="a4672-4109">Figure 1: Pearson product moment correlation coefficient</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4110">x と y は、このサンプルは、AVERAGE(known_x's) と AVERAGE(known_y's) ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4110">where x and y are the sample means AVERAGE(known_x’s) and AVERAGE(known_y’s).</span></span></para>
          <para><span data-ttu-id="a4672-4111">
            <b>RSq</b>この相関係数の 2 乗した r2 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4111">
            <b>RSq</b> returns r2, which is the square of this correlation coefficient.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public object RTD (object progID, object server, object topic1, object topic2, object topic3, object topic4, object topic5, object topic6, object topic7, object topic8, object topic9, object topic10, object topic11, object topic12, object topic13, object topic14, object topic15, object topic16, object topic17, object topic18, object topic19, object topic20, object topic21, object topic22, object topic23, object topic24, object topic25, object topic26, object topic27, object topic28);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RTD([in]object progID, [in]object server, [in]object topic1, [in]object topic2, [in]object topic3, [in]object topic4, [in]object topic5, [in]object topic6, [in]object topic7, [in]object topic8, [in]object topic9, [in]object topic10, [in]object topic11, [in]object topic12, [in]object topic13, [in]object topic14, [in]object topic15, [in]object topic16, [in]object topic17, [in]object topic18, [in]object topic19, [in]object topic20, [in]object topic21, [in]object topic22, [in]object topic23, [in]object topic24, [in]object topic25, [in]object topic26, [in]object topic27, [in]object topic28) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTD (progID As Object, server As Object, topic1 As Object, Optional topic2 As Object, Optional topic3 As Object, Optional topic4 As Object, Optional topic5 As Object, Optional topic6 As Object, Optional topic7 As Object, Optional topic8 As Object, Optional topic9 As Object, Optional topic10 As Object, Optional topic11 As Object, Optional topic12 As Object, Optional topic13 As Object, Optional topic14 As Object, Optional topic15 As Object, Optional topic16 As Object, Optional topic17 As Object, Optional topic18 As Object, Optional topic19 As Object, Optional topic20 As Object, Optional topic21 As Object, Optional topic22 As Object, Optional topic23 As Object, Optional topic24 As Object, Optional topic25 As Object, Optional topic26 As Object, Optional topic27 As Object, Optional topic28 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16763)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.Object" />
        <Parameter Name="server" Type="System.Object" />
        <Parameter Name="topic1" Type="System.Object" />
        <Parameter Name="topic2" Type="System.Object" />
        <Parameter Name="topic3" Type="System.Object" />
        <Parameter Name="topic4" Type="System.Object" />
        <Parameter Name="topic5" Type="System.Object" />
        <Parameter Name="topic6" Type="System.Object" />
        <Parameter Name="topic7" Type="System.Object" />
        <Parameter Name="topic8" Type="System.Object" />
        <Parameter Name="topic9" Type="System.Object" />
        <Parameter Name="topic10" Type="System.Object" />
        <Parameter Name="topic11" Type="System.Object" />
        <Parameter Name="topic12" Type="System.Object" />
        <Parameter Name="topic13" Type="System.Object" />
        <Parameter Name="topic14" Type="System.Object" />
        <Parameter Name="topic15" Type="System.Object" />
        <Parameter Name="topic16" Type="System.Object" />
        <Parameter Name="topic17" Type="System.Object" />
        <Parameter Name="topic18" Type="System.Object" />
        <Parameter Name="topic19" Type="System.Object" />
        <Parameter Name="topic20" Type="System.Object" />
        <Parameter Name="topic21" Type="System.Object" />
        <Parameter Name="topic22" Type="System.Object" />
        <Parameter Name="topic23" Type="System.Object" />
        <Parameter Name="topic24" Type="System.Object" />
        <Parameter Name="topic25" Type="System.Object" />
        <Parameter Name="topic26" Type="System.Object" />
        <Parameter Name="topic27" Type="System.Object" />
        <Parameter Name="topic28" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="a4672-4112">リアルタイム サーバーのプログラム ID を表す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4112">A string representing the real-time server programmatic identifier.</span></span></param>
        <param name="server"><span data-ttu-id="a4672-4113">サーバー名、 <b>Null</b>文字列または<b>vbNullString</b>定数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4113">server name, <b>Null</b> string or <b>vbNullString</b> constant.</span></span></param>
        <param name="topic1"><span data-ttu-id="a4672-4114"><paramref name="topic1" />–<paramref name="topic28" />トピックを表す<b>文字列</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-4114"><paramref name="topic1" /> –<paramref name="topic28" /> A <b>String</b> representing a topic.</span></span></param>
        <param name="topic2">To be added.</param>
        <param name="topic3">To be added.</param>
        <param name="topic4">To be added.</param>
        <param name="topic5">To be added.</param>
        <param name="topic6">To be added.</param>
        <param name="topic7">To be added.</param>
        <param name="topic8">To be added.</param>
        <param name="topic9">To be added.</param>
        <param name="topic10">To be added.</param>
        <param name="topic11">To be added.</param>
        <param name="topic12">To be added.</param>
        <param name="topic13">To be added.</param>
        <param name="topic14">To be added.</param>
        <param name="topic15">To be added.</param>
        <param name="topic16">To be added.</param>
        <param name="topic17">To be added.</param>
        <param name="topic18">To be added.</param>
        <param name="topic19">To be added.</param>
        <param name="topic20">To be added.</param>
        <param name="topic21">To be added.</param>
        <param name="topic22">To be added.</param>
        <param name="topic23">To be added.</param>
        <param name="topic24">To be added.</param>
        <param name="topic25">To be added.</param>
        <param name="topic26">To be added.</param>
        <param name="topic27">To be added.</param>
        <param name="topic28">To be added.</param>
        <summary><span data-ttu-id="a4672-4115">ソースに接続してリアルタイム データを取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4115">This method connects to a source to receive real-time data.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public double Search (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Search([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Search (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4116">検索文字列: 検索する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4116">Find_text - the text you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4117">対象: 検索文字列を含む文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4117">Within_text - the text in which you want to search for find_text.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4118">開始位置: 検索を開始する位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4118">Start_num - the character number in within_text at which you want to start searching.</span></span></param>
        <summary><span data-ttu-id="a4672-4119"><b>検索</b>し、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> 、2 番目のテキスト文字列内の 1 つのテキスト文字列を検索し、2 番目のテキスト文字列の最初の文字から最初のテキスト文字列の開始位置の数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4119"><b>Search</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4120">
            <b>重要</b>:<b>検索</b>は、シングル バイト文字セット (SBCS) を使用する言語で使用するため、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />セット (DBCS) を 2 バイト文字を使用する言語での使用を意図したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4120">
            <b>Important</b>: <b>Search</b> is intended for use with languages that use the single-byte character set (SBCS), whereas <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> is intended for use with languages that use the double-byte character set (DBCS).</span></span> <span data-ttu-id="a4672-4121">お使いのコンピューター上の既定の言語設定次のように、戻り値に影響を与える:<b>検索</b>は、1 バイトまたは 2 バイト、1 は、既定の言語の設定に関係なくかどうか常に、各文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4121">The default language setting on your computer affects the return value in the following way:<b>Search</b> always counts each character, whether single-byte or double-byte, as 1, no matter what the default language setting is.</span></span> <span data-ttu-id="a4672-4122"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />DBCS をサポートする言語の編集を有効にして、既定の言語として設定すると、2 つとして各 2 バイト文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4122"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> counts each double-byte character as 2 when you have enabled the editing of a language that supports DBCS and then set it as the default language.</span></span> <span data-ttu-id="a4672-4123">それ以外の場合、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />各文字を 1 として数えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4123">Otherwise, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> counts each character as 1.</span></span></para>
          <para><span data-ttu-id="a4672-p1391">DBCS をサポートする言語には、日本語、簡体字中国語、繁体字中国語、および韓国語があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1391">The languages that support DBCS include Japanese, Chinese (Simplified), Chinese (Traditional), and Korean. </span></span></para>
          <para><span data-ttu-id="a4672-4125"><b>検索</b>を使用して<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />MID および midb 関数を使用できるように、別のテキスト文字列内の文字または文字列の場所を決定するまたは<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" />テキストを変更する機能です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4125">Use <b>Search</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> to determine the location of a character or text string within another text string so that you can use the MID and MIDB or <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> functions to change the text.</span></span> </para>
          <para><span data-ttu-id="a4672-4126">
            <b>検索</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />は、大文字小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4126">
            <b>Search</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> are not case sensitive.</span></span> <span data-ttu-id="a4672-4127">使用する大文字と小文字を区別して検索を行う場合は、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4127">If you want to do a case sensitive search, you can use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1394">検索文字列では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1394">You can use the wildcard characters, question mark (?) and asterisk (\*), in find_text. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character. </span></span></para>
          <para><span data-ttu-id="a4672-p1395">検索文字列が見つからないと、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1395">If find_text is not found, the #VALUE! error value is returned. </span></span></para>
          <para><span data-ttu-id="a4672-p1396">開始位置を省略すると、1 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1396">If start_num is omitted, it is assumed to be 1. </span></span></para>
          <para><span data-ttu-id="a4672-p1397">開始位置に 0 以下の整数を指定した場合、または開始位置が対象の文字数よりも大きい場合は、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1397">If start_num is not greater than 0 (zero) or is greater than the length of within_text, the #VALUE! error value is returned. </span></span></para>
          <para><span data-ttu-id="a4672-4136">開始位置を使用すると、指定した文字数を省略できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4136">Use start_num to skip a specified number of characters.</span></span> <span data-ttu-id="a4672-4137"><b>検索</b>を使用して、例として、たとえば、テキスト文字列"AYF0093 を使用している.YoungMensApparel"です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4137">Using <b>Search</b> as an example, suppose you are working with the text string "AYF0093.YoungMensApparel".</span></span> <span data-ttu-id="a4672-4138">テキスト文字列の説明部分の最初の"Y"の数を検索するのには開始位置に設定 8 テキストのシリアル番号部分が検索されないようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4138">To find the number of the first "Y" in the descriptive part of the text string, set start_num equal to 8 so that the serial-number portion of the text is not searched.</span></span> <span data-ttu-id="a4672-4139"><b>検索</b>が文字 8 で始まって、次の文字で find_text を検出および 9 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4139"><b>Search</b> begins with character 8, finds find_text at the next character, and returns the number 9.</span></span> <span data-ttu-id="a4672-4140"><b>検索</b>常に、文字数を取得している within_text の最初から開始位置が 1 より大きい場合、スキップする文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4140"><b>Search</b> always returns the number of characters from the start of within_text, counting the characters you skip if start_num is greater than 1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchB">
      <MemberSignature Language="C#" Value="public double SearchB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SearchB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16590)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4141">検索文字列: 検索する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4141">Find_text - the text you want to find.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4142">対象: 検索文字列を含む文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4142">Within_text - the text in which you want to search for find_text.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4143">開始位置: 検索を開始する位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4143">Start_num - the character number in within_text at which you want to start searching.</span></span></param>
        <summary><span data-ttu-id="a4672-4144">Search メソッドおよび SearchB メソッドは、指定された文字列を他の文字列の中で検索し、その文字列が最初に現れる位置を左端から数え、その番号を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4144">SEARCH and SEARCHB locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4145">
            <b>重要</b>:<b>検索</b>は、シングル バイト文字セット (SBCS) を使用する言語で使用するため、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />セット (DBCS) を 2 バイト文字を使用する言語での使用を意図したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4145">
            <b>Important</b>: <b>Search</b> is intended for use with languages that use the single-byte character set (SBCS), whereas <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> is intended for use with languages that use the double-byte character set (DBCS).</span></span> <span data-ttu-id="a4672-4146">お使いのコンピューター上の既定の言語設定次のように、戻り値に影響を与える:<b>検索</b>は、1 バイトまたは 2 バイト、1 は、既定の言語の設定に関係なくかどうか常に、各文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4146">The default language setting on your computer affects the return value in the following way:<b>Search</b> always counts each character, whether single-byte or double-byte, as 1, no matter what the default language setting is.</span></span> <span data-ttu-id="a4672-4147"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />DBCS をサポートする言語の編集を有効にして、既定の言語として設定すると、2 つとして各 2 バイト文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4147"><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> counts each double-byte character as 2 when you have enabled the editing of a language that supports DBCS and then set it as the default language.</span></span> <span data-ttu-id="a4672-4148">それ以外の場合、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />各文字を 1 として数えられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4148">Otherwise, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> counts each character as 1.</span></span></para>
          <para><span data-ttu-id="a4672-p1400">DBCS をサポートする言語には、日本語、簡体字中国語、繁体字中国語、および韓国語があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1400">The languages that support DBCS include Japanese, Chinese (Simplified), Chinese (Traditional), and Korean. </span></span></para>
          <para><span data-ttu-id="a4672-4150"><b>検索</b>を使用して<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />MID および midb 関数を使用できるように、別のテキスト文字列内の文字または文字列の場所を決定するまたは<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" />テキストを変更する機能です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4150">Use <b>Search</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> to determine the location of a character or text string within another text string so that you can use the MID and MIDB or <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> functions to change the text.</span></span> </para>
          <para><span data-ttu-id="a4672-4151">
            <b>検索</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />は、大文字小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4151">
            <b>Search</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> are not case sensitive.</span></span> <span data-ttu-id="a4672-4152">使用する大文字と小文字を区別して検索を行う場合は、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4152">If you want to do a case sensitive search, you can use <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1403">検索文字列では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1403">You can use the wildcard characters, question mark (?) and asterisk (\*), in find_text. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character. </span></span></para>
          <para><span data-ttu-id="a4672-p1404">検索文字列が見つからないと、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1404">If find_text is not found, the #VALUE! error value is returned. </span></span></para>
          <para><span data-ttu-id="a4672-p1405">開始位置を省略すると、1 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1405">If start_num is omitted, it is assumed to be 1. </span></span></para>
          <para><span data-ttu-id="a4672-p1406">開始位置に 0 以下の整数を指定した場合、または開始位置が対象の文字数よりも大きい場合は、エラー値 #VALUE! が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1406">If start_num is not greater than 0 (zero) or is greater than the length of within_text, the #VALUE! error value is returned. </span></span></para>
          <para><span data-ttu-id="a4672-4161">開始位置を使用すると、指定した文字数を省略できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4161">Use start_num to skip a specified number of characters.</span></span> <span data-ttu-id="a4672-4162"><b>検索</b>を使用して、例として、たとえば、テキスト文字列"AYF0093 を使用している.YoungMensApparel"です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4162">Using <b>Search</b> as an example, suppose you are working with the text string "AYF0093.YoungMensApparel".</span></span> <span data-ttu-id="a4672-4163">テキスト文字列の説明部分の最初の"Y"の数を検索するのには開始位置に設定 8 テキストのシリアル番号部分が検索されないようにします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4163">To find the number of the first "Y" in the descriptive part of the text string, set start_num equal to 8 so that the serial-number portion of the text is not searched.</span></span> <span data-ttu-id="a4672-4164"><b>検索</b>が文字 8 で始まって、次の文字で find_text を検出および 9 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4164"><b>Search</b> begins with character 8, finds find_text at the next character, and returns the number 9.</span></span> <span data-ttu-id="a4672-4165"><b>検索</b>常に、文字数を取得している within_text の最初から開始位置が 1 より大きい場合、スキップする文字をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4165"><b>Search</b> always returns the number of characters from the start of within_text, counting the characters you skip if start_num is greater than 1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sec">
      <MemberSignature Language="C#" Value="public double Sec (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sec([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sec(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sec (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sec(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4166">セカントを求める角度をラジアンで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4166">Angle in radians for which you want the secant.</span></span></param>
        <summary><span data-ttu-id="a4672-4167">角度のセカントを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4167">Returns the secant of an angle.</span></span></summary>
        <returns><span data-ttu-id="a4672-4168"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4168"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sech">
      <MemberSignature Language="C#" Value="public double Sech (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sech([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sech(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sech (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sech(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4169">双曲線正割を求める角度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4169">Angle in radians for which you want the hyperbolic secant.</span></span></param>
        <summary><span data-ttu-id="a4672-4170">角度の双曲線正割 (ハイパーボリック セカント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4170">Returns the hyperbolic secant of an angle.</span></span></summary>
        <returns><span data-ttu-id="a4672-4171"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4171"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesSum">
      <MemberSignature Language="C#" Value="public double SeriesSum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SeriesSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SeriesSum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesSum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SeriesSum(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4172">x: べき級数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4172">X - the input value to the power series.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4173">n: x のべき乗の初期値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4173">N - the initial power to which you want to raise x.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4174">m: 級数の各項に対する n の増分を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4174">M - the step by which to increase n for each term in the series.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1408">係数: x の (n+m) 乗の乗数を指定します。係数に含まれる値の個数でべき級数の項数が決定します。たとえば係数に 3 つの値が含まれている場合、3 項のべき級数が求められます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1408">Coefficients - a set of coefficients by which each successive power of x is multiplied. The number of values in coefficients determines the number of terms in the power series. For example, if there are three values in coefficients, then there will be three terms in the power series.</span></span></param>
        <summary><span data-ttu-id="a4672-4178">数式に基づく級数の和を返します: SERIES(x,n,m,a) = a1xn+a2x(n+m)+a3x(n+2m)+...+aix(n+(i-1)m)</span><span class="sxs-lookup"><span data-stu-id="a4672-4178">Returns the sum of a power series based on the formula: SERIES(x,n,m,a)= a1xn+a2x(n+m)+a3x(n+2m)+…+aix(n+(i-1)m)</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4179">いずれかの引数が数値以外の場合は、 <b>SeriesSum</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4179">If any argument is nonnumeric, <b>SeriesSum</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4180">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4180">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public double Sinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4181">数値: 双曲線正弦を求める実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4181">Number is any real number.</span></span></param>
        <summary><span data-ttu-id="a4672-4182">数値の双曲線正弦 (ハイパーボリック サイン) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4182">Returns the hyperbolic sine of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4183">双曲線正弦 (ハイパーボリック サイン) は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4183">The formula for the hyperbolic sine is:</span></span></para>
          <para><span data-ttu-id="a4672-4184">双曲線正弦の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4184">Figure 1: Formula for the hyperbolic sine</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public double Skew (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1410">数値 1, 数値 2, … : 計算の対象となる最大 30 個までの数値を指定できます。また、半角のコンマ (,) で区切られた数値の代わりに、配列またはセル範囲を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1410">Number1, number2 ... - 1 to 30 arguments for which you want to calculate skewness. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1411">分布の歪度を返します。歪度とは、分布の平均値周辺での両側の非対称度を表す値です。正の歪度は対称となる分布が正の方向へ伸びる非対称な側を持つことを示し、負の歪度は対称となる分布が負の方向へ伸びる非対称な側を持つことを示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1411">Returns the skewness of a distribution. Skewness characterizes the degree of asymmetry of a distribution around its mean. Positive skewness indicates a distribution with an asymmetric tail extending toward more positive values. Negative skewness indicates a distribution with an asymmetric tail extending toward more negative values.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1412">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1412">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1413">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1413">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1414">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1414">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1415">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1415">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4195">データ ポイントが 3 つ未満、またはサンプルの標準偏差が 0、# の DIV または 0 を返します<b>傾斜</b>!</span><span class="sxs-lookup"><span data-stu-id="a4672-4195">If there are fewer than three data points, or the sample standard deviation is zero, <b>Skew</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-4196">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4196">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4197">分布の歪度は次の式で定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4197">The equation for skewness is defined as:</span></span> </para>
          <para><span data-ttu-id="a4672-4198">歪み度の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4198">Figure 1: Equation for skewness</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew_p">
      <MemberSignature Language="C#" Value="public double Skew_p (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew_p([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew_p(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew_p (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4199">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4199">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4200">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4200">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4201">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4201">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4202">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4202">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-4203">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4203">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-4204">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4204">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-4205">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4205">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-4206">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4206">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg9"><span data-ttu-id="a4672-4207">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4207">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg10"><span data-ttu-id="a4672-4208">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4208">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg11"><span data-ttu-id="a4672-4209">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4209">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg12"><span data-ttu-id="a4672-4210">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4210">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg13"><span data-ttu-id="a4672-4211">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4211">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg14"><span data-ttu-id="a4672-4212">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4212">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg15"><span data-ttu-id="a4672-4213">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4213">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg16"><span data-ttu-id="a4672-4214">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4214">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg17"><span data-ttu-id="a4672-4215">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4215">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg18"><span data-ttu-id="a4672-4216">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4216">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg19"><span data-ttu-id="a4672-4217">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4217">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg20"><span data-ttu-id="a4672-4218">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4218">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg21"><span data-ttu-id="a4672-4219">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4219">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg22"><span data-ttu-id="a4672-4220">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4220">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg23"><span data-ttu-id="a4672-4221">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4221">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg24"><span data-ttu-id="a4672-4222">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4222">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg25"><span data-ttu-id="a4672-4223">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4223">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg26"><span data-ttu-id="a4672-4224">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4224">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg27"><span data-ttu-id="a4672-4225">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4225">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg28"><span data-ttu-id="a4672-4226">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4226">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg29"><span data-ttu-id="a4672-4227">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4227">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <param name="Arg30"><span data-ttu-id="a4672-4228">母集団の歪度を求める 1 個から 254 個の数値、または数値を含む名前、配列、セル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4228">1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness.</span></span></param>
        <summary><span data-ttu-id="a4672-4229">母集団に基づく分布の歪度を取得します。歪度とは、分布の平均値周辺での両側の非対称度を表す値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4229">Returns the skewness of a distribution based on a population: a characterization of the degree of asymmetry of a distribution around its mean.</span></span></summary>
        <returns><span data-ttu-id="a4672-4230"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4230"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sln">
      <MemberSignature Language="C#" Value="public double Sln (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sln([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sln(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sln (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sln(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4231">取得価額: 資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4231">Cost - the initial cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4232">残存価額: 耐用年数が終了した時点での資産の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4232">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4233">耐用年数: 資産を使用できる年数、つまり償却の対象となる資産の寿命年数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4233">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</span></span></param>
        <summary><span data-ttu-id="a4672-4234">定額法 (Straight-line Method) を使用して、資産の 1 期あたりの減価償却費を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4234">Returns the straight-line depreciation of an asset for one period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slope">
      <MemberSignature Language="C#" Value="public double Slope (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Slope([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slope (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Slope(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4235">既知の y: 従属変数の値を含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4235">Known_y's - an array or cell range of numeric dependent data points.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4236">既知の x: 独立変数の値を含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4236">Known_x's - the set of independent data points.</span></span></param>
        <summary><span data-ttu-id="a4672-p1417">既知の y と既知の x のデータから回帰直線の傾きを返します。直線の傾きとは、直線上の 2 点の垂直方向の距離を水平方向の距離で除算した値で、回帰直線の変化率に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1417">Returns the slope of the linear regression line through data points in known_y's and known_x's. The slope is the vertical distance divided by the horizontal distance between any two points on the line, which is the rate of change along the regression line.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1418">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1418">The arguments must be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1419">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1419">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-4241"><b>既知の y と既知の x が空のデータ ポイント数が異なる、または #N/A エラー値が返されます。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4241">If known_y's and known_x's are empty or have a different number of data points, <b>Slope</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4242">回帰直線の傾きは、次の式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4242">The equation for the slope of the regression line is:</span></span> </para>
          <para><span data-ttu-id="a4672-4243">回帰直線の傾きの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4243">Figure 1: Equation for the slope of the regression line</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4244"><b>スロープ</b>で使用されている基になるアルゴリズムと<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />関数で使用されている基になるアルゴリズムとは異なる、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4244">The underlying algorithm used in the <b>Slope</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> functions is different than the underlying algorithm used in the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> function.</span></span> <span data-ttu-id="a4672-4245">データが不定で共線性と、これらのアルゴリズムの違いは異なる結果につながります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4245">The difference between these algorithms can lead to different results when data is undetermined and collinear.</span></span> <span data-ttu-id="a4672-4246">たとえば、既知の y 引数のデータ要素が 0、既知の x 引数のデータ要素が 1 の場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-4246">For example, if the data points of the known_y's argument are 0 and the data points of the known_x's argument are 1:</span></span> </para><span data-ttu-id="a4672-4247">
          <list type="bullet">
            <item>
              <description>
                <b>スロープ</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />#DIV または 0 を返します。エラーです。<b>スロープ</b>と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />のアルゴリズムは、1 つの答えを探すように設計されていて、ここですることができます複数の回答です。</description>
            </item> 
            <item>
              <description> 
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> 0 の値を返します。<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />アルゴリズムは、共線性のデータに対して適切な結果を返すように設計されていて、ここで少なくとも 1 つの解が求められます</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4247">
          <list type="bullet">
            <item>
              <description>
                <b>Slope</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> return a #DIV/0! error. The <b>Slope</b> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> algorithm is designed to look for one and only one answer, and in this case there can be more than one answer. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> returns a value of 0. The <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> algorithm is designed to return reasonable results for collinear data, and in this case at least one answer can be found.</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Small">
      <MemberSignature Language="C#" Value="public double Small (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Small([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Small(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Small (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Small(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4248">範囲: 抽出の対象となるデータが入力されているセル範囲または配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4248">Array - an array or range of numerical data for which you want to determine the k-th smallest value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4249">順位: 抽出する値の小さい方から数えた順位を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4249">K - the position (from the smallest) in the array or range of data to return.</span></span></param>
        <summary><span data-ttu-id="a4672-p1422">1 組のデータの中で順位番目に小さなデータを返します。この関数を利用すると、相対的な順位に基づいて、データの中から特定の値を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1422">Returns the k-th smallest value in a data set. Use this function to return values with a particular relative standing in a data set.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4252">配列が空の場合は、<b>小さな</b>#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4252">If array is empty, <b>Small</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4253">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4253">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4254">≤ 0 または k がデータの数を超えるかどうかは次のようにポイントしている場合<b>小さな</b>#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4254">If k ≤ 0 or if k exceeds the number of data points, <b>Small</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4255">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4255">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4256">n を範囲に含まれているデータの個数とするとき、SMALL(範囲,1) は対象となるデータの最小値を返します。また、SMALL(範囲,n) は対象となるデータの最大値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4256">If n is the number of data points in array, SMALL(array,1) equals the smallest value, and SMALL(array,n) equals the largest value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SqrtPi">
      <MemberSignature Language="C#" Value="public double SqrtPi (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SqrtPi([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SqrtPi(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SqrtPi (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SqrtPi(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4257">数値: π倍する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4257">Number - the number by which pi is multiplied.</span></span></param>
        <summary><span data-ttu-id="a4672-4258">(数値 \* π) の平方根を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4258">Returns the square root of (number \* pi).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4259">数値の場合&lt;0、 <b>SqrtPi</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4259">If number &lt; 0, <b>SqrtPi</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4260">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4260">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Standardize">
      <MemberSignature Language="C#" Value="public double Standardize (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Standardize([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Standardize(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Standardize (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Standardize(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4261">x: 標準化変量を計算する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4261">X - the value you want to normalize.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4262">平均: 対象となる分布の算術平均 (相加平均) を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4262">Mean - the arithmetic mean of the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4263">標準偏差: 対象となる分布の標準偏差を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4263">Standard_dev - the standard deviation of the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-4264">平均と標準偏差で決定される分布を対象に、標準化変量を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4264">Returns a normalized value from a distribution characterized by mean and standard_dev.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4265">場合は標準偏差 ≤ 0、<b>標準化</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4265">If standard_dev ≤ 0, <b>Standardize</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4266">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4266">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4267">標準化変量は、次の式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4267">The equation for the normalized value is:</span></span> </para>
          <para><span data-ttu-id="a4672-4268">正規化された値の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4268">Figure 1: Equation for the normalized value</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public double StDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1427">数値 1, 数値 2, … : 母集団の標本に対応する数値を指定します。引数は 1 個から 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、配列または配列への参照を使って指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1427">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1428">引数を標本と見なし、標本に基づいて母集団の標準偏差の推定値を返します。標準偏差とは、統計的な対象となる値がその平均からどれだけ広い範囲に分布しているかを計量したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1428">Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4273">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4273">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4274">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4274">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4275">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4275">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4276">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4276">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-4277">
            <b>標準偏差</b>は、引数を母集団の標本であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4277">
            <b>StDev</b> assumes that its arguments are a sample of the population.</span></span> <span data-ttu-id="a4672-4278">データが母集団全体を表す場合は、 <b>stdev 関数</b>を使って標準偏差を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4278">If your data represents the entire population, then compute the standard deviation using <b>StDev</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-p1431">標準偏差は、非バイアス法または n-1 法を使って計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1431">The standard deviation is calculated using the "unbiased" or "n-1" method. </span></span></para>
          <para><span data-ttu-id="a4672-p1432">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1432">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1433">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1433">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1434">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1434">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1435">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1435">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4285">
            <b>標準偏差</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4285">
            <b>StDev</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4286">StDev メソッドは、図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4286">Figure 1: Equation for the StDev method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4287">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4287">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_P">
      <MemberSignature Language="C#" Value="public double StDev_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16895)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1436">数値 1, 数値 2, … : 母集団に対応する数値を指定します。引数は 1 個から 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、配列または配列への参照を使って指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1436">Number1, number2, ... - 1 to 30 number arguments corresponding to a population. You can also use a single array or a reference to an array instead of arguments separated by commas (,).</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1437">引数を母集団全体であると見なして、母集団の標準偏差を返します。標準偏差とは、統計的な対象となる値が、その平均値からどれだけ広い範囲に分布しているかを計量したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1437">Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4292">
            <b>StDev_P</b>は、引数を母集団全体であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4292">
            <b>StDev_P</b> assumes that its arguments are the entire population.</span></span> <span data-ttu-id="a4672-4293">データが母集団の標本を表す場合は、 <b>StDev_P</b>を使用して標準偏差を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4293">If your data represents a sample of the population, then compute the standard deviation using <b>StDev_P</b>.</span></span> </para>
          <para><span data-ttu-id="a4672-4294">大規模なサンプル サイズは、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>StDev_P</b>がほぼ等しい値を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4294">For large sample sizes, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> and <b>StDev_P</b> return approximately equal values.</span></span> </para>
          <para><span data-ttu-id="a4672-p1440">標準偏差は、バイアス法または n 法を使って計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1440">The standard deviation is calculated using the "biased" or "n" method. </span></span></para>
          <para><span data-ttu-id="a4672-p1441">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1441">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1442">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1442">Logical values, and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1443">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1443">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1444">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1444">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4301">
            <b>StDev_P</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4301">
            <b>StDev_P</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4302">StDev_P メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4302">Figure 1: Equation for the StDev_P method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4303">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4303">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_S">
      <MemberSignature Language="C#" Value="public double StDev_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16894)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1446">数値 1, 数値 2, … : 母集団の標本に対応する数値を指定します。引数は 1 個から 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、配列または配列への参照を使って指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1446">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1447">引数を標本と見なし、標本に基づいて母集団の標準偏差の推定値を返します。標準偏差とは、統計的な対象となる値がその平均からどれだけ広い範囲に分布しているかを計量したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1447">Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4308">
            <b>StDev_S</b>は、引数を母集団の標本であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4308">
            <b>StDev_S</b> assumes that its arguments are a sample of the population.</span></span> <span data-ttu-id="a4672-4309">標準偏差を使用して、計算し、データが母集団全体を表す場合は、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4309">If your data represents the entire population, then compute the standard deviation using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1449">標準偏差は、非バイアス法または n-1 法を使って計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1449">The standard deviation is calculated using the "unbiased" or "n-1" method. </span></span></para>
          <para><span data-ttu-id="a4672-p1450">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1450">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1451">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1451">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1452">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1452">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1453">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1453">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4316">
            <b>StDev_S</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4316">
            <b>StDev_S</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4317">StDev_S メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4317">Figure 1: Equation for the StDev_S method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4318">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4318">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public double StDevP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDevP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDevP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16577)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1454">数値 1, 数値 2, … : 母集団の標本に対応する数値を指定します。引数は 1 個から 30 個まで指定できます。引数をコンマ (,) で区切って指定する代わりに、配列または配列への参照を使って指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1454">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-p1455">引数を母集団全体であると見なして、母集団の標準偏差を返します。標準偏差とは、統計的な対象となる値が、その平均値からどれだけ広い範囲に分布しているかを計量したものです。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1455">Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4323">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4323">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4324">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4324">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4325">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4325">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4326">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4326">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-4327">
            <b>StDevP</b>は、引数を母集団全体であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4327">
            <b>StDevP</b> assumes that its arguments are the entire population.</span></span> <span data-ttu-id="a4672-4328">標準偏差を使用して、計算する数値が母集団の標本である場合は、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4328">If your data represents a sample of the population, then compute the standard deviation using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-4329">大規模なサンプル サイズは、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>StDevP</b>がほぼ等しい値を返すとします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4329">For large sample sizes, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> and <b>StDevP</b> return approximately equal values.</span></span> </para>
          <para><span data-ttu-id="a4672-4330">標準偏差は、バイアス法または n 法を使って計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4330">The standard deviation is calculated using the "biased" or "n" method.</span></span> <span data-ttu-id="a4672-4331">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4331">Arguments can either be numbers or names, arrays, or references that contain numbers.</span></span> </para>
          <para><span data-ttu-id="a4672-p1460">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1460">Logical values, and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1461">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1461">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-4335">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4335">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span> <span data-ttu-id="a4672-4336"><b>StDevP</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4336"><b>StDevP</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4337">StDevP メソッドは、図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4337">Figure 1: Equation for the StDevP method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StEyx">
      <MemberSignature Language="C#" Value="public double StEyx (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StEyx([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StEyx(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StEyx (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double StEyx(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4338">既知の y: 従属変数の値を含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4338">Known_y's - an array or range of dependent data points.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4339">既知の x: 独立変数の値を含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4339">Known_x's - an array or range of independent data points.</span></span></param>
        <summary><span data-ttu-id="a4672-p1463">回帰直線の標準誤差を返します。標準誤差とは、個別の x の値に対する y の予測値の誤差の程度を計測するための尺度です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1463">Returns the standard error of the predicted y-value for each x in the regression. The standard error is a measure of the amount of error in the prediction of y for an individual x.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1464">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1464">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1465">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1465">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1466">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1466">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-p1467">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1467">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4346">既知の y と既知の x に<b>含ま</b>れているデータ要素の個数が異なるときは、エラー値 #n/a が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4346">If known_y's and known_x's have a different number of data points, <b>StEyx</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4347">既知の y と既知のデータ ポイントが 3 つ未満、またはである場合、<b>データ</b>は #DIV または 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4347">If known_y's and known_x's are empty or have less than three data points, <b>StEyx</b> returns the #DIV/0!</span></span> <span data-ttu-id="a4672-4348">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4348">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4349">y の予測値の標準誤差は次のように定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4349">The equation for the standard error of the predicted y is:</span></span> </para>
          <para><span data-ttu-id="a4672-4350">Y の予測値の標準誤差の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4350">Figure 1: Equation for the standard error of the predicted y</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4351">位置 x と y は、サンプルを示し、AVERAGE(known_x's) AVERAGE(known_y's)、n はサンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4351">where x and y are the sample means AVERAGE(known_x’s) and AVERAGE(known_y’s), and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Substitute">
      <MemberSignature Language="C#" Value="public string Substitute (string Arg1, string Arg2, string Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Substitute([in]string Arg1, [in]string Arg2, [in]string Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substitute (Arg1 As String, Arg2 As String, Arg3 As String, Optional Arg4 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4352">文字列: 置き換える文字を含む文字列を指定します。目的の文字列が入力されたセル参照を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4352">Text - the text or the reference to a cell containing text for which you want to substitute characters.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4353">検索文字列: 検索する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4353">Old_text - the text you want to replace.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4354">置換文字列: 検索文字列を検索して置き換える文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4354">New_text - the text you want to replace old_text with.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1470">置換対象: 文字列に含まれるどの検索文字列を置換文字列に置き換えるかを指定します。置換対象を指定した場合、文字列中の置換対象番目の検索文字列だけが置き換えられます。省略した場合は、文字列中のすべての検索文字列が置き換えの対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1470">Instance_num - specifies which occurrence of old_text you want to replace with new_text. If you specify instance_num, only that instance of old_text is replaced. Otherwise, every occurrence of old_text in text is changed to new_text.</span></span></param>
        <summary><span data-ttu-id="a4672-p1471">文字列中の指定された文字をほかの文字に置き換えます。Substitute メソッドは、文字列中の特定の文字を置き換えるときに使用します。文字列中の特定の位置にある文字をほかの文字に置き換えるときは、Replace メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1471">Substitutes new_text for old_text in a text string. Use SUBSTITUTE when you want to replace specific text in a text string; use REPLACE when you want to replace any text that occurs in a specific location in a text string.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public double Subtotal (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Subtotal([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4360">このメソッドで使用する集計関数を番号で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4360">A number indicating the aggregation function to be used by the method.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4361">最初の<see cref="T:Microsoft.Office.Interop.Excel.Range" />、小計を計算する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a4672-4361">The first <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object for which a subtotal is to be calculated.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4362"><paramref name="Arg3" />–<paramref name="Arg30" /> 2 回目以降<see cref="T:Microsoft.Office.Interop.Excel.Range" />小計を計算する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a4672-4362"><paramref name="Arg3" /> –<paramref name="Arg30" /> Subsequent <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objects for which a subtotal is to be calculated.</span></span></param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4363">集計を作成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4363">Creates subtotals.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public double Sum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4364">数値 1, 数値 2, … : 合計を計算する数値を指定します。引数は 1 ～ 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4364">Number1, number2, ... - 1 to 30 arguments for which you want the total value or sum.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4365">セル範囲に含まれる数値をすべて合計します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4365">Adds all the numbers in a range of cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4366">引数として指定した数値、論理値、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4366">Numbers, logical values, and text representations of numbers that you type directly into the list of arguments are counted.</span></span> </para>
          <para><span data-ttu-id="a4672-4367">引数が配列または参照の場合は、配列または参照内の数字のみがカウントされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4367">If an argument is an array or reference, only numbers in that array or reference are counted.</span></span> <span data-ttu-id="a4672-4368">空白セル、論理値、または配列または参照内のテキストは無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4368">Empty cells, logical values, or text in the array or reference are ignored.</span></span> </para>
          <para><span data-ttu-id="a4672-4369">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4369">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIf">
      <MemberSignature Language="C#" Value="public double SumIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16729)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4370">範囲: 評価の対象となるセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4370">Range - the range of cells that you want evaluated by criteria.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4371">条件を数値、式、または対象となるセルを定義するテキストの形式で抽出条件。</span><span class="sxs-lookup"><span data-stu-id="a4672-4371">Criteria - the criteria in the form of a number, expression, or text that defines which cells will be added.</span></span> <span data-ttu-id="a4672-4372">32、条件を表すことがたとえば、32、"&gt;32」、または「りんご」です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4372">For example, criteria can be expressed as 32, "32", "&gt;32", or "apples".</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1474">合計範囲: 範囲内の対応するセルが検索条件を満たす場合に加算される実際のセルを指定します。合計範囲を省略すると、検索条件に一致した場合に、範囲内のセルが検索条件によって評価されて、そのセルの値そのものが加算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1474">Sum_range - the actual cells to add if their corresponding cells in range match criteria. If sum_range is omitted, the cells in range are both evaluated by criteria and added if they match criteria.</span></span></param>
        <summary><span data-ttu-id="a4672-4375">指定された検索条件に一致するセルの値を合計します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4375">Adds the cells specified by a given criteria.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1475">合計範囲に含まれるセルの個数と形状は、必ずしも対応するセルと一致している必要はありません。加算の対象となる実際のセルは、合計範囲の左上のセルを基準にして決定されます。次にその例を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1475">Sum_range does not have to be the same size and shape as range. The actual cells that are added are determined by using the top, left cell in sum_range as the beginning cell, and then including cells that correspond in size and shape to range. For example:</span></span></para><span data-ttu-id="a4672-4379">
          <list type="table">
            <item>
              <term>範囲 a1: a5</term>
              <description>B1: b5</description>
              <description>B1: b5</description> 
            </item>
            <item>
              <description>B1: b3</description>
              <term>の範囲 a1: a5</term>
              <description>b1: b5</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:D4</description>
              <description>C1:D4</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:C2</description>
              <description>C1:D4</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4379">
          <list type="table">
            <item>
              <term>A1:A5</term>
              <description>B1:B5</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:A5</term>
              <description>B1:B3</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1476">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1476">You can use the wildcard characters, question mark (?) and asterisk (\*), in criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) preceding the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIfs">
      <MemberSignature Language="C#" Value="public double SumIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4383">合計対象範囲: 合計を求める対象範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4383">Sum_range - the range to sum.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1477">条件範囲 1, 条件範囲 2, … : 対応する条件による評価の対象となる範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1477">Criteria_range1, criteria_range2, … - one or more ranges in which to evaluate the associated criteria.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4386">抽出条件 1 は、検索条件 2、.</span><span class="sxs-lookup"><span data-stu-id="a4672-4386">Criteria1, criteria2, …</span></span> <span data-ttu-id="a4672-4387">-1 つまたは複数の基準数値、式、セル参照、またはテキストの形式でセルが追加されますを定義します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4387">- one or more criteria in the form of a number, expression, cell reference, or text that define which cells will be added.</span></span> <span data-ttu-id="a4672-4388">などの基準として表せる 32、32、"&gt;32」、「りんご」、または B4。</span><span class="sxs-lookup"><span data-stu-id="a4672-4388">For example, criteria can be expressed as 32, "32", "&gt;32", "apples", or B4.</span></span></param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary><span data-ttu-id="a4672-4389">セル範囲内で、複数の検索条件を満たすセルの値を合計します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4389">Adds the cells in a range that meet multiple criteria.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1479">合計対象範囲に含まれるセルの中で、そのセルに対応する条件をすべて満たすものだけが計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1479">Each cell in sum_range is summed only if all of the corresponding criteria specified are true for that cell. </span></span></para>
          <para><span data-ttu-id="a4672-4391"><b>True</b>を含む合計対象範囲内のセルを 1 として評価します。<b>false</b>が含まれている合計のセルは、0 (ゼロ) として評価されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4391">Cells in sum_range that contain <b>true</b> evaluate as 1; cells in sum_range that contain <b>false</b> evaluate as 0 (zero).</span></span> </para>
          <para><span data-ttu-id="a4672-p1481">検索条件では、半角の疑問符 (?) または半角のアスタリスク (*) をワイルドカード文字として使用することができます。ワイルドカード文字の疑問符は任意の 1 文字を表し、アスタリスクは任意の文字列を表します。ワイルドカード文字ではなく、通常の文字として疑問符やアスタリスクを検索する場合は、その文字の前に、"~*" のように半角のティルダ (~) を付けます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1481">You can use the wildcard characters, question mark (?) and asterisk (\*), in criteria. A question mark matches any single character; an asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) before the character. </span></span></para>
          <para><span data-ttu-id="a4672-p1482">各条件範囲に含まれるセルの個数と形状は、合計対象範囲と必ずしも一致している必要はありません。実際に加算の対象となるセルは、条件範囲の左上のセルを基準にして決定されます。次にその例を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1482">Each criteria_range does not have to be the same size and shape as sum_range. The actual cells that are added are determined by using the top, left cell in that criteria_range as the beginning cell, and then including cells that correspond in size and shape to sum_range. For example:</span></span></para><span data-ttu-id="a4672-4398">
          <list type="table">
            <item>
              <term>範囲 a1: a5</term>
              <description>B1: b5</description>
              <description>B1: b5</description> 
            </item>
            <item>
              <description>B1: b3</description>
              <term>の範囲 a1: a5</term>
              <description>b1: b5</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:D4</description>
              <description>C1:D4</description> 
            </item>
            <item> 
              <term>A1: b4</term>
              <description>C1:C2</description>
              <description>C1:D4</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4398">
          <list type="table">
            <item>
              <term>A1:A5</term>
              <description>B1:B5</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:A5</term>
              <description>B1:B3</description>
              <description>B1:B5</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1:B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          </span></span><para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumProduct">
      <MemberSignature Language="C#" Value="public double SumProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4399">配列 1, 配列 2, 配列 3, … : 計算の対象となる要素を含む配列を指定します。引数は 2 個から 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4399">Array1, array2, array3, ... - 2 to 30 arrays whose components you want to multiply and then add.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4400">引数として指定した配列の対応する要素間の積をまず計算し、さらにその和を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4400">Multiplies corresponding components in the given arrays, and returns the sum of those products.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4401">配列引数には、同じディメンションが必要です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4401">The array arguments must have the same dimensions.</span></span> <span data-ttu-id="a4672-4402">しない場合は、 <b>SumProduct</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4402">If they do not, <b>SumProduct</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4403">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4403">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4404">
            <b>SumProduct</b>は、ゼロの場合と同様、数値ではない配列のエントリを処理します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4404">
            <b>SumProduct</b> treats array entries that are not numeric as if they were zeros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumSq">
      <MemberSignature Language="C#" Value="public double SumSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1484">数値 1, 数値 2, … : 平方和を計算するための数値を指定します。引数は 1 個から 30 個まで指定できます。また、半角のコンマ (,) で区切られた数値の代わりに、配列またはセル範囲を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1484">Number1, number2, ... - 1 to 30 arguments for which you want the sum of the squares. You can also use a single array or a reference to an array instead of arguments separated by commas.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4407">引数の 2 乗の和 (平方和) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4407">Returns the sum of the squares of the arguments.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4408">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4408">Arguments can either be numbers or names, arrays, or references that contain numbers.</span></span> </para>
          <para><span data-ttu-id="a4672-4409">引数として指定した数値、論理値、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4409">Numbers, logical values, and text representations of numbers that you type directly into the list of arguments are counted.</span></span> </para>
          <para><span data-ttu-id="a4672-p1485">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1485">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored.</span></span> </para>
          <para><span data-ttu-id="a4672-4412">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4412">Arguments that are error values or text that cannot be translated into numbers cause errors.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2MY2">
      <MemberSignature Language="C#" Value="public double SumX2MY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2MY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2MY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2MY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2MY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4413">配列 1: 対象となる一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4413">Array_x - the first array or range of values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4414">配列 2: 対象となるもう一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4414">Array_y - the second array or range of values.</span></span></param>
        <summary><span data-ttu-id="a4672-4415">2 つの配列で対応する配列要素の平方差を合計します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4415">Returns the sum of the difference of squares of corresponding values in two arrays.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1486">引数には、数値、数値配列、あるいは数値を含む範囲を参照する名前またはセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1486">The arguments should be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1487">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1487">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-4418">配列 1 と配列<b>SumX2MY2returns</b>の値の個数が異なる #N/A エラー値があります。 場合、</span><span class="sxs-lookup"><span data-stu-id="a4672-4418">If array_x and array_y have a different number of values, <b>SumX2MY2returns</b> the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4419">平方差の合計は次の式で計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4419">The equation for the sum of the difference of squares is:</span></span> </para>
          <para><span data-ttu-id="a4672-4420">平方差の合計の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4420">Figure 1: Equation for the sum of the difference of squares</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2PY2">
      <MemberSignature Language="C#" Value="public double SumX2PY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2PY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2PY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2PY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2PY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4421">配列 1: 対象となる一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4421">Array_x - the first array or range of values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4422">配列 2: 対象となるもう一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4422">Array_y - the second array or range of values.</span></span></param>
        <summary><span data-ttu-id="a4672-p1489">2 つの配列で対応する配列要素の平方和を合計します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1489">Returns the sum of the sum of squares of corresponding values in two arrays. The sum of the sum of squares is a common term in many statistical calculations.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1490">引数には、数値、数値配列、あるいは数値を含む範囲を参照する名前またはセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1490">The arguments should be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1491">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1491">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-4427">配列 1 と配列の値の個数が異なる場合、 <b>SumX2PY2</b>はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4427">If array_x and array_y have a different number of values, <b>SumX2PY2</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4428">平方和の合計は次の式で計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4428">The equation for the sum of the sum of squares is:</span></span> </para>
          <para><span data-ttu-id="a4672-4429">平方和の合計の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4429">Figure 1: Equation for the sum of the sum of squares</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumXMY2">
      <MemberSignature Language="C#" Value="public double SumXMY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumXMY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumXMY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumXMY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumXMY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16687)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4430">配列 1: 対象となる一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4430">Array_x - the first array or range of values.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4431">配列 2: 対象となるもう一方の数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4431">Array_y - the second array or range of values.</span></span></param>
        <summary><span data-ttu-id="a4672-4432">2 つの配列で対応する配列要素の差を 2 乗し、さらにその合計を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4432">Returns the sum of squares of differences of corresponding values in two arrays.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1493">引数には、数値、数値配列、あるいは数値を含む範囲を参照する名前またはセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1493">The arguments should be either numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1494">引数として指定した配列またはセル範囲に文字列、論理値、空白セルが含まれている場合、これらは無視されます。ただし、数値として 0 (ゼロ) を含むセルは計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1494">If an array or reference argument contains text, logical values, or empty cells, those values are ignored; however, cells with the value zero are included. </span></span></para>
          <para><span data-ttu-id="a4672-4435"><b>配列 1 と配列の値の個数が異なる場合、#N/A エラー値が sumxmy2 します。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4435">If array_x and array_y have a different number of values, <b>SumXMY2</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4436">2 乗した差の合計は次の式で計算できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4436">The equation for the sum of squared differences is:</span></span> </para>
          <para><span data-ttu-id="a4672-4437">平方差の合計の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4437">Figure 1: Equation for the sum of squared differences</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Syd">
      <MemberSignature Language="C#" Value="public double Syd (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Syd([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Syd (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Syd(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16527)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4438">取得価額: 資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4438">Cost - the initial cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4439">残存価額: 耐用年数が終了した時点での資産の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4439">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset).</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4440">耐用年数: 資産を使用できる年数、つまり償却の対象となる資産の寿命年数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4440">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4441">期間: 減価償却費を求める期を指定します。期間は耐用年数と同じ単位で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4441">Per - the period and must use the same units as life.</span></span></param>
        <summary><span data-ttu-id="a4672-4442">級数法 (Sum-of-Year's Digits Method) を使用して、特定の期における減価償却費を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4442">Returns the sum-of-years' digits depreciation of an asset for a specified period.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4443">
            <b>Syd</b>は、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4443">
            <b>Syd</b> is calculated as follows:</span></span></para>
          <para><span data-ttu-id="a4672-4444">Syd メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4444">Figure 1: Equation for the Syd method</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist">
      <MemberSignature Language="C#" Value="public double T_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16896)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4445">x: t 分布を計算する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4445">X - The numeric value at which to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4446">自由度: 分布の自由度を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4446">Deg_freedom - An integer that indicates the number of degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4447">関数形式の関数の形式を決定する論理値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4447">Cumulative - A logical value that determines the form of the function.</span></span> <span data-ttu-id="a4672-4448">場合<b>は累積的な</b> <b>T_Dist</b>は累積分布関数の値を返します。かどうかは<b>false</b>を返します確率密度関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4448">If cumulative is <b>true</b>, <b>T_Dist</b> returns the cumulative distribution function; if <b>false</b>, it returns the probability density function.</span></span></param>
        <summary><span data-ttu-id="a4672-4449">スチューデントの t 分布を返します。数値 (x) は t の計算値で、この t に対してパーセンテージが計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4449">Returns a Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are computed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4450">いずれかの引数が数値以外の場合は、 <b>T_Dist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4450">If any argument is nonnumeric, <b>T_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4451">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4451">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4452">場合 deg_freedom &lt; 1、 <b>T_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4452">If deg_freedom &lt; 1, <b>T_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4453">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4453">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4454">場合 x &lt; 0 の場合、 <b>T_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4454">If x &lt; 0, then <b>T_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4455">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4455">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_2T">
      <MemberSignature Language="C#" Value="public double T_Dist_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16897)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4456">x: t 分布を計算する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4456">X - The numeric value at which to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4457">自由度: 分布の自由度を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4457">Deg_freedom - An integer that indicates the number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-4458">スチューデントの両側 t 分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4458">Returns the two-tailed Student t-distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4459">いずれかの引数が数値以外の場合は、 <b>T_Dist_2T</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4459">If any argument is non-numeric, <b>T_Dist_2T</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4460">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4460">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4461">場合 deg_freedom &lt; 1、 <b>T_Dist_2T</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4461">If deg_freedom &lt; 1, <b>T_Dist_2T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4462">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4462">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4463">場合 x &lt; 0 の場合、 <b>T_Dist_2T</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4463">If x &lt; 0, then <b>T_Dist_2T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4464">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4464">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_RT">
      <MemberSignature Language="C#" Value="public double T_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16898)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4465">x: t 分布を計算する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4465">X - The numeric value at which to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4466">自由度: 分布の自由度を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4466">Degrees_freedom - An integer that indicates the number of degrees of freedom.</span></span></param>
        <summary><span data-ttu-id="a4672-p1503">右側のスチューデントの t 分布を返します。数値 (x) は t の計算値で、この t に対してパーセンテージが計算されます。t 分布は、比較的少数の標本から成るデータを対象に仮説検定を行うときに使われます。この関数は、t 分布表の代わりに使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1503">Returns the right-tailed Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are to be computed. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4470">いずれかの引数が数値以外の場合は、 <b>T_Dist_RT</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4470">If any argument is non-numeric, <b>T_Dist_RT</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4471">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4471">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4472">場合自由度&lt;1、 <b>T_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4472">If degrees_freedom &lt; 1, <b>T_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4473">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4473">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1506">自由度、尾部に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1506">The degrees_freedom and tails arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4475">尾部が 1 または 2 以外の値の場合は、 <b>T_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4475">If tails is any value other than 1 or 2, <b>T_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4476">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4476">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4477">場合 x &lt; 0 の場合、 <b>T_Dist_RT</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4477">If x &lt; 0, then <b>T_Dist_RT</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4478">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4478">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4479">場合尾部 = 1, <b>T_Dist_RT</b>は、T_DIST_RT として計算されます = P (X&gt;x)、X は t 分布の乱数。</span><span class="sxs-lookup"><span data-stu-id="a4672-4479">If tails = 1, <b>T_Dist_RT</b> is calculated as T_DIST_RT = P( X&gt;x ), where X is a random variable that follows the t-distribution.</span></span> <span data-ttu-id="a4672-4480">場合尾部 = 2、 <b>T_Dist_RT</b>は、T_DIST_RT として計算されます = P (|X |&gt; x) = P (X &gt; x または X &lt; - x)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4480">If tails = 2, <b>T_Dist_RT</b> is calculated as T_DIST_RT = P(|X| &gt; x) = P(X &gt; x or X &lt; -x).</span></span> </para>
          <para><span data-ttu-id="a4672-4481">X&lt;は許可されていません、 <b>T_Dist_RT</b>を使用すると x &lt; 0、注、T_DIST_RT(-x,df) = 1: T_DIST_RT(x,df) = P (X &gt; - x) と T_DIST_2T(-x,df) = T_DIST_2T(x df) = P (|X |&gt; x)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4481">Because x &lt; 0 is not allowed, to use <b>T_Dist_RT</b> when x &lt; 0, note that T_DIST_RT(-x,df) = 1 – T_DIST_RT(x,df) = P(X &gt; -x) and T_DIST_2T(-x,df) = T_DIST_2T(x df) = P(|X| &gt; x).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv">
      <MemberSignature Language="C#" Value="public double T_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4482">確率: スチューデントの t 分布に従う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4482">Probability - The probability associated with the Student t-distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4483">自由度: 分布の自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4483">Deg_freedom - The number of degrees of freedom with which to characterize the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-4484">スチューデントの t 分布の左側逆関数を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4484">Returns the left-tailed inverse of the Student t-distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4485">いずれかの引数が数値以外の場合は、 <b>T_Inv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4485">If either argument is non-numeric, <b>T_Inv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4486">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4486">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4487">場合確率&lt;0 または確率&gt;1、 <b>T_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4487">If probability &lt; 0 or if probability &gt; 1, <b>T_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4488">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4488">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1512">自由度に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1512">If deg_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-4490">場合 deg_freedom &lt; 1、 <b>T_Inv</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4490">If deg_freedom &lt; 1, <b>T_Inv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4491">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4491">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv_2T">
      <MemberSignature Language="C#" Value="public double T_Inv_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16900)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4492">確率: スチューデントの両側 t 分布に従う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4492">Probability - The probability associated with the two-tailed Student t-distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4493">自由度: 分布の自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4493">Degrees_freedom - The number of degrees of freedom with which to characterize the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-4494">スチューデントの t 分布の t 値を、確率の関数と自由度で返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4494">Returns the t-value of the Student t-distribution as a function of the probability and the degrees of freedom.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4495">いずれかの引数が数値以外の場合は、 <b>T_Inv_2T</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4495">If either argument is non-numeric, <b>T_Inv_2T</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4496">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4496">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4497">場合確率&lt;0 または確率&gt;1、 <b>T_Inv_2T</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4497">If probability &lt; 0 or if probability &gt; 1, <b>T_Inv_2T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4498">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4498">error value.</span></span> <span data-ttu-id="a4672-4499">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4499">If degrees_freedom is not an integer, it is truncated.</span></span> </para>
          <para><span data-ttu-id="a4672-4500">場合自由度&lt;1、 <b>T_Inv_2T</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4500">If degrees_freedom &lt; 1, <b>T_Inv_2T</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4501">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4501">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4502">
            <b>T_Inv_2T</b>は、その値 t を返しますように P (|X |&gt; t) = X が P と t 分布に依存している確率変数の確率 (|X |&gt; t) = P (X&lt;には、-t または X &gt; t)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4502">
            <b>T_Inv_2T</b> returns that value t, such that P(|X| &gt; t) = probability where X is a random variable that follows the t-distribution and P(|X| &gt; t) = P(X &lt; -t or X &gt; t).</span></span> </para>
          <para><span data-ttu-id="a4672-4503">片側 t 値は、2*の確率で確率を置き換えることによって返されます。確率が 0.05、自由度が 10 の T_INV_2T(0.05,10)、2.28139 が返されますが、両側の値が計算されます。同じ確率と自由度に対する片側値を計算することができます T_INV_2T(2*0.05,10)、1.812462 が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4503">A one-tailed t-value can be returned by replacing probability with 2*probability. For a probability of 0.05 and degrees of freedom of 10, the two-tailed value is calculated with T_INV_2T(0.05,10), which returns 2.28139. The one-tailed value for the same probability and degrees of freedom can be calculated with T_INV_2T(2*0.05,10), which returns 1.812462.</span></span> </para>
          <para><span data-ttu-id="a4672-4504">
            <b>注</b>: いくつかのテーブルで確率が (1-p) とで説明されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-4504">
            <b>Note</b>: In some tables, probability is described as (1-p).</span></span></para>
          <para><span data-ttu-id="a4672-4505"><b>T_Inv_2T</b>にそのような値 x がシークの確率の値を指定したことの T_DIST_RT (x, 自由度, 2) = 確率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4505">Given a value for probability <b>T_Inv_2T</b> seeks that value x such that T_DIST_RT(x, degrees_freedom, 2) = probability.</span></span> <span data-ttu-id="a4672-4506"><b>T_Inv_2T</b>の精度がの精度に依存するため、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4506">Thus, precision of <b>T_Inv_2T</b> depends on precision of <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />.</span></span> <span data-ttu-id="a4672-4507"><b>T_Inv_2T</b>では、反復計算の手法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4507"><b>T_Inv_2T</b> uses an iterative search technique.</span></span> <span data-ttu-id="a4672-4508">結果は 100 回反復後収束しないが、関数はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4508">If the search has not converged after 100 iterations, the function returns the #N/A error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Test">
      <MemberSignature Language="C#" Value="public double T_Test (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Test([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Test (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Test(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4509">配列 1: 一方の組のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4509">Array1 - The first data set.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4510">配列 2: もう一方の組のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4510">Array2 - The second data set.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4511">尾部には、分布の尾部数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4511">Tails - Specifies the number of distribution tails.</span></span> <span data-ttu-id="a4672-4512">場合尾部 = 1 の場合、 <b>T_Test</b>は片側分布を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4512">If tails = 1, <b>T_Test</b> uses the one-tailed distribution.</span></span> <span data-ttu-id="a4672-4513">場合尾部 = 2、 <b>T_Test</b>は両側分布を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4513">If tails = 2, <b>T_Test</b> uses the two-tailed distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4514">検定の種類: 実行する t 検定の種類を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4514">Type - The kind of t-Test to perform.</span></span></param>
        <summary><span data-ttu-id="a4672-p1521">スチューデントの t 分布に従う確率を返します。T_TEST メソッドを利用すると、2 つの標本が平均値の等しい母集団から取り出されたものであるかどうかを確率的に予測することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1521">Returns the probability associated with a Student t-Test. Use T_TEST to determine whether two samples are likely to have come from the same two underlying populations that have the same mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4517">配列 1 と配列 2 のデータの個数と型の数が異なる場合は、#N/A エラー値 (ペア)、 <b>T_Test</b>の 1 を返しますを = します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4517">If array1 and array2 have a different number of data points, and type = 1 (paired), <b>T_Test</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1523">尾部と検定の種類に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1523">The tails and type arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4519">尾部または検定の種類が数値以外の場合、 <b>T_Test</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4519">If tails or type is non-numeric, <b>T_Test</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4520">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4520">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4521">尾部が 1 または 2 以外の値の場合は、 <b>T_Test</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4521">If tails is any value other than 1 or 2, <b>T_Test</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4522">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4522">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4523">
            <b>T_Test</b>では、配列 1 と配列 2 のデータを使って、正の t 統計を計算します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4523">
            <b>T_Test</b> uses the data in array1 and array2 to compute a non-negative t-statistic.</span></span> <span data-ttu-id="a4672-4524">場合尾部 = 1, <b>T_Test</b>は、t 統計の値が配列 1 と配列 2 は、同じ意味を持つ母集団からサンプルすることを前提として高い値の確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4524">If tails=1, <b>T_Test</b> returns the probability of a higher value of the t-statistic under the assumption that array1 and array2 are samples from populations with the same mean.</span></span> <span data-ttu-id="a4672-4525"><b>T_Test</b>によって返される値と、尾部 = 2 二重尾部は、= 1 と「同じ作成の意味」こと前提として、より高い t 値確率に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4525">The value returned by <b>T_Test</b> when tails=2 is double that returned when tails=1 and corresponds to the probability of a higher absolute value of the t-statistic under the “same population means” assumption.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public double Tanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Tanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Tanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4526">数値: 実数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4526">Number - any real number.</span></span></param>
        <summary><span data-ttu-id="a4672-4527">数値の双曲線正接 (ハイパーボリック タンジェント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4527">Returns the hyperbolic tangent of a number.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4528">双曲線正接は、次の数式で表されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4528">The formula for the hyperbolic tangent is:</span></span></para>
          <para><span data-ttu-id="a4672-4529">双曲線タンジェントの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4529">Figure 1: Formula for the hyperbolic tangent</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillEq">
      <MemberSignature Language="C#" Value="public double TBillEq (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillEq([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillEq(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillEq (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16822)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1527">受渡日: 財務省証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1527">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1528">満期日: 財務省証券の満期日、つまり財務省証券の支払期日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1528">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4534">DATE 関数を使用するか、他の数式または関数の結果として、ImportantDates を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4534">ImportantDates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-4535">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4535">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-4536">日付をテキストとして入力した場合、問題が発生することができます。割引率: 財務省証券の割引率です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4536">Problems can occur if dates are entered as text.Discount - the Treasury bill's discount rate.</span></span></param>
        <summary><span data-ttu-id="a4672-4537">米国財務省短期証券 (TB) の債券換算利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4537">Returns the bond-equivalent yield for a Treasury bill.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1530">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1530">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1531">受渡日、満期日に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1531">Settlement and maturity are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4542"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4542">If settlement or maturity is not a valid date, <b>TBillEq</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4543">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4543">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4544">場合は割引<b>率</b>である 0 の ≤ が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4544">If discount ≤ 0, <b>TBillEq</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4545">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4545">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4546">場合決済&gt;満期日、 <b>#NUM を 1 年を超える場合、</b>または!</span><span class="sxs-lookup"><span data-stu-id="a4672-4546">If settlement &gt; maturity, or if maturity is more than one year after settlement, <b>TBillEq</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4547">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4547">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4548">
            <b>率</b>は率として計算されます = (365 x 割合)/(360-(単価 x DSM))、DSM の受領と成熟度が 360 日の 1 年あたりの基準に従って計算との間の日数は、場所です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4548">
            <b>TBillEq</b> is calculated as TBILLEQ = (365 x rate)/(360-(rate x DSM)), where DSM is the number of days between settlement and maturity computed according to the 360 days per year basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillPrice">
      <MemberSignature Language="C#" Value="public double TBillPrice (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillPrice([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillPrice(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillPrice (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16823)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1535">受渡日: 財務省証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1535">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1536">満期日: 財務省証券の満期日、つまり財務省証券の支払期日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1536">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4553">割引率: 財務省証券の割引率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4553">Discount - the Treasury bill's discount rate.</span></span></param>
        <summary><span data-ttu-id="a4672-4554">米国財務省短期証券 (TB) の額面 $100 あたりの価格を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4554">Returns the price per $100 face value for a Treasury bill.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4555">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4555">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-4556">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4556">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-4557">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4557">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-p1538">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1538">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1539">受渡日、満期日に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1539">Settlement and maturity are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4562"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4562">If settlement or maturity is not a valid date, <b>TBillPrice</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4563">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4563">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4564">場合は割引<b>率</b>である 0 の ≤ が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4564">If discount ≤ 0, <b>TBillPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4565">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4565">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4566">場合決済&gt;満期日、 <b>#NUM を 1 年を超える場合、</b>または!</span><span class="sxs-lookup"><span data-stu-id="a4672-4566">If settlement &gt; maturity, or if maturity is more than one year after settlement, <b>TBillPrice</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4567">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4567">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4568">
            <b>率</b>として計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4568">
            <b>TBillPrice</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-4569">率メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4569">Figure 1: Equation for the TBillPrice method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4570">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4570">where:</span></span></para>
          <para><span data-ttu-id="a4672-4571">DSM = 受渡日から満期日、受領日の後の 2 つ以上のカレンダー年である、満期日を除くまでの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4571">DSM = number of days from settlement to maturity, excluding any maturity date that is more than one calendar year after the settlement date.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillYield">
      <MemberSignature Language="C#" Value="public double TBillYield (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillYield([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillYield(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillYield (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1543">受渡日: 財務省証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1543">Settlement - the Treasury bill's settlement date. The security settlement date is the date after the issue date when the Treasury bill is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1544">満期日: 財務省証券の満期日、つまり財務省証券の支払期日を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1544">Maturity - the Treasury bill's maturity date. The maturity date is the date when the Treasury bill expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4576">現在価値: 額面 $ 100 に対する財務省証券の価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4576">Pr - the Treasury bill's price per $100 face value.</span></span></param>
        <summary><span data-ttu-id="a4672-4577">米国財務省短期証券 (TB) の利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4577">Returns the yield for a Treasury bill.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4578">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4578">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-4579">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4579">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-4580">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4580">Problems can occur if dates are entered as text.</span></span></para>
          <para><span data-ttu-id="a4672-p1546">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1546">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1547">受渡日、満期日に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1547">Settlement and maturity are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4585"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4585">If settlement or maturity is not a valid date, <b>TBillYield</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4586">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4586">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4587">#NUM を返すならば ≤ 0 で<b>満</b>! 場合、</span><span class="sxs-lookup"><span data-stu-id="a4672-4587">If pr ≤ 0, <b>TBillYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4588">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4588">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4589">場合受領成熟度、成熟度が 1 年以上の場合は、<b>満</b>が #NUM を返すか!</span><span class="sxs-lookup"><span data-stu-id="a4672-4589">If settlement ≥ maturity, or if maturity is more than one year after settlement, <b>TBillYield</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4590">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4590">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4591">
            <b>日</b>として計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4591">
            <b>TBillYield</b> is calculated as follows:</span></span> </para>
          <para><span data-ttu-id="a4672-4592">満メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4592">Figure 1: Equation for the TBillYield method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4593">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4593">where:</span></span></para>
          <para><span data-ttu-id="a4672-4594">DSM = 受渡日から満期日、受領日の後の 2 つ以上のカレンダー年である、満期日を除くまでの日数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4594">DSM = number of days from settlement to maturity, excluding any maturity date that is more than one calendar year after the settlement date.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TDist">
      <MemberSignature Language="C#" Value="public double TDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16685)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4595">x: t 分布を計算する数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4595">X - the numeric value at which to evaluate the distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4596">自由度: 分布の自由度を整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4596">Degrees_freedom - an integer indicating the number of degrees of freedom.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1551">尾部: 片側分布を計算するか両側分布を計算するか、数値で指定します。尾部に 1 を指定すると片側分布の値が計算され、2 を指定すると両側分布の値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1551">Tails - specifies the number of distribution tails to return. If tails = 1, TDIST returns the one-tailed distribution. If tails = 2, TDIST returns the two-tailed distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-p1552">スチューデントの t 分布のパーセンテージ (確率) を返します。数値 (x) は t の計算値で、この t に対してパーセンテージが計算されます。t 分布は、比較的少数の標本から成るデータを対象に仮説検定を行うときに使われます。この関数は、t 分布表の代わりに使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1552">Returns the Percentage Points (probability) for the Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are to be computed. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4603">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4603">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4604">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4604">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4605">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4605">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4606">新しい関数の詳細についてを参照してください、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />、および<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4606">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />, and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-4607">いずれかの引数が数値以外の場合、 <b>TDist</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4607">If any argument is nonnumeric, <b>TDist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4608">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4608">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4609">場合自由度&lt;1 の場合、 <b>TDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4609">If degrees_freedom &lt; 1, <b>TDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4610">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4610">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1556">自由度、尾部に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1556">The degrees_freedom and tails arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4612">尾部に 1 または 2 以外の値がある場合、 <b>TDist</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4612">If tails is any value other than 1 or 2, <b>TDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4613">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4613">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4614">場合 x &lt; 0 の場合、 <b>TDist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4614">If x &lt; 0, then <b>TDist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4615">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4615">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4616">場合尾部 = 1 の場合、 <b>TDist</b>の計算に = P (X&gt;x)、X は t 分布の乱数。</span><span class="sxs-lookup"><span data-stu-id="a4672-4616">If tails = 1, <b>TDist</b> is calculated as TDIST = P( X&gt;x ), where X is a random variable that follows the t-distribution.</span></span> <span data-ttu-id="a4672-4617">場合尾部 = 2 の場合、 <b>TDist</b>の計算に = P (|X |&gt; x) = P (X &gt; x または X &lt; - x)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4617">If tails = 2, <b>TDist</b> is calculated as TDIST = P(|X| &gt; x) = P(X &gt; x or X &lt; -x).</span></span> </para>
          <para><span data-ttu-id="a4672-4618">X から&lt;は許可されていません、 <b>TDist</b>を使用すると x &lt; 0、注その TDIST(-x,df,1) = 1: TDIST(x,df,1) = P (X &gt; - x) と TDIST(-x,df,2) = TDIST (x は df、2) = P (|X |&gt; x)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4618">Since x &lt; 0 is not allowed, to use <b>TDist</b> when x &lt; 0, note that TDIST(-x,df,1) = 1 – TDIST(x,df,1) = P(X &gt; -x) and TDIST(-x,df,2) = TDIST(x df,2) = P(|X| &gt; x).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text (object Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Text([in]object Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Text(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Text (Arg1 As Object, Arg2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Text(System::Object ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4619">数値、戻り値が数値となる数式、または数値を含むセルの参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4619">A numeric value, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4620">[セルの書式設定] ダイアログ ボックスの表示形式] タブの [分類] ボックスにテキスト形式での表示形式です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4620">A number format in text form in the Category box on the Number tab in the Format Cells dialog box.</span></span></param>
        <summary><span data-ttu-id="a4672-4621">数値を書式設定した文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4621">Converts a value to text in a specific number format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDayOfWeek">
      <MemberSignature Language="C#" Value="public string ThaiDayOfWeek (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDayOfWeek([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDayOfWeek(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDayOfWeek (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDayOfWeek(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16753)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4622">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4622">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDigit">
      <MemberSignature Language="C#" Value="public string ThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDigit (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16754)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4623">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4623">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiMonthOfYear">
      <MemberSignature Language="C#" Value="public string ThaiMonthOfYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiMonthOfYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiMonthOfYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiMonthOfYear (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiMonthOfYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16755)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4624">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4624">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumSound">
      <MemberSignature Language="C#" Value="public string ThaiNumSound (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumSound([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumSound(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumSound (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumSound(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4625">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4625">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumString">
      <MemberSignature Language="C#" Value="public string ThaiNumString (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumString([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumString (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumString(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4626">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4626">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiStringLength">
      <MemberSignature Language="C#" Value="public double ThaiStringLength (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiStringLength([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiStringLength(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiStringLength (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiStringLength(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4627">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4627">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiYear">
      <MemberSignature Language="C#" Value="public double ThaiYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiYear (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16762)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="a4672-4628">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4628">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TInv">
      <MemberSignature Language="C#" Value="public double TInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4629">確率: スチューデントの両側 t 分布に従う確率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4629">Probability - the probability associated with the two-tailed Student's t-distribution.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4630">自由度: 分布の自由度を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4630">Degrees_freedom - the number of degrees of freedom with which to characterize the distribution.</span></span></param>
        <summary><span data-ttu-id="a4672-4631">スチューデントの t 分布の t 値を、確率の関数と自由度で返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4631">Returns the t-value of the Student's t-distribution as a function of the probability and the degrees of freedom.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4632">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4632">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4633">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4633">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4634">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4634">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4635">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4635">For more information about the new functions, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" /> methods.</span></span></para>
          <para><span data-ttu-id="a4672-4636">いずれかの引数が数値以外の場合、 <b>TInv</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4636">If either argument is nonnumeric, <b>TInv</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4637">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4637">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4638">場合確率&lt;0 または確率&gt;1 の場合、 <b>TInv</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4638">If probability &lt; 0 or if probability &gt; 1, <b>TInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4639">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4639">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1563">自由度に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1563">If degrees_freedom is not an integer, it is truncated. </span></span></para>
          <para><span data-ttu-id="a4672-4641">場合自由度&lt;1 の場合、 <b>TInv</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4641">If degrees_freedom &lt; 1, <b>TInv</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4642">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4642">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4643">
            <b>TInv</b>は、その値 t を返しますように P (|X |&gt; t) = X が P と t 分布に依存している確率変数の確率 (|X |&gt; t) = P (X&lt;には、-t または X &gt; t)。</span><span class="sxs-lookup"><span data-stu-id="a4672-4643">
            <b>TInv</b> returns that value t, such that P(|X| &gt; t) = probability where X is a random variable that follows the t-distribution and P(|X| &gt; t) = P(X &lt; -t or X &gt; t).</span></span> </para>
          <para><span data-ttu-id="a4672-4644">片側 t 値は、2*の確率で確率を置き換えることによって返されます。確率が 0.05、自由度が 10 の TINV(0.05,10)、2.28139 が返されますが、両側の値が計算されます。同じ確率と自由度に対する片側値を計算することができます TINV(2*0.05,10)、1.812462 が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4644">A one-tailed t-value can be returned by replacing probability with 2*probability. For a probability of 0.05 and degrees of freedom of 10, the two-tailed value is calculated with TINV(0.05,10), which returns 2.28139. The one-tailed value for the same probability and degrees of freedom can be calculated with TINV(2*0.05,10), which returns 1.812462.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Transpose">
      <MemberSignature Language="C#" Value="public object Transpose (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Transpose([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Transpose(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transpose (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Transpose(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1567">配列: 行列変換を行うワークシートの配列またはセル範囲を指定します。配列の行列変換を行うと、元の配列の第 1 行が新しい配列の第 1 列になり、元の配列の第 2 行が新しい配列の第 2 列 (以下同様) になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1567">Array - an array or range of cells on a worksheet that you want to transpose. The transpose of an array is created by using the first row of the array as the first column of the new array, the second row of the array as the second column of the new array, and so on.</span></span></param>
        <summary><span data-ttu-id="a4672-p1568">配列の縦方向と横方向のセル範囲の変換を行います。Transpose メソッドは、配列の列数および行数とそれぞれ同数の行数および列数のセル範囲に、配列数式として入力する必要があります。Transpose メソッドを利用すると、ワークシート上にある配列の縦と横を逆転させることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1568">Returns a vertical range of cells as a horizontal range, or vice versa. TRANSPOSE must be entered as an array formula in a range that has the same number of rows and columns, respectively, as an array has columns and rows. Use TRANSPOSE to shift the vertical and horizontal orientation of an array on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trend">
      <MemberSignature Language="C#" Value="public object Trend (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trend([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trend (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4650">既知の y: 既にわかっている y の値の系列で、y = mx + b という関係になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4650">Known_y's - the set of y-values you already know in the relationship y = mx + b.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4651">既知の x: 既にわかっている x の値の系列で、y = mx + b という関係になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4651">Known_x's - an optional set of x-values that you may already know in the relationship y = mx + b.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4652">新しい x: Trend メソッドを利用して、対応する y の値を計算する新しい x の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4652">New_x's - new x-values for which you want TREND to return corresponding y-values.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4653">定数: 定数 b を 0 にするかどうかを論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4653">Const - a logical value specifying whether to force the constant b to equal 0.</span></span></param>
        <summary><span data-ttu-id="a4672-p1569">回帰直線による予測値を返します。R-2 乗値のメソッドを使って、直線を既知の y と既知の x の配列に当てはめます。その直線上で、指定した新しい x の配列に対応する y の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1569">Returns values along a linear trend. Fits a straight line (using the method of least squares) to the arrays known_y's and known_x's. Returns the y-values along that line for the array of new_x's that you specify.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1570">既知の y の配列が 1 つの列に入力されている場合、既知の x の各列はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1570">If the array known_y's is in a single column, then each column of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p1571">既知の y の配列が 1 つの行に入力されている場合、既知の x の各行はそれぞれ異なる変数であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1571">If the array known_y's is in a single row, then each row of known_x's is interpreted as a separate variable. </span></span></para>
          <para><span data-ttu-id="a4672-p1572">既知の x の配列には、1 つまたは複数の変数の系列を指定することができます。変数の系列が 1 つである場合、既知の y と既知の x は、両者の次元が同じであれば、どのような形の範囲であってもかまいません。変数の系列が複数である場合、既知の y は 1 行または 1 列のセル範囲でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1572">The array known_x's can include one or more sets of variables. If only one variable is used, known_y's and known_x's can be ranges of any shape, as long as they have equal dimensions. If more than one variable is used, known_y's must be a vector (that is, a range with a height of one row or a width of one column). </span></span></para>
          <para><span data-ttu-id="a4672-p1573">既知の x を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1573">If known_x's is omitted, it is assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-p1574">新しい x には、既知の x と同様にそれぞれ独立した変数が入力されている 1 つの列 (または 1 つの行) を指定する必要があります。既知の y が 1 つの列に入力されている場合、既知の x と新しい x は同じ列数でなければなりません。また、既知の y が 1 つの行に入力されている場合は、既知の x と新しい x の行数が同じでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1574">New_x's must include a column (or row) for each independent variable, just as known_x's does. So, if known_y's is in a single column, known_x's and new_x's must have the same number of columns. If known_y's is in a single row, known_x's and new_x's must have the same number of rows. </span></span></para>
          <para><span data-ttu-id="a4672-p1575">新しい x を省略すると、既知の x と同じ値を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1575">If you omit new_x's, it is assumed to be the same as known_x's. </span></span></para>
          <para><span data-ttu-id="a4672-p1576">既知の x と新しい x の両方を省略すると、既知の y と同じサイズの {1,2,3,...} という配列を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1576">If you omit both known_x's and new_x's, they are assumed to be the array {1,2,3,...} that is the same size as known_y's. </span></span></para>
          <para><span data-ttu-id="a4672-4670">場合定数を<b>true</b>または省略すると、b の値も計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4670">If const is <b>true</b> or omitted, b is calculated normally.</span></span> </para>
          <para><span data-ttu-id="a4672-4671">場合定数が<b>false の場合</b>b を 0 (ゼロ) に設定されて、m の値が調整されるように y = mx です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4671">If const is <b>false</b>, b is set equal to 0 (zero), and the m-values are adjusted so that y = mx.</span></span> </para>
          <para><span data-ttu-id="a4672-4672">Microsoft Excel がデータを 1 行に適合する方法についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4672">For information about how Microsoft Excel fits a line to data, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-4673">異なる指数でべき乗される同一の変数に対して回帰している多項式曲線の<b>傾向</b>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4673">You can use <b>Trend</b> for polynomial curve fitting by regressing against the same variable raised to different powers.</span></span> <span data-ttu-id="a4672-4674">たとえば、列 A に y の値が含まれているし、列 B に x の値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-4674">For example, suppose column A contains y-values and column B contains x-values.</span></span> <span data-ttu-id="a4672-4675">入力 x ^2 に列 C、x ^3 列 D というように、および列 A に対して D を介して落ちる列 B に</span><span class="sxs-lookup"><span data-stu-id="a4672-4675">You can enter x^2 in column C, x^3 in column D, and so on, and then regress columns B through D against column A.</span></span> </para>
          <para><span data-ttu-id="a4672-p1581">計算結果が配列となる数式は、配列数式として入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1581">Formulas that return arrays must be entered as array formulas. </span></span></para>
          <para><span data-ttu-id="a4672-4677">既知の x のような引数に配列定数を指定するときは、半角のコンマ (,) を使って同じ行の値を区切り、半角のセミコロン (;) を使って各行を区切ります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4677">When entering an array constant for an argument such as known_x's, use commas to separate values in the same row and semicolons to separate rows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Trim([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4678">文字列: 余分なスペースを削除する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4678">Text - the text from which you want spaces removed.</span></span></param>
        <summary><span data-ttu-id="a4672-p1582">文字列に複数のスペースが連続して含まれている場合、単語間のスペースを 1 つずつ残して、不要なスペースをすべて削除します。Trim メソッドは、他のアプリケーションから読み込んだテキストに不要なスペースが含まれているときなどに使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1582">Removes all spaces from text except for single spaces between words. Use TRIM on text that you have received from another application that may have irregular spacing.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4681">
            <b>重要</b>: テキストから 7 ビットの ASCII 空白文字 (値 32) をトリムするのには、 <b>Trim</b>関数が設計されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-4681">
            <b>Important</b>: The <b>Trim</b> function was designed to trim the 7-bit ASCII space character (value 32) from text.</span></span> <span data-ttu-id="a4672-4682">Unicode 文字セットでは、160 の 10 進数の値を持つ、改行をしないスペース文字と呼ばれる別の空白文字があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4682">In the Unicode character set, there is an additional space character called the nonbreaking space character that has a decimal value of 160.</span></span> <span data-ttu-id="a4672-4683">この文字は Web ページで、HTML エンティティとして<b>&amp;nbsp;</b>。</span><span class="sxs-lookup"><span data-stu-id="a4672-4683">This character is commonly used in Web pages as the HTML entity, <b>&amp;nbsp;</b>.</span></span> <span data-ttu-id="a4672-4684">自体は、 <b>Trim</b>関数では、この非区切りスペースは削除されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4684">By itself, the <b>Trim</b> function does not remove this nonbreaking space character.</span></span></para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimMean">
      <MemberSignature Language="C#" Value="public double TrimMean (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TrimMean([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TrimMean(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimMean (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TrimMean(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16715)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4685">配列: 対象となるデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4685">Array - the array or range of values to trim and average.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1584">割合: 平均値の計算から排除するデータの割合を小数で指定します。たとえば、全体で 20 個のデータを含む対象に対して割合に 0.2 を指定した場合、20×0.2 = 4 となり上限から 2 個、下限から 2 個の合計 4 個のデータが排除されることになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1584">Percent - the fractional number of data points to exclude from the calculation. For example, if percent = 0.2, 4 points are trimmed from a data set of 20 points (20 x 0.2): 2 from the top and 2 from the bottom of the set.</span></span></param>
        <summary><span data-ttu-id="a4672-p1585">データ全体の上限と下限から一定の割合のデータを切り落とし、残りの項の平均値を返します。この関数は、極端な観察データを分析対象から排除する場合に利用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1585">Returns the mean of the interior of a data set. TRIMMEAN calculates the mean taken by excluding a percentage of data points from the top and bottom tails of a data set. You can use this function when you wish to exclude outlying data from your analysis.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4691">パーセント&lt;0] または [パーセント&gt;1, <b>TrimMean</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4691">If percent &lt; 0 or percent &gt; 1, <b>TrimMean</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4692">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4692">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4693">
            <b>TrimMean</b>は、2 の倍数に除外されたデータ ポイントの番号を丸めます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4693">
            <b>TrimMean</b> rounds the number of excluded data points down to the nearest multiple of 2.</span></span> <span data-ttu-id="a4672-4694">0.1、3 つのポイントが 30 のデータ ポイントの 10% に相当します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4694">If percent = 0.1, 10 percent of 30 data points equals 3 points.</span></span> <span data-ttu-id="a4672-4695">対称の<b>TrimMean</b>は、上部と下部のデータ セットから単一の値を除外します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4695">For symmetry, <b>TrimMean</b> excludes a single value from the top and bottom of the data set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TTest">
      <MemberSignature Language="C#" Value="public double TTest (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TTest([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTest (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TTest(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4696">配列 1: 一方の組のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4696">Array1 - the first data set.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4697">配列 2: もう一方の組のデータを含む配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4697">Array2 - the second data set.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1588">尾部: 片側分布を使用するか、または両側分布を使用するかを数値で指定します。尾部に 1 を指定すると片側分布が使用され、2 を指定すると両側分布が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1588">Tails - specifies the number of distribution tails. If tails = 1, TTEST uses the one-tailed distribution. If tails = 2, TTEST uses the two-tailed distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4701">検定の種類: 実行する t 検定の種類を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4701">Type - the kind of t-Test to perform.</span></span></param>
        <summary><span data-ttu-id="a4672-p1589">スチューデントの t 分布に従う確率を返します。TTest メソッドを利用すると、2 つの標本が平均値の等しい母集団から取り出されたものであるかどうかを確率的に予測することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1589">Returns the probability associated with a Student's t-Test. Use TTEST to determine whether two samples are likely to have come from the same two underlying populations that have the same mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4704">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4704">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4705">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4705">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4706">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4706">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4707">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4707">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" /> method.</span></span></para><span data-ttu-id="a4672-4708">
          <list type="table">
            <item>
              <term>1</term>
              <description>ペア</description>
            </item>
            <item> 
              <term>2</term>
              <description>2 標本の等分散 (標本)</description> 
            </item>
            <item> 
              <term>3</term>
              <description>非等分散の 2 つの標本 (標本)</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4708">
          <list type="table">
            <item>
              <term>1</term>
              <description>Paired</description>
            </item>
            <item>
              <term>2</term>
              <description>Two-sample equal variance (homoscedastic)</description>
            </item>
            <item>
              <term>3</term>
              <description>Two-sample unequal variance (heteroscedastic)</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-4709">配列 1 と配列 2 のデータの個数と型の数が異なる場合は、1 (ペア) の<b>指定</b>を返します。 エラー値 #n/a を = します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4709">If array1 and array2 have a different number of data points, and type = 1 (paired), <b>TTest</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-p1592">尾部と検定の種類に小数点以下の値を指定しても切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1592">The tails and type arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4711">尾部または検定の種類が数値以外の場合は、 <b>TTest</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4711">If tails or type is nonnumeric, <b>TTest</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4712">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4712">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4713">尾部が 1 または 2 以外の値の場合は、 <b>TTest</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4713">If tails is any value other than 1 or 2, <b>TTest</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4714">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4714">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4715">
            <b>配列 1 と配列 2 のデータを使用して負の t 統計を計算します。</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4715">
            <b>TTest</b> uses the data in array1 and array2 to compute a non-negative t-statistic.</span></span> <span data-ttu-id="a4672-4716">場合尾部 = 1、 <b>TTest</b>は、t 統計の値が配列 1 と配列 2 は、同じ意味を持つ母集団からサンプルすることを前提として高い値の確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4716">If tails=1, <b>TTest</b> returns the probability of a higher value of the t-statistic under the assumption that array1 and array2 are samples from populations with the same mean.</span></span> <span data-ttu-id="a4672-4717"><b>TTest</b>によって返される値と、尾部 = 2 二重尾部は、= 1 と「同じ作成の意味」こと前提として、より高い t 値確率に対応します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4717">The value returned by <b>TTest</b> when tails=2 is double that returned when tails=1 and corresponds to the probability of a higher absolute value of the t-statistic under the “same population means” assumption.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Unichar">
      <MemberSignature Language="C#" Value="public string Unichar (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Unichar([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unichar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unichar (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Unichar(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16964)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4718">文字を表す Unicode 数値。</span><span class="sxs-lookup"><span data-stu-id="a4672-4718">Unicode number representing a character.</span></span></param>
        <summary><span data-ttu-id="a4672-4719">特定の数値によって参照されている Unicode 文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4719">Returns the Unicode character referenced by the given numeric value.</span></span></summary>
        <returns><span data-ttu-id="a4672-4720"><b>STRING</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4720"><b>STRING</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public double Unicode (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Unicode([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unicode (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Unicode(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16965)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4721">Unicode 値を求める文字の種類。</span><span class="sxs-lookup"><span data-stu-id="a4672-4721">Character that you want the Unicode value of.</span></span></param>
        <summary><span data-ttu-id="a4672-4722">テキストの先頭文字に対応した数値 (コード ポイント) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4722">Returns the number (code point) corresponding to the first character of the text.</span></span></summary>
        <returns><span data-ttu-id="a4672-4723"><b>DOUBLE</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4723"><b>DOUBLE</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="USDollar">
      <MemberSignature Language="C#" Value="public string USDollar (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string USDollar([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.USDollar(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function USDollar (Arg1 As Double, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ USDollar(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4724">数値を含むセルの参照または戻り値が数値となる数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4724">A reference to a cell containing a number, or a formula that evaluates to a number.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4725">小数点の右側にある数字の数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4725">The number of digits to the right of the decimal point.</span></span> <span data-ttu-id="a4672-4726">Arg2 が負の場合は、小数点の左側に数値が丸められます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4726">If Arg2 is negative, the number is rounded to the left of the decimal point.</span></span> <span data-ttu-id="a4672-4727">桁数を省略すると、2 を指定したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4727">If you omit decimals, it is assumed to be 2.</span></span></param>
        <summary><span data-ttu-id="a4672-p1597">数値を文字列形式に変換し、通貨記号を適用します。このメソッドの名前および適用される記号は、使用する言語の設定によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1597">Converts a number to text format and applies a currency symbol. The name of the method (and the symbol that it applies) depends upon the language settings.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4730"><b>USDollar</b>メソッドは、数値を指定した位置に角丸 decimal で通貨形式を使用してテキストに変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4730">The <b>USDollar</b> method converts a number to text using currency format, with the decimals rounded to the specified place.</span></span> <span data-ttu-id="a4672-4731">使用する形式が必要な場合は、$#, # 0.00_);($#,##0.00) を使用しています。</span><span class="sxs-lookup"><span data-stu-id="a4672-4731">The format used is $#,##0.00_);($#,##0.00).</span></span></para>
          <para><span data-ttu-id="a4672-4732">セルの書式設定コマンドを使用して数値を含むセルを書式設定し、番号をフォーマットすると直接の主な違い、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" />メソッドは、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> 、計算結果をテキストに変換します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4732">The major difference between formatting a cell that contains a number with the Format Cells command and formatting a number directly with the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> method is that <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> converts its result to text.</span></span> <span data-ttu-id="a4672-4733">セルの書式設定コマンドを使用して書式設定された数値は、まだいくつかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4733">A number formatted with the Format Cells command is still a number.</span></span> <span data-ttu-id="a4672-4734">フォーマットされている番号を使用する続行することができます<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" />数式では、Excel が計算するとき、数値をテキスト値として入力した数値を変換するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4734">You can continue to use numbers formatted with <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> in formulas, because Excel converts numbers entered as text values to numbers when it calculates.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public double Var (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4735">数値 1, 数値 2, … : 母集団の標本に対応する数値を指定します。引数は 1 ～ 30 個まで指定できます。数値にはセル参照に対する参照を指定してもかまいません。数値として文字列、論理値、空白セルの参照を指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4735">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4736">引数を正規母集団の標本と見なし、標本に基づいて母集団の分散の推定値 (不偏分散) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4736">Estimates variance based on a sample.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4737">
            <b>Var</b>は、引数を母集団の標本であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4737">
            <b>Var</b> assumes that its arguments are a sample of the population.</span></span> <span data-ttu-id="a4672-4738">データが母集団全体を表す場合を使用して分散を計算し、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4738">If your data represents the entire population, then compute the variance by using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1601">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1601">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1602">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1602">Logical values, and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1603">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1603">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1604">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1604">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4744">
            <b>Var</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4744">
            <b>Var</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4745">Var メソッドは、図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4745">Figure 1: Equation for the Var method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4746">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4746">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_P">
      <MemberSignature Language="C#" Value="public double Var_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16902)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4747">数値 1, 数値 2, … : 母集団全体に対応する数値を指定します。引数は 1 ～ 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4747">Number1, number2, ... - 1 to 30 number arguments that correspond to a population.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4748">引数を母集団全体と見なし、母集団の分散 (標本分散) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4748">Calculates variance based on the entire population.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4749">
            <b>Var_P</b>は、引数を母集団全体であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4749">
            <b>Var_P</b> assumes that its arguments are the entire population.</span></span> <span data-ttu-id="a4672-4750">使用して分散をし、計算する数値が母集団の標本である場合は、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4750">If your data represents a sample of the population, then compute the variance by using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1606">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1606">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1607">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1607">Logical values, and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1608">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1608">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1609">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1609">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4756"><b>Var_P</b>の数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4756">The equation for <b>Var_P</b> is:</span></span> </para>
          <para><span data-ttu-id="a4672-4757">Var_P メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4757">Figure 1: Equation for the Var_P method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4758">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4758">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_S">
      <MemberSignature Language="C#" Value="public double Var_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16901)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4759">数値 1, 数値 2, … : 母集団の標本に対応する数値を指定します。引数は 1 ～ 30 個まで指定できます。数値にはセル参照に対する参照を指定してもかまいません。数値として文字列、論理値、空白セルの参照を指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4759">Number1, number2, ... - 1 to 30 number arguments corresponding to a sample of a population.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4760">引数を正規母集団の標本と見なし、標本に基づいて母集団の分散の推定値 (不偏分散) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4760">Estimates variance based on a sample.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4761">
            <b>Var_S</b>は、引数を母集団の標本であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4761">
            <b>Var_S</b> assumes that its arguments are a sample of the population.</span></span> <span data-ttu-id="a4672-4762">データが母集団全体を表す場合を使用して分散を計算し、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4762">If your data represents the entire population, then compute the variance by using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1611">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1611">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1612">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1612">Logical values and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1613">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1613">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1614">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1614">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4768">
            <b>Var_S</b>は、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4768">
            <b>Var_S</b> uses the following formula:</span></span> </para>
          <para><span data-ttu-id="a4672-4769">Var_S メソッドの図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4769">Figure 1: Equation for the Var_S method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4770">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4770">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public double VarP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 VarP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16578)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4771">数値 1, 数値 2, … : 母集団全体に対応する数値を指定します。引数は 1 ～ 30 個まで指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4771">Number1, number2, ... - 1 to 30 number arguments corresponding to a population.</span></span></param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="a4672-4772">引数を母集団全体と見なし、母集団の分散 (標本分散) を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4772">Calculates variance based on the entire population.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4773">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4773">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4774">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4774">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4775">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4775">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4776">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4776">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-4777">
            <b>Varp 関数</b>は、引数を母集団全体であると見なします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4777">
            <b>VarP</b> assumes that its arguments are the entire population.</span></span> <span data-ttu-id="a4672-4778">使用して分散をし、計算する数値が母集団の標本である場合は、 <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4778">If your data represents a sample of the population, then compute the variance by using <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />.</span></span> </para>
          <para><span data-ttu-id="a4672-p1617">引数には、数値、数値配列、または数値を含む範囲を参照する名前かセル参照を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1617">Arguments can either be numbers or names, arrays, or references that contain numbers. </span></span></para>
          <para><span data-ttu-id="a4672-p1618">引数として指定した論理値、および、数値を表す文字列が計算の対象となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1618">Logical values, and text representations of numbers that you type directly into the list of arguments are counted. </span></span></para>
          <para><span data-ttu-id="a4672-p1619">引数が配列またはセル範囲である場合、その中に含まれる数値だけが計算の対象となります。空白セル、論理値、文字列、またはエラー値はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1619">If an argument is an array or reference, only numbers in that array or reference are counted. Empty cells, logical values, text, or error values in the array or reference are ignored. </span></span></para>
          <para><span data-ttu-id="a4672-p1620">エラー値または数値に変換できない文字列を引数に指定すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1620">Arguments that are error values or text that cannot be translated into numbers cause errors. </span></span></para>
          <para><span data-ttu-id="a4672-4784"><b>Varp 関数</b>の数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4784">The equation for <b>VarP</b> is:</span></span> </para>
          <para><span data-ttu-id="a4672-4785">VarP メソッドは、図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4785">Figure 1: Equation for the VarP method</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4786">x は、標本平均が AVERAGE(number1,number2,...) と n は、サンプル サイズです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4786">where x is the sample mean AVERAGE(number1,number2,…) and n is the sample size.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Vdb">
      <MemberSignature Language="C#" Value="public double Vdb (double Arg1, double Arg2, double Arg3, double Arg4, double Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Vdb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]float64 Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Vdb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Double, Optional Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Double" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4787">取得価額: 資産を購入した時点での価格を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4787">Cost - the initial cost of the asset.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1621">残存価額: 耐用年数が終了した時点での資産の価格を指定します。0 (ゼロ) を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1621">Salvage - the value at the end of the depreciation (sometimes called the salvage value of the asset). This value can be 0.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4790">耐用年数: 資産を使用できる年数、つまり償却の対象となる資産の寿命年数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4790">Life - the number of periods over which the asset is depreciated (sometimes called the useful life of the asset).</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1622">開始期: 減価償却費の計算の対象となる最初の期を指定します。開始期は耐用年数と同じ単位で指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1622">Start_period - the starting period for which you want to calculate the depreciation. Start_period must use the same units as life.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-p1623">終了期: 減価償却費の計算の対象となる最後の期を指定します。終了期は耐用年数と同じ単位で指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1623">End_period - the ending period for which you want to calculate the depreciation. End_period must use the same units as life.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-4795">率: 償却します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4795">Factor - the rate at which the balance declines.</span></span> <span data-ttu-id="a4672-4796">Factor を省略すると、2 (倍率逓減残高の方法) と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4796">If factor is omitted, it is assumed to be 2 (the double-declining balance method).</span></span> <span data-ttu-id="a4672-4797">倍額定率法を使用しない場合は、率を指定してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-4797">Change factor if you do not want to use the double-declining balance method.</span></span> <span data-ttu-id="a4672-4798">倍額定率法についてを参照してください<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-4798">For a description of the double-declining balance method, see <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-4799">切り替えなし: 減価償却費が定率法による計算の結果より大きくなったときに、自動的に定額法に切り替えるかどうかを、論理値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4799">No_switch - a logical value specifying whether to switch to straight-line depreciation when depreciation is greater than the declining balance calculation.</span></span></param>
        <summary><span data-ttu-id="a4672-p1625">倍額定率法または指定された方法を使用して、特定の期における資産の減価償却費を返します。VDB は、Variable Declining Balance の略語です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1625">Returns the depreciation of an asset for any period you specify, including partial periods, using the double-declining balance method or some other method you specify. VDB stands for variable declining balance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4802">切り替えが<b>true</b>の場合は、Microsoft Excel に切り替わらない定額減価償却費減価償却費が定率法による計算の結果よりも大きい場合でも。</span><span class="sxs-lookup"><span data-stu-id="a4672-4802">If no_switch is <b>true</b>, Microsoft Excel does not switch to straight-line depreciation even when the depreciation is greater than the declining balance calculation.</span></span> </para>
          <para><span data-ttu-id="a4672-4803">切り替えなしでは、 <b>false</b>を指定したり、省略すると、Excel に切り替わります定額減価償却費が定率法による計算の結果よりも大きい。</span><span class="sxs-lookup"><span data-stu-id="a4672-4803">If no_switch is <b>false</b> or omitted, Excel switches to straight-line depreciation when depreciation is greater than the declining balance calculation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VLookup">
      <MemberSignature Language="C#" Value="public object VLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1627">検索値: 範囲の左端の列で検索する値を指定します。検索値には、値またはセル参照を指定します。検索値が範囲の左端の列の最小値より小さい場合、エラー値 #N/A が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1627">Lookup_value - the value to search in the first column of the table array. Lookup_value can be a value or a reference. If lookup_value is smaller than the smallest value in the first column of table_array, VLOOKUP returns the #N/A error value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1628">範囲: 2 列以上のデータ列です。セル範囲の参照、またはセル範囲名を指定します。範囲の左端の列の値が、検索値で検索される値です。これらの値は、文字列、数値、論理値のいずれかであることが必要です。英字の大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1628">Table_array - two or more columns of data. Use a reference to a range or a range name. The values in the first column of table_array are the values searched by lookup_value. These values can be text, numbers, or logical values. Uppercase and lowercase text are equivalent.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1629">列番号: 範囲内で目的のデータが入力されている列を、左端からの列数で指定します。列番号に 1 を指定すると、範囲の左端の列の値が返され、列番号に 2 を指定すると、範囲の左から 2 列目の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1629">Col_index_num - the column number in table_array from which the matching value must be returned. A col_index_num of 1 returns the value in the first column in table_array; a col_index_num of 2 returns the value in the second column in table_array, and so on.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4814">検索の型にするかどうかを指定する論理値、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />が完全に一致または一致を検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="a4672-4814">Range_lookup - a logical value that specifies whether you want the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> method to find an exact match or an approximate match:</span></span></param>
        <summary><span data-ttu-id="a4672-4815">指定された範囲の 1 列目で特定の値を検索し、その範囲内の別の列の同じ行にある値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4815">Searches for a value in the first column of a table array and returns a value in the same row from another column in the table array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4816">V は<b>VLookup</b>では、垂直方向を表しています。</span><span class="sxs-lookup"><span data-stu-id="a4672-4816">The V in <b>VLookup</b> stands for vertical.</span></span> <span data-ttu-id="a4672-4817">ではなく<b>VLookup</b>メソッドを使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />メソッドは、比較する値を検索するデータの左側の列にある場合。</span><span class="sxs-lookup"><span data-stu-id="a4672-4817">Use the <b>VLookup</b> method instead of the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> method when your comparison values are located in a column to the left of the data that you want to find.</span></span></para>
          <para><span data-ttu-id="a4672-4818">列番号が 1 未満の場合は、 <b>VLookup</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4818">If Col_index_num is less than 1, the <b>VLookup</b> method generates an error.</span></span> </para>
          <para><span data-ttu-id="a4672-4819">列番号が範囲の列数よりも大きい場合は、 <b>VLookup</b>メソッドはエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4819">If Col_index_num is greater than the number of columns in table_array, the <b>VLookup</b> method generates an error.</span></span></para>
          <para><span data-ttu-id="a4672-4820">検索の型は、 <b>true</b>または省略すると、またはその近似値の一致が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4820">If Range_lookup is <b>true</b> or omitted, an exact or approximate match is returned.</span></span> <span data-ttu-id="a4672-4821">厳密な一致が見つからない場合は、検索値未満である次の最大値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4821">If an exact match is not found, the next largest value that is less than lookup_value is returned.</span></span> </para>
          <para><span data-ttu-id="a4672-4822">並べ替え操作の順序を昇順で、範囲の最初の列内の値を置く必要があります。それ以外の場合、 <b>VLookup</b>メソッドでは、正しい値が得られない場合がします。</span><span class="sxs-lookup"><span data-stu-id="a4672-4822">The values in the first column of table_array must be placed in ascending sort order; otherwise, the <b>VLookup</b> method may not give the correct value.</span></span></para>
          <para><span data-ttu-id="a4672-4823">検索の型が<b>false</b>の場合は、 <b>VLookup</b>メソッドだけが検索完全に一致します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4823">If Range_lookup is <b>false</b>, the <b>VLookup</b> method will only find an exact match.</span></span> <span data-ttu-id="a4672-4824">この例では、左端の列の値をソートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4824">In this case, the values in the first column of table_array do not need to be sorted.</span></span> <span data-ttu-id="a4672-4825">検査値に一致する範囲の最初の列で 2 つ以上の値がある場合は、最初に見つかった値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4825">If there are two or more values in the first column of table_array that match the lookup_value, the first value found is used.</span></span> <span data-ttu-id="a4672-4826">厳密な一致が見つからない場合、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4826">If an exact match is not found, an error is generated.</span></span></para>
          <para><span data-ttu-id="a4672-4827">左端の列にあるテキストを検索する場合は、範囲の最初の列内のデータの先頭のスペース、末尾のスペース、一貫性のない直線の使用でないことを確認 (' または") と波 (' または") 引用符、または印刷されない文字。</span><span class="sxs-lookup"><span data-stu-id="a4672-4827">When searching text values in the first column of table_array, ensure that the data in the first column of table_array does not have leading spaces, trailing spaces, inconsistent use of straight ( ' or " ) and curly ( ‘ or “) quotation marks, or nonprinting characters.</span></span> <span data-ttu-id="a4672-4828">これらの場合では、 <b>VLookup</b>メソッドは、誤った値や予期しない値を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4828">In these cases, the <b>VLookup</b> method may give an incorrect or unexpected value.</span></span> <span data-ttu-id="a4672-4829">クリーニングまたは値をトリミングする方法の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" />と<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" />の方法です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4829">For information about how to clean or trim values, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" /> methods.</span></span> <span data-ttu-id="a4672-4830">数値や日付の値を検索する場合は、左端の列のデータがテキスト値として保存されていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4830">When searching number or date values, ensure that the data in the first column of table_array is not stored as text values.</span></span> <span data-ttu-id="a4672-4831">この例では、 <b>VLookup</b>メソッドは、誤った値や予期しない値を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4831">In this case, the <b>VLookup</b> method may give an incorrect or unexpected value.</span></span> </para>
          <para><span data-ttu-id="a4672-4832">検索の型が<b>false の場合</b>検索値が文字列、ワイルドカード、疑問符 () (?) とアスタリスク (\*)、半角を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4832">If range_lookup is <b>false</b> and lookup_value is text, then you can use the wildcard characters, question mark (?) and asterisk (\*), in lookup_value.</span></span> <span data-ttu-id="a4672-4833">一致する任意の 1 文字を疑問符 (?)アスタリスクは任意の文字の並びと一致します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4833">A question mark matches any single character; an asterisk matches any sequence of characters.</span></span> <span data-ttu-id="a4672-4834">疑問符やアスタリスクを検索する場合は、文字の前にティルダ (~) を入力します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4834">If you want to find an actual question mark or asterisk, type a tilde (~) preceding the character.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WebService">
      <MemberSignature Language="C#" Value="public object WebService (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object WebService([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WebService(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WebService (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ WebService(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16980)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4835">HTTP GET 要求の宛先の Web サービスの URL。</span><span class="sxs-lookup"><span data-stu-id="a4672-4835">The URL of the web service to make the HTTP GET request to.</span></span></param>
        <summary><span data-ttu-id="a4672-4836">HTTP GET 要求を使用して Web サービスを非同期で呼び出し、応答を返す基本の関数。</span><span class="sxs-lookup"><span data-stu-id="a4672-4836">Underlying function that calls the web service asynchronously, using an HTTP GET request, and returns the response.</span></span></summary>
        <returns><span data-ttu-id="a4672-4837"><b>VARIANT</b></span><span class="sxs-lookup"><span data-stu-id="a4672-4837"><b>VARIANT</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public double Weekday (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weekday([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weekday(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16454)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1636">シリアル値: 検索する日付のシリアル値を指定します。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。たとえば、2008 年 5 月 23 日を入力する場合は、DATE (2008,5,23) を使用します。日付を文字列として入力した場合、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1636">Serial_number - a sequential number that represents the date of the day you are trying to find. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4842">種類: 戻り値の種類を数値で指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4842">Return_type - a number that determines the type of return value.</span></span></param>
        <summary><span data-ttu-id="a4672-p1637">日付を表すシリアル値から、その日付に対応する曜日を返します。既定では、戻り値は 1 (日曜) から 7 (土曜) までの範囲の整数となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1637">Returns the day of the week corresponding to a date. The day is given as an integer, ranging from 1 (Sunday) to 7 (Saturday), by default.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="a4672-4845"><list type="table">
            <item>
              <term>1 または省略します。</term>
              <description>番号は 1 (日曜日) から 7 (土曜日) です。Microsoft Excel の以前のバージョンと同様に動作します</description>
            </item>。
            <item> 
              <term>2</term>
              <description>数値 1 (月曜日) から 7 (日曜日) です</description>
            </item>。
            <item> 
              <term>3</term>
              <description>0 (月曜日) から 6 (日曜日) までの番号です</description>
            </item>。
            <item> 
              <term>11</term>
              <description>数値 1 (月曜日) から 7 (日曜日) です</description>
            </item>。
            <item> 
              <term>12</term>
              <description>数値 1 (火曜日) から 7 (月曜日)</description> 
            </item>
            <item> 
              <term>13</term>
              <description>数値 1 (水曜日) から 7 (火曜日)</description> 
            </item>
            <item> 
              <term>14</term>
              <description>数値 1 (木曜日) から 7 (水曜日)</description> 
            </item>
            <item> 
              <term>15</term>
              <description>数値 1 (金曜日) から 7 (木曜日)</description> 
            </item>
            <item> 
              <term>16</term>
              <description>数値 1 (土曜日) から 7 (金曜日)</description> 
            </item>
            <item> 
              <term>17</term>
              <description>番号は 1 (日曜日) から 7 (土曜)</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4845"><list type="table">
            <item>
              <term>1 or omitted</term>
              <description>Numbers 1 (Sunday) through 7 (Saturday). Behaves like previous versions of Microsoft Excel.</description>
            </item>
            <item>
              <term>2</term>
              <description>Numbers 1 (Monday) through 7 (Sunday).</description>
            </item>
            <item>
              <term>3</term>
              <description>Numbers 0 (Monday) through 6 (Sunday).</description>
            </item>
            <item>
              <term>11</term>
              <description>Numbers 1 (Monday) through 7 (Sunday).</description>
            </item>
            <item>
              <term>12</term>
              <description>Numbers 1 (Tuesday) through 7 (Monday)</description>
            </item>
            <item>
              <term>13</term>
              <description>Numbers 1 (Wednesday) through 7 (Tuesday)</description>
            </item>
            <item>
              <term>14</term>
              <description>Numbers 1 (Thursday) through 7 (Wednesday)</description>
            </item>
            <item>
              <term>15</term>
              <description>Numbers 1 (Friday) through 7 (Thursday)</description>
            </item>
            <item>
              <term>16</term>
              <description>Numbers 1 (Saturday) through 7 (Friday)</description>
            </item>
            <item>
              <term>17</term>
              <description>Numbers 1 (Sunday) through 7 (Saturday)</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1638">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1638">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WeekNum">
      <MemberSignature Language="C#" Value="public double WeekNum (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WeekNum([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WeekNum(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekNum (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16849)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1639">シリアル値: 日付を指定します。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。たとえば、2008 年 5 月 23 日を入力する場合は、DATE (2008,5,23) を使用します。日付を文字列として入力した場合、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1639">Serial_num - a date within the week. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1640">週の基準: 週の始まりを何曜日とするかを数値で指定します。既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1640">Return_type - a number that determines on which day the week begins. The default is 1.</span></span></param>
        <summary><span data-ttu-id="a4672-4855">日付がその年の第何週目に当たるかを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4855">Returns a number that indicates where the week falls numerically within a year.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4856">
            <b>重要</b>: <b>WeekNum</b>関数は、年の最初の週に 1 月 1 日を含む週を考慮します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4856">
            <b>Important</b>: The <b>WeekNum</b> function considers the week containing January 1 to be the first week of the year.</span></span> <span data-ttu-id="a4672-4857">ただし、として定義する最初の週では、曜日の大部分 (4 つ以上) が新しい年のヨーロッパの標準があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4857">However, there is a European standard that defines the first week as the one with the majority of days (four or more) falling in the new year.</span></span> <span data-ttu-id="a4672-4858">つまり、数年であるは 3 日以内の 1 月の最初の週、 <b>WeekNum</b>関数には間違ってヨーロッパ方式の週番号が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4858">This means that for years in which there are three days or less in the first week of January, the <b>WeekNum</b> function returns week numbers that are incorrect according to the European standard.</span></span></para><span data-ttu-id="a4672-4859">
          <list type="table">
            <item>
              <term>1</term>
              <description>週の日曜日に開始します。平日は 1 から 7 まで番号が付けられます</description>
            </item>。
            <item> 
              <term>2</term>
              <description>の週は月曜日に開始されます。平日は 1 から 7 まで番号が付けられます</description>
            </item>。
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-4859">
          <list type="table">
            <item>
              <term>1</term>
              <description>Week begins on Sunday. Weekdays are numbered 1 through 7.</description>
            </item>
            <item>
              <term>2</term>
              <description>Week begins on Monday. Weekdays are numbered 1 through 7.</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1642">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1642">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull">
      <MemberSignature Language="C#" Value="public double Weibull (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4863">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4863">X - the value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4864">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4864">Alpha - a parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4865">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4865">Beta - a parameter to the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4866">関数形式: 計算に使用する関数の形式を、論理値で指定します。関数形式に TRUE を指定すると累積分布関数の値が計算され、FALSE を指定すると確率密度関数の値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4866">Cumulative - determines the form of the function.</span></span></param>
        <summary><span data-ttu-id="a4672-p1643">ワイブル分布の値を返します。この分布は、機械が故障するまでの平均時間のような信頼性の分析に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1643">Returns the Weibull distribution. Use this distribution in reliability analysis, such as calculating a device's mean time to failure.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4869">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4869">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-4870">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4870">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-4871">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4871">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-4872">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4872">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-4873">X、アルファ、ベータ版では、数値、<b>ワイブル</b>#VALUE を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-4873">If x, alpha, or beta is nonnumeric, <b>Weibull</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4874">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4874">error value.</span></span> <span data-ttu-id="a4672-4875">場合 x &lt; 0、<b>ワイブル</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4875">If x &lt; 0, <b>Weibull</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4876">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4876">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4877">場合アルファ ≤ 0 または β ≤ 0、<b>ワイブル</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-4877">If alpha ≤ 0 or if beta ≤ 0, <b>Weibull</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4878">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4878">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4879">ワイブル累積分布関数は、次の式で定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4879">The equation for the Weibull cumulative distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-4880">ワイブル累積分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4880">Figure 1: Equation for the Weibull cumulative distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4881">ワイブル確率密度関数は、次の式で定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4881">The equation for the Weibull probability density function is:</span></span></para>
          <para><span data-ttu-id="a4672-4882">ワイブル確率密度の図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4882">Figure 2: Equation for the Weibull probability density</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4883">Α = 1、<b>ワイブル</b>指数分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4883">When alpha = 1, <b>Weibull</b> returns the exponential distribution with:</span></span></para>
          <para><span data-ttu-id="a4672-4884">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4884">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull_Dist">
      <MemberSignature Language="C#" Value="public double Weibull_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16903)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4885">x: 関数に代入する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4885">X - The value at which to evaluate the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4886">α: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4886">Alpha - A parameter to the distribution.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4887">β: 分布のパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4887">Beta - A parameter to the distribution.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4888">関数形式: 計算に使用する関数の形式を、論理値で指定します。関数形式に TRUE を指定すると累積分布関数の値が計算され、FALSE を指定すると確率密度関数の値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4888">Cumulative - Determines the form of the function.</span></span></param>
        <summary><span data-ttu-id="a4672-p1647">ワイブル分布の値を返します。この分布は、機械が故障するまでの平均時間のような信頼性の分析に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1647">Returns the Weibull distribution. Use this distribution in reliability analysis, such as calculating the mean time to failure for a device.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4891">X、アルファ、ベータ版は、数値ではない、 <b>Weibull_Dist</b>が、#VALUE を返すのか!</span><span class="sxs-lookup"><span data-stu-id="a4672-4891">If x, alpha, or beta is non-numeric, <b>Weibull_Dist</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4892">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4892">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4893">場合 x &lt; 0 <b>Weibull_Dist</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4893">If x &lt; 0, <b>Weibull_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4894">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4894">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4895">場合アルファ ≤ 0 または β ≤ 0、 <b>Weibull_Dist</b>が #NUM を返します!。</span><span class="sxs-lookup"><span data-stu-id="a4672-4895">If alpha ≤ 0 or if beta ≤ 0, <b>Weibull_Dist</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4896">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4896">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4897">ワイブル累積分布関数は、次の式で定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4897">The equation for the Weibull cumulative distribution function is:</span></span> </para>
          <para><span data-ttu-id="a4672-4898">ワイブル累積分布の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-4898">Figure 1: Equation for the Weibull cumulative distribution</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4899">ワイブル確率密度関数は、次の式で定義されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4899">The equation for the Weibull probability density function is:</span></span></para>
          <para><span data-ttu-id="a4672-4900">ワイブル確率密度の図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4900">Figure 2: Equation for the Weibull probability density</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4901">Α = 1、 <b>Weibull_Dist</b>は、指数分布を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4901">When alpha = 1, <b>Weibull_Dist</b> returns the exponential distribution with:</span></span></para>
          <para><span data-ttu-id="a4672-4902">図 3: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4902">Figure 3: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay">
      <MemberSignature Language="C#" Value="public double WorkDay (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4903">開始日: 起算日を表す日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4903">Start_date - a date that represents the start date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1651">日数: 開始日から起算して、週末や祭日を除く週日の日数を指定します。日数に正の数を指定すると、起算日より後の日付となり、負の数を指定すると、起算日より前の日付となります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1651">Days - the number of nonweekend and nonholiday days before or after start_date. A positive value for days yields a future date; a negative value yields a past date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1652">祭日: 国民の祝日や夏期休暇など、稼動日数の計算から除外する日付のリストを指定します。この引数は省略することができます。日付のリストには、日付を表すシリアル値が入力されているセル範囲、または配列定数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1652">Holidays - an optional list of one or more dates to exclude from the working calendar, such as state and federal holidays and floating holidays. The list can be either a range of cells that contain the dates or an array constant of the serial numbers that represent the dates.</span></span></param>
        <summary><span data-ttu-id="a4672-p1653">開始日から起算して、指定された稼動日数だけ前または後の日付に対応する値を返します。稼動日とは、土曜、日曜、および指定された祭日を除く日のことです。このメソッドを使用すると、納品書の支払日、発送日、作業日数などを計算するときに、週末や祭日を除くことができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1653">Returns a number that represents a date that is the indicated number of working days before or after a date (the starting date). Working days exclude weekends and any dates identified as holidays. Use WORKDAY to exclude weekends or holidays when you calculate invoice due dates, expected delivery times, or the number of days of work performed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4911">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-4911">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-4912">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4912">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-4913">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4913">Problems can occur if dates are entered as text .</span></span></para>
          <para><span data-ttu-id="a4672-p1655">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1655">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-4917">いずれかの引数が無効な日付でない場合は、<b>就業時間内</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4917">If any argument is not a valid date, <b>WorkDay</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4918">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4918">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4919">開始日と日数が無効な日付である場合、<b>就業時間内</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4919">If start_date plus days yields an invalid date, <b>WorkDay</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4920">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4920">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4921">日数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4921">If days is not an integer, it is truncated.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay_Intl">
      <MemberSignature Language="C#" Value="public double WorkDay_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16905)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4922">開始日: 起算日を指定します。小数点以下は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4922">Start_date - The start date, truncated to integer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1658">日数: 開始日から起算した稼働日の日数を指定します。正の数を指定すると、起算日より後の日付を返し、負の数を指定すると、起算日より前の日付を返します。0 (ゼロ) を指定すると、起算日が返されます。整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1658">Days - The number of workdays before or after the start_date. A positive value yields a future date; a negative value yields a past date; a 0 (zero) value yields the start_date. Day-offset is truncated to an integer.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4926">週末に-は、週末の日付を稼働日とは見なされません、週の曜日を示します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4926">Weekend - Indicates the days of the week that are weekend days and are not considered working days.</span></span> <span data-ttu-id="a4672-4927">週末は、週末の番号または週末のタイミングを指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4927">Weekend is a weekend number or string that specifies when weekends occur.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-p1660">祭日: 稼動日数の計算から除外する日付のセットです。このパラメーターは、日付が入力されているセル範囲、または日付を表すシリアル値の配列定数です。祭日の日付またはシリアル値は任意の順序で指定できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1660">Holidays - An optional set of one or more dates that are to be excluded from the working day calendar. Holidays is a range of cells that contain the dates, or an array constant of the serial values that represent those dates. The ordering of dates or serial values in holidays can be arbitrary.</span></span></param>
        <summary><span data-ttu-id="a4672-p1661">指定された稼働日の日数だけ前または後の日付に対応するシリアル値を返します。ユーザー設定の週末パラメーターを指定できます。週末パラメーターは、週末の曜日と日数を示します。週末および祝日として指定されている日は、稼働日と見なされません。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1661">Returns the serial number of the date before or after a specified number of workdays with custom weekend parameters. Weekend parameters indicate which and how many days are weekend days. Weekend days and any days that are specified as holidays are not considered as workdays.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4934">開始日が現在の日付の基準値の範囲外にある場合は、 <b>WorkDay_Intl</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4934">If start_date is out of range for the current date base value, <b>WorkDay_Intl</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4935">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4935">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4936">休日の日付が現在の日付の基準値の範囲外にある場合は、 <b>WorkDay_Intl</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4936">If any date in holidays is out of range for the current date base value, <b>WorkDay_Intl</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4937">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4937">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4938">開始日と 1 日のオフセット値が無効な日付である場合、 <b>WorkDay_Intl</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4938">If start_date plus day-offset yields an invalid date, <b>WorkDay_Intl</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4939">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4939">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4940">週末文字列の長さが無効なまたは無効な文字が含まれていますは、 <b>WorkDay_Intl</b>は、#VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4940">If a weekend string is of invalid length or contains invalid characters, <b>WorkDay_Intl</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4941">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4941">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xirr">
      <MemberSignature Language="C#" Value="public double Xirr (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xirr([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xirr(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xirr (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1666">範囲: 収支明細表の日付に対応する一連のキャッシュ フローを指定します。最初の支払いは投資の最初に発生する原価や支払いに対応し、省略することができます。最初のキャッシュ フローが原価や支払いの場合、負の値を指定する必要があります。それ以降の支払いは、1 年の日数を 365 日として割り引かれます。値には、正の値と負の値が少なくとも 1 つずつ含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1666">Values - a series of cash flows that corresponds to a schedule of payments in dates. The first payment is optional and corresponds to a cost or payment that occurs at the beginning of the investment. If the first value is a cost or payment, it must be a negative value. All succeeding payments are discounted based on a 365-day year. The series of values must contain at least one positive and one negative value.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1667">日付: キャッシュ フローの支払いに対応する支払日を指定します。最初の支払日は、収支明細表の先頭に対応します。残りの支払日には、すべてこの日付より後に発生する日付を指定する必要があります。ただし、残りの支払日の指定順序に制限はありません。日付は、DATE 関数を使って入力するか、他の数式または他の関数の結果を指定します。たとえば、2008 年 5 月 23 日を入力する場合は、DATE (2008,5,23) を使用します。日付を文字列として入力した場合、エラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1667">Dates - a schedule of payment dates that corresponds to the cash flow payments. The first payment date indicates the beginning of the schedule of payments. All other dates must be later than this date, but they may occur in any order. Dates should be entered by using the DATE function, or as results of other formulas or functions. For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4953">推測 - と思われる数値は、 <b>Xirr</b>関数の計算結果に近いです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4953">Guess - a number that you guess is close to the result of <b>Xirr</b>.</span></span></param>
        <summary><span data-ttu-id="a4672-p1668">定期的でないキャッシュ フローに対する内部利益率を返します。一連の定期的なキャッシュ フローに対する内部利益率を計算する場合は、IRR 関数を使います。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1668">Returns the internal rate of return for a schedule of cash flows that is not necessarily periodic. To calculate the internal rate of return for a series of periodic cash flows, use the IRR function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-p1669">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1669">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1670">日付に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1670">Numbers in dates are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-4960">
            <b>Xirr は、少なくとも 1 つの正のキャッシュ フローと負のキャッシュ フローを 1 つです。</b>それ以外の場合、 <b>xirr 関数</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4960">
            <b>Xirr</b> expects at least one positive cash flow and one negative cash flow; otherwise, <b>Xirr</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4961">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4961">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4962">日付が有効な日付でない場合、#VALUE を<b>Xirr</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4962">If any number in dates is not a valid date, <b>Xirr</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-4963">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4963">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4964">開始日より前の日付である場合、#NUM を<b>Xirr</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4964">If any number in dates precedes the starting date, <b>Xirr</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4965">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4965">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4966">値と日付値の個数が異なる場合、#NUM を<b>Xirr</b>が返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4966">If values and dates contain a different number of values, <b>Xirr</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-4967">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4967">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-4968">ほとんどの場合、 <b>xirr 関数</b>の計算の推定値を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4968">In most cases you do not need to provide guess for the <b>Xirr</b> calculation.</span></span> <span data-ttu-id="a4672-4969">省略した場合、推定値は 0.1 (10%) と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4969">If omitted, guess is assumed to be 0.1 (10 percent).</span></span> </para>
          <para><span data-ttu-id="a4672-4970">
            <b>Xirr 関数</b>と密接な関係<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />、正味の現在値の関数です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4970">
            <b>Xirr</b> is closely related to <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />, the net present value function.</span></span> <span data-ttu-id="a4672-4971"><b>Xirr 関数</b>で計算された利益率は、xnpv 利率 = 0 です。</span><span class="sxs-lookup"><span data-stu-id="a4672-4971">The rate of return calculated by <b>Xirr</b> is the interest rate corresponding to XNPV = 0.</span></span> </para>
          <para><span data-ttu-id="a4672-4972"><b>Xirr メソッド</b>の計算に反復計算の手法が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4972">Excel uses an iterative technique for calculating <b>Xirr</b>.</span></span> <span data-ttu-id="a4672-4973">変化率 (推定値で始まる) を使用して、 <b>Xirr</b>が循環の計算結果が 0.000001% になるまでです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4973">Using a changing rate (starting with guess), <b>Xirr</b> cycles through the calculation until the result is accurate within 0.000001 percent.</span></span> <span data-ttu-id="a4672-4974"><b>Xirr メソッド</b>は、後動作の結果を見つけられない場合は 100 とすると、#NUM!</span><span class="sxs-lookup"><span data-stu-id="a4672-4974">If <b>Xirr</b> can't find a result that works after 100 tries, the #NUM!</span></span> <span data-ttu-id="a4672-4975">エラー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4975">error value is returned.</span></span> <span data-ttu-id="a4672-4976">までの速度が変更されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4976">The rate is changed until:</span></span> </para>
          <para><span data-ttu-id="a4672-4977">図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-4977">Figure 1: Equation</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-4978">各項目の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4978">where:</span></span></para>
          <para><span data-ttu-id="a4672-4979">di = i 回目または最後の支払日。</span><span class="sxs-lookup"><span data-stu-id="a4672-4979">di = the ith, or last, payment date.</span></span></para>
          <para><span data-ttu-id="a4672-4980">d1 = 最初の支払日。</span><span class="sxs-lookup"><span data-stu-id="a4672-4980">d1 = the 0th payment date.</span></span></para>
          <para><span data-ttu-id="a4672-4981">Pi = i 回目または最後の支払。</span><span class="sxs-lookup"><span data-stu-id="a4672-4981">Pi = the ith, or last, payment.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xnpv">
      <MemberSignature Language="C#" Value="public double Xnpv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xnpv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xnpv (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Xnpv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1678">収支明細表の日付に対応する一連のキャッシュ フローを指定します。最初の支払いは投資の最初に発生する原価や支払いに対応し、省略することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1678">A series of cash flows that corresponds to a schedule of payments in dates. The first payment is optional and corresponds to a cost or payment that occurs at the beginning of the investment.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1679">日付 キャッシュ フローに対応する一連の支払日を指定します。最初の支払日は、収支明細表の先頭に対応します。残りの支払日には、この日付より後の日付を指定する必要があります。ただし、指定順序は自由です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1679">A schedule of payment dates that corresponds to the cash flow payments. The first payment date indicates the beginning of the schedule of payments. All other dates must be later than this date, but they may occur in any order.</span></span></param>
        <summary><span data-ttu-id="a4672-4987">必ずしも定期的でないキャッシュ フローのスケジュールの正味現在価値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-4987">Returns the net present value for a schedule of cash flows that is not necessarily periodic.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-4988">
            <b>重要</b>: <b>Xnpv</b>メソッドが (= XNPV (速度、値、日付))、対応する XNPV 関数に必要な引数のレートに対応するパラメーターを提供していません。</span><span class="sxs-lookup"><span data-stu-id="a4672-4988">
            <b>Important</b>: The <b>Xnpv</b> method does not provide a parameter that corresponds to the rate argument required by the corresponding XNPV function (=XNPV(rate, values, dates)).</span></span> <span data-ttu-id="a4672-4989">使用して、XNPV 関数を呼び出す、 <b>Xpnv</b>メソッドを使用する代わりに、VBA コードでは、この制限を回避するのには、<see cref="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4989">To work around this limitation in VBA code, instead of using the <b>Xpnv</b> method, call the XNPV function by using the <see cref="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-4990">定期的な一連のキャッシュ フローに対する正味現在価値を計算するために使用して、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-4990">To calculate the net present value for a series of cash flows that is periodic, use the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public bool Xor (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Xor([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16953)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-4991">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4991">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-4992">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4992">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-4993">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4993">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-4994">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4994">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-4995">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4995">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-4996">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4996">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg7"><span data-ttu-id="a4672-4997">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4997">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg8"><span data-ttu-id="a4672-4998">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4998">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg9"><span data-ttu-id="a4672-4999">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-4999">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg10"><span data-ttu-id="a4672-5000">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5000">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg11"><span data-ttu-id="a4672-5001">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5001">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg12"><span data-ttu-id="a4672-5002">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5002">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg13"><span data-ttu-id="a4672-5003">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5003">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg14"><span data-ttu-id="a4672-5004">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5004">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg15"><span data-ttu-id="a4672-5005">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5005">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg16"><span data-ttu-id="a4672-5006">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5006">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg17"><span data-ttu-id="a4672-5007">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5007">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg18"><span data-ttu-id="a4672-5008">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5008">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg19"><span data-ttu-id="a4672-5009">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5009">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg20"><span data-ttu-id="a4672-5010">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5010">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg21"><span data-ttu-id="a4672-5011">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5011">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg22"><span data-ttu-id="a4672-5012">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5012">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg23"><span data-ttu-id="a4672-5013">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5013">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg24"><span data-ttu-id="a4672-5014">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5014">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg25"><span data-ttu-id="a4672-5015">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5015">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg26"><span data-ttu-id="a4672-5016">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5016">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg27"><span data-ttu-id="a4672-5017">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5017">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg28"><span data-ttu-id="a4672-5018">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5018">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg29"><span data-ttu-id="a4672-5019">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5019">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <param name="Arg30"><span data-ttu-id="a4672-5020">1 から 254 までの条件をテストする場合は、 <b>TRUE</b>または<b>FALSE</b>のいずれかにすることができ、論理値、配列、または参照することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5020">1 to 254 conditions you want to test that can be either <b>TRUE</b> or <b>FALSE</b> and can be logical values, arrays, or references.</span></span></param>
        <summary><span data-ttu-id="a4672-5021">すべての引数の論理排他 OR を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5021">Returns a logical exclusive OR of all arguments.</span></span></summary>
        <returns><span data-ttu-id="a4672-5022"><b>BOOL</b></span><span class="sxs-lookup"><span data-stu-id="a4672-5022"><b>BOOL</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YearFrac">
      <MemberSignature Language="C#" Value="public double YearFrac (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YearFrac([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YearFrac(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YearFrac (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16835)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-5023">開始日: 起算日を表す日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5023">Start_date - a date that represents the start date.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-5024">終了日: 対象期間の最終日を表す日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5024">End_date - a date that represents the end date.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-5025">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5025">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-p1681">2 つの日付 (開始日と終了日) の間の期間が、1 年間に対して占める割合を返します。このワークシート関数を使用すると、特定の期間に割り当てられる年利や年債の割合を求めることができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1681">Calculates the fraction of the year represented by the number of whole days between two dates (the start_date and the end_date). Use the YEARFRAC worksheet function to identify the proportion of a whole year's benefits or obligations to assign to a specific term.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-5028">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-5028">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-5029">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5029">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-5030">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5030">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-5031">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-5031">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1683">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1683">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1684">引数に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1684">All arguments are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-5036"><b>開始日、終了日に有効な日付を #value!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-5036">If start_date or end_date are not valid dates, <b>YearFrac</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-5037">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5037">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5038">場合に&lt;0 または基準&gt;4、 <b>YearFrac</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-5038">If basis &lt; 0 or if basis &gt; 4, <b>YearFrac</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5039">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5039">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDisc">
      <MemberSignature Language="C#" Value="public double YieldDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1687">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1687">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1688">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1688">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-5044">現在価値: 額面 $ 100 に対する証券の価値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5044">Pr - the security's price per $100 face value.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-5045">償還価額: 額面 $ 100 に対する証券の償還額を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5045">Redemption - the security's redemption value per $100 face value.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-5046">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5046">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-5047">割引債の年利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5047">Returns the annual yield for a discounted security.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-5048">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-5048">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-5049">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5049">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-5050">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5050">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-5051">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-5051">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1690">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1690">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1691">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1691">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1692">受渡日、満期日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1692">Settlement, maturity, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-5060"><b>受領または成熟度が有効な日付でない場合、#VALUE を!</b></span><span class="sxs-lookup"><span data-stu-id="a4672-5060">If settlement or maturity is not a valid date, <b>YieldDisc</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-5061">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5061">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5062">場合 ≤ 0 または償還 ≤ 0 で<b>ある場合</b>#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5062">If pr ≤ 0 or if redemption ≤ 0, <b>YieldDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5063">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5063">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5064">場合に&lt;0 または基準&gt;4 で<b>ある場合</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-5064">If basis &lt; 0 or if basis &gt; 4, <b>YieldDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5065">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5065">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5066">場合は受領成熟度で<b>ある場合</b>は、#NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5066">If settlement ≥ maturity, <b>YieldDisc</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5067">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5067">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldMat">
      <MemberSignature Language="C#" Value="public double YieldMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16816)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-p1697">受渡日: 証券の受渡日を指定します。受渡日とは、発行日以降に証券が買い手に引き渡される日付です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1697">Settlement - the security's settlement date. The security settlement date is the date after the issue date when the security is traded to the buyer.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-p1698">満期日: 証券の満期日を指定します。満期日とは、証券の支払期日です。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1698">Maturity - the security's maturity date. The maturity date is the date when the security expires.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-5072">発行日: 証券の発行日を指定します。日付にはシリアル値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5072">Issue - the security's issue date, expressed as a serial date number.</span></span></param>
        <param name="Arg4"><span data-ttu-id="a4672-5073">利率: 発行日の証券の利率を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5073">Rate - the security's interest rate at date of issue.</span></span></param>
        <param name="Arg5"><span data-ttu-id="a4672-5074">現在価値: 額面 $ 100 に対する証券の価値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5074">Pr - the security's price per $100 face value.</span></span></param>
        <param name="Arg6"><span data-ttu-id="a4672-5075">基準: 計算に使用する基準日数を示す数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5075">Basis - the type of day count basis to use.</span></span></param>
        <summary><span data-ttu-id="a4672-5076">満期日に利息が支払われる証券の利回りを返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5076">Returns the annual yield of a security that pays interest at maturity.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-5077">
            <b>重要</b>: DATE 関数を使用するか、他の数式または関数の結果として、日付を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4672-5077">
            <b>Important</b>: Dates should be entered by using the DATE function, or as results of other formulas or functions.</span></span> <span data-ttu-id="a4672-5078">たとえば、2008 年 5 月 23 日の DATE(2008,5,23) を使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5078">For example, use DATE(2008,5,23) for the 23rd day of May, 2008.</span></span> <span data-ttu-id="a4672-5079">日付をテキストとして入力した場合、問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5079">Problems can occur if dates are entered as text.</span></span></para><span data-ttu-id="a4672-5080">
          <list type="table">
            <item>
              <term>0 または省略</term>
              <description>米国 (NASD) 30 日/360</description> 
            </item>
            <item> 
              <term></term>
              <description>1/実際の日数</description>
            </item>
            <item> 
              <term>2</term>
              <description>/360 日の実績</description>
            </item>
            <item> 
              <term>3</term>
              <description>/365 日の実績</description>
            </item>
            <item> 
              <term>4</term>
              <description>ヨーロッパの 30 日/360</description> 
            </item>
          </list>
          </span><span class="sxs-lookup"><span data-stu-id="a4672-5080">
          <list type="table">
            <item>
              <term>0 or omitted</term>
              <description>US (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Actual/actual</description>
            </item>
            <item>
              <term>2</term>
              <description>Actual/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Actual/365</description>
            </item>
            <item>
              <term>4</term>
              <description>European 30/360</description>
            </item>
          </list>
          </span></span><para><span data-ttu-id="a4672-p1700">Excel では、日付を連続したシリアル値として処理することで、日付の計算が行われています。既定では、1900 年 1 月 1 日がシリアル値 1 として保存されます。2008 年 1 月 1 日は 1900 年 1 月 1 日から 39,448 日後に当たるので、シリアル値は 39,448 になります。Macintosh 版 Excel では、標準として異なる日付システムが使用されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1700">Microsoft Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,448 days after January 1, 1900. Microsoft Excel for the Macintosh uses a different date system as its default. </span></span></para>
          <para><span data-ttu-id="a4672-p1701">受渡日とは、債券などの証券の売買代金を決済した日付です。満期日とは、証券の支払期日です。たとえば、2008 年 1 月 1 日に発行された 30 年債券を、発行日の 6 か月後に購入したとします。この債券は、発行日が 2008 年 1 月 1 日、受渡日が 2008 年 7 月 1 日になり、満期日は、発行日の 2008 年 1 月 1 日から 30 年後の 2038 年 1 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1701">The settlement date is the date a buyer purchases a coupon, such as a bond. The maturity date is the date when a coupon expires. For example, suppose a 30-year bond is issued on January 1, 2008, and is purchased by a buyer six months later. The issue date would be January 1, 2008, the settlement date would be July 1, 2008, and the maturity date would be January 1, 2038, which is 30 years after the January 1, 2008, issue date. </span></span></para>
          <para><span data-ttu-id="a4672-p1702">受渡日、満期日、発行日、基準に整数以外の値を指定すると、小数点以下が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1702">Settlement, maturity, issue, and basis are truncated to integers. </span></span></para>
          <para><span data-ttu-id="a4672-5089">受渡日、満期日、または問題が有効な日付でない場合、<b>受渡</b>が #VALUE を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5089">If settlement, maturity, or issue is not a valid date, <b>YieldMat</b> returns the #VALUE!</span></span> <span data-ttu-id="a4672-5090">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5090">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5091">場合レート&lt;0 または #NUM を返すならば ≤ 0 で<b>ある</b>かどうかです。</span><span class="sxs-lookup"><span data-stu-id="a4672-5091">If rate &lt; 0 or if pr ≤ 0, <b>YieldMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5092">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5092">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5093">場合に&lt;0 または基準&gt;4、<b>受渡</b>が #NUM を返す!</span><span class="sxs-lookup"><span data-stu-id="a4672-5093">If basis &lt; 0 or if basis &gt; 4, <b>YieldMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5094">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5094">error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5095">場合は受領成熟度、<b>受渡</b>が #NUM を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5095">If settlement ≥ maturity, <b>YieldMat</b> returns the #NUM!</span></span> <span data-ttu-id="a4672-5096">エラー値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5096">error value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Z_Test">
      <MemberSignature Language="C#" Value="public double Z_Test (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Z_Test([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Z_Test (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-5097">配列: 母集団平均の検定対象となるデータを含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5097">Array is the array or range of data against which to test the hypothesized population mean.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-5098">検定する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5098">The value to test.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1707">σ: 母集団全体に基づく標準偏差を指定します。省略すると、標本に基づく標準偏差が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1707">Sigma - The population (known) standard deviation. If omitted, the sample standard deviation is used.</span></span></param>
        <summary><span data-ttu-id="a4672-p1708">z 検定の片側確率の値を返します。Z_TEST メソッドは、仮説の母集団平均μ0 について、配列で指定されたデータの観測値平均 (観測された標本平均) よりも標本平均が大きくなる確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1708">Returns the one-tailed probability-value of a z-test. For a given hypothesized population mean, Z_TEST returns the probability that the sample mean would be greater than the average of observations in the data set (array) — that is, the observed sample mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-5103">配列が空の場合は、 <b>Z_Test</b>はエラー値 #n/a を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5103">If array is empty, <b>Z_Test</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5104">Σ が指定されている場合、 
            <b>Z_Test</b>は次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5104">
            <b>Z_Test</b> is calculated as follows when sigma is not omitted:</span></span> </para>
          <para><span data-ttu-id="a4672-5105">Σ が指定されている場合は Z_Test の図 1: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-5105">Figure 1: Equation for Z_Test  when sigma is not omitted</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-5106">σが省略されている場合は、次のような計算が行われます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5106">or when sigma is omitted:</span></span></para>
          <para><span data-ttu-id="a4672-5107">Σ が省略された場合は Z_Test の図 2: 数式</span><span class="sxs-lookup"><span data-stu-id="a4672-5107">Figure 2: Equation for Z_Test  when sigma is omitted</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-5108">ここで、x は標本平均 AVERAGE(配列)、s は標本に基づく標準偏差 STDEV_S(配列)、n は標本内の観測値の個数 COUNT(配列) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5108">where x is the sample mean AVERAGE(array); s is the sample standard deviation STDEV_S(array); and n is the number of observations in the sample COUNT(array).</span></span></para>
          <para><span data-ttu-id="a4672-5109">
            <b>Z_Test</b>では、標本の平均ある観測値 average (配列) より大きい場合、基になる母集団の平均が μ 0 を確率を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5109">
            <b>Z_Test</b> represents the probability that the sample mean would be greater than the observed value AVERAGE(array), when the underlying population mean is μ0.</span></span> <span data-ttu-id="a4672-5110">正規分布の対称性から場合 average (配列) &lt; μ 0、 <b>Z_Test</b>戻り値 0.5 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5110">From the symmetry of the Normal distribution, if AVERAGE(array) &lt; μ0, <b>Z_Test</b> will return a value greater than 0.5.</span></span></para>
          <para><span data-ttu-id="a4672-5111">標本の平均になるよりは、average (配列)、(両方向) に μ 0 から離れたとき、基になる母集団の平均 μ 0 では、両側の確率を計算するのには、次の数式を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5111">The following Excel formula can be used to calculate the two-tailed probability that the sample mean would be further from μ0 (in either direction) than AVERAGE(array), when the underlying population mean is μ0:</span></span></para>
          <para><span data-ttu-id="a4672-5112">= 2 \* MIN(Z_TEST(array,μ0,sigma)、1 - Z_TEST(array,μ0,sigma)) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5112">=2 \* MIN(Z_TEST(array,μ0,sigma), 1 - Z_TEST(array,μ0,sigma)).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public double ZTest (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ZTest([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ZTest(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="a4672-5113">配列: 母集団平均の検定対象となるデータを含む数値配列またはセル範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5113">Array is the array or range of data against which to test the hypothesized population mean.</span></span></param>
        <param name="Arg2"><span data-ttu-id="a4672-5114">検定する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5114">The value to test.</span></span></param>
        <param name="Arg3"><span data-ttu-id="a4672-p1711">σ: 母集団全体に基づく標準偏差を指定します。省略すると、標本に基づく標準偏差が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1711">Sigma - the population (known) standard deviation. If omitted, the sample standard deviation is used.</span></span></param>
        <summary><span data-ttu-id="a4672-p1712">z 検定の片側確率の値を返します。ZTest メソッドは、仮説の母集団平均μ0 について、配列で指定されたデータの観測値平均 (観測された標本平均) よりも標本平均が大きくなる確率を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-p1712">Returns the one-tailed probability-value of a z-test. For a given hypothesized population mean, ZTEST returns the probability that the sample mean would be greater than the average of observations in the data set (array) — that is, the observed sample mean.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a4672-5119">
            <b>重要</b>: この関数は 1 つを交換済みか、正確さの向上を提供することがあり、名前がそれ以上の複数の新しい関数は、使用状況を反映します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5119">
            <b>Important</b>: This function has been replaced with one or more new functions that may provide improved accuracy and whose names better reflect their usage.</span></span> <span data-ttu-id="a4672-5120">この関数は、Excel の以前のバージョンとの互換性のために利用できます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5120">This function is still available for compatibility with earlier versions of Excel.</span></span> <span data-ttu-id="a4672-5121">ただし、下位互換性を維持する必要がない場合する必要があります、新しい関数を使用して、正確にその機能を説明するためです。</span><span class="sxs-lookup"><span data-stu-id="a4672-5121">However, if backward compatibility is not required, you should consider using the new functions from now on, because they more accurately describe their functionality.</span></span> <span data-ttu-id="a4672-5122">新しい関数の詳細についてを参照してください、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-5122">For more information about the new function, see the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a4672-5123">配列が空の場合、 <b>ztest 関数</b>は、#N/A エラー値を返します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5123">If array is empty, <b>ZTest</b> returns the #N/A error value.</span></span> </para>
          <para><span data-ttu-id="a4672-5124">
            <b>Ztest 関数</b>は、シグマが指定されている場合に、次のように計算されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5124">
            <b>ZTest</b> is calculated as follows when sigma is not omitted:</span></span> </para>
          <para><span data-ttu-id="a4672-5125">Σ が指定されている場合、ztest 関数の数式を図 1:</span><span class="sxs-lookup"><span data-stu-id="a4672-5125">Figure 1: Equation for ZTest  when sigma is not omitted</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-5126">σが省略されている場合は、次のような計算が行われます。</span><span class="sxs-lookup"><span data-stu-id="a4672-5126">or when sigma is omitted:</span></span></para>
          <para><span data-ttu-id="a4672-5127">Σ が省略された場合、ztest 関数の数式を図 2:</span><span class="sxs-lookup"><span data-stu-id="a4672-5127">Figure 2: Equation for ZTest  when sigma is omitted</span></span></para>
          <para> </para>
          <para> </para>
          <para><span data-ttu-id="a4672-5128">ここで、x は標本平均 AVERAGE(配列)、s は標本に基づく標準偏差 STDEV(配列)、n は標本内の観測値の個数 COUNT(配列) です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5128">where x is the sample mean AVERAGE(array); s is the sample standard deviation STDEV(array); and n is the number of observations in the sample COUNT(array).</span></span></para>
          <para><span data-ttu-id="a4672-5129">
            <b>Ztest 関数</b>は、標本の平均ある観測値 average (配列) より大きい場合、基になる母集団の平均が μ 0 を確率を表します。</span><span class="sxs-lookup"><span data-stu-id="a4672-5129">
            <b>ZTest</b> represents the probability that the sample mean would be greater than the observed value AVERAGE(array), when the underlying population mean is μ0.</span></span> <span data-ttu-id="a4672-5130">正規分布の対称性から場合 average (配列) &lt; μ 0、ztest 関数は戻り値 0.5 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="a4672-5130">From the symmetry of the Normal distribution, if AVERAGE(array) &lt; μ0, ZTEST will return a value greater than 0.5.</span></span></para>
          <para><span data-ttu-id="a4672-5131">標本の平均になるよりは、average (配列)、(両方向) に μ 0 から離れたとき、基になる母集団の平均 μ 0 では、両側の確率を計算するのには次の数式を使用することができます: = 2 \* MIN(ZTEST(array,μ0,sigma)、1 - ZTEST (配列, μ 0、シグマ))。</span><span class="sxs-lookup"><span data-stu-id="a4672-5131">The following Excel formula can be used to calculate the two-tailed probability that the sample mean would be further from μ0 (in either direction) than AVERAGE(array), when the underlying population mean is μ0:=2 \* MIN(ZTEST(array,μ0,sigma), 1 - ZTEST(array,μ0,sigma)).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>