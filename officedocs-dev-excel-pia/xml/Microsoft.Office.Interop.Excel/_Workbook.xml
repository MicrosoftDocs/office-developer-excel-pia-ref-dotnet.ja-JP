<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012678" /></Metadata><TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2fbd-101">これは、対応する COM オブジェクトとの相互運用性を得る目的でマネージ コードで必要とされる COM コクラスのプライマリ インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="e2fbd-102">このプライマリ インターフェイスは、使用するメソッドが COM オブジェクトのイベントと同じ名前を共有している場合にのみ使用します。この場合は、このインターフェイスにキャストしてメソッドを呼び出し、最新のイベント インターフェイスにキャストしてイベントに接続します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="e2fbd-103">それ以外の場合は、COM コクラスから派生した .NET インターフェイスを使用して、COM オブジェクトのメソッド、プロパティ、およびイベントにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="e2fbd-104">COM オブジェクトの詳細については、以下を参照してください <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-105">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="e2fbd-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="e2fbd-106">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-106">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary><span data-ttu-id="e2fbd-107">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-108">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-108">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="e2fbd-109">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><span data-ttu-id="e2fbd-110">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-111">すべての変更を反映する日時を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-111">Specifies when all the changes are accepted.</span></span></param>
        <param name="Who"><span data-ttu-id="e2fbd-112">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-113">すべての変更を反映できるユーザーを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-113">Specifies by whom all the changes are accepted.</span></span></param>
        <param name="Where"><span data-ttu-id="e2fbd-114">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-115">すべての変更を反映する対象を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-115">Specifies where all the changes are accepted.</span></span></param>
        <summary><span data-ttu-id="e2fbd-116">指定された共有ブックのすべての変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-116">Accepts all changes in the specified shared workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-117"><b>True</b> の 場合は、ワークシートの数式でラベルを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-117"><b>True</b> if labels can be used in worksheet formulas.</span></span> <span data-ttu-id="e2fbd-118">既定値は、 <b>false を指定</b> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-118">The default value is <b>False</b>.</span></span> <span data-ttu-id="e2fbd-119">読み取り/書き込み <b>ブール値</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-119">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-120">特定のワークシート関数が最新の精度アルゴリズムを使用して結果を計算するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span></span></summary>
        <value><span data-ttu-id="e2fbd-121">特定のワークシート関数に使用するアルゴリズムのバージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-121">Specifies which version of algorithms to use for certain worksheet functions.</span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-122">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="e2fbd-122">Read/write</span></span></para>
          <para><span data-ttu-id="e2fbd-123">既定では、Excel の Microsoft Office Excel 2007 以前のバージョンの一部のワークシート関数は、精度を向上する新しいアルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-123">By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy.</span></span> <span data-ttu-id="e2fbd-124">ただし、新しいアルゴリズムによって、Microsoft Office Excel 2007 以前のバージョンの Excel でのパフォーマンスに対するパフォーマンスが低下する場合があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-124">However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel.</span></span> <span data-ttu-id="e2fbd-125">これらのワークシート関数で古いアルゴリズムを使用してパフォーマンスを向上させる場合は、プロパティを <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> 1 に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-125">To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1.</span></span> <span data-ttu-id="e2fbd-126">次の表に、プロパティに使用できる設定を示 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-126">The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e2fbd-127">0</span><span class="sxs-lookup"><span data-stu-id="e2fbd-127">0</span></span></term>
              <description><span data-ttu-id="e2fbd-128">最も正確な最新のアルゴリズムを使用します (既定値)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-128">Use the latest, most accurate algorithms (default)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-129">1 </span><span class="sxs-lookup"><span data-stu-id="e2fbd-129">1</span></span></term>
              <description><span data-ttu-id="e2fbd-130">以前Microsoft Office Excel 2007アルゴリズムを使用する</span><span class="sxs-lookup"><span data-stu-id="e2fbd-130">Use Microsoft Office Excel 2007 or earlier version algorithms</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-131">2</span><span class="sxs-lookup"><span data-stu-id="e2fbd-131">2</span></span></term>
              <description><span data-ttu-id="e2fbd-132">Microsoft Excel 2010 アルゴリズムの使用</span><span class="sxs-lookup"><span data-stu-id="e2fbd-132">Use Microsoft Excel 2010 algorithms</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e2fbd-133">
            <b>注意</b>: プロパティを 0、1、または 2 以外の値に設定すると、未定義 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> の動作が発生します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-133">
            <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</span></span></para>
          <para><span data-ttu-id="e2fbd-134">次の表に、プロパティを 1 に設定すると影響を受ける関数 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> を示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-134">The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1.</span></span> <span data-ttu-id="e2fbd-135">"影響を受けない関数" 列には、常に最新の精度のアルゴリズムを使用する関数と、Excel 2010 で変更されていない関数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-135">The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010.</span></span> <span data-ttu-id="e2fbd-136">名前にピリオド (.) を含む関数名の場合は、VBA でオブジェクトのメソッドとして実装されている対応する関数の名前を特定するには、ピリオドのアンダースコア文字 ( _ ) を置き換えてください。 <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /></span><span class="sxs-lookup"><span data-stu-id="e2fbd-136">For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period.</span></span> <span data-ttu-id="e2fbd-137">たとえば、BETA に対応する VBA メソッドです。DIST 関数がメソッド <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-137">For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="e2fbd-138">BETADIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-138">BETADIST</span></span></term>
              <description><span data-ttu-id="e2fbd-139">AGGREGATE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-139">AGGREGATE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-140">BETAINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-140">BETAINV</span></span></term>
              <description><span data-ttu-id="e2fbd-141">Beta。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-141">BETA.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-142">BINOMDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-142">BINOMDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-143">Beta。INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-143">BETA.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-144">CHIDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-144">CHIDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-145">BINOM。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-145">BINOM.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-146">CHIINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-146">CHIINV</span></span></term>
              <description><span data-ttu-id="e2fbd-147">BINOM。INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-147">BINOM.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-148">CHITEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-148">CHITEST</span></span></term>
              <description><span data-ttu-id="e2fbd-149">CEILING</span><span class="sxs-lookup"><span data-stu-id="e2fbd-149">CEILING</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-150">CONFIDENCE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-150">CONFIDENCE</span></span></term>
              <description><span data-ttu-id="e2fbd-151">CEILING。PRECISE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-151">CEILING.PRECISE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-152">CRITBINOM</span><span class="sxs-lookup"><span data-stu-id="e2fbd-152">CRITBINOM</span></span></term>
              <description><span data-ttu-id="e2fbd-153">CHISQ。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-153">CHISQ.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-154">CUMIPMT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-154">CUMIPMT</span></span></term>
              <description><span data-ttu-id="e2fbd-155">CHISQ。DIST。RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-155">CHISQ.DIST.RT</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-156">CUMPRINC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-156">CUMPRINC</span></span></term>
              <description><span data-ttu-id="e2fbd-157">CHISQ。INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-157">CHISQ.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-158">ERF</span><span class="sxs-lookup"><span data-stu-id="e2fbd-158">ERF</span></span></term>
              <description><span data-ttu-id="e2fbd-159">CHISQ.INV。RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-159">CHISQ.INV.RT</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-160">ERFC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-160">ERFC</span></span></term>
              <description><span data-ttu-id="e2fbd-161">CHISQ。TEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-161">CHISQ.TEST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-162">EXPONDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-162">EXPONDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-163">CONFIDENCE。NORM</span><span class="sxs-lookup"><span data-stu-id="e2fbd-163">CONFIDENCE.NORM</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-164">FDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-164">FDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-165">CONFIDENCE。T</span><span class="sxs-lookup"><span data-stu-id="e2fbd-165">CONFIDENCE.T</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-166">FINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-166">FINV</span></span></term>
              <description><span data-ttu-id="e2fbd-167">COVAR</span><span class="sxs-lookup"><span data-stu-id="e2fbd-167">COVAR</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-168">FTEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-168">FTEST</span></span></term>
              <description><span data-ttu-id="e2fbd-169">COVARIANCE。P</span><span class="sxs-lookup"><span data-stu-id="e2fbd-169">COVARIANCE.P</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-170">GAMMADIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-170">GAMMADIST</span></span></term>
              <description><span data-ttu-id="e2fbd-171">COVARIANCE。S</span><span class="sxs-lookup"><span data-stu-id="e2fbd-171">COVARIANCE.S</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-172">GAMMALN</span><span class="sxs-lookup"><span data-stu-id="e2fbd-172">GAMMALN</span></span></term>
              <description><span data-ttu-id="e2fbd-173">ERFPRECISE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-173">ERF.PRECISE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-174">GAMMINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-174">GAMMINV</span></span></term>
              <description><span data-ttu-id="e2fbd-175">ERFC。PRECISE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-175">ERFC.PRECISE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-176">HYPGEOMDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-176">HYPGEOMDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-177">EXPON。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-177">EXPON.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-178">IPMT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-178">IPMT</span></span></term>
              <description><span data-ttu-id="e2fbd-179">F.DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-179">F.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-180">IRR</span><span class="sxs-lookup"><span data-stu-id="e2fbd-180">IRR</span></span></term>
              <description><span data-ttu-id="e2fbd-181">F.DIST.RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-181">F.DIST.RT</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-182">LOGINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-182">LOGINV</span></span></term>
              <description><span data-ttu-id="e2fbd-183">F.INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-183">F.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-184">LOGNORMDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-184">LOGNORMDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-185">F.INV.RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-185">F.INV.RT</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-186">NEGBINOMDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-186">NEGBINOMDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-187">F.TEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-187">F.TEST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-188">NORMDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-188">NORMDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-189">FLOOR</span><span class="sxs-lookup"><span data-stu-id="e2fbd-189">FLOOR</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-190">NORMINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-190">NORMINV</span></span></term>
              <description><span data-ttu-id="e2fbd-191">FLOOR。PRECISE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-191">FLOOR.PRECISE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-192">NORMSDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-192">NORMSDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-193">ガンマDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-193">GAMMA.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-194">NORMSINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-194">NORMSINV</span></span></term>
              <description><span data-ttu-id="e2fbd-195">ガンマINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-195">GAMMA.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-196">PMT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-196">PMT</span></span></term>
              <description><span data-ttu-id="e2fbd-197">GAMMALNPRECISE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-197">GAMMALN.PRECISE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-198">POISSON</span><span class="sxs-lookup"><span data-stu-id="e2fbd-198">POISSON</span></span></term>
              <description><span data-ttu-id="e2fbd-199">HYPGEOM。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-199">HYPGEOM.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-200">PPMT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-200">PPMT</span></span></term>
              <description><span data-ttu-id="e2fbd-201">ISO。CEILING</span><span class="sxs-lookup"><span data-stu-id="e2fbd-201">ISO.CEILING</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-202">STDEV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-202">STDEV</span></span></term>
              <description><span data-ttu-id="e2fbd-203">LOGNORM。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-203">LOGNORM.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-204">STDEVP</span><span class="sxs-lookup"><span data-stu-id="e2fbd-204">STDEVP</span></span></term>
              <description><span data-ttu-id="e2fbd-205">LOGNORM。INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-205">LOGNORM.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-206">TDIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-206">TDIST</span></span></term>
              <description><span data-ttu-id="e2fbd-207">MOD</span><span class="sxs-lookup"><span data-stu-id="e2fbd-207">MOD</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-208">TINV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-208">TINV</span></span></term>
              <description><span data-ttu-id="e2fbd-209">モード</span><span class="sxs-lookup"><span data-stu-id="e2fbd-209">MODE</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-210">TTEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-210">TTEST</span></span></term>
              <description><span data-ttu-id="e2fbd-211">MODE。MULT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-211">MODE.MULT</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-212">VAR</span><span class="sxs-lookup"><span data-stu-id="e2fbd-212">VAR</span></span></term>
              <description><span data-ttu-id="e2fbd-213">MODE。SNGL</span><span class="sxs-lookup"><span data-stu-id="e2fbd-213">MODE.SNGL</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-214">、</span><span class="sxs-lookup"><span data-stu-id="e2fbd-214">VARA</span></span></term>
              <description><span data-ttu-id="e2fbd-215">NEGBINOM。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-215">NEGBINOM.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-216">VARP</span><span class="sxs-lookup"><span data-stu-id="e2fbd-216">VARP</span></span></term>
              <description><span data-ttu-id="e2fbd-217">NETWORKDAYS。INTL</span><span class="sxs-lookup"><span data-stu-id="e2fbd-217">NETWORKDAYS.INTL</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-218">VARPA</span><span class="sxs-lookup"><span data-stu-id="e2fbd-218">VARPA</span></span></term>
              <description><span data-ttu-id="e2fbd-219">NORM。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-219">NORM.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-220">WEIBULL</span><span class="sxs-lookup"><span data-stu-id="e2fbd-220">WEIBULL</span></span></term>
              <description><span data-ttu-id="e2fbd-221">NORM。INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-221">NORM.INV</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-222">XIRR</span><span class="sxs-lookup"><span data-stu-id="e2fbd-222">XIRR</span></span></term>
              <description><span data-ttu-id="e2fbd-223">NORM。S.DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-223">NORM.S.DIST</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="e2fbd-224">ZTEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-224">ZTEST</span></span></term>
              <description><span data-ttu-id="e2fbd-225">NORM。S.INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-225">NORM.S.INV</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-226">PERCENTILE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-226">PERCENTILE</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-227">PERCENTILEEXC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-227">PERCENTILE.EXC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-228">PERCENTILEINC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-228">PERCENTILE.INC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-229">PERCENTRANK</span><span class="sxs-lookup"><span data-stu-id="e2fbd-229">PERCENTRANK</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-230">PERCENTRANK。EXC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-230">PERCENTRANK.EXC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-231">PERCENTRANK。INC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-231">PERCENTRANK.INC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-232">POISSON。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-232">POISSON.DIST</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-233">QUARTILE</span><span class="sxs-lookup"><span data-stu-id="e2fbd-233">QUARTILE</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-234">QUARTILEEXC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-234">QUARTILE.EXC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-235">QUARTILEINC</span><span class="sxs-lookup"><span data-stu-id="e2fbd-235">QUARTILE.INC</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-236">RANK</span><span class="sxs-lookup"><span data-stu-id="e2fbd-236">RANK</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-237">RANK。AVG</span><span class="sxs-lookup"><span data-stu-id="e2fbd-237">RANK.AVG</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-238">RANK。EQ</span><span class="sxs-lookup"><span data-stu-id="e2fbd-238">RANK.EQ</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-239">STDEV.P</span><span class="sxs-lookup"><span data-stu-id="e2fbd-239">STDEV.P</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-240">STDEV.S</span><span class="sxs-lookup"><span data-stu-id="e2fbd-240">STDEV.S</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-241">T.DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-241">T.DIST</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-242">T.DIST.2T</span><span class="sxs-lookup"><span data-stu-id="e2fbd-242">T.DIST.2T</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-243">T.DIST。RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-243">T.DIST.RT</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-244">T.DIST。RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-244">T.DIST.RT</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-245">T.INV</span><span class="sxs-lookup"><span data-stu-id="e2fbd-245">T.INV</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-246">T.INV.2T</span><span class="sxs-lookup"><span data-stu-id="e2fbd-246">T.INV.2T</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-247">T.INV.RT</span><span class="sxs-lookup"><span data-stu-id="e2fbd-247">T.INV.RT</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-248">T.TEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-248">T.TEST</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-249">VAR。P</span><span class="sxs-lookup"><span data-stu-id="e2fbd-249">VAR.P</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-250">VAR。S</span><span class="sxs-lookup"><span data-stu-id="e2fbd-250">VAR.S</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-251">WEEKDAY</span><span class="sxs-lookup"><span data-stu-id="e2fbd-251">WEEKDAY</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-252">WEEKNUM</span><span class="sxs-lookup"><span data-stu-id="e2fbd-252">WEEKNUM</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-253">WEIBULL。DIST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-253">WEIBULL.DIST</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-254">WORKDAY。INTL</span><span class="sxs-lookup"><span data-stu-id="e2fbd-254">WORKDAY.INTL</span></span></description>
            </item>
            <item>
              <term />
              <description><span data-ttu-id="e2fbd-255">Z.TEST</span><span class="sxs-lookup"><span data-stu-id="e2fbd-255">Z.TEST</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-256">ブックに関連付けられている最初のウィンドウをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-256">Activates the first window associated with the workbook.</span></span> <span data-ttu-id="e2fbd-257">ブックに添付されている可能性Auto_ActivateまたはAuto_Deactivateマクロは実行されません (これらのマクロを実行するには、このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を使用します)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-257">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-258">アクティブなグラフ (埋め込みグラフまたはグラフ シート) を表す <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-258">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="e2fbd-259">埋め込みグラフは、アクティブにされている状態だけではなく、選択されただけの状態でもアクティブと見なされます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-259">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="e2fbd-260">アクティブなグラフがないときは、 <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-260">When no chart is active, this property returns <b>Nothing</b>.</span></span> <span data-ttu-id="e2fbd-261">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-261">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-262">対象となるオブジェクトを指定しない場合、このプロパティでは作業中のブックのアクティブなグラフが返されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-262">If you don't specify an object qualifier, this property returns the active chart in the active workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-263">作業中のブックまたは指定したウィンドウやブックにあるアクティブ シート (一番手前のシート) を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-263">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span></span> <span data-ttu-id="e2fbd-264">アクティブ シートが存在しないときは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-264">Returns <b>Nothing</b> if no sheet is active.</span></span> <span data-ttu-id="e2fbd-265">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-265">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-266">対象となるオブジェクトを指定しない場合は、作業中のブックのアクティブ シートが返されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-266">If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</span></span></para>
          <para><span data-ttu-id="e2fbd-267">ブックが複数のウィンドウに表示される場合は、異なるウィンドウ <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> でプロパティが異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-267">If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-268">アクティブなブックまたは指定されたブックのアクティブなスライサーを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-268">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span></span></summary>
        <value><span data-ttu-id="e2fbd-269">アクティブなブックまたは指定されたブック内のアクティブなスライサーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-269">An object that represents the active slicer in the active workbook or in the specified workbook.</span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-270">アクティブなスライサーがない場合は、null 参照 (Visual Basic 内の Nothing) を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-270">Returns a null reference (Nothing in Visual Basic) if no slicer is active.</span></span></para>
          <para><span data-ttu-id="e2fbd-271">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-271">Read-only.</span></span></para>
          <para><span data-ttu-id="e2fbd-272">オブジェクトを指定しない場合、 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> このプロパティはアクティブなブックのアクティブなスライサーを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-272">If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-273">ブックへのショートカットまたはハイパーリンクを [お気に入り] フォルダーに追加します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-273">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-274">オブジェクト修飾子を指定せずに使用した場合、このプロパティは Microsoft Excel アプリケーションを表 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-274">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="e2fbd-275">対象となるオブジェクトが指定された場合は、指定されたオブジェクトを作成した <b>Application</b> オブジェクトを返します。OLE オートメーションを使っていて、オブジェクトのアプリケーションにアクセスするときなどに、このプロパティを使います。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-275">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span> <span data-ttu-id="e2fbd-276">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-276">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-277">テーマの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-277">Name of the theme.</span></span></param>
        <summary><span data-ttu-id="e2fbd-278">現在のブックに指定されたテーマを適用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-278">Applies the specified theme to the current workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-279">コメントの作成者を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-279">Returns or sets the author of the comment.</span></span> <span data-ttu-id="e2fbd-280">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-280">Read-only <b>String</b>.</span></span></summary>
        <value><span data-ttu-id="e2fbd-281"><see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-281">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="e2fbd-282">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-282">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e2fbd-283">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-283">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e2fbd-284">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-284">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-285">共有ブックの自動更新の間隔を分数で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-285">Returns or sets the number of minutes between automatic updates to the shared workbook.</span></span> <span data-ttu-id="e2fbd-286">読み取り/書き込みの <b>整数</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-286">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-287">この <b>プロパティを有効にするには、AutoUpdateFrequency</b> プロパティを 5 ~ 1,440 の値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-287">The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-p114"><b>True</b> の場合、共有ブックが自動的に更新されるたびに、現在の変更内容を他のユーザーに通知します。<b>False</b> の場合、変更内容を通知しません (ブックは他のユーザーによって行われた変更と同期します)。既定値は <b>True</b> です。値の取得および設定が可能です。ブール型 (<b>Boolean</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p114"><b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is <b>True</b>. Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-292">この <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> プロパティを有効にするには、プロパティを 5 ~ 1,440 の値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-292">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-293"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-293">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-294">リンクの名前を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-294">The name of the link.</span></span></param>
        <param name="Type"><span data-ttu-id="e2fbd-295">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-295">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span></span> <span data-ttu-id="e2fbd-296">リンクの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-296">The type of link.</span></span></param>
        <summary><span data-ttu-id="e2fbd-297">他の Excel ソースまたは OLE ソースにリンクしている数式を値に変換します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-297">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-298">指定されたブック <see cref="T:Microsoft.Office.Core.DocumentProperties" /> のすべての組み込みドキュメント プロパティを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-298">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span></span> <span data-ttu-id="e2fbd-299">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-299">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-300">このプロパティは、すべての組み込みドキュメント プロパティのコレクション全体を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-300">This property returns the entire collection of built-in document properties.</span></span> <span data-ttu-id="e2fbd-301">プロパティ名またはコレクションインデックスを数値として指定して、コレクションの単一のメンバー (オブジェクト) を取得するには、このメソッド <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> <see cref="T:Microsoft.Office.Core.DocumentProperty" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-301">Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</span></span></para>
          <para><span data-ttu-id="e2fbd-302">インデックス値または名前でドキュメント プロパティを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-302">You can refer to document properties either by index value or by name.</span></span> <span data-ttu-id="e2fbd-303">次の表は、有効な組み込みのドキュメント プロパティの名前を示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-303">The following list shows the available built-in document property names:</span></span></para>
          <para><span data-ttu-id="e2fbd-304">タイトル</span><span class="sxs-lookup"><span data-stu-id="e2fbd-304">Title</span></span> </para>
          <para><span data-ttu-id="e2fbd-305">Subject</span><span class="sxs-lookup"><span data-stu-id="e2fbd-305">Subject</span></span></para>
          <para><span data-ttu-id="e2fbd-306">設定元</span><span class="sxs-lookup"><span data-stu-id="e2fbd-306">Author</span></span></para>
          <para><span data-ttu-id="e2fbd-307">キーワード</span><span class="sxs-lookup"><span data-stu-id="e2fbd-307">Keywords</span></span></para>
          <para><span data-ttu-id="e2fbd-308">コメント</span><span class="sxs-lookup"><span data-stu-id="e2fbd-308">Comments</span></span></para>
          <para><span data-ttu-id="e2fbd-309">それから</span><span class="sxs-lookup"><span data-stu-id="e2fbd-309">Template</span></span></para>
          <para><span data-ttu-id="e2fbd-310">Last Author</span><span class="sxs-lookup"><span data-stu-id="e2fbd-310">Last Author</span></span></para>
          <para><span data-ttu-id="e2fbd-311">リビジョン番号</span><span class="sxs-lookup"><span data-stu-id="e2fbd-311">Revision Number</span></span></para>
          <para><span data-ttu-id="e2fbd-312">Application Name</span><span class="sxs-lookup"><span data-stu-id="e2fbd-312">Application Name</span></span></para>
          <para><span data-ttu-id="e2fbd-313">最終印刷日</span><span class="sxs-lookup"><span data-stu-id="e2fbd-313">Last Print Date</span></span></para>
          <para><span data-ttu-id="e2fbd-314">作成日</span><span class="sxs-lookup"><span data-stu-id="e2fbd-314">Creation Date</span></span> </para>
          <para><span data-ttu-id="e2fbd-315">Last Save Time</span><span class="sxs-lookup"><span data-stu-id="e2fbd-315">Last Save Time</span></span></para>
          <para><span data-ttu-id="e2fbd-316">Total Editing Time</span><span class="sxs-lookup"><span data-stu-id="e2fbd-316">Total Editing Time</span></span></para>
          <para><span data-ttu-id="e2fbd-317">Number of Pages</span><span class="sxs-lookup"><span data-stu-id="e2fbd-317">Number of Pages</span></span></para>
          <para><span data-ttu-id="e2fbd-318">単語数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-318">Number of Words</span></span></para>
          <para><span data-ttu-id="e2fbd-319">文字数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-319">Number of Characters</span></span></para>
          <para><span data-ttu-id="e2fbd-320">セキュリティ</span><span class="sxs-lookup"><span data-stu-id="e2fbd-320">Security</span></span></para>
          <para><span data-ttu-id="e2fbd-321">カテゴリ</span><span class="sxs-lookup"><span data-stu-id="e2fbd-321">Category</span></span></para>
          <para><span data-ttu-id="e2fbd-322">フォーマット</span><span class="sxs-lookup"><span data-stu-id="e2fbd-322">Format</span></span></para>
          <para><span data-ttu-id="e2fbd-323">Manager</span><span class="sxs-lookup"><span data-stu-id="e2fbd-323">Manager</span></span></para>
          <para><span data-ttu-id="e2fbd-324">Company</span><span class="sxs-lookup"><span data-stu-id="e2fbd-324">Company</span></span></para>
          <para><span data-ttu-id="e2fbd-325">バイト数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-325">Number of Bytes</span></span></para>
          <para><span data-ttu-id="e2fbd-326">行数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-326">Number of Lines</span></span></para>
          <para><span data-ttu-id="e2fbd-327">段落数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-327">Number of Paragraphs</span></span></para>
          <para><span data-ttu-id="e2fbd-328">スライド数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-328">Number of Slides</span></span></para>
          <para><span data-ttu-id="e2fbd-329">メモの数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-329">Number of Notes</span></span></para>
          <para><span data-ttu-id="e2fbd-330">非表示スライドの数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-330">Number of Hidden Slides</span></span></para>
          <para><span data-ttu-id="e2fbd-331">マルチメディア クリップの数</span><span class="sxs-lookup"><span data-stu-id="e2fbd-331">Number of Multimedia Clips</span></span></para>
          <para><span data-ttu-id="e2fbd-332">ハイパーリンクベース</span><span class="sxs-lookup"><span data-stu-id="e2fbd-332">Hyperlink Base</span></span></para>
          <para><span data-ttu-id="e2fbd-333">文字数 (スペースを含む)</span><span class="sxs-lookup"><span data-stu-id="e2fbd-333">Number of Characters (with spaces)</span></span></para>
          <para><span data-ttu-id="e2fbd-334">コンテナー アプリケーションでは、すべての組み込みのドキュメント プロパティに対して値が設定されているわけではありません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-334">Container applications aren’t required to define values for every built-in document property.</span></span> <span data-ttu-id="e2fbd-335">Microsoft Excel が組み込みのドキュメント プロパティの 1 つの値を定義しない場合は、そのドキュメント プロパティのプロパティを読み取る <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-335">If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</span></span></para>
          <para><span data-ttu-id="e2fbd-336"><b>Item メソッド</b>は<b>、DocumentProperties コレクションの既定のメソッド</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-336">The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</span></span></para>
          <para><span data-ttu-id="e2fbd-337">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> を使用して、カスタム ドキュメント プロパティのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-337">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-338">右端の 4 桁がマイナー計算エンジンのバージョン番号で、その他の数字 (左側) が Microsoft Excel のメジャー バージョンである数値を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-338">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span></span> <span data-ttu-id="e2fbd-339">オブジェクトの場合、このプロパティはブックが最後に完全に再計算された Excel のバージョンに関する <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 情報を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-339">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span></span> <span data-ttu-id="e2fbd-340">整数型 ( <b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-340">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-341">ブックが以前のバージョンの Excel で保存され、ブックが完全に再計算されていない場合、このプロパティは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-341">If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-342"><b>True</b> の 場合、Microsoft Excel は、サーバーに指定されたブックをチェックインできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-342"><b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-343"><b>True</b> の 場合、ブックは、コンテンツを比較するときに大文字と小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-343"><b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span></span> <span data-ttu-id="e2fbd-344">読み取り専用 <b>のブール</b> 値 ( C# では<b>ブール</b> 値)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-344">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode"><span data-ttu-id="e2fbd-345">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-345">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span></span> <span data-ttu-id="e2fbd-346">アクセス モードを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-346">Specifies the new access mode.</span></span></param>
        <param name="WritePassword"><span data-ttu-id="e2fbd-347">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-347">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-348">ファイルが書き込みを予約済みで、xlReadWrite の場合は、書き込み用パスワード <paramref name="Mode" /> <b>を指定します</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-348">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span></span> <span data-ttu-id="e2fbd-349">ファイルのパスワードがない場合、または <paramref name="Mode" /> <b>xlReadOnly の場合は無視されます</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-349">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span></span></param>
        <param name="Notify"><span data-ttu-id="e2fbd-350">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-350">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-351"><b>True</b> (または省略) の場合、ファイルにすぐにアクセスできない状態のときに警告メッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-351"><b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span></span></param>
        <summary><span data-ttu-id="e2fbd-352">ブックのアクセス権を変更します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-352">Changes the access permissions for the workbook.</span></span> <span data-ttu-id="e2fbd-353">変更した後で、ディスクから読み込むことが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-353">This may require an updated version to be loaded from the disk.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-p127">読み取り専用でファイルを開いているときは、排他的アクセスはできません。読み取り専用を書き込み可能に変更した場合は、読み取り専用にしていた間に変更された部分がないことを確認するために、ファイルが改めて読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p127">If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-356">共有ブックの変更履歴に表示される日数を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-356">Returns or sets the number of days shown in the shared workbook's change history.</span></span> <span data-ttu-id="e2fbd-357">読み取り/書き込みの <b>整数</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-357">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-358">ブックを閉じるとき、このプロパティを設定する前の変更は変更履歴から削除されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-358">Any changes in the change history older than the setting for this property are removed when the workbook is closed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-359"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-359">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-360">メソッドから返された、変更する Microsoft Excel または DDE/OLE リンクの <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> 名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-360">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span></span></param>
        <param name="NewName"><span data-ttu-id="e2fbd-361"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-361">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-362">新しいリンク名を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-362">The new name of the link.</span></span></param>
        <param name="Type"><span data-ttu-id="e2fbd-363">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span></span> <span data-ttu-id="e2fbd-364">リンクの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-364">The link type.</span></span></param>
        <summary><span data-ttu-id="e2fbd-365">ドキュメント間のリンクを変更します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-365">Changes a link from one document to another.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-366"><b>True</b> の場合、現在のドキュメントに含まれるすべてのグラフは、アタッチされている実際のデータ ポイントを追跡します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-366"><b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span></span> <span data-ttu-id="e2fbd-367"><b>False</b> の場合、元どおり、データ ポイントのインデックスを追跡します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-367"><b>False</b> will revert back to tracking the index of the data point.</span></span> <span data-ttu-id="e2fbd-368"><b>ブール</b> 型<b>(C# のブール</b> 値) の値の取得および設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-368"><b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-369">指定されたブック <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> のすべてのグラフ シートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-369">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span></span> <span data-ttu-id="e2fbd-370">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-370">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-371">オブジェクト修飾子を指定せずにこのプロパティを使用すると、アクティブブック内のすべてのグラフ シートが返されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-371">Using this property without an object qualifier returns all chart sheets in the active workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-372">ブックの保存時に互換性チェックを自動的に実行するかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-372">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span></span> <span data-ttu-id="e2fbd-373">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-373">Read/write.</span></span></summary>
        <value><span data-ttu-id="e2fbd-374"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-374"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><span data-ttu-id="e2fbd-375">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-375">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-376"><b>True</b> の場合は、変更内容を保存し、ドキュメントをチェックインします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-376"><b>True</b> saves changes and checks in the document.</span></span> <span data-ttu-id="e2fbd-377"><b>False</b> の場合は、変更内容を保存せずに、ドキュメントをチェックイン状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-377"><b>False</b> returns the document to a checked-in status without saving revision.</span></span></param>
        <param name="Comments"><span data-ttu-id="e2fbd-378">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-378">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-379">チェックインするブックのリビジョンに関するチェックイン コメントを入力できます <paramref name="SaveChanges" /> <b>(True</b>の場合にのみ適用されます)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-379">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span></span></param>
        <param name="MakePublic"><span data-ttu-id="e2fbd-380">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-380">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-381"><b>True</b> の場合は、チェックイン後にユーザーがワークブックを公開できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-381"><b>True</b> allows the user to publish the workbook after it has been checked in.</span></span> <span data-ttu-id="e2fbd-382">これにより、承認プロセスのためにブックが送信されます。最終的には、ブックに対する読み取り専用の権限を持つユーザーにブックのバージョンが発行される可能性があります <paramref name="SaveChanges" /> <b>(True</b>と等しい場合にのみ適用されます)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-382">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span></span></param>
        <summary><span data-ttu-id="e2fbd-383">ローカル コンピューターからサーバーにブックを返し、ローカルブックを読み取り専用に設定して、ローカルで編集することはできません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-383">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span></span> <span data-ttu-id="e2fbd-384">このメソッドを呼び出すことによって、ブックも閉じます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-384">Calling this method will also close the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><span data-ttu-id="e2fbd-385"><b>true を</b> 指定すると、ブックがサーバーの場所に保存されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-385"><b>true</b> to save the workbook to the server location.</span></span> <span data-ttu-id="e2fbd-386">The default is <b>true</b>.</span><span class="sxs-lookup"><span data-stu-id="e2fbd-386">The default is <b>true</b>.</span></span></param>
        <param name="Comments"><span data-ttu-id="e2fbd-387">チェックインするブックのリビジョンに関するコメント (true に設定されている <paramref name="SaveChanges" /> 場合にのみ適用 <b>されます</b>)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-387">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span></span></param>
        <param name="MakePublic"><span data-ttu-id="e2fbd-388"><b>true</b> を指定すると、ユーザーはチェックイン後にブックを発行できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-388"><b>true</b> to allow the user to publish the workbook after it is checked in.</span></span></param>
        <param name="VersionType"><span data-ttu-id="e2fbd-389">ブックのバージョン管理情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-389">Specifies versioning information for the workbook.</span></span></param>
        <summary><span data-ttu-id="e2fbd-390">ローカル コンピューターからサーバーにブックを保存し、ローカルなブックを読み取り専用に設定して編集されないようにします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-390">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-391">パラメーターを true に設定すると、承認プロセスのためにブックが送信され、最終的には、ブックに対する読み取り専用の権限を持つユーザーにブックのバージョンが発行される可能性があります <paramref name="MakePublic" /> <b></b> <paramref name="SaveChanges" /> <b>(true</b>に設定されている場合にのみ適用されます)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-391">Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span></span> </para>
          <para><span data-ttu-id="e2fbd-392">Microsoft Excel に組み込まれたグループ作業機能を利用するには、Microsoft SharePoint Server にブックを保存する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-392">To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><span data-ttu-id="e2fbd-393">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-393">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-394">ブックに変更がない場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-394">If there are no changes to the workbook, this argument is ignored.</span></span> <span data-ttu-id="e2fbd-395">ブックに変更があり、開いている他のウィンドウに表示されている場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-395">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span></span> <span data-ttu-id="e2fbd-396">ブックに変更があるが、ブックが他の開いているウィンドウに表示されない場合は、次の表に示すように、この引数は変更を保存するかどうかを指定します。ValueAction<b>True 変更</b>をブックに保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-396">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span></span> <span data-ttu-id="e2fbd-397">ブックに関連付けられているファイル名がまだない場合は、そのファイル名が <paramref name="FileName" /> 使用されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-397">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span></span> <span data-ttu-id="e2fbd-398">省略 <paramref name="FileName" /> すると、ユーザーはファイル名を指定する必要があります。<b>False</b>このファイルに対する変更を保存します。OmittedDisplays a dialog box asking the user whether or not to save changes.</span><span class="sxs-lookup"><span data-stu-id="e2fbd-398">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span></span></param>
        <param name="Filename"><span data-ttu-id="e2fbd-399">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-399">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-400">変更後のブックのファイル名。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-400">Save changes under this file name.</span></span></param>
        <param name="RouteWorkbook"><span data-ttu-id="e2fbd-401">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-401">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-402">ブックを次の受信者に回覧する必要がない場合 (回覧用紙がないか、既に回覧されている場合)、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-402">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span></span> <span data-ttu-id="e2fbd-403">それ以外の場合は、次の表に示すようにブックが回覧されます。ValueMeaning<b>True ブックを</b>次の受信者に送信します。<b>False</b>ブックを送信しない。Omitted ブックを送信するかどうかをユーザーに確認するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-403">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span></span></param>
        <summary><span data-ttu-id="e2fbd-404">オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-404">Closes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-405"><b>Close</b>メソッドを使用してブックを閉じても、ブックAuto_Closeマクロは実行されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-405">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="e2fbd-406">このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> を使用して、マクロをAuto_Closeします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-406">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-407">オブジェクトのコード名を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-407">Returns the code name for the object.</span></span> <span data-ttu-id="e2fbd-408">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-408">Read-only <b>String</b>.</span></span> <span data-ttu-id="e2fbd-409">[プロパティ] ウィンドウの <b>右側 (名前)</b> のセルに表示される値は、選択したオブジェクトのコード名です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-409">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span></span> <span data-ttu-id="e2fbd-410">デザイン時に、このプロパティの値を変更してコード名を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-410">At design time, you can change the code name of an object by changing this value.</span></span> <span data-ttu-id="e2fbd-411">実行時に、このプロパティの値をコードで変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-411">You cannot programmatically change this property at run time.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-412">オブジェクトのコード名はオブジェクトを表すオブジェクト式の代わりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-412">The code name for an object can be used in place of an expression that returns the object.</span></span></para>
          <para><span data-ttu-id="e2fbd-413">シート名がコード名と異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-413">It’s possible for the sheet name to be different from the code name.</span></span> <span data-ttu-id="e2fbd-414">シートを作成する場合、シート名とコード名は同じですが、シート名を変更してもコード名は変更されません。また、(Visual Basic エディターの [プロパティ] ウィンドウを使用して) コード名を変更しても、シート名は変更されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-414">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e2fbd-415">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-415">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-416">カラー インデックス番号 (1 ～ 56) を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-416">The color number (from 1 to 56).</span></span> <span data-ttu-id="e2fbd-417">この引数を省略すると、このメソッドはパレットの 56 色をすべて含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-417">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span></span></param>
        <summary><span data-ttu-id="e2fbd-418">ブックのパレット内の色を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-418">Returns or sets colors in the palette for the workbook.</span></span> <span data-ttu-id="e2fbd-419">パレットには 56 個のエントリがあります。各エントリは RGB 値で表されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-419">The palette has 56 entries, each represented by an RGB value.</span></span> <span data-ttu-id="e2fbd-420">読み取り/書き込み <b>オブジェクト です</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-420">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-421">Microsoft Excel の <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> コマンド バーを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-421">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span></span> <span data-ttu-id="e2fbd-422">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-422">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-423">別のアプリケーションに埋め込まれたブックが、ダブルクリックによりアクティブになっているときに、<b>Workbook</b> オブジェクトに対してこのプロパティを使用すると、別のアプリケーションで使用可能な Excel のコマンド バーのセットを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-423">When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application.</span></span> <span data-ttu-id="e2fbd-424">それ以外の場合、<b>Workbook</b> オブジェクトにこのプロパティを使用すると <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-424">At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</span></span></para>
          <para><span data-ttu-id="e2fbd-425">ブックに割り当てたコマンド バーを取得するのに、プログラミング的な手法は使用しません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-425">There is no programmatic way to return the set of command bars attached to a workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-426">指定されたワークシート <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> のすべてのコメントを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-426">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span></span> <span data-ttu-id="e2fbd-427">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-427">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-428"><see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-428">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="e2fbd-429">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-429">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e2fbd-430">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-430">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="e2fbd-431">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-431">This example deletes all comments added by Jean Selva on the active sheet.</span></span></para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-432">共有ブックが更新されるたびに競合を解決する方法を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-432">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span></span> <span data-ttu-id="e2fbd-433">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-433">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-434">このプロパティは、ブックと ODBC または OLEDB データ ソースの間の接続を確立し、ユーザーに確認を求めずにデータ <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> を更新します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-434">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span></span> <span data-ttu-id="e2fbd-435">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-435">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Connections" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-436">ブック中の外部接続またはリンクを無効にします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-436">Disables the external connections or links in the workbook.</span></span> <span data-ttu-id="e2fbd-437">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-437">Read-only</span></span></summary>
        <value><span data-ttu-id="e2fbd-438"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-438"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-439">指定された OLE オブジェクトのコンテナー アプリケーションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-439">Returns the object that represents the container application for the specified OLE object.</span></span> <span data-ttu-id="e2fbd-440">読み取り専用 <b>オブジェクト</b> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-440">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-441">Excel ブックが Microsoft Internet Explorer などのホスト アプリケーションの中で開かれている場合、このプロパティを使用すると、コンテナー アプリケーションのオブジェクト モデルにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-441">This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-442">ブックに格納 <see cref="T:Microsoft.Office.Core.MetaProperties" /> されているメタデータを記述するコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-442">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span></span> <span data-ttu-id="e2fbd-443">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-443">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-444"><b>MetaProperties</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-444"><b>MetaProperties</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-445">このファイルの保存時にバックアップ ファイルを作成する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-445"><b>True</b> if a backup file is created when this file is saved.</span></span> <span data-ttu-id="e2fbd-446">取得のみ可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-446">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-447">このオブジェクトが作成されたアプリケーション <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> を示す列挙の定数を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-447">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="e2fbd-448">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-448">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="e2fbd-449">読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-449">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-450"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-450">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="e2fbd-451">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-451">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-452">指定されたブックのすべてのカスタム ドキュメント プロパティを表すコレクション <see cref="T:Microsoft.Office.Core.DocumentProperties" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-452">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-453">このプロパティは、すべてのユーザー設定のドキュメント プロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-453">This property returns the entire collection of custom document properties.</span></span> <span data-ttu-id="e2fbd-454">プロパティの名前またはコレクションのインデックスを数値として指定して、コレクションの単一のメンバー (オブジェクト) を取得するには、このメソッド <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> <see cref="T:Microsoft.Office.Core.DocumentProperty" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-454">Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</span></span></para>
          <para><span data-ttu-id="e2fbd-455"><b>Item メソッド</b>は<b>、DocumentProperties コレクションの既定のメソッド</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-455">The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</span></span></para>
          <para><span data-ttu-id="e2fbd-456">組み <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> 込みのドキュメント プロパティのコレクションを取得するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-456">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-457">ブックのすべての <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> カスタム ビューを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-457">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-458">a を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-458">Returns a.</span></span> <span data-ttu-id="e2fbd-459"><see cref="T:Microsoft.Office.Core.CustomXMLParts" /> XML データ ストア内のカスタム XML を表すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-459"><see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span></span> <span data-ttu-id="e2fbd-460">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-460">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-461"><b>CustomXMLParts</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-461"><b>CustomXMLParts</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-462">ブックが 1904 年からの計算を使用する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-462"><b>True</b> if the workbook uses the 1904 date system.</span></span> <span data-ttu-id="e2fbd-463">値の取得と設定が可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-463">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-464">ピボットテーブルの既定のスタイルとして使用されるコレクションの表 <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> スタイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-464">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span></span> <span data-ttu-id="e2fbd-465">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-465">Read/write.</span></span></summary>
        <value><span data-ttu-id="e2fbd-466"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-466"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-467">スライサーの既定のスタイルとして使用されるオブジェクトからスタイルを <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> 取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-467">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span></span></summary>
        <value><span data-ttu-id="e2fbd-468">スライサー <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> の既定のスタイルとして使用されるオブジェクトのスタイル。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-468">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-469">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-469">Read/write.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-470">既定の TableStyle として使用 <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> されるコレクションの表スタイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-470">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span></span> <span data-ttu-id="e2fbd-471">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="e2fbd-471">Read/write</span></span></summary>
        <value><span data-ttu-id="e2fbd-472"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-472"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-473">ブックの既定のスライサー スタイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-473">The name of the default slicer style of the workbook.</span></span> <span data-ttu-id="e2fbd-474"><b>オブジェクト</b><b>(</b> C# のオブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-474"><b>Object</b> (<b>object</b> in C#).</span></span> <span data-ttu-id="e2fbd-475">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="e2fbd-475">Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat"><span data-ttu-id="e2fbd-476"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-476">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-477">削除対象の表示形式を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-477">Names the number format to be deleted.</span></span></param>
        <summary><span data-ttu-id="e2fbd-478">指定されたユーザー定義の表示形式を対象ブックから削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-478">Deletes a custom number format from the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-479">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-479">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-480">図形の表示方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-480">Returns or sets how shapes are displayed.</span></span> <span data-ttu-id="e2fbd-481">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-481">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-482">使用できる定数は、次に示す XlDisplayDrawingObjects クラスの定数です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-482">Can be one of the following XlDisplayDrawingObjects constants.</span></span></para>
          <list type="table">
            <item>
              <term>
                <paramref name="xlDisplayShapes" />
              </term>
              <description><span data-ttu-id="e2fbd-483">描画オブジェクトをすべて表示</span><span class="sxs-lookup"><span data-stu-id="e2fbd-483">Show all shapes.</span></span></description>
            </item>
            <item>
              <term>
                <paramref name="xlPlaceholders" />
              </term>
              <description><span data-ttu-id="e2fbd-484">描画オブジェクトの位置のみ表示</span><span class="sxs-lookup"><span data-stu-id="e2fbd-484">Show only placeholders.</span></span></description>
            </item>
            <item>
              <term>
                <paramref name="xlHide" />
              </term>
              <description><span data-ttu-id="e2fbd-485">描画オブジェクトをすべて非表示</span><span class="sxs-lookup"><span data-stu-id="e2fbd-485">Hide all shapes.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-486">ブック <b>に</b> インク コメントを表示するかどうかを決定するブール値。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-486">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook.</span></span> <span data-ttu-id="e2fbd-487">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-487">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-488">指定されたブック <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> のドキュメント検査モジュールを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-488">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span></span> <span data-ttu-id="e2fbd-489">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-489">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-490"><b>DocumentInspectors</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-490"><b>DocumentInspectors</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-491">バージョン管理が有効で、サーバー上のドキュメント ライブラリに格納されている共有ブックのバージョンのコレクションを表すコレクション <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-491">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-492">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-492">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-493">ブックに以前のバージョンの Excel でサポートされていない機能が含まれている場合に、ブックの変換を求めるメッセージをユーザーに表示する必要short_Excel2007。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-493">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span></span> <span data-ttu-id="e2fbd-494">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="e2fbd-494">Read/write</span></span></summary>
        <value><span data-ttu-id="e2fbd-495">Boolean</span><span class="sxs-lookup"><span data-stu-id="e2fbd-495">Boolean</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-496">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="e2fbd-496">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary><span data-ttu-id="e2fbd-497">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-497">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-498">変更されたファイルを、すべての形式で一定の間隔で保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-498">Saves changed files, of all formats, on a timed interval.</span></span> <span data-ttu-id="e2fbd-499">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-499">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-p173">Excel が操作に失敗した場合、システムが操作に失敗した場合、またはシステムが予期せずに終了して変更ファイルを保存できなかった場合に、バックアップ ファイルが開かれて、ユーザーは失われた可能性のある変更を保存することができます。ユーザーが Excel を起動し直したときに、作業途中だったファイルを回復するオプションを選択することができます。このプロパティを <b>True</b> (既定値) に設定すると、この機能が有効になります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p173">If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost. When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on. Setting this property to <b>True</b> (default) enables this feature.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-503">この <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> メソッドを使用すると、開発者はユーザーのブック内のデータ接続をプログラムで有効にできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-503">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-504">ドキュメントを暗号化 <b>するときに</b> 使用するアルゴリズム暗号化プロバイダーの名前を1st_Excel12文字列 を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-504">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span></span> <span data-ttu-id="e2fbd-505">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-505">Read/write.</span></span></summary>
        <value><span data-ttu-id="e2fbd-506"><b>s</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-506"><b>s</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-507">メソッドを使用して、レビューのために送信されたファイルのレビューを終了 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-507">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-508"><b>True</b> の 場合、電子メールの構成ヘッダーと封筒のツール バーの両方が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-508"><b>True</b> if the e-mail composition header and the envelope toolbar are both visible.</span></span> <span data-ttu-id="e2fbd-509">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-509">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-510">指定されたブック内のすべての Microsoft Excel 4.0 国際マクロ シートを表す <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-510">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span></span> <span data-ttu-id="e2fbd-511">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-511">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-512">指定された <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> ブックのすべての Microsoft Excel 4.0 マクロ シートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span></span> <span data-ttu-id="e2fbd-513">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-513">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-514">この <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> プロパティを使用すると、ブックが互換モードにあるか確認できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-514">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span></span> <span data-ttu-id="e2fbd-515">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="e2fbd-515">Read-only</span></span></summary>
        <value><span data-ttu-id="e2fbd-516"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-516"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-517">互換モードでは、特定の機能が無効になったり、動作が異なったりします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-517">In compatibility mode, certain functionality is disabled or functions differently.</span></span>  <span data-ttu-id="e2fbd-518">たとえば、以前のshort_Excel2007の Excel と比較して、より多くの行と列を使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-518">For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel.</span></span> <span data-ttu-id="e2fbd-519">また、構造化された参照は、次のshort_Excel2007。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-519">Also structured referencing is available in short_Excel2007.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-520">共有ファイルとして開いているブックを、他のユーザーが変更できないようにします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-520">Assigns the current user exclusive access to the workbook that's open as a shared list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e2fbd-521"><b>ExclusiveAccess</b> メソッドを実行すると、実行したユーザーによるブックの変更内容はすべて保存されますが、同じブックを開いている他のユーザーは、それらの変更内容を別のファイルとして保存する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-521">The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</span></span></para>
          <para><span data-ttu-id="e2fbd-522">指定したブックが共有ファイルとして開かれていない場合、このメソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-522">If the specified workbook isn't open as a shared list, this method fails.</span></span> <span data-ttu-id="e2fbd-523">ブックが共有リストとして開いているかどうかを確認するには、プロパティを使用 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-523">To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="e2fbd-524">使用できる値は、 <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> 次のいずれかまたはです <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-524">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span></span></param>
        <param name="Filename"><span data-ttu-id="e2fbd-525">保存 <b>する</b> ファイルの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-525">A <b>String</b> that indicates the name of the file to be saved.</span></span> <span data-ttu-id="e2fbd-526">完全パスまたは短いパスを含めできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-526">You can include a full path or short.</span></span>  <span data-ttu-id="e2fbd-527">Excel2007 は、ファイルを現在のフォルダーに保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-527">Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="e2fbd-528">どちらかまたはに設定 <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> できます <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-528">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="e2fbd-529">ドキュメント プロパティが含まれていることを示す場合は <b>True</b> に設定し、省略されていることを示す場合は <b>False</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-529">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="e2fbd-530"><b>True</b> に設定すると、発行する場合に印刷範囲が無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-530">If set to <b>True</b>, ignores any print areas set when publishing.</span></span> <span data-ttu-id="e2fbd-531"><b>False</b> に設定すると、発行する場合に印刷範囲が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-531">If set to <b>False</b>, will use the print areas set when publishing.</span></span></param>
        <param name="From"><span data-ttu-id="e2fbd-532">発行を開始するページのページ番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-532">The number of the page at which to start publishing.</span></span> <span data-ttu-id="e2fbd-533">この引数を省略すると、先頭のページから発行が開始されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-533">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="e2fbd-534">発行を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-534">The number of the last page to publish.</span></span> <span data-ttu-id="e2fbd-535">この引数を省略すると、最後のページまで発行します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-535">If this argument is omitted, publishing ends with the last page</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="e2fbd-536"><b>True</b> に設定すると、発行後にファイルがビューアーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-536">If set to <b>True</b> displays file in viewer after it is published.</span></span> <span data-ttu-id="e2fbd-537"><b>False</b> に設定すると、ファイルは発行されますが、表示はされません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-537">If set to <b>False</b> the file is published but not displayed.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="e2fbd-538"><b>FixedFormatExt</b> クラスへのポインターです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-538">Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="e2fbd-539">この <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> メソッドを使用して、ブックを PDF 形式または XPS 形式で発行します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-539">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="e2fbd-540">次の例では、現在のファイルのディレクトリに標準品質で PDF を作成し、発行後にファイルをビューアーに表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-540">The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</span></span></para>
          <para><span data-ttu-id="e2fbd-541">
            <b>注</b>: PDF アドインが現在インストールされていない場合は、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-541">
            <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</span></span></para></example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-542">ブックのファイル形式または種類を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-542">Returns the file format and/or type of the workbook.</span></span> <span data-ttu-id="e2fbd-543">読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" /> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-543">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-544">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-544">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-545">ブックが最終ブックかどうかを示すブール型 <b>(Boolean)</b> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-545">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span></span> <span data-ttu-id="e2fbd-546">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="e2fbd-546">Read/write</span></span></summary>
        <value><span data-ttu-id="e2fbd-547"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-547"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-548">値を <b>True</b> に設定すると、ブックを最終版としてマークし、受信者にブックが最終版であることを通知し、ブックを読み取り専用に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-548">Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="e2fbd-549"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-549">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-550">目的のファイルのアドレスを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-550">The address of the target document.</span></span></param>
        <param name="SubAddress"><span data-ttu-id="e2fbd-551">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-551">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-552">目的の文書内の位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-552">The location within the target document.</span></span> <span data-ttu-id="e2fbd-553">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-553">The default value is the empty string.</span></span></param>
        <param name="NewWindow"><span data-ttu-id="e2fbd-554">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-554">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-555">新しいウィンドウに目的のアプリケーションを表示するには、この引数に  <b>True</b> を設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-555"><b>True</b> to display the target application in a new window.</span></span> <span data-ttu-id="e2fbd-556">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-556">The default value is <b>False</b>.</span></span></param>
        <param name="AddHistory"><span data-ttu-id="e2fbd-557">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-557">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-558">不使用。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-558">Not used.</span></span> <span data-ttu-id="e2fbd-559">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-559">Reserved for future use.</span></span></param>
        <param name="ExtraInfo"><span data-ttu-id="e2fbd-560">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-560">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-561">ハイパーリンクの参照に使用する HTTP の追加情報を指定する文字列またはバイト配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-561">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span></span> <span data-ttu-id="e2fbd-562">たとえば、イメージ マップの座標、フォームの内容、FAT ファイル名を <paramref name="ExtraInfo" /> 指定できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-562">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span></span></param>
        <param name="Method"><span data-ttu-id="e2fbd-563">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-563">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-564">接続方法 <paramref name="ExtraInfo" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-564">Specifies the way <paramref name="ExtraInfo" /> is attached.</span></span> <span data-ttu-id="e2fbd-565">使用できる定数は、 <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> 次に示す定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-565">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span></span></param>
        <param name="HeaderInfo"><span data-ttu-id="e2fbd-566">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-566">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-567">HTTP リクエストのヘッダー情報を指定する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-567">A string that specifies header information for the HTTP request.</span></span> <span data-ttu-id="e2fbd-568">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-568">The default value is an empty string.</span></span></param>
        <summary><span data-ttu-id="e2fbd-569">キャッシュされたドキュメントが既にダウンロードされている場合は、そのドキュメントを表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-569">Displays a cached document if it’s already been downloaded.</span></span> <span data-ttu-id="e2fbd-570">ダウンロードされていない場合は、ハイパーリンク先の目的の文書をダウンロードして、適切なアプリケーションで文書を表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-570">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-571">ブックの完全な計算を強制的に実行します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-571">Forces a full calculation of a workbook.</span></span> <span data-ttu-id="e2fbd-572">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-572">Read/write.</span></span></summary>
        <value><span data-ttu-id="e2fbd-573"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-573"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-p197">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p197">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-576">オブジェクトの名前を、ディスク上のパスを含めて、文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-576">Returns the name of the object, including its path on disk, as a string.</span></span> <span data-ttu-id="e2fbd-577">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-577">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-578">このプロパティは、プロパティと同等で、その後に現在のファイル システムの区切り記号が続き、その後 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> にプロパティが続 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> きます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-578">This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-579">オブジェクトの <b>名前を示</b> す文字列 (ディスク上のパスを含む) を文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-579">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string.</span></span> <span data-ttu-id="e2fbd-580">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-580">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-581">指定されたブックの <see cref="T:Microsoft.Office.Core.WorkflowTask" /> オブジェクトのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-581">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span></span></summary>
        <returns><see cref="T:Microsoft.Office.Core.WorkflowTasks" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-582">指定されたブックの <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> オブジェクトのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-582">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span></span></summary>
        <returns><see cref="T:Microsoft.Office.Core.WorkflowTemplates" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-583">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-583">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-584">ブックに読み取りパスワードが設定されている場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-584"><b>True</b> if the workbook has a protection password.</span></span> <span data-ttu-id="e2fbd-585">取得のみ可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-585">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-586">このメソッドを使用して、ブックに保護パスワードを割り当 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> てできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-586">You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-587"><b>True の</b> 場合は、ブックにルーティング スリップがあります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-587"><b>True</b> if the workbook has a routing slip.</span></span> <span data-ttu-id="e2fbd-588">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-588">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-589">このプロパティを <b>True</b> に設定すると、既定の回覧先が作成されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-589">Setting this property to <b>True</b> creates a routing slip with default values.</span></span> <span data-ttu-id="e2fbd-590"><b>False</b> に設定すると、回覧先が削除されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-590">Setting the property to <b>False</b> deletes the routing slip.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-591">ブール値 ブック <b>に</b> 添付された Microsoft のプロジェクトが含Visual Basic for Applicationsします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-591">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span></span> <span data-ttu-id="e2fbd-592">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-592">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-593"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-593"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-p204">このプロパティは、マクロが有効なファイル形式でブックを保存する必要があるかどうかをプログラムで判断する場合に最も役立ちます。別の形式で保存すると、文書に含まれているマクロとコード プロジェクトが失われることがあります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p204">This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-596"><b>True の</b> 場合は、共有ブックへの変更が強調表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-596"><b>True</b> if changes to the shared workbook are highlighted on-screen.</span></span> <span data-ttu-id="e2fbd-597">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-597">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><span data-ttu-id="e2fbd-598">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-598">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-599">表示対象の変更を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-599">The changes that are shown.</span></span> <span data-ttu-id="e2fbd-600">使用できる定数は<b>、XlHighlightChangesTime</b>クラスの<b>xlSinceMyLastSave、xlAllChanges、</b><b>または xlNotYetReviewed です</b>。 <b></b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-600">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span></span></param>
        <param name="Who"><span data-ttu-id="e2fbd-601">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-601">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-602">変更を加えたユーザーを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-602">The user or users whose changes are shown.</span></span> <span data-ttu-id="e2fbd-603">"Everyone"、"Everyone but Me"、または共有ブックのユーザーの 1 人の名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-603">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span></span></param>
        <param name="Where"><span data-ttu-id="e2fbd-604">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-604">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-605">変更内容を調べる領域を A1 形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-605">An A1-style range reference that specifies the area to check for changes.</span></span></param>
        <summary><span data-ttu-id="e2fbd-606">共有ブックへの変更内容の表示方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-606">Controls how changes are shown in a shared workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-607">指定されたブック内のオブジェクトを返します。これは、Microsoft スクリプト エディターのプロジェクト エクスプローラーの場合と同様に、プロジェクトのトップ レベルの分岐 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-607">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span></span> <span data-ttu-id="e2fbd-608">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-608">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-609">このプロパティは、コレクションのセル アイコンに基づいてブック内のデータをフィルター処理するために使用 <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-609">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span></span> <span data-ttu-id="e2fbd-610">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-610">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-611"><b>IconSets</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-611"><b>IconSets</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-p211">リストがアクティブではない場合に、リストの境界線を表示するかどうかを指定するブール型 (<b>Boolean</b>) の値を返します。境界線を表示する場合は <b>True</b> を返します。値の設定および取得が可能です。ブール型 (<b>Boolean</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p211">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Returns <b>True</b> if the border is visible. Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-615">このプロパティを設定すると、そのワークシート上にあるすべてのリストが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-615">Setting this property will affect all the lists that are on the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-616">ブックがアドインとして実行されている場合は<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-616"><b>True</b> if the workbook is running as an add-in.</span></span> <span data-ttu-id="e2fbd-617">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-617">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-618">このプロパティに <b>True</b> を設定すると、ブックは次の特性を持ちます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-618">When you set this property to <b>True</b>, the workbook has the following characteristics:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e2fbd-619">ブックを開いているときに変更を加えると、ブックの保存は要求されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-619">You won’t be prompted to save the workbook if changes are made while the workbook is open.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-620">ブック ウィンドウは表示されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-620">The workbook window won’t be visible.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-621">ブックのマクロは、[マクロ] ダイアログ ボックス ([ツール] - [マクロ] - [マクロ]) に表示されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-621">Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-622">ブックのマクロは表示されませんが、[マクロ] ダイアログ ボックスから実行できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-622">Macros in the workbook can still be run from the Macro dialog box even though they’re not visible.</span></span> <span data-ttu-id="e2fbd-623">さらに、マクロ名にブック名を入れる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-623">In addition, macro names don’t need to be qualified with the workbook name.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-624">ブックを開くときに、Shift キーを押しても、何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-624">Holding down the SHIFT key when you open the workbook has no effect.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-p214"><b>True</b> の場合、指定されたブックを埋め込み先で編集しています。 <b>False</b> の場合、ブックを Excel で編集用に開いています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p214"><b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-628">共有ブックの変更履歴が有効な場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-628"><b>True</b> if change tracking is enabled for the shared workbook.</span></span> <span data-ttu-id="e2fbd-629">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-629">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-630">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-630">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-631">文字列型 (<b>String</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-631">Optional <b>String</b>.</span></span></param>
        <param name="LinkInfo"><span data-ttu-id="e2fbd-632">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-632">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span></span> <span data-ttu-id="e2fbd-633">リンクに関する情報の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-633">The type of information to be returned.</span></span></param>
        <param name="Type"><span data-ttu-id="e2fbd-634">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-634">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span></span> <span data-ttu-id="e2fbd-635">取得するリンクの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-635">The type of link to return.</span></span></param>
        <param name="EditionRef"><span data-ttu-id="e2fbd-636">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-637">発行物によるリンクの場合、この引数は発行物に対する参照を示す R1C1 形式の文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-637">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span></span> <span data-ttu-id="e2fbd-638">ブックに同名の発行側または引用側が複数あるときは、この引数を必ず指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-638">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span></span></param>
        <summary><span data-ttu-id="e2fbd-639">リンクの日付と更新の状態を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-639">Returns the link date and update status.</span></span> <span data-ttu-id="e2fbd-640"><b>オブジェクト 。</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-640"><b>Object</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="e2fbd-641">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-641">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span></span> <span data-ttu-id="e2fbd-642">取得するリンクの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-642">The type of link to return.</span></span></param>
        <summary><span data-ttu-id="e2fbd-643">ブックに含まれるリンクの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-643">Returns an array of links in the workbook.</span></span> <span data-ttu-id="e2fbd-644">配列にはリンクした文書、発行物、DDE サーバー、OLE サーバーの名前が入ります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-644">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span></span> <span data-ttu-id="e2fbd-645">リンクが存在しないときは <b>Empty</b> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-645">Returns <b>Empty</b> if there are no links.</span></span> <span data-ttu-id="e2fbd-646"><b>オブジェクト 。</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-646"><b>Object</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e2fbd-p222">このメソッドでは、発行側と引用側以外のリンクのときは 1 次元配列を返します。返された文字列には、リンク ソースの名前がリンクの種類に適した表記法で示されます。たとえば DDE リンクでは、"Server|Document!Item" という構文が使われます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p222">The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</span></span></para>
          <para><span data-ttu-id="e2fbd-p223">このメソッドでは、発行側と引用側のリンクのときは 2 次元配列を返します。配列の最初の列は発行物の名前、2 列目は発行物に対する参照を示す文字列です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p223">For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-652">共有ブックへの変更が別のワークシートに表示される場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-652"><b>True</b> if changes to the shared workbook are shown on a separate worksheet.</span></span> <span data-ttu-id="e2fbd-653">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-653">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-654">サーバー上にあるブックが修正されないようにロックします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-654">Locks the workbook on the server to prevent modification.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-p225">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p225">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-657">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="e2fbd-657">Required <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-658">開かれているブックに組み込まれる変更内容を含むブックのファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-658">The file name of the workbook that contains the changes to be merged into the open workbook.</span></span></param>
        <summary><span data-ttu-id="e2fbd-659">1 つのブックの変更内容を開いているブックに組み込みます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-659">Merges changes from one workbook into an open workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-660">ブックの 1 つの <see cref="T:Microsoft.Office.Interop.Excel.Model" /> データ モデルであるトップ レベル オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-660">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span></span> <span data-ttu-id="e2fbd-661">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="e2fbd-661">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-662">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-662">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-663"><b>True</b> の場合は、ブックが共有リストとして開かれています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-663"><b>True</b> if the workbook is open as a shared list.</span></span> <span data-ttu-id="e2fbd-664">値の取得のみ可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-664">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-665">ブックを共有リストとして保存するには、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-665">To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span> <span data-ttu-id="e2fbd-666">ブックを共有モードから排他モードに切り替える場合は、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-666">To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-667">オブジェクトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-667">Returns the name of the object.</span></span> <span data-ttu-id="e2fbd-668">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-668">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-669">指定されたブックのすべての名前を表すコレクションを返します (すべてのワークシート固有の名前 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> を含む)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-669">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span></span> <span data-ttu-id="e2fbd-670"><b>Names</b> コレクション オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-670">Read-only <b>Names</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-671">新しいウィンドウ、または指定されたウィンドウのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-671">Creates a new window or a copy of the specified window.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-672">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="e2fbd-672">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-673">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-673">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-674">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-674">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-675"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-675">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-676">メソッドから返される Excel または DDE/OLE リンクの <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> 名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-676">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span></span></param>
        <param name="ReadOnly"><span data-ttu-id="e2fbd-677">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-677">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-678">文書を読み込み専用として開くときは、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-678"><b>True</b> to open documents as read-only.</span></span> <span data-ttu-id="e2fbd-679">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-679">The default value is <b>False</b>.</span></span></param>
        <param name="Type"><span data-ttu-id="e2fbd-680">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-680">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span></span> <span data-ttu-id="e2fbd-681">リンクの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-681">The link type.</span></span></param>
        <summary><span data-ttu-id="e2fbd-682">リンクの参照元文書を開きます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-682">Opens the supporting documents for a link or links.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-683">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-683">Returns the parent object for the specified object.</span></span> <span data-ttu-id="e2fbd-684">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-684">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-685">指定されたブックを開く場合に指定する必要があるパスワードを設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-685">Returns or sets the password that must be supplied to open the specified workbook.</span></span> <span data-ttu-id="e2fbd-686">値の取得と設定が可能な文字列型 (<b>String</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-686">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-p237">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p237">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-692">指定されたブックのパスワードを暗号化するときに使用するアルゴリズムを示す文字列型 (<b>String</b>) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-692">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook.</span></span> <span data-ttu-id="e2fbd-693">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-693">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-694">パスワードで保護されたブックのファイル プロパティを Excel で暗号化するかどうかを指定するには、このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-694">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-695"><b>True</b> の 場合は、Microsoft Excel は、指定したパスワードで保護されたブックのファイル のプロパティを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-695"><b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook.</span></span> <span data-ttu-id="e2fbd-696">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-696">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-697">パスワードで保護された指定されたブックのファイル プロパティを Excel で暗号化するかどうかを指定するには、この <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-697">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-698">指定されたブックのパスワードを暗号化するときに使用するアルゴリズムのキーの長さを示す整数型 <b>(Integer)</b> の値を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-698">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span></span> <span data-ttu-id="e2fbd-699">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-699">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-700">パスワードで保護された指定されたブックのファイル プロパティを Excel で暗号化するかどうかを指定するには、この <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-700">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-701">指定されたブックのパスワードを暗号化するときに使用するアルゴリズムの暗号化プロバイダーを指定する文字列型 (<b>String</b>) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-701">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook.</span></span> <span data-ttu-id="e2fbd-702">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-702">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-703"><b>String</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-703"><b>String</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-704">アプリケーションの最後の区切り記号と名前を除く、アプリケーションへの完全なパスを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-704">Returns the complete path to the application, excluding the final separator and name of the application.</span></span> <span data-ttu-id="e2fbd-705">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-705">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-706">指定されたブック <see cref="T:Microsoft.Office.Core.Permission" /> のアクセス許可の設定を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-706">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-707"><b>True</b> の 場合は、共有ブックのユーザーの個人用ビューにリストのフィルターと並べ替えの設定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-707"><b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook.</span></span> <span data-ttu-id="e2fbd-708">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-708">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-709"><b>True</b> の 場合、印刷設定は、共有ブックのユーザーの個人用ビューに含まれています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-709"><b>True</b> if print settings are included in the user's personal view of the shared workbook.</span></span> <span data-ttu-id="e2fbd-710">読み取り/書き込み <b>ブール値 です</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-710">Read-write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-711">指定された <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> ブックのすべてのピボットテーブル キャッシュを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-711">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span></span> <span data-ttu-id="e2fbd-712">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-712">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-713">ワークシートのすべてのピボットテーブル レポートのコレクションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-713">Returns an object that represents a collection of all the PivotTable reports on a worksheet.</span></span> <span data-ttu-id="e2fbd-714">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-714">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary><span data-ttu-id="e2fbd-715">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-715">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName"><span data-ttu-id="e2fbd-716">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-716">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-717">この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-717">This argument is ignored.</span></span> <span data-ttu-id="e2fbd-718"><b>Post</b> メソッドを実行すると、ブックの投稿先を指定するためのダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-718">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span></span></param>
        <summary><span data-ttu-id="e2fbd-719">指定されたブックを Exchange のパブリック フォルダーに投稿します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-719">Posts the specified workbook to a public folder.</span></span> <span data-ttu-id="e2fbd-720">このメソッドは、Exchange サーバーに接続されている Exchange クライアントにだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-720">This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-721"><b>True</b> の 場合、このブックの計算は、表示されている数値の精度のみを使用して行われます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-721"><b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed.</span></span> <span data-ttu-id="e2fbd-722">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-722">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="e2fbd-723">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-723">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-724">印刷を開始するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-724">The number of the page at which to start printing.</span></span> <span data-ttu-id="e2fbd-725">この引数を省略すると、最初のページから印刷します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-725">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="e2fbd-726">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-726">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-727">印刷を終了するページの番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-727">The number of the last page to print.</span></span> <span data-ttu-id="e2fbd-728">この引数を省略すると、最後のページまで印刷します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-728">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="e2fbd-729">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-729">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-730">印刷部数を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-730">The number of copies to print.</span></span> <span data-ttu-id="e2fbd-731">この引数を省略すると、印刷部数は 1 部になります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-731">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="e2fbd-732">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-732">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-733"><b>True</b> の場合、印刷をする前に印刷プレビューを実行します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-733"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="e2fbd-734"><b>False</b>、または省略した場合、直ちに印刷を行います。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-734"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="e2fbd-735">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-735">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-736">アクティブなプリンターの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-736">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="e2fbd-737">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-737">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-738"><b>True</b> の場合、ファイルへ出力します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-738"><b>True</b> to print to a file.</span></span> <span data-ttu-id="e2fbd-739">指定 <paramref name="PrToFileName" /> しない場合は、出力ファイルの名前を入力するように求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-739">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="e2fbd-740">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-740">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-741"><b>True</b> の場合、部単位で印刷します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-741"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="e2fbd-742">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-742">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-743"><paramref name="PrintToFile" />True に設定<b>されている</b>場合、この引数は印刷するファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-743">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="e2fbd-744">オブジェクトを印刷します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-744">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-745">シートまたはブック内の全体的なページではなく、印刷ページの説明内の "ページ" を <paramref name="From" /> <paramref name="To" /> 参照します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-745">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="e2fbd-746">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-746">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="e2fbd-747">オブジェクトに対する変更を有効にします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-747">Enables changes to the object.</span></span></param>
        <summary><span data-ttu-id="e2fbd-748">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-748">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="e2fbd-749">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-749">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-750">ワークシートまたはブックのパスワード文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-750">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="e2fbd-751">パスワードでは大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-751">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="e2fbd-752">この引数を省略すると、ワークシートまたはブックはパスワードの使用なしで保護解除できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-752">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="e2fbd-753">この引数を指定すると、保護解除をするためには、そのパスワードが必要になります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-753">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="e2fbd-754">パスワードおよび対応するブック名またはシート名を一覧表にして、安全な場所に保管しておくことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-754">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="Structure"><span data-ttu-id="e2fbd-755">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-755">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-756">ブックの構造 (各シートの相対位置) を保護する場合は  <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-756"><b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span></span> <span data-ttu-id="e2fbd-757">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-757">The default value is <b>False</b>.</span></span></param>
        <param name="Windows"><span data-ttu-id="e2fbd-758">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-758">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-759">ブックのウィンドウを保護する場合は  <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-759"><b>True</b> to protect the workbook windows.</span></span> <span data-ttu-id="e2fbd-760">この引数を省略すると、ウィンドウは保護されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-760">If this argument is omitted, the windows aren’t protected.</span></span></param>
        <summary><span data-ttu-id="e2fbd-761">変更できないようにブックを保護します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-761">Protects a workbook so that it cannot be modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-762">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-762">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-763">保存されたファイルの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-763">A string indicating the name of the saved file.</span></span> <span data-ttu-id="e2fbd-764">完全なパスを含めできます。保存しない場合は、ファイルが現在のフォルダーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-764">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="Password"><span data-ttu-id="e2fbd-765">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-765">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-766">ファイルに指定する保護パスワードを示す、大文字と小文字を区別する文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-766">A case-sensitive string indicating the protection password to be given to the file.</span></span> <span data-ttu-id="e2fbd-767">15 文字以内にしてください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-767">Should be no longer than 15 characters.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="e2fbd-768">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-768">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-769">このファイルの書き込みを制限するパスワードを示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-769">A string indicating the write-reservation password for this file.</span></span> <span data-ttu-id="e2fbd-770">ファイルをパスワードと一緒に保存し、そのファイルを開いた時にパスワードを指定しない場合、ファイルは読み取り専用で開かれます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-770">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="e2fbd-771">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-771">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-772"><b>True</b> を指定 すると、ファイルを開く際に、ファイルを読み取り専用で開くことを推奨するメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-772"><b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="e2fbd-773">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-773">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-774">バックアップ ファイルを作成するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-774"><b>True</b> to create a backup file.</span></span></param>
        <param name="SharingPassword"><span data-ttu-id="e2fbd-775">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-775">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-776">共用としてファイルを保護するときに使用するパスワードを示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-776">A string indicating the password to be used to protect the file for sharing.</span></span></param>
        <summary><span data-ttu-id="e2fbd-777">ブックを保存し、共用として保護します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-777">Saves the workbook and protects it for sharing.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-p267">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p267">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary><span data-ttu-id="e2fbd-783">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-783">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-784">ブックのシートの順序が保護されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-784"><b>True</b> if the order of the sheets in the workbook is protected.</span></span> <span data-ttu-id="e2fbd-785">値の取得のみ可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-785">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-786">ブックのウィンドウが保護されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-786"><b>True</b> if the windows of the workbook are protected.</span></span> <span data-ttu-id="e2fbd-787">値の取得のみ可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-787">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-788">コレクションを返 <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-788">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span></span> <span data-ttu-id="e2fbd-789">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-789">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days"><span data-ttu-id="e2fbd-790">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-790">Required <b>Integer</b>.</span></span> <span data-ttu-id="e2fbd-791">変更ログの変更内容を保持する日数を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-791">The number of days that changes in the change log are to be retained.</span></span></param>
        <param name="SharingPassword"><span data-ttu-id="e2fbd-792">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-792">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-793">ブックの共有の保護を解除するパスワードを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-793">The password that unprotects the workbook for sharing.</span></span> <span data-ttu-id="e2fbd-794">ブックの共有がパスワードで保護されているときに、この引数を省略すると、ユーザーはパスワードの入力を要求されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-794">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span></span></param>
        <summary><span data-ttu-id="e2fbd-795">指定されたブックの変更ログからエントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-795">Removes entries from the change log for the specified workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-796">オブジェクトを読み取り専用で開いている場合は <b>True</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-796">Returns <b>True</b> if the object has been opened as read-only.</span></span> <span data-ttu-id="e2fbd-797">取得のみ可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-797">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-798">このプロパティは、SharePoint サイトにリンクしているリストにのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-798">This property is used only for lists that are linked to a SharePoint site.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-799">ブックが読み取り専用を推奨する設定で保存されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-799"><b>True</b> if the workbook was saved as read-only recommended.</span></span> <span data-ttu-id="e2fbd-800">値の取得のみ可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-800">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-801">[読み取り専用を推奨する] チェック ボックスをオンにして保存されたブックを開こうとすると、読み取り専用で開くことを推奨するメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-801">When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</span></span></para>
          <para><span data-ttu-id="e2fbd-802">このプロパティを <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 変更するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-802">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-803">前景のスマート タグ チェックが発生し、前に注釈を付けたことがないデータに自動的に注釈を付ける。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-803">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-804">ブックの外部データ範囲とピボットテーブル レポートをすべて更新します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-804">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-805">プロパティが True に <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> 設定されているオブジェクト <b>は</b> 、バックグラウンドで更新されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-805">Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><span data-ttu-id="e2fbd-806">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-806">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-807">すべての変更が拒否された日時を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-807">Specifies when all the changes are rejected.</span></span></param>
        <param name="Who"><span data-ttu-id="e2fbd-808">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-809">すべての変更を拒否した人を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-809">Specifies by whom all the changes are rejected.</span></span></param>
        <param name="Where"><span data-ttu-id="e2fbd-810">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-810">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-811">すべての変更が拒否された場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-811">Specifies where all the changes are rejected.</span></span></param>
        <summary><span data-ttu-id="e2fbd-812">指定された共有ブックのすべての変更を拒否します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-812">Rejects all changes in the specified shared workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding"><span data-ttu-id="e2fbd-813">必須 <see cref="T:Microsoft.Office.Core.MsoEncoding" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-813">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span></span> <span data-ttu-id="e2fbd-814">ブックに適用するエンコードの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-814">The encoding that is to be applied to the workbook.</span></span></param>
        <summary><span data-ttu-id="e2fbd-815">指定されたドキュメント エンコードを使用して、ブックを HTML ドキュメントとして再読み込みします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-815">Reloads a workbook based on an HTML document, using the specified document encoding.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-816">HTML <b>に適用可能な msoEncoding</b> 定数だけが <b>ReloadAs メソッドで動作</b> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-816">Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType"><span data-ttu-id="e2fbd-817">削除する <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> 情報の種類を示す値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-817">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span></span></param>
        <summary><span data-ttu-id="e2fbd-818">指定された種類の情報をすべてブックから削除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-818">Removes all information of the specified type from the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-819"><b>True</b> の 場合は、指定したブックから個人情報を削除できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-819"><b>True</b> if personal information can be removed from the specified workbook.</span></span> <span data-ttu-id="e2fbd-820">既定値は、 <b>false を指定</b> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-820">The default value is <b>False</b>.</span></span> <span data-ttu-id="e2fbd-821">読み取り/書き込み <b>ブール値</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-821">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e2fbd-822">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-822">Required <b>Integer</b>.</span></span> <span data-ttu-id="e2fbd-823">ユーザー インデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-823">The user index.</span></span></param>
        <summary><span data-ttu-id="e2fbd-824">指定されたユーザーの接続を共有ブックから解除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-824">Disconnects the specified user from the shared workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-p281">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p281">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-p282">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p282">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage"><span data-ttu-id="e2fbd-829">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-829">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-830"><b>False</b> の場合、メッセージを表示しません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-830"><b>False</b> does not display the message.</span></span> <span data-ttu-id="e2fbd-831"><b>True</b> の場合、メッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-831"><b>True</b> displays the message.</span></span></param>
        <summary><span data-ttu-id="e2fbd-832">校閲用に送信されたブックの作成者に電子メール メッセージを送信し、校閲者がブックの校閲を終わったことを知らせます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-832">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-833">このメソッド <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> を使用して、ブックの共同レビューを開始します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-833">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook.</span></span> <span data-ttu-id="e2fbd-834">共同校閲サイクルの一部ではないブックで <b>ReplyWithChanges</b> メソッドを実行すると、ユーザーはエラーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-834">If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-835">ブックの <see cref="T:Microsoft.Office.Interop.Excel.Research" /> リサーチ サービスを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-835">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span></span> <span data-ttu-id="e2fbd-836">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-836">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-837"><b>Research</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-837"><b>Research</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-838">色パレットを既定の色に戻します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-838">Resets the color palette to the default colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-839">共有リストとして開いている間にブックが保存された回数を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-839">Returns the number of times the workbook has been saved while open as a shared list.</span></span> <span data-ttu-id="e2fbd-840">ブックが排他モードで開いている場合、このプロパティは 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-840">If the workbook is open in exclusive mode, this property returns 0 (zero).</span></span> <span data-ttu-id="e2fbd-841">整数型 ( <b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-841">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-842"><b>RevisionNumber</b> プロパティは、ブックのローカル コピーが保存されたときにだけ更新され、リモート コピーが保存されたときには更新されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-842">The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-843">ブックの現在の回覧先を使って、ブックを回覧します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-843">Routes the workbook, using the workbook's current routing slip.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-844">ブックのルーティングは、プロパティ <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> を True に <b>設定します</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-844">Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-845"><b>ブック</b> が次の受信者にルーティングされている場合は True。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-845"><b>True</b> if the workbook has been routed to the next recipient.</span></span> <span data-ttu-id="e2fbd-846"><b>False</b> ブックをルーティングする必要がある場合です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-846"><b>False</b> if the workbook needs to be routed.</span></span> <span data-ttu-id="e2fbd-847">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-847">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-848">ブックが現在の受信者に対して回覧されなかった場合 (たとえば、回覧先が設定されていないドキュメントの場合や、作成された直後の回覧先の場合)、このプロパティに必ず <b>False</b> が設定されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-848">If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-849">ブックの <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> ルーティング スリップを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-849">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span></span> <span data-ttu-id="e2fbd-850">回覧先がない場合にこのプロパティを読み取る場合は、エラーが発生します (最初に <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> プロパティを確認してください)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-850">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span></span> <span data-ttu-id="e2fbd-851">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-851">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which"><span data-ttu-id="e2fbd-852">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-852">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span></span></param>
        <summary><span data-ttu-id="e2fbd-853">ブックに登録された Auto_Open、Auto_Close、Auto_Activate、Auto_Deactivate のいずれかのマクロを実行します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-853">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span></span> <span data-ttu-id="e2fbd-854">このメソッドは、以前のバージョンとの互換性を保持するためにあります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-854">This method is included for backward compatibility.</span></span> <span data-ttu-id="e2fbd-855">これらのマクロの代わりに、Open イベント、Close イベント、Activate イベント、Deactivate イベントを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-855">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-856">指定されたブックへの変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-856">Saves changes to the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-857">ブック ファイルを開く場合は、このメソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-857">To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="e2fbd-858">ブックをディスクに書き込みせずに保存済みとしてマークするには、そのプロパティを <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> <b>True</b>に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-858">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</span></span></para>
          <para><span data-ttu-id="e2fbd-859">初めてブックを保存する場合は、この <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> メソッドを使用してファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-859">The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-860">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-860">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-861">保存するファイルの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-861">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="e2fbd-862">完全なパスを含めできます。保存しない場合は、ファイルが現在のフォルダーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-862">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="FileFormat"><span data-ttu-id="e2fbd-863">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-863">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-864">ファイルを保存するときに使用するファイル形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-864">The file format to use when you save the file.</span></span> <span data-ttu-id="e2fbd-865">有効な選択肢の一覧については、プロパティを参照 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-865">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="e2fbd-866">既存のファイルの場合、既定の形式は指定された最後のファイル形式です。新しいファイルの場合、既定値は使用されている Excel のバージョンの形式です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-866">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="Password"><span data-ttu-id="e2fbd-867">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-867">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-868">ファイルを保護するためのパスワードを表す 15 文字以内の文字列を指定します。大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-868">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="e2fbd-869">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-869">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-870">ファイルの書き込みパスワードを表す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-870">A string that indicates the write-reservation password for this file.</span></span> <span data-ttu-id="e2fbd-871">パスワードを設定して保存したファイルを、パスワードを指定しないで開くと、ファイルは読み取り専用で開かれます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-871">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="e2fbd-872">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-872">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-873"><b>True</b> を指定 すると、ファイルを読み取り専用として開くことを推奨するファイルが開いているときにメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-873"><b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="e2fbd-874">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-874">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-875">バックアップ ファイルを作成するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-875"><b>True</b> to create a backup file.</span></span></param>
        <param name="AccessMode"><span data-ttu-id="e2fbd-876">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-876">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span></span></param>
        <param name="ConflictResolution"><span data-ttu-id="e2fbd-877">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-877">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="e2fbd-878">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-878">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-879">最近使用したファイルの一覧にブックを追加するには、<b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-879"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="e2fbd-880">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-880">The default value is <b>False</b>.</span></span></param>
        <param name="TextCodepage"><span data-ttu-id="e2fbd-881">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-881">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-882">英語の Excel では使用できません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-882">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="e2fbd-883">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-883">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-884">英語の Excel では使用できません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-884">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="Local"><span data-ttu-id="e2fbd-885">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-885">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-886"><b>True を</b> 指定すると、Excel の言語 (コントロール パネルの設定を含む) に対してファイルが保存されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-886"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="e2fbd-887"><b>False</b> (既定値) を指定すると、Visual Basic for Applications (VBA) の言語 (Workbooks.Open を実行する VBA プロジェクトが国際化された古い XL5/95 VBA プロジェクトではない限り、通常は英語 (米国)) に対してファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-887"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="e2fbd-888">ブックへの変更を別のファイルに保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-888">Saves changes to the workbook in a different file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-889"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-889">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-890">保存するファイルの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-890">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="e2fbd-891">完全なパスを含めできます。保存しない場合は、ファイルが現在のフォルダーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-891">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="Map"><span data-ttu-id="e2fbd-892">必須 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-892">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="e2fbd-893">データに対して適用するスキーマ マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-893">The schema map to apply to the data.</span></span></param>
        <summary><span data-ttu-id="e2fbd-894">指定された XML スキーマ マップに対してマップされたデータを、XML データ ファイルへエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-894">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-895">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-895">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="e2fbd-896">Excel が、指定されたスキーマ マップを使用してデータをエクスポートすることができない場合は、このメソッドは実行時エラーを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-896">This method will result in a run-time error if Excel cannot export data with the specified schema map.</span></span> <span data-ttu-id="e2fbd-897">Excel で指定されたスキーマ マップを使用してデータをエクスポートできるかどうかを確認するには、プロパティを使用 <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-897">To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="e2fbd-898">必須。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-898">Required.</span></span> <span data-ttu-id="e2fbd-899">ファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-899">Specifies the file name for the copy.</span></span></param>
        <summary><span data-ttu-id="e2fbd-900">ブックのコピーをファイルに保存します。メモリ上のブックに対しては、変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-900">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-901">指定されたブックが最終保存から変更されていない場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-901"><b>True</b> if no changes have been made to the specified workbook since it was last saved.</span></span> <span data-ttu-id="e2fbd-902">値の取得と設定が可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-902">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-903">ブックが一度も保存されていない場合、そのプロパティは空 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> の文字列 ("") を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-903">If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</span></span></para>
          <para><span data-ttu-id="e2fbd-904">変更を加えたブックを保存しない、または保存するかどうかを確認するダイアログ ボックスを非表示にして閉じる場合は、このプロパティに <b>True</b> を設定してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-904">You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-905">Microsoft Excel がブックに外部リンクの値を保存する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-905"><b>True</b> if Microsoft Excel saves external link values with the workbook.</span></span> <span data-ttu-id="e2fbd-906">値の取得と設定が可能なブール型 (<b>Boolean</b>) の値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-906">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary><span data-ttu-id="e2fbd-907">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-907">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients"><span data-ttu-id="e2fbd-908">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-908">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-909">FAX の送信先のユーザーの FAX 番号と電子メール アドレスを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-909">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span></span> <span data-ttu-id="e2fbd-910">複数の受信者をセミコロンで区切ります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-910">Separate multiple recipients with a semicolon.</span></span></param>
        <param name="Subject"><span data-ttu-id="e2fbd-911">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-911">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-912">FAX ドキュメントの件名行を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-912">A string that represents the subject line for the faxed document.</span></span></param>
        <param name="ShowMessage"><span data-ttu-id="e2fbd-913">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-913">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-914"><b>True</b> を指定すると、送信前に Fax メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-914"><b>True</b> displays the fax message before sending it.</span></span> <span data-ttu-id="e2fbd-915"><b>False</b> を指定すると、Fax メッセージは表示されずに直ちに Fax が送信されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-915"><b>False</b> sends the fax without displaying the fax message.</span></span></param>
        <summary><span data-ttu-id="e2fbd-916">指定された受信者に FAX としてワークシートを送信します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-916">Sends a worksheet as a fax to the specified recipients.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-917"><b>SendFaxOverInternet</b> メソッドを使用するには、ユーザーのコンピューターで Fax サービスが有効になっている必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-917">Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</span></span></para>
          <para><span data-ttu-id="e2fbd-918">パラメーターで FAX 番号を指定するために使用 <paramref name="Recipients" /> する形式は、次 <paramref name="recipientsfaxnumber@usersfaxprovider" /> のいずれかまたはです <paramref name="recipientsname@recipientsfaxnumber" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-918">The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />.</span></span> <span data-ttu-id="e2fbd-919">次のレジストリ パスから、ユーザーの FAX プロバイダーの情報にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-919">You can access the user's fax provider information using the following registry path:</span></span></para>
          <para><span data-ttu-id="e2fbd-920">HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</span><span class="sxs-lookup"><span data-stu-id="e2fbd-920">HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</span></span></para>
          <para><span data-ttu-id="e2fbd-921">このレジストリ パスの FaxAddress キーの値を参照して、宛先に使用する形式を判断できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-921">Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients"><span data-ttu-id="e2fbd-922">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-922">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-923">メッセージを送信する受信者の一覧を表示する文字列です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-923">A string that lists the people to whom to send the message.</span></span> <span data-ttu-id="e2fbd-924">未解決の名前および電子メールのアドレス帳または完全な電子メール アドレスのエイリアスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-924">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span></span> <span data-ttu-id="e2fbd-925">複数の受信者をセミコロン (;) で区切ります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-925">Separate multiple recipients with a semicolon (;).</span></span> <span data-ttu-id="e2fbd-926">空白のままにして False に設定すると、エラー メッセージが表示され、メッセージ <paramref name="ShowMessage" /> は送信されません。 <b></b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-926">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span></span></param>
        <param name="Subject"><span data-ttu-id="e2fbd-927">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-927">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-928">メッセージの件名の文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-928">A string for the subject of the message.</span></span> <span data-ttu-id="e2fbd-929">空白のままにすると、件名は "Please review " になります <paramref name="filename" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-929">If left blank, the subject will be: Please review "<paramref name="filename" />".</span></span></param>
        <param name="ShowMessage"><span data-ttu-id="e2fbd-930">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-930">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-931">メソッドを実行したときにメッセージを表示するかどうかを示すブール型 ( <b>Boolean</b> ) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-931">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span></span> <span data-ttu-id="e2fbd-932">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-932">The default value is <b>True</b>.</span></span> <span data-ttu-id="e2fbd-933"><b>False</b> に設定すると、最初に送信者にメッセージを表示しないで、受信者に自動的に送信されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-933">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span></span></param>
        <param name="IncludeAttachment"><span data-ttu-id="e2fbd-934">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-934">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-935">添付ファイルまたはサーバーの場所へのリンクをメッセージに含めるかどうかを示すブール型 ( <b>Boolean</b> ) の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-935">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span></span> <span data-ttu-id="e2fbd-936">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-936">The default value is <b>True</b>.</span></span> <span data-ttu-id="e2fbd-937"><b>False</b> に設定すると、文書は共有の場所に格納されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-937">If set to <b>False</b>, the document must be stored at a shared location.</span></span></param>
        <summary><span data-ttu-id="e2fbd-938">校閲用のブックを指定された受信者に電子メール メッセージとして送信します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-938">Sends a workbook in an e-mail message for review to the specified recipients.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-939"><b>SendForReview</b> メソッドは、共同校閲サイクルを開始します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-939">The <b>SendForReview</b> method starts a collaborative review cycle.</span></span> <span data-ttu-id="e2fbd-940">レビュー サイクル <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> を終了するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-940">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients"><span data-ttu-id="e2fbd-941">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="e2fbd-941">Required <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-942">受信者の名前をテキストとして指定するか、複数の受信者がある場合はテキスト文字列の配列として指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-942">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span></span> <span data-ttu-id="e2fbd-943">少なくとも 1 人の受信者を指定する必要があります。すべての受信者が [宛先] 受信者として追加されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-943">At least one recipient must be specified, and all recipients are added as To recipients.</span></span></param>
        <param name="Subject"><span data-ttu-id="e2fbd-944">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-944">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-945">メッセージの件名を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-945">Specifies the subject of the message.</span></span> <span data-ttu-id="e2fbd-946">この引数を省略すると、ドキュメントの名前が使われます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-946">If this argument is omitted, the document name is used.</span></span></param>
        <param name="ReturnReceipt"><span data-ttu-id="e2fbd-947">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-947">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-948"><b>True</b> を指定すると、受信通知が要求されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-948"><b>True</b> to request a return receipt.</span></span> <span data-ttu-id="e2fbd-949"><b>False</b> を返すメッセージを要求しない。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-949"><b>False</b> not to request a return receipt.</span></span> <span data-ttu-id="e2fbd-950">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-950">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="e2fbd-951">組み込まれているメール システムを使うことによって、ブックを送信します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-951">Sends the workbook by using the installed mail system.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat"><span data-ttu-id="e2fbd-952">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-952">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Priority"><span data-ttu-id="e2fbd-953">このパラメーターは Macintosh 専用です。使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-953">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="e2fbd-p318">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p318">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-956">2007 年 1 月 1 日を実行しているサーバーに保存されているブックに対して指定されたポリシーを表す <see cref="T:Microsoft.Office.Core.ServerPolicy" /> 2nd_OSS_NoVersionします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-956">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span></span> <span data-ttu-id="e2fbd-957">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-957">Read-only.</span></span></summary>
        <value><span data-ttu-id="e2fbd-958"><b>ServerPolicy</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-958"><b>ServerPolicy</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-959">開発者がサーバー上に表示されるブック内の発行済みオブジェクトの一覧とやりとりができるようにします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-959">Allows a developer to interact with the list of published objects in the workbook that are shown on the server.</span></span> <span data-ttu-id="e2fbd-960">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-960">Read-only.</span></span></summary>
        <value><see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" /></value>
        <remarks><para><span data-ttu-id="e2fbd-961">このプロパティは、Excel Services に発行できるアイテムのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-961">This property returns a collection of the items that could be published to Excel Services.</span></span>  <span data-ttu-id="e2fbd-962">テーブル、ピボットテーブル、名前付き範囲、およびグラフを含めできます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-962">It can include Tables, PivotTables, Named Ranges, and Charts.</span></span>  <span data-ttu-id="e2fbd-963">また、シートと前述のリストが混合されていない限り、シートを含めもあります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-963">It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-964"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-964">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-965">メソッドから返される DDE/OLE リンクの <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> 名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-965">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span></span></param>
        <param name="Procedure"><span data-ttu-id="e2fbd-966"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-966">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-967">リンクを更新したときに実行するプロシージャの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-967">The name of the procedure to be run when the link is updated.</span></span> <span data-ttu-id="e2fbd-968">Excel 4.0 マクロ、または Visual Basic のプロシージャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-968">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span></span> <span data-ttu-id="e2fbd-969">この引数に空の文字列 ("") を指定すると、リンクを更新したときにプロシージャは実行されません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-969">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span></span></param>
        <summary><span data-ttu-id="e2fbd-970">リンクを更新したときに実行されるプロシージャの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-970">Sets the name of a procedure that runs whenever a DDE link is updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider"><span data-ttu-id="e2fbd-971">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-971">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-972">暗号化プロバイダーを示す、大文字と小文字を区別する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-972">A case sensitive string of the encryption provider.</span></span></param>
        <param name="PasswordEncryptionAlgorithm"><span data-ttu-id="e2fbd-973">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-973">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-974">アルゴリズムの短縮名を示す、大文字と小文字を区別する文字列 (たとえば、"RC4") を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-974">A case sensitive string of the algorithmic short name (i.e. "RC4").</span></span></param>
        <param name="PasswordEncryptionKeyLength"><span data-ttu-id="e2fbd-975">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-975">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-976">暗号鍵の長さを、40 以上の 8 の乗数で指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-976">The encryption key length which is a multiple of 8 (40 or greater).</span></span></param>
        <param name="PasswordEncryptionFileProperties"><span data-ttu-id="e2fbd-977">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-977">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-978"><b>True</b> (既定値) の場合、ファイル プロパティを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-978"><b>True</b> (default) to encrypt file properties.</span></span></param>
        <summary><span data-ttu-id="e2fbd-979">パスワードを使用するブックの暗号化のオプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-979">Sets the options for encrypting workbooks using passwords.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-980">引数 <paramref name="PasswordEncryptionProvider" /> <paramref name="PasswordEncryptionAlgorithm" /> 、および引数は互 <paramref name="PasswordEncryptionKeyLength" /> いに独立している必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-980">The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other.</span></span> <span data-ttu-id="e2fbd-981">暗号化プロバイダーを選択すると、選択できるアルゴリズムと鍵の長さは限定されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-981">A selected encryption provider limits the set of algorithms and key length that can be chosen.</span></span></para>
          <para><span data-ttu-id="e2fbd-982">引数 <paramref name="PasswordEncryptionKeyLength" /> に対して、キーの長さの範囲に固有の制限はありません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-982">For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length.</span></span> <span data-ttu-id="e2fbd-983">この範囲は、暗号化アルゴリズムも定めている暗号サービス プロバイダー (CSP) によって定められています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-983">The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-984">指定した <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> 文書があるドキュメント ワークスペースを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-984">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span></span> <span data-ttu-id="e2fbd-985">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-985">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-986">指定された <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> ブックのすべてのシートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-986">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span></span> <span data-ttu-id="e2fbd-987">読み取り専用 <b>シート</b> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-987">Read-only <b>Sheets</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-988"><b>True</b> の 場合は、共有リストとして開いているブックに競合履歴ワークシートが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-988"><b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list.</span></span> <span data-ttu-id="e2fbd-989">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-989">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-990">指定したブックが共有ファイルとして開かれていない場合、このプロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-990">If the specified workbook isn't open as a shared list, this property fails.</span></span> <span data-ttu-id="e2fbd-991">ブックが共有リストとして開いているかどうかを確認するには、プロパティを使用 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-991">To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-992">このプロパティは、ピボットグラフ フィルター ウィンドウの表示を制御します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-992">This property controls the visibility of the PivotChart Filter Pane.</span></span> <span data-ttu-id="e2fbd-993">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-993">Read/write.</span></span></summary>
        <value><span data-ttu-id="e2fbd-994"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-994"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-p335">このプロパティは、ピボットグラフ フィルター ウィンドウを表示するかどうかを制御し (オン/オフを切り替え) ます。表示するには、<b>PivotChart</b> オブジェクトを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p335">This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).  In order for it to be visible, a <b>PivotChart</b> object must be selected. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-997"><b>ピボットテーブル</b> フィールド リストを表示できる場合は True (既定値) です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-997"><b>True</b> (default) if the PivotTable field list can be shown.</span></span> <span data-ttu-id="e2fbd-998">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-998">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-999">ブックのデジタル署名を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-999">Returns the digital signatures for a workbook.</span></span> <span data-ttu-id="e2fbd-1000">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1000">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.SignatureSet" /></value>
        <remarks><para><span data-ttu-id="e2fbd-1001">Excel2007 ブックにデジタル署名し、ブック内の他の署名を確認するには、Microsoft CryptoAPI と一意のデジタル署名証明書が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1001">To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate.</span></span> <span data-ttu-id="e2fbd-1002">CryptoAPI が Internet Explorer 4.01 以上と共にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1002">The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later.</span></span> <span data-ttu-id="e2fbd-1003">デジタル署名証明書は、認証機関から取得できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1003">You can obtain a digital signature certificate from a certification authority.</span></span>
</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1004">ブックに <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> 関連付けられているオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1004">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span></span></summary>
        <value><span data-ttu-id="e2fbd-1005">ブック <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1005">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span></span></value>
        <remarks><para><span data-ttu-id="e2fbd-1006">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1006">Read/write.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1007">スマート ドキュメント <see cref="T:Microsoft.Office.Core.SmartDocument" /> ソリューションの設定を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1007">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span></span> <span data-ttu-id="e2fbd-1008">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1008">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1009">スマート タグ <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> で実行できるオプションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1009">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1010">指定されたブック <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> のすべてのスタイルを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1010">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span></span> <span data-ttu-id="e2fbd-1011">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1011">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1012">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1012">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1013">ドキュメント ワークスペースの一部であるドキュメントのメソッドとプロパティへのアクセスを提供するオブジェクト <see cref="T:Microsoft.Office.Core.Sync" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1013">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1014">現在のブック <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> で使用されているスタイルを参照する現在のブックのコレクション オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1014">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span></span> <span data-ttu-id="e2fbd-1015">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1015">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /></value>
        <remarks><para><span data-ttu-id="e2fbd-1016">プロパティから返された表スタイルを操作できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1016">You can manipulate the table styles returned by the property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1017">ブックがテンプレートとして保存されるとき、外部データ参照を削除する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1017"><b>True</b> if external data references are removed when the workbook is saved as a template.</span></span> <span data-ttu-id="e2fbd-1018">取得/設定が可能な <b>Boolean</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1018">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1019">現在のブックに適用されるテーマを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1019">Returns the theme applied to the current workbook.</span></span> <span data-ttu-id="e2fbd-1020">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1020">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.OfficeTheme" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1021">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1021">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-1022">フォームのデザイン モードのオンとオフを切り替えます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1022">Toggles form design mode on or off.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-1023">Excel がフォームデザイン モードの場合、コントロール ツールボックス ツール バーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1023">When Excel is in form design mode, the Control Toolbox toolbar is displayed.</span></span> <span data-ttu-id="e2fbd-1024">このツールバーを使って、コマンド ボタン、スクロール バー、オプション ボタンなどの ActiveX コントロールを挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1024">You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons.</span></span> <span data-ttu-id="e2fbd-1025">デザイン モードではイベント プロシージャは実行されず、埋め込みコントロールをクリックすると、コントロールのサイズ変更ハンドルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1025">In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="e2fbd-1026">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1026">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-1027">シートまたはブックの保護を解除するために使用するパスワードを示す文字列。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1027">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="e2fbd-1028">シートまたはブックがパスワードで保護されていない場合、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1028">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="e2fbd-1029">パスワードで保護されているシートに対してこの引数を省略すると、パスワードの入力を求められます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1029">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="e2fbd-1030">パスワードで保護されているブックに対してこの引数を省略すると、メソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1030">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="e2fbd-1031">シートまたはブックの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1031">Removes protection from a sheet or workbook.</span></span> <span data-ttu-id="e2fbd-1032">保護されていないシートやブックに対しては、このメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1032">This method has no effect if the sheet or workbook isn't protected.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-p347">パスワードを忘れると、シートまたはブックの保護を解除できなくなってしまうので注意してください。パスワードおよび対応するブック名またはシート名を一覧表にして、安全な場所に保管しておくことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p347">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword"><span data-ttu-id="e2fbd-1035">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1035">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-1036">ブックのパスワードを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1036">The workbook password.</span></span></param>
        <summary><span data-ttu-id="e2fbd-1037">共有保護を解除し、ブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1037">Turns off protection for sharing and saves the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-p349">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p349">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-p350">メモリ上の読み取り専用ブックを、ディスク上で保存されているものに置き換えます (ディスク上のブックの方が新しい場合)。ブックが開かれてから、ディスク上のブックが変更されていない場合には、更新が行われません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p350">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-p351">このメソッドは、同じブックをユーザー A は読み取り専用で、ユーザー B は読み書き可能で開いた場合などに便利です。通常は、ユーザー B がブックに変更を加えて保存すると、ユーザー A は、いったんブックを閉じてから再び開かない限り、変更を反映させることはできません。この場合、<b>UpdateFromFile</b> メソッドを使うと、ブックを閉じることなくメモリ上のブックを更新できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-p351">This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings. The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e2fbd-1047">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1047">Optional <b>Object</b>.</span></span> <span data-ttu-id="e2fbd-1048">メソッドから返される、更新する Microsoft Excel または DDE/OLE リンクの <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> 名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1048">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span></span></param>
        <param name="Type"><span data-ttu-id="e2fbd-1049">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1049">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span></span></param>
        <summary><span data-ttu-id="e2fbd-1050">Excel、DDE、OLE のいずれかのリンクを更新します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1050">Updates a Microsoft Excel, DDE, or OLE link (or links).</span></span></summary>
        <remarks><para><span data-ttu-id="e2fbd-1051">引数を指定せずに <b>UpdateLink</b> メソッドを実行すると、ワークシートのすべてのリンクが更新されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1051">When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1052">埋め込まれた OLE リンクを更新するブックの設定を示す <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> 定数を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1052">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span></span> <span data-ttu-id="e2fbd-1053">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1053">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1054"><b>True の</b> 場合は、ブック内のリモート参照を更新します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1054"><b>True</b> if Microsoft Excel updates remote references in the workbook.</span></span> <span data-ttu-id="e2fbd-1055">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1055">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1056">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1056">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1057">ブックを共有リストとして開いている各ユーザーに関する情報を提供する、1 から始まる 2 次元の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1057">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span></span> <span data-ttu-id="e2fbd-1058">2 つ目の次元の最初の要素はユーザー名、2 番目の要素はユーザーがブックを最後に開いた日付と時刻、3 番目の要素はファイルの種類を示します。ファイルの種類は、1 であれば排他、2 であれば共有を表します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1058">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span></span> <span data-ttu-id="e2fbd-1059">読み取り専用 <b>オブジェクト</b> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1059">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1060"><b>UserStatus</b> プロパティの取得する値には、指定したブックを読み取り専用で開いているユーザーの情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1060">The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1061">ブックがセルの内容全体に一致する検索パターンを使用する場合は<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-1061"><b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span></span> <span data-ttu-id="e2fbd-1062">読み取り専用 <b>のブール</b> 値 ( C# では<b>ブール</b> 値)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1062">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1063"><b>True</b> の 場合、ブックでは、文字列の比較と検索のワイルドカードが有効になります。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1063"><b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span></span> <span data-ttu-id="e2fbd-1064">読み取り専用 <b>のブール</b> 値 ( C# では<b>ブール</b> 値)。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1064">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1065"><b>True</b> の 場合Visual Basic for Applications指定したブックのプロジェクトがデジタル署名されています。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1065"><b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed.</span></span> <span data-ttu-id="e2fbd-1066">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1066">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1067">指定されたブックの Visual Basic プロジェクトを表す <b>VBProject</b> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1067">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook.</span></span> <span data-ttu-id="e2fbd-1068">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1068">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1069">ドキュメントを Web ページとして保存したり、Web ページを開く場合に使用されるブック レベルの属性を含むコレクション <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1069">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span></span> <span data-ttu-id="e2fbd-1070">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1070">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2fbd-1071">指定されたブックが Web ページとして保存されている場合、そのプレビューを Web ページとして表示します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1071">Displays a preview of the specified workbook as it would look if saved as a Web page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1072">指定されたブック <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> のすべてのウィンドウを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1072">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span></span> <span data-ttu-id="e2fbd-1073">読み取り専用 <b>の Windows</b> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1073">Read-only <b>Windows</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1074">このプロパティは、表示および非表示の両方のウィンドウのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1074">This property returns a collection of both visible and hidden windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1075">指定された <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> ブックのすべてのワークシートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1075">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span></span> <span data-ttu-id="e2fbd-1076">読み取り専用 <b>シート</b> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1076">Read-only <b>Sheets</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1077">このプロパティでオブジェクト修飾子を指定しないコードを使用すると、作業中のブックのすべてのワークシートが返されます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1077">Using this property without an object qualifier returns all the worksheets in the active workbook.</span></span></para>
          <para><span data-ttu-id="e2fbd-1078">このプロパティはマクロ シートを返します。これらのシート <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> を取得するには <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> 、プロパティまたはプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1078">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1079">ブックの書き込みパスワードを表す文字列型 (<b>String</b>) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1079">Returns or sets a <b>String</b> for the write password of a workbook.</span></span> <span data-ttu-id="e2fbd-1080">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1080">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1081">ブックが書き込み予約の場合は<b>True。</b></span><span class="sxs-lookup"><span data-stu-id="e2fbd-1081"><b>True</b> if the workbook is write-reserved.</span></span> <span data-ttu-id="e2fbd-1082">読み取り専用の <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1082">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1083">このプロパティ <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> を設定するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1083">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1084">現在のブックの書き込み権限のあるユーザーの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1084">Returns the name of the user who currently has write permission for the workbook.</span></span> <span data-ttu-id="e2fbd-1085">読み取りのみ可能な <b>String</b> 値です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1085">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="e2fbd-1086"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1086">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-1087">XML データ ファイルへの Uniform Resource Locator (URL) または汎用名前付け規則 (UNC) パスを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1087">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span></span></param>
        <param name="ImportMap"><span data-ttu-id="e2fbd-1088">必須 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1088">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="e2fbd-1089">ファイルのインポート時に適用するスキーマ マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1089">The schema map to apply when importing the file.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="e2fbd-1090">オプション <b>のブール値 です</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1090">Optional <b>Boolean</b>.</span></span> <span data-ttu-id="e2fbd-1091">パラメーターに値が指定されていない場合、このパラメーターは、パラメーターで指定されたスキーマ マップにマップされているデータを上書きするかどうかを <paramref name="Destination" /> 指定 <paramref name="ImportMap" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1091">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span></span> <span data-ttu-id="e2fbd-1092">データを <b>上書きするには True</b> に設定し、既存のデータに新しいデータを追加するには <b>False</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1092">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span></span> <span data-ttu-id="e2fbd-1093">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1093">The default value is <b>True</b>.</span></span> <span data-ttu-id="e2fbd-1094">パラメーターに値を指定する場合、このパラメーターは既存のデータを上書き <paramref name="Destination" /> するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1094">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span></span> <span data-ttu-id="e2fbd-1095">既存の <b>データを</b> 上書きする場合は True に設定し、データが上書きされる場合は <b>False</b> に設定してインポートを取り消します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1095">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span></span> <span data-ttu-id="e2fbd-1096">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1096">The default value is <b>True</b>.</span></span></param>
        <param name="Destination"><span data-ttu-id="e2fbd-1097">省略 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1097">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="e2fbd-1098">データは、指定された範囲の新しい XML リストにインポートされます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1098">The data will be imported into a new XML list at the range specified.</span></span></param>
        <summary><span data-ttu-id="e2fbd-1099">作業中のブックに XML データ ファイルをインポートします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1099">Imports an XML data file into the current workbook.</span></span> <span data-ttu-id="e2fbd-1100"><see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1100">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e2fbd-1101">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1101">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="e2fbd-1102">既存のマッピングにデータをインポートする場合は、パラメーターの値 <paramref name="Destination" /> を指定しない。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1102">Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</span></span></para>
          <para><span data-ttu-id="e2fbd-1103">次の条件を満たした場合 <b>、XMLImport</b> メソッドは実行時エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1103">The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e2fbd-1104">指定した XML データに構文エラーがある場合。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1104">The specified XML data contains syntax errors.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-1105">指定したデータがワークシートに収まらないためインポート処理がキャンセルされた場合。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1105">The import process was cancelled because the specified data cannot fit into the worksheet.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e2fbd-1106">オブジェクトの <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> メソッドを使用 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> して、以前にメモリに読み込まれた XML データをインポートします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1106">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="e2fbd-1107"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1107">Required <b>String</b>.</span></span> <span data-ttu-id="e2fbd-1108">インポートするデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1108">The data to import.</span></span></param>
        <param name="ImportMap"><span data-ttu-id="e2fbd-1109">必須 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1109">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="e2fbd-1110">ファイルのインポート時に適用するスキーマ マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1110">The schema map to apply when importing the file.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="e2fbd-1111">オプション <b>のブール値 です</b>。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1111">Optional <b>Boolean</b>.</span></span> <span data-ttu-id="e2fbd-1112">パラメーターに値を指定しない場合、このパラメーターは、パラメーターで指定されたスキーマ マップにマップされているデータを上書きするかどうかを <paramref name="Destination" /> 指定 <paramref name="ImportMap" /> します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1112">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span></span> <span data-ttu-id="e2fbd-1113">データを <b>上書きするには True</b> に設定し、既存のデータに新しいデータを追加するには <b>False</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1113">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span></span> <span data-ttu-id="e2fbd-1114">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1114">The default value is <b>True</b>.</span></span> <span data-ttu-id="e2fbd-1115">パラメーターに値を指定する場合、このパラメーターは既存のデータを上書き <paramref name="Destination" /> するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1115">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span></span> <span data-ttu-id="e2fbd-1116">既存の <b>データを</b> 上書きする場合は True に設定し、データが上書きされる場合は <b>False</b> に設定してインポートを取り消します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1116">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span></span> <span data-ttu-id="e2fbd-1117">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1117">The default value is <b>True</b>.</span></span></param>
        <param name="Destination"><span data-ttu-id="e2fbd-1118">省略 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1118">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="e2fbd-1119">データは、指定された範囲の新しい XML リストにインポートされます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1119">The data will be imported into a new XML list in the range specified.</span></span></param>
        <summary><span data-ttu-id="e2fbd-1120">以前にメモリに読み込まれた XML データ ストリームをインポートします。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1120">Imports an XML data stream that has been previously loaded into memory.</span></span> <span data-ttu-id="e2fbd-1121"><see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1121">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e2fbd-1122">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1122">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="e2fbd-1123">既存のマッピングにデータをインポートする場合は、パラメーターの値 <paramref name="Destination" /> を指定しない。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1123">Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</span></span></para>
          <para><span data-ttu-id="e2fbd-1124">次の条件を満たした場合 <b>、XMLImport</b> メソッドは実行時エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1124">The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="e2fbd-1125">指定した XML データに構文エラーがある場合。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1125">The specified XML data contains syntax errors.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="e2fbd-1126">指定したデータがワークシートに収まらないためインポート処理がキャンセルされた場合。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1126">The import process was cancelled because the specified data cannot fit into the worksheet.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="e2fbd-1127">XML データ <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> ファイルを現在 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> のブックにインポートするには、オブジェクトのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1127">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1128">指定された <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> ブックに追加されたスキーマ マップを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span></span> <span data-ttu-id="e2fbd-1129">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1129">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1130">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1130">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2fbd-1131">指定されたブック <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> に含まれる XML 名前空間を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1131">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span></span> <span data-ttu-id="e2fbd-1132">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1132">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e2fbd-1133">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e2fbd-1133">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
