<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20575048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0d74c-101">これは、対応する COM オブジェクトと相互運用するためのマネージ コードで必要とされる COM コクラス内のプライマリ インターフェイスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d74c-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="0d74c-102">メソッドを使用する COM オブジェクトのイベントと同じ名前を共有する場合にのみ、この主要なインタ フェースを使用します。メソッドを呼び出すには、このインターフェイスにこの例では、キャストし、イベントに接続するための最新のイベント インターフェイスにキャストします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d74c-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="0d74c-103">それ以外の場合、メソッド、プロパティ、および COM オブジェクトのイベントにアクセスする COM コクラスから派生した .NET インターフェイスを使用します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d74c-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="0d74c-104">COM オブジェクトの詳細についてを参照してください<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d74c-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-105">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-106">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-107">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-108">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-109">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="0d74c-110">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-111">すべての変更を反映する日時を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-111">Specifies when all the changes are accepted.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="0d74c-112">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-113">すべての変更を反映できるユーザーを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-113">Specifies by whom all the changes are accepted.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="0d74c-114">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-115">すべての変更を反映する対象を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-115">Specifies where all the changes are accepted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-116">指定された共有ブックのすべての変更を反映します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-116">Accepts all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-117">
            <b>True の</b>場合、ワークシートの数式でラベルを使用することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-117">
              <b>True</b> if labels can be used in worksheet formulas.</span>
          </span>
          <span data-ttu-id="0d74c-118">既定値は、 <b>false を指定</b> します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-118">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="0d74c-119">読み取り/書き込み <b>ブール値</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-119">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-120">取得または特定のワークシート関数では、最新の精度アルゴリズムを使用して、結果を計算するかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-121">特定のワークシート関数を使用するアルゴリズムのバージョンを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-121">Specifies which version of algorithms to use for certain worksheet functions.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-122">値の取得および設定が可能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-122">Read/write</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-123">Microsoft Office Excel 2007 ワークシート関数のいくつかと以前のバージョンの Microsoft Excel は、既定では、その精度を向上させる新しいアルゴリズムを使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-123">By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy.</span>
            </span>
            <span data-ttu-id="0d74c-124">ただし、場合によっては、新しいアルゴリズムが低下する Microsoft Office Excel 2007 でのパフォーマンスを基準にしてこれらの関数のパフォーマンスおよび Excel の以前のバージョンです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-124">However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel.</span>
            </span>
            <span data-ttu-id="0d74c-125">これらのワークシート関数を使用して古いアルゴリズムのパフォーマンスを向上する、設定、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />プロパティを 1 にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-125">To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1.</span>
            </span>
            <span data-ttu-id="0d74c-126">次の表に設定できる、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-126">The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="0d74c-127">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-127">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-128">最も正確な最新のアルゴリズムを使用します (既定値)。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-128">Use the latest, most accurate algorithms (default)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-129">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-129">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-130">Microsoft Office Excel 2007 または以前のバージョンのアルゴリズムを使用します。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-130">Use Microsoft Office Excel 2007 or earlier version algorithms</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-131">2</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-131">2</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-132">Microsoft Excel 2010 のアルゴリズムを使用します。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-132">Use Microsoft Excel 2010 algorithms</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="0d74c-133">
              <b>注意</b>: 設定、 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> 0、1 または 2 以外の値にプロパティが未定義の動作で発生します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-133">
                <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-134">次の表を設定する機能が影響を受ける、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />プロパティを 1 にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-134">The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1.</span>
            </span>
            <span data-ttu-id="0d74c-135">「の機能は影響を受けません」列に記載されている関数は、常に最新の精度アルゴリズムを使用または Excel 2010 では変更されませんでした。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-135">The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010.</span>
            </span>
            <span data-ttu-id="0d74c-136">関数名、名前にピリオド (.) を含む、対応する関数の名前を確認するのには VBA のメソッドとして実装の<see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />オブジェクト、ピリオドの代わりにアンダー スコア (_) です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-136">For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period.</span>
            </span>
            <span data-ttu-id="0d74c-137">たとえば、ベータ版に対応する VBA メソッドです。DIST 関数では、<see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-137">For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="0d74c-138">指定</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-138">BETADIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-139">AGGREGATE</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-139">AGGREGATE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-140">BETAINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-140">BETAINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-141">Beta。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-141">BETA.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-142">BINOMDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-142">BINOMDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-143">Beta。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-143">BETA.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-144">れます</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-144">CHIDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-145">BINOM。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-145">BINOM.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-146">CHIINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-146">CHIINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-147">BINOM。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-147">BINOM.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-148">CHITEST 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-148">CHITEST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-149">CEILING</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-149">CEILING</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-150">自信を持って</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-150">CONFIDENCE</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-151">天井。正確です</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-151">CEILING.PRECISE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-152">CRITBINOM</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-152">CRITBINOM</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-153">CHISQ。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-153">CHISQ.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-154">CUMIPMT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-154">CUMIPMT</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-155">CHISQ。版RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-155">CHISQ.DIST.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-156">CUMPRINC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-156">CUMPRINC</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-157">CHISQ。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-157">CHISQ.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-158">ERF 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-158">ERF</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-159">CHISQ。在庫RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-159">CHISQ.INV.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-160">ERFC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-160">ERFC</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-161">CHISQ。テスト</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-161">CHISQ.TEST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-162">EXPONDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-162">EXPONDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-163">自信を持っています。基準</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-163">CONFIDENCE.NORM</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-164">FDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-164">FDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-165">自信を持っています。T</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-165">CONFIDENCE.T</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-166">FINV 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-166">FINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-167">COVAR 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-167">COVAR</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-168">場合</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-168">FTEST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-169">共分散します。P</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-169">COVARIANCE.P</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-170">場合</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-170">GAMMADIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-171">共分散します。S</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-171">COVARIANCE.S</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-172">GAMMALN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-172">GAMMALN</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-173">ERF 関数です。正確です</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-173">ERF.PRECISE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-174">GAMMINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-174">GAMMINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-175">ERFC。正確です</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-175">ERFC.PRECISE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-176">HYPGEOMDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-176">HYPGEOMDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-177">EXPON。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-177">EXPON.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-178">IPMT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-178">IPMT</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-179">F.DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-179">F.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-180">IRR</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-180">IRR</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-181">F.DIST。RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-181">F.DIST.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-182">LOGINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-182">LOGINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-183">F.INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-183">F.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-184">LOGNORMDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-184">LOGNORMDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-185">F.INV。RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-185">F.INV.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-186">NEGBINOMDIST 関数を利用</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-186">NEGBINOMDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-187">F.TEST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-187">F.TEST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-188">式</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-188">NORMDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-189">FLOOR</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-189">FLOOR</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-190">NORMINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-190">NORMINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-191">フロアです。正確です</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-191">FLOOR.PRECISE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-192">NORMSDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-192">NORMSDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-193">ガンマ値。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-193">GAMMA.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-194">NORMSINV 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-194">NORMSINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-195">ガンマ値。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-195">GAMMA.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-196">PMT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-196">PMT</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-197">GAMMALN。正確です</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-197">GAMMALN.PRECISE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-198">ポワソン</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-198">POISSON</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-199">HYPGEOM。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-199">HYPGEOM.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-200">PPMT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-200">PPMT</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-201">ISO。天井</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-201">ISO.CEILING</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-202">STDEV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-202">STDEV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-203">LOGNORM。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-203">LOGNORM.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-204">STDEVP</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-204">STDEVP</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-205">LOGNORM。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-205">LOGNORM.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-206">TDIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-206">TDIST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-207">MOD</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-207">MOD</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-208">TINV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-208">TINV</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-209">モード</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-209">MODE</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-210">TTEST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-210">TTEST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-211">モードです。MULT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-211">MODE.MULT</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-212">VAR</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-212">VAR</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-213">モードです。SNGL</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-213">MODE.SNGL</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-214">VARA</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-214">VARA</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-215">NEGBINOM。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-215">NEGBINOM.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-216">VARP 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-216">VARP</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-217">NETWORKDAYS。INTL</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-217">NETWORKDAYS.INTL</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-218">VARPA 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-218">VARPA</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-219">基準です。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-219">NORM.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-220">ワイブル</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-220">WEIBULL</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-221">基準です。INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-221">NORM.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-222">XIRR</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-222">XIRR</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-223">基準です。S.DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-223">NORM.S.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="0d74c-224">ZTEST 関数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-224">ZTEST</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="0d74c-225">基準です。S.INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-225">NORM.S.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-226">百分位数</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-226">PERCENTILE</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-227">百分位数。EXC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-227">PERCENTILE.EXC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-228">百分位数。INC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-228">PERCENTILE.INC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-229">小数点</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-229">PERCENTRANK</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-230">小数点です。EXC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-230">PERCENTRANK.EXC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-231">小数点です。INC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-231">PERCENTRANK.INC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-232">ポワソンです。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-232">POISSON.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-233">25%</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-233">QUARTILE</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-234">25% です。EXC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-234">QUARTILE.EXC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-235">25% です。INC</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-235">QUARTILE.INC</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-236">RANK</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-236">RANK</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-237">ランク付けします。平均</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-237">RANK.AVG</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-238">ランク付けします。EQ</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-238">RANK.EQ</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-239">標準偏差です。P</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-239">STDEV.P</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-240">標準偏差です。S</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-240">STDEV.S</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-241">T.DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-241">T.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-242">T.DIST.2T</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-242">T.DIST.2T</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-243">T.DIST。RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-243">T.DIST.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-244">T.DIST。RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-244">T.DIST.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-245">T.INV</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-245">T.INV</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-246">T.INV.2T</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-246">T.INV.2T</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-247">T.INV。RT</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-247">T.INV.RT</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-248">T.TEST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-248">T.TEST</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-249">VAR 関数P</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-249">VAR.P</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-250">VAR 関数S</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-250">VAR.S</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-251">曜日</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-251">WEEKDAY</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-252">WEEKNUM</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-252">WEEKNUM</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-253">ワイブル。DIST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-253">WEIBULL.DIST</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-254">作業日です。INTL</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-254">WORKDAY.INTL</span>
                </span>
              </description>
            </item>
            <item>
              <term />
              <description>
                <span data-ttu-id="0d74c-255">Z.TEST</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-255">Z.TEST</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-256">ブックに関連付けられている最初のウィンドウをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-256">Activates the first window associated with the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-257">複数または最初のマクロをブックに添付することがありますこれは実行されません (を使用して、 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> 、マクロを実行するメソッド)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-257">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-258">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 、アクティブなグラフ (埋め込みグラフまたはグラフ シート) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-258">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="0d74c-259">埋め込みグラフは選択されているまたは、アクティブと見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-259">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="0d74c-260">アクティブなグラフがないときは、このプロパティは<b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-260">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="0d74c-261">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-261">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-262">対象となるオブジェクトを指定しない場合、このプロパティでは作業中のブックのアクティブなグラフが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-262">If you don't specify an object qualifier, this property returns the active chart in the active workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-263">作業中のブック、または指定されたウィンドウまたはブックのアクティブ シート (一番手前のシート) を表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-263">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="0d74c-264">アクティブ シートがない場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-264">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
          <span data-ttu-id="0d74c-265">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-265">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-266">対象となるオブジェクトを指定しない場合は、作業中のブックのアクティブ シートが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-266">If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-267">ブックを複数のウィンドウで表示する場合、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />プロパティは、複数のウィンドウで異なる場合があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-267">If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-268">または指定されたブックで作業中のブックで作業中のスライサーを表すオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-268">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-269">または指定されたブックで作業中のブックで作業中のスライサーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-269">An object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-270">アクティブなスライサーがない場合は、null 参照 (Visual Basic では Nothing) を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-270">Returns a null reference (Nothing in Visual Basic) if no slicer is active.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-271">読み取り専用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-271">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-272">指定しない場合、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトの場合、このプロパティは、作業中のブックで作業中のスライサーを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-272">If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-273">ブック、または [お気に入り] フォルダーへのハイパーリンクへのショートカットを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-273">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-274">このプロパティが返すオブジェクト修飾子を指定しない場合に使用する場合、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-274">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="0d74c-275">対象となるオブジェクトが指定された場合は、指定されたオブジェクトを作成した <b>Application</b> オブジェクトを返します。OLE オートメーションを使っていて、オブジェクトのアプリケーションにアクセスするときなどに、このプロパティを使います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-275">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="0d74c-276">値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-276">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-277">テーマの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-277">Name of the theme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-278">現在のブックに指定されたテーマを適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-278">Applies the specified theme to the current workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-279">コメントの作成者を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-279">Returns or sets the author of the comment.</span>
          </span>
          <span data-ttu-id="0d74c-280">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-280">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-281">返します。 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-281">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <para>
            <span data-ttu-id="0d74c-282">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-282">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="0d74c-283">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-283">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="0d74c-284">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-284">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-285">返すまたは、共有ブックへの自動更新間隔を分単位の数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-285">Returns or sets the number of minutes between automatic updates to the shared workbook.</span>
          </span>
          <span data-ttu-id="0d74c-286">値の取得および設定が可能です。整数型 ( <b>Integer</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-286">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-287">
              <b>AutoUpdateFrequency</b>プロパティは、5 を有効にするには、このプロパティの 1,440 の値に設定しなければなりません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-287">The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-288">
            <b>True</b>ブックが自動的に更新されるたびに、他のユーザーに共有ブックに行った変更が転記された場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-288">
              <b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated.</span>
          </span>
          <span data-ttu-id="0d74c-289">場合は<b>false を指定</b>の変更を通知しません (ブックが他のユーザーによって行われた変更と同期しても)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-289">
              <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users).</span>
          </span>
          <span data-ttu-id="0d74c-290">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-290">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0d74c-291">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-291">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-292">
              <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />から 5 を有効にするには、このプロパティの 1,440 の値にプロパティを設定する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-292">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-293">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-293">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-294">リンクの名前を示す文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-294">The name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0d74c-295">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-295">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="0d74c-296">リンクの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-296">The type of link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-297">他の Excel ソースまたは OLE ソースにリンクしている数式を値に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-297">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-298">返します、<see cref="T:Microsoft.Office.Core.DocumentProperties" />指定されたブックのすべての組み込みドキュメント プロパティを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-298">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-299">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-299">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-300">このプロパティは、組み込みのドキュメント プロパティのコレクション全体を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-300">This property returns the entire collection of built-in document properties.</span>
            </span>
            <span data-ttu-id="0d74c-301">使用、<see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" />コレクションの 1 つのメンバーを返します (、<see cref="T:Microsoft.Office.Core.DocumentProperty" />オブジェクト) のプロパティの名前またはコレクションのインデックス (数値) としてのいずれかを指定することによって。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-301">Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-p119">インデックス値または名前でドキュメント プロパティを指定することができます。次の表は、有効な組み込みのドキュメント プロパティの名前を示します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p119">You can refer to document properties either by index value or by name. The following list shows the available built-in document property names:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-304">タイトル</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-304">Title</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-305">件名</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-305">Subject</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-306">Author (著者)</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-306">Author</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-307">Keywords</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-307">Keywords</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-308">コメント</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-308">Comments</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-309">Template</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-309">Template</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-310">最終作成者</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-310">Last Author</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-311">リビジョン番号</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-311">Revision Number</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-312">Application Name</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-312">Application Name</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-313">最終印刷日時</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-313">Last Print Date</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-314">作成日</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-314">Creation Date</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-315">最後に時間を節約します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-315">Last Save Time</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-316">編集時間の合計</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-316">Total Editing Time</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-317">ページの数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-317">Number of Pages</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-318">単語の数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-318">Number of Words</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-319">文字数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-319">Number of Characters</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-320">セキュリティ</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-320">Security</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-321">カテゴリ</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-321">Category</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-322">Format</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-322">Format</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-323">Manager</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-323">Manager</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-324">会社</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-324">Company</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-325">バイト数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-325">Number of Bytes</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-326">明細行の数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-326">Number of Lines</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-327">段落の数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-327">Number of Paragraphs</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-328">スライドの数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-328">Number of Slides</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-329">ノートの数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-329">Number of Notes</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-330">非表示スライドの数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-330">Number of Hidden Slides</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-331">マルチ メディア クリップの数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-331">Number of Multimedia Clips</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-332">ハイパーリンクの基点</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-332">Hyperlink Base</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-333">(スペース) を文字数</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-333">Number of Characters (with spaces)</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-334">コンテナー アプリケーションは、すべての組み込みドキュメント プロパティの値を定義するのには必要ないです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-334">Container applications aren’t required to define values for every built-in document property.</span>
            </span>
            <span data-ttu-id="0d74c-335">Microsoft Excel の組み込みドキュメント プロパティのいずれかの値が定義されていない場合、は、読み取り、<see cref="P:Microsoft.Office.Core.DocumentProperty.Value" />そのドキュメント プロパティのプロパティのエラーが発生します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-335">If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-336">
              <b>Item</b>メソッドは、<b>オートメーション</b>コレクションの既定の方法です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-336">The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-337">使用して、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />をカスタム ドキュメント プロパティのコレクションを返すプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-337">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-338">一番右の 4 桁のマイナー バージョン番号は、の数を返します (左側) には、他の数字は、Microsoft Excel のメジャー バージョンです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-338">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
          <span data-ttu-id="0d74c-339">
            <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトの場合、このプロパティは、ブックの再計算が最後完全に Excel のバージョンに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-339">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span>
          </span>
          <span data-ttu-id="0d74c-340">整数型 ( <b>Integer</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-340">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-341">以前のバージョンの Excel でブックを保存し、ブックの完全に再計算されていない場合、このプロパティは 0 を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-341">If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-342">
            <b>True の</b>場合、指定したブックをサーバーにチェックインできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-342">
              <b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-343">
            <b>True の</b>場合は、ブックの内容を比較するときに、大文字と小文字を区別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-343">
              <b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span>
          </span>
          <span data-ttu-id="0d74c-344">読み取り専用の<b>ブール型</b>(C# では<b>bool</b> ) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-344">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">
          <span data-ttu-id="0d74c-345">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-345">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          </span>
          <span data-ttu-id="0d74c-346">アクセス モードを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-346">Specifies the new access mode.</span>
          </span>
        </param>
        <param name="WritePassword">
          <span data-ttu-id="0d74c-347">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-347">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-348">ファイルが読み取り専用である場合は、読み取り専用のパスワードを指定し、<paramref name="Mode" />が<b>xlReadWrite</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-348">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span>
          </span>
          <span data-ttu-id="0d74c-349">ファイルのパスワードがない場合、または場合は無視<paramref name="Mode" /><b>xlReadOnly</b>のです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-349">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="0d74c-350">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-350">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-351">
            <b>True</b> (または省略) の場合、ファイルにすぐにアクセスできない状態のときに警告メッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-351">
              <b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-p126">ブックのアクセス権を変更します。変更した後で、ディスクから読み込むことが必要な場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p126">Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p127">読み取り専用でファイルを開いているときは、排他的アクセスはできません。読み取り専用を書き込み可能に変更した場合は、読み取り専用にしていた間に変更された部分がないことを確認するために、ファイルが改めて読み込まれます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p127">If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-356">返すまたは、共有ブックの変更履歴に示す日数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-356">Returns or sets the number of days shown in the shared workbook's change history.</span>
          </span>
          <span data-ttu-id="0d74c-357">値の取得および設定が可能です。整数型 ( <b>Integer</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-357">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-358">ブックを閉じるとき、このプロパティを設定する前の変更は変更履歴から削除されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-358">Any changes in the change history older than the setting for this property are removed when the workbook is closed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-359">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-359">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-360">返された、変更する Microsoft Excel または DDE または OLE リンクの名前、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-360">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="NewName">
          <span data-ttu-id="0d74c-361">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-361">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-362">新しいリンク名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-362">The new name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0d74c-363">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="0d74c-364">リンクの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-364">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-365">ドキュメント間のリンクを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-365">Changes a link from one document to another.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-366">
            <b>True を指定</b>すると、すべてのグラフ実績を追跡するために現在のドキュメントのデータは、それが接続されている] をポイントします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-366">
              <b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span>
          </span>
          <span data-ttu-id="0d74c-367">
            <b>False</b>に戻りますデータ ポイントのインデックスを追跡します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-367">
              <b>False</b> will revert back to tracking the index of the data point.</span>
          </span>
          <span data-ttu-id="0d74c-368">
            <b>ブール値</b>(C# では<b>bool</b> )読み取り/書き込み。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-368">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-369">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべてのグラフ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-369">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-370">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-370">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-371">このプロパティでオブジェクト修飾子を指定しないを使用すると、作業中のブックですべてのグラフ シートが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-371">Using this property without an object qualifier returns all chart sheets in the active workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-372">実行かどうか互換性チェックが自動的にブックを保存するときを制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-372">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span>
          </span>
          <span data-ttu-id="0d74c-373">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-373">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-374">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-374">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="0d74c-375">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-375">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-376">
            <b>True</b> は、変更を保存し、ドキュメントをチェックインします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-376">
              <b>True</b> saves changes and checks in the document.</span>
          </span>
          <span data-ttu-id="0d74c-377">
            <b>False</b> を返しますドキュメント チェックインの状態に改訂を保存せず。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-377">
              <b>False</b> returns the document to a checked-in status without saving revision.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="0d74c-378">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-379">ブックのリビジョンをチェックインのチェックイン コメントを入力することができます (場合にのみ適用されます<paramref name="SaveChanges" />が<b>True</b>に等しい)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-379">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="0d74c-380">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-380">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-381">
            <b>True に設定</b>チェックが完了した後にブックを発行するのにはできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-381">
              <b>True</b> allows the user to publish the workbook after it has been checked in.</span>
          </span>
          <span data-ttu-id="0d74c-382">これは、承認プロセスは、ブックを読み取り専用の権限を持つユーザーに対して公開されるワークブックのバージョンが最終的にブックを送信する (場合にのみ適用されます<paramref name="SaveChanges" />が<b>True</b>に等しい)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-382">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-383">サーバーにローカル コンピューターからブックを取得し、ローカルのブックを読み取り専用に設定して、ローカルで編集することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-383">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
          <span data-ttu-id="0d74c-384">このメソッドを呼び出すと、ブックも閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-384">Calling this method will also close the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="0d74c-385">
            <b>該当</b>サーバーの場所にブックを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-385">
              <b>true</b> to save the workbook to the server location.</span>
          </span>
          <span data-ttu-id="0d74c-386">既定では<b>true です</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-386">The default is <b>true</b>.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="0d74c-387">ブックのリビジョンのチェックインに関するコメント (場合にのみ適用されます<paramref name="SaveChanges" />が<b>true</b>に設定) します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-387">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="0d74c-388">
            <b>true</b>は、チェックイン後に、ブックを発行するユーザーを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-388">
              <b>true</b> to allow the user to publish the workbook after it is checked in.</span>
          </span>
        </param>
        <param name="VersionType">
          <span data-ttu-id="0d74c-389">ブックのバージョン管理情報を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-389">Specifies versioning information for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-390">ローカル コンピューターからサーバーにブックを保存し、ローカルなブックを読み取り専用に設定して編集されないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-390">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-391">設定、<paramref name="MakePublic" />パラメーターを<b>true</b>には、承認プロセスは、ブックを読み取り専用の権限を持つユーザーに対して公開されるワークブックのバージョンが最終的にブックを送信する (場合にのみ適用されます<paramref name="SaveChanges" /><b>を true に設定</b>).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-391">Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-p141">Microsoft Excel に組み込まれたグループ作業機能を利用するには、Microsoft SharePoint Server にブックを保存する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p141">To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server. </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="0d74c-393">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-393">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-394">ブックに変更がない場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-394">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="0d74c-395">ブックへの変更があり、他の開いているウィンドウにブックが表示されます、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-395">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="0d74c-396">ブックに変更が加えられた他の任意の開いているウィンドウにブックが表示されない場合は、この引数を指定の変更を保存するかどうか次の表に示すようにします。ValueAction の<b>場合は True</b>ブックに変更を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-396">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-397">まだし、ブックに関連付けられているファイル名がない場合は、<paramref name="FileName" />を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-397">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="0d74c-398">場合<paramref name="FileName" />は、ファイル名を指定する省略すると、ユーザーに求めています。<b>False</b>このファイルへの変更は保存されません。OmittedDisplays ユーザーに変更を保存するかどうかを確認するダイアログ ボックスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-398">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="0d74c-399">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-399">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-400">変更後のブックのファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-400">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="0d74c-401">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-401">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-402">ブックが (回覧先がないか、既に回覧されている) 場合は、次の受信者にルーティングする必要がある場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-402">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="0d74c-403">それ以外の場合、Microsoft Excel は、次の表に示すように、ブックをルーティングします。値の意味 1<b>は True</b>は、次の受信者にブックを送信します。<b>False</b>ブックを送りません。OmittedDisplays ブックを送信するかどうかをユーザーに確認するダイアログ ボックスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-403">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-404">オブジェクトを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-404">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-405">
              <b>Close</b>メソッドを使用してブックを閉じると、ブック内の Auto_Close マクロが実行されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-405">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span>
            </span>
            <span data-ttu-id="0d74c-406">使用して、 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> Auto_Close マクロを実行するメソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-406">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-407">オブジェクトのコード名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-407">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="0d74c-408">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-408">Read-only <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-409">[プロパティ] ウィンドウの<b>(Name)</b>の右側のセルに表示される値は、選択したオブジェクトのコード名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-409">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
          </span>
          <span data-ttu-id="0d74c-410">デザイン時に、この値を変更することによってオブジェクトのコード名を変更できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-410">At design time, you can change the code name of an object by changing this value.</span>
          </span>
          <span data-ttu-id="0d74c-411">このプロパティは、実行時にプログラムで変更できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-411">You cannot programmatically change this property at run time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-412">オブジェクトのコード名は、オブジェクトを表すオブジェクト式の代わりに使用できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-412">The code name for an object can be used in place of an expression that returns the object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-413">シート名とコード名は異なることができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-413">It’s possible for the sheet name to be different from the code name.</span>
            </span>
            <span data-ttu-id="0d74c-414">シートを作成してシート名とコード名は同じですが、シート名を変更するコードの名前を変更しない、(Visual Basic エディターで [プロパティ] ウィンドウを使用して) コード名を変更するシート名は変更されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-414">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0d74c-415">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-415">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-416">(1 ~ 56) からの色の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-416">The color number (from 1 to 56).</span>
          </span>
          <span data-ttu-id="0d74c-417">この引数を指定しない場合、このメソッドは、すべての 56 のパレットの色を格納する配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-417">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-418">ブックのパレットの色を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-418">Returns or sets colors in the palette for the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-419">パレットには 56 のエントリ、それぞれ RGB 値で表されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-419">The palette has 56 entries, each represented by an RGB value.</span>
          </span>
          <span data-ttu-id="0d74c-420">読み取り/書き込みの<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-420">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-421">返します、 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> 、Microsoft Excel のコマンド バーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-421">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span>
          </span>
          <span data-ttu-id="0d74c-422">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-422">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-423">ブックが別のアプリケーションに埋め込まれているし、ブックをダブルクリックすると、ユーザーがアクティブになる、 <b>Workbook</b>オブジェクトに対してこのプロパティを使用して他のアプリケーション内で使用できる Microsoft Excel のコマンド バーのセットを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-423">When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application.</span>
            </span>
            <span data-ttu-id="0d74c-424">
              <b>それ以外の場合、 <b>Workbook</b>オブジェクトに対してこのプロパティを使用して返されます。</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-424">At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-425">ブックに割り当てたコマンド バーを取得するのに、プログラミング的な手法は使用しません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-425">There is no programmatic way to return the set of command bars attached to a workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-426">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> 、指定したワークシートのすべてのコメントを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-426">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="0d74c-427">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-427">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-428">返します。 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-428">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <para>
            <span data-ttu-id="0d74c-429">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-429">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="0d74c-430">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-430">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="0d74c-431">次の使用例は、作業中のブックで田中一郎によって追加されたすべてのコメントを削除します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-431">This example deletes all comments added by Jean Selva on the active sheet.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-432">取得または設定は、共有ブックが更新されるたびに、解決する方法の競合します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-432">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span>
          </span>
          <span data-ttu-id="0d74c-433">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-433">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-434">
            <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />プロパティは、ブックと ODBC または OLEDB のデータ ソースの間で接続を確立し、ユーザーにプロンプトを表示せず、データを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-434">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span>
          </span>
          <span data-ttu-id="0d74c-435">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-435">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p155">ブック中の外部接続またはリンクを無効にします。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p155">Disables the external connections or links in the workbook. Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-438">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-438">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-439">指定された OLE オブジェクトのコンテナー アプリケーションを表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-439">Returns the object that represents the container application for the specified OLE object.</span>
          </span>
          <span data-ttu-id="0d74c-440">読み取り専用 <b>オブジェクト</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-440">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-441">Excel ブックが Microsoft Internet Explorer などのホスト アプリケーションの中で開かれている場合、このプロパティを使用すると、コンテナー アプリケーションのオブジェクト モデルにアクセスできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-441">This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-442">返します、<see cref="T:Microsoft.Office.Core.MetaProperties" />ブックに格納されているメタデータを記述します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-442">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-443">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-443">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-444">
            <b>メタ プロパティ</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-444">
              <b>MetaProperties</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p158">
            <b>True</b> の場合、指定されたファイルの保存時にバックアップ ファイルを作成します。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p158">
              <b>True</b> if a backup file is created when this file is saved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-447">定数、<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />をこのオブジェクトの作成元アプリケーションを示す列挙型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-447">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="0d74c-448">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-448">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="0d74c-449">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-449">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-450">
              <b>Creator</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-450">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="0d74c-451">たとえば、Microsoft Excel は、クリエーター コードを持っています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-451">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-452">値を取得または設定、<see cref="T:Microsoft.Office.Core.DocumentProperties" />指定されたブックのすべてのカスタム ドキュメント プロパティを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-452">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-453">このプロパティは、カスタム ドキュメント プロパティのコレクション全体を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-453">This property returns the entire collection of custom document properties.</span>
            </span>
            <span data-ttu-id="0d74c-454">使用、<see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" />コレクションの 1 つのメンバーを返します (、<see cref="T:Microsoft.Office.Core.DocumentProperty" />オブジェクト) のプロパティの名前またはコレクションのインデックス (数値) としてのいずれかを指定することによって。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-454">Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-455">
              <b>Item</b>メソッドは、<b>オートメーション</b>コレクションの既定の方法です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-455">The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-456">使用して、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />を組み込みのドキュメント プロパティのコレクションを返すプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-456">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-457">返します、 <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> 、ブックのすべてのカスタム ビューを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-457">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-458">取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-458">Returns a.</span>
          </span>
          <span data-ttu-id="0d74c-459">
            <see cref="T:Microsoft.Office.Core.CustomXMLParts" />XML データ ストア内のカスタム XML を表すコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-459">
              <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span>
          </span>
          <span data-ttu-id="0d74c-460">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-460">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-461">
            <b>CustomXMLParts</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-461">
              <b>CustomXMLParts</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p163">
            <b>True</b> の場合、対象ブックの日付を 1904 年から計算するようにします。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p163">
              <b>True</b> if the workbook uses the 1904 date system. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-464">テーブル スタイルを指定します<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />ピボット テーブルの既定のスタイルとして使用されているコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-464">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span>
          </span>
          <span data-ttu-id="0d74c-465">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-465">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-466">
            <b>オブジェクト</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-466">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-467">取得または設定のスタイル、<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />のスライサーの既定のスタイルとして使用されるオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-467">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-468">スタイルから、<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />のスライサーの既定のスタイルとして使用されるオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-468">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-469">値の取得および設定が可能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-469">Read/write.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-470">テーブル スタイルを指定します<see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />コレクションは、既定として使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-470">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span>
          </span>
          <span data-ttu-id="0d74c-471">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-471">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-472">
            <b>オブジェクト</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-472">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-473">ブックの既定のスライサー スタイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-473">The name of the default slicer style of the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-474">
            <b>オブジェクト</b>(<b>オブジェクト</b>の C#)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-474">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="0d74c-475">読み取り/書き込み</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-475">Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">
          <span data-ttu-id="0d74c-476">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-476">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-477">削除対象の表示形式を示す文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-477">Names the number format to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-478">指定されたユーザー定義の表示形式を対象ブックから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-478">Deletes a custom number format from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-479">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-479">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-480">図形の表示方法を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-480">Returns or sets how shapes are displayed.</span>
          </span>
          <span data-ttu-id="0d74c-481">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-481">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-482">XlDisplayDrawingObjects 定数は、次のいずれかをすることができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-482">Can be one of the following XlDisplayDrawingObjects constants.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <paramref name="xlDisplayShapes" />
              </term>
              <description>
                <span data-ttu-id="0d74c-483">描画オブジェクトをすべて表示</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-483">Show all shapes.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <paramref name="xlPlaceholders" />
              </term>
              <description>
                <span data-ttu-id="0d74c-484">描画オブジェクトの位置のみ表示</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-484">Show only placeholders.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <paramref name="xlHide" />
              </term>
              <description>
                <span data-ttu-id="0d74c-485">描画オブジェクトをすべて非表示</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-485">Hide all shapes.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-486">インク コメントがブックに表示されるかどうかを決定する<b>ブール</b>値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-486">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-487">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-487">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-488">返します、<see cref="T:Microsoft.Office.Core.DocumentInspectors" />指定されたブックのドキュメント検査モジュールを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-488">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-489">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-489">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-490">
            <b>DocumentInspectors</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-490">
              <b>DocumentInspectors</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-491">返します、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />がバージョン管理が有効になっているサーバー上のドキュメント ライブラリに格納されている共有ブックのバージョンのコレクションを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-491">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-492">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-492">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-493">求める short_Excel2007 より前のバージョンの Excel ではサポートされていない機能がブックに含まれている場合、ブックを変換する必要がある場合を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-493">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span>
          </span>
          <span data-ttu-id="0d74c-494">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-494">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-495">ブール型</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-495">Boolean</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-496">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-496">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-497">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-497">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-498">保存は、一定の間隔ですべての形式のファイルを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-498">Saves changed files, of all formats, on a timed interval.</span>
          </span>
          <span data-ttu-id="0d74c-499">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-499">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-500">Microsoft Excel が失敗した場合、システム障害が発生した、または場合は、システムが正常に終了しないように変更されたファイルを保存する Excel)、バックアップ ・ ファイルを開く、ユーザーはそれ以外の場合、失われた変更内容を保存することです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-500">If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost.</span>
            </span>
            <span data-ttu-id="0d74c-501">ユーザーは、Excel を再起動するとき、ドキュメント回復ウィンドウが開き、作業中のファイルをリカバリするためのオプションをユーザーに提供します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-501">When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on.</span>
            </span>
            <span data-ttu-id="0d74c-502">このプロパティを<b>True</b> (既定値) に設定すると、この機能が有効にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-502">Setting this property to <b>True</b> (default) enables this feature.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-503">
            <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />メソッドにより、開発者はプログラムを使用して、ユーザーがブック内のデータ接続を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-503">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-504">アルゴリズム暗号化プロバイダーの名前を指定する<b>文字列</b>を返します。 1st_Excel12 では、文書の暗号化を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-504">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span>
          </span>
          <span data-ttu-id="0d74c-505">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-505">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-506">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-506">
              <b>s</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-507">校閲用に送信されたファイルの校閲を終了します<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-507">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p175">
            <b>True</b> の場合、電子メールの構成ヘッダーと封筒のツールバーを表示します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p175">
              <b>True</b> if the e-mail composition header and the envelope toolbar are both visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-510">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべての Excel 4.0 インターナショナル マクロ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-510">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-511">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-511">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-512">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべての Excel 4.0 マクロ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-513">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-513">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-514">
            <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />プロパティには、互換モードでブックをチェックする方法を開発者が用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-514">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span>
          </span>
          <span data-ttu-id="0d74c-515">読み取り専用</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-515">Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-516">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-516">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-517">互換モードで特定の機能が無効になったり、機能が異なります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-517">In compatibility mode, certain functionality is disabled or functions differently.</span>
            </span>
            <span data-ttu-id="0d74c-518">たとえば、short_Excel2007 である行と列が Excel の以前のバージョンと比較した場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-518">For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel.</span>
            </span>
            <span data-ttu-id="0d74c-519">構造化参照は、short_Excel2007 で使用可能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-519">Also structured referencing is available in short_Excel2007.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-520">共有ファイルとして開いているブックを、他のユーザーが変更できないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-520">Assigns the current user exclusive access to the workbook that's open as a shared list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-521">
              <b>ExclusiveAccess</b>メソッドは、ブックに行ったし、別のファイルに加えた変更内容を保存するのには他のユーザーがブックを開く必要があります変更を保存します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-521">The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-522">指定されたブックが共有リストとして開かれていない場合は、このメソッドは失敗します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-522">If the specified workbook isn't open as a shared list, this method fails.</span>
            </span>
            <span data-ttu-id="0d74c-523">ブックが共有リストとして開かれているかどうかを確認するに、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-523">To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0d74c-524">いずれかの方法は、<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" />または<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-524">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="0d74c-525">保存するファイルの名前を示す<b>文字列</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-525">A <b>String</b> that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0d74c-526">短い形式または完全なパスを含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-526">You can include a full path or short.</span>
          </span>
          <span data-ttu-id="0d74c-527">Excel2007 では、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-527">Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="0d74c-528">設定することに<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" />または<see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-528">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="0d74c-529">
            <b>True</b>を設定するプロパティを含めるか省略されていることを示すために<b>False</b>に設定する必要があります、そのドキュメントを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-529">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="0d74c-530">場合<b>は True</b>に設定、発行する場合に印刷範囲が無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-530">If set to <b>True</b>, ignores any print areas set when publishing.</span>
          </span>
          <span data-ttu-id="0d74c-531">場合に<b>False</b>を設定、発行する場合に印刷範囲が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-531">If set to <b>False</b>, will use the print areas set when publishing.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="0d74c-p183">発行を開始するページのページ番号を指定します。この引数を省略すると、先頭のページから発行が開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p183">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0d74c-p184">発行を終了するページの番号を指定します。この引数を省略すると、最後のページまで発行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p184">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="0d74c-536">場合は<b>True</b>に設定では、発行後にビューアーでファイルを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-536">If set to <b>True</b> displays file in viewer after it is published.</span>
          </span>
          <span data-ttu-id="0d74c-537">
            <b>False</b>ファイルに発行されますが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-537">If set to <b>False</b> the file is published but not displayed.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="0d74c-538">
            <b>FixedFormatExt</b>クラスへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-538">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-539">
            <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドを使用して、ブックを PDF または XPS 形式に発行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-539">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <para>
            <span data-ttu-id="0d74c-540">次の例では、標準の品質で現在のファイルのディレクトリに PDF を作成し、発行後にビューアーにファイルを表示します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-540">The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-541">
              <b>注</b>: PDF アドインがインストールされていない場合、エラーが発生します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-541">
                <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</span>
            </span>
          </para>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-542">ファイル形式とブックの種類を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-542">Returns the file format and/or type of the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-543">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-543">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-544">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-544">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-545">
            <b>ブール値</b>を示す、ブックが最終版であるかどうかを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-545">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span>
          </span>
          <span data-ttu-id="0d74c-546">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-546">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-547">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-547">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-548">値を設定、マークの<b>場合は True</b>ブック最終版として、受信者に通知 (ある場合) ブックが最終版では、ブックを読み取り専用に設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-548">Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="0d74c-549">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-549">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-550">対象ドキュメントのアドレスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-550">The address of the target document.</span>
          </span>
        </param>
        <param name="SubAddress">
          <span data-ttu-id="0d74c-551">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-552">ターゲット ドキュメント内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-552">The location within the target document.</span>
          </span>
          <span data-ttu-id="0d74c-553">既定値は空白文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-553">The default value is the empty string.</span>
          </span>
        </param>
        <param name="NewWindow">
          <span data-ttu-id="0d74c-554">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-555">
            <b>True</b>を新しいウィンドウで対象のアプリケーションを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-555">
              <b>True</b> to display the target application in a new window.</span>
          </span>
          <span data-ttu-id="0d74c-556">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-556">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AddHistory">
          <span data-ttu-id="0d74c-557">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-558">使用されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-558">Not used.</span>
          </span>
          <span data-ttu-id="0d74c-559">将来の使用のために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-559">Reserved for future use.</span>
          </span>
        </param>
        <param name="ExtraInfo">
          <span data-ttu-id="0d74c-560">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-560">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-561">ハイパーリンクを解決するために使用する HTTP の追加情報を指定する文字列またはバイトの配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-561">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span>
          </span>
          <span data-ttu-id="0d74c-562">使用することができますたとえば、 <paramref name="ExtraInfo" /> 、イメージ マップの座標、フォーム、または FAT ファイル名の内容を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-562">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span>
          </span>
        </param>
        <param name="Method">
          <span data-ttu-id="0d74c-563">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-563">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-564">方法を指定する<paramref name="ExtraInfo" />が接続されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-564">Specifies the way <paramref name="ExtraInfo" /> is attached.</span>
          </span>
          <span data-ttu-id="0d74c-565">いずれかの<see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" />定数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-565">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span>
          </span>
        </param>
        <param name="HeaderInfo">
          <span data-ttu-id="0d74c-566">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-566">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-567">HTTP リクエストのヘッダー情報を指定する文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-567">A string that specifies header information for the HTTP request.</span>
          </span>
          <span data-ttu-id="0d74c-568">既定値は空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-568">The default value is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-569">既にダウンロードされている場合は、キャッシュされたドキュメントを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-569">Displays a cached document if it’s already been downloaded.</span>
          </span>
          <span data-ttu-id="0d74c-570">それ以外の場合、このメソッドはハイパーリンクを解決、対象のドキュメントをダウンロードし、適切なアプリケーションでドキュメントが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-570">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-571">ブックの完全計算を強制します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-571">Forces a full calculation of a workbook.</span>
          </span>
          <span data-ttu-id="0d74c-572">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-572">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-573">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-573">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p197">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p197">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-576">文字列として、ディスク上のパスを含む、オブジェクトの名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-576">Returns the name of the object, including its path on disk, as a string.</span>
          </span>
          <span data-ttu-id="0d74c-577">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-577">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-578">このプロパティは、 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> 、現在のファイル システム区切り記号の後に、プロパティの後に、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-578">This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-579">文字列として、ディスク上のパスを含むオブジェクトの名前を示す<b>文字列</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-579">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string.</span>
          </span>
          <span data-ttu-id="0d74c-580">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-580">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-581">コレクションを返します<see cref="T:Microsoft.Office.Core.WorkflowTask" />指定されたブックのオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-581">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-582">コレクションを返します<see cref="T:Microsoft.Office.Core.WorkflowTemplate" />指定されたブックのオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-582">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-583">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-583">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p200">
            <b>True</b> の場合、ブックに読み取りパスワードが設定されています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p200">
              <b>True</b> if the workbook has a protection password. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-586">使用して、ブックに読み取りパスワードを割り当てることができます、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-586">You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p201">
            <b>True</b> の場合、ブックに回覧先を設定します。値の取得および設定が可能です。ブール型 (<b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p201">
              <b>True</b> if the workbook has a routing slip. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p202">このプロパティを <b>True</b> に設定すると、既定の回覧先が作成されます。<b>False</b> に設定すると、回覧先が削除されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p202">Setting this property to <b>True</b> creates a routing slip with default values. Setting the property to <b>False</b> deletes the routing slip.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-591">返しますが、<b>ブール値</b>かどうか、ブックを表すには、付属の Microsoft Visual Basic for Applications プロジェクトがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-591">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span>
          </span>
          <span data-ttu-id="0d74c-592">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-592">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-593">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-593">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p204">このプロパティは、マクロが有効なファイル形式でブックを保存する必要があるかどうかをプログラムで判断する場合に最も役立ちます。別の形式で保存すると、文書に含まれているマクロとコード プロジェクトが失われることがあります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p204">This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p205">
            <b>True</b> の場合、共有ブックに加えた変更箇所を画面で強調表示します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p205">
              <b>True</b> if changes to the shared workbook are highlighted on-screen. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="0d74c-598">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-598">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-599">表示を変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-599">The changes that are shown.</span>
          </span>
          <span data-ttu-id="0d74c-600">
            <b>XlHighlightChangesTime</b>定数は、次のいずれか: <b>xlSinceMyLastSave</b><b>xlAllChanges</b>、 <b>xlNotYetReviewed</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-600">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="0d74c-601">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-601">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-602">ユーザーまたはユーザーの変更を加えた。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-602">The user or users whose changes are shown.</span>
          </span>
          <span data-ttu-id="0d74c-603">"Everyone"、"すべてのユーザーが、"、または共有ブックのユーザーのいずれかの名前を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-603">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="0d74c-604">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-604">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-605">変更内容を調べる領域を A1 形式で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-605">An A1-style range reference that specifies the area to check for changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-606">共有ブックへの変更内容の表示方法を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-606">Controls how changes are shown in a shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-607">返します、 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> Microsoft Script Editor の [プロジェクト エクスプ ローラーと同様にトップレベルのプロジェクト分岐を表す、指定されたブック内のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-607">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span>
          </span>
          <span data-ttu-id="0d74c-608">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-608">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-609">セル アイコンに基づいてブックのデータをフィルターするのにはこのプロパティを使用します<see cref="T:Microsoft.Office.Interop.Excel.IconSets" />コレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-609">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          </span>
          <span data-ttu-id="0d74c-610">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-610">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-611">
            <b>IconSets</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-611">
              <b>IconSets</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-612">リストがアクティブでない場合、リストの境界線が表示するかどうかを指定する<b>ブール</b>値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-612">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active.</span>
          </span>
          <span data-ttu-id="0d74c-613">枠線が表示される場合は<b>True</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-613">Returns <b>True</b> if the border is visible.</span>
          </span>
          <span data-ttu-id="0d74c-614">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-614">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-615">このプロパティを設定すると、そのワークシート上にあるすべてのリストが影響を受けます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-615">Setting this property will affect all the lists that are on the worksheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p212">
            <b>True</b> の場合、ブックをアドインとして実行します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p212">
              <b>True</b> if the workbook is running as an add-in. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-618">このプロパティに <b>True</b> を設定すると、ブックは次の特性を持ちます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-618">When you set this property to <b>True</b>, the workbook has the following characteristics:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="0d74c-619">ブックを開いているときに変更を加えると、ブックの保存は要求されません。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-619">You won’t be prompted to save the workbook if changes are made while the workbook is open.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-620">ブック ウィンドウは表示されません。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-620">The workbook window won’t be visible.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-621">ブックのマクロは、[マクロ] ダイアログ ボックス ([ツール] - [マクロ] - [マクロ]) に表示されません。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-621">Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-622">ブック内のマクロとは違う表示されている場合でも、[マクロ] ダイアログ ボックスから実行できます。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-622">Macros in the workbook can still be run from the Macro dialog box even though they’re not visible.</span>
                </span>
                <span data-ttu-id="0d74c-623">さらに、マクロ名にブック名で修飾する必要はありません。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-623">In addition, macro names don’t need to be qualified with the workbook name.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-624">ブックを開くときに、Shift キーを押しても、何も実行されません。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-624">Holding down the SHIFT key when you open the workbook has no effect.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p214">
            <b>True</b> の場合、指定されたブックを埋め込み先で編集しています。 <b>False</b> の場合、ブックを Excel で編集用に開いています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p214">
              <b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p215">
            <b>True</b> の場合、共有ブックの変更履歴の作成が可能になります。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p215">
              <b>True</b> if change tracking is enabled for the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-630">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-630">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-631">省略可能な<b>文字列</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-631">Optional <b>String</b>.</span>
          </span>
        </param>
        <param name="LinkInfo">
          <span data-ttu-id="0d74c-632">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-632">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          </span>
          <span data-ttu-id="0d74c-633">リンクに関する情報の種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-633">The type of information to be returned.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0d74c-634">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-634">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          </span>
          <span data-ttu-id="0d74c-635">返すリンクの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-635">The type of link to return.</span>
          </span>
        </param>
        <param name="EditionRef">
          <span data-ttu-id="0d74c-636">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-636">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-637">リンクがエディションの場合、この引数は、R1C1 形式の文字列としてエディション参照を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-637">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span>
          </span>
          <span data-ttu-id="0d74c-638">2 つ以上のパブリッシャーまたはブック内の同じ名前を持つサブスクライバーがある場合、この引数が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-638">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-639">リンクの日付と更新の状態を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-639">Returns the link date and update status.</span>
          </span>
          <span data-ttu-id="0d74c-640">
            <b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-640">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="0d74c-641">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-641">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="0d74c-642">返すリンクの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-642">The type of link to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-643">ブック内のリンクの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-643">Returns an array of links in the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-644">配列内の名前は、リンクされたドキュメント、エディション、DDE または OLE サーバーの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-644">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span>
          </span>
          <span data-ttu-id="0d74c-645">リンクがない場合は<b>Empty</b>値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-645">Returns <b>Empty</b> if there are no links.</span>
          </span>
          <span data-ttu-id="0d74c-646">
            <b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-646">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p222">このメソッドでは、発行側と引用側以外のリンクのときは 1 次元配列を返します。返された文字列には、リンク ソースの名前がリンクの種類に適した表記法で示されます。たとえば DDE リンクでは、"Server|Document!Item" という構文が使われます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p222">The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-p223">このメソッドでは、発行側と引用側のリンクのときは 2 次元配列を返します。配列の最初の列は発行物の名前、2 列目は発行物に対する参照を示す文字列です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p223">For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p224">
            <b>True</b> の場合、共有ブックへの変更内容を別のワークシートに表示します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p224">
              <b>True</b> if changes to the shared workbook are shown on a separate worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-654">サーバー上にあるブックが修正されないようにロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-654">Locks the workbook on the server to prevent modification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p225">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p225">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-657">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-657">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-658">開かれているブックに組み込まれる変更内容を含むブックのファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-658">The file name of the workbook that contains the changes to be merged into the open workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-659">1 つのブックの変更内容を開いているブックに組み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-659">Merges changes from one workbook into an open workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-660">最上位レベルを返す<see cref="T:Microsoft.Office.Interop.Excel.Model" />ブックの 1 つのデータ モデルであるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-660">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-661">読み取り専用</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-661">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-662">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-662">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p228">
            <b>True</b> の場合、ブックが共有ファイルとして開かれています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p228">
              <b>True</b> if the workbook is open as a shared list. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-665">共有ファイルとしてブックを保存するには、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-665">To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="0d74c-666">共有モードからブックを排他モードに切り替えるを使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-666">To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p230">指定されたオブジェクトの名前を返します。値の取得のみ可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p230">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-669">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> (すべてのワークシートの名前を含む) 指定されたブック内のすべての名前を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-669">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span>
          </span>
          <span data-ttu-id="0d74c-670">
            <b>名前</b>オブジェクトの読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-670">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-671">新しいウィンドウ、または指定されたウィンドウのコピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-671">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-672">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-672">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-673">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-673">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-674">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-674">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-675">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-675">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-676">Microsoft Excel または DDE または OLE リンクから返される名前、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-676">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="0d74c-677">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-677">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-678">
            <b>True の</b>読み取り専用でドキュメントを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-678">
              <b>True</b> to open documents as read-only.</span>
          </span>
          <span data-ttu-id="0d74c-679">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-679">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0d74c-680">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-680">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="0d74c-681">リンクの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-681">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-682">リンクの参照元文書を開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-682">Opens the supporting documents for a link or links.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p235">指定されたオブジェクトの親オブジェクトを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p235">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-685">指定されたブックを開くために指定する必要があるパスワードを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-685">Returns or sets the password that must be supplied to open the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-686">値の取得および設定が可能です。文字列型 ( <b>String</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-686">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p237">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p237">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-692">指定されたブックのパスワードを暗号化するアルゴリズムを示す<b>文字列</b>を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-692">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-693">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-693">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-694">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />のパスワードで保護されたブックのファイル プロパティを暗号化するかどうかを指定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-694">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p239">パスワード保護された指定のブックのファイル プロパティを暗号化する場合は  <b>True</b> を返します。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p239">
              <b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-697">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />指定されたパスワードで保護されたブックのファイル プロパティを暗号化するかどうかを指定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-697">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-698">指定されたブックのパスワードを暗号化するときに Microsoft Excel を使用してアルゴリズムのキーの長さを示す<b>整数</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-698">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-699">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-699">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-700">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />指定されたパスワードで保護されたブックのファイル プロパティを暗号化するかどうかを指定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-700">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-701">指定されたブックのパスワードを暗号化するときに Microsoft Excel が使用するアルゴリズム暗号化プロバイダーの名前を指定する<b>文字列</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-701">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-702">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-702">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-703">
            <b>文字列型 (String)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-703">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-704">アプリケーションの名前と最後の区切り記号を除く、アプリケーションの完全なパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-704">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
          <span data-ttu-id="0d74c-705">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-705">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-706">返します、<see cref="T:Microsoft.Office.Core.Permission" />を指定したブックのアクセス許可の設定を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-706">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p243">
            <b>True</b> の場合、フィルターの設定が共有ブックのユーザーの個人用ビューに含まれます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p243">
              <b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p244">
            <b>True</b> の場合、共有ブックのユーザーの個人用ビューに印刷の設定を含みます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p244">
              <b>True</b> if print settings are included in the user's personal view of the shared workbook. Read-write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-711">返します、 <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> 、指定されたブックのすべてのピボット テーブルを表すコレクションをキャッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-711">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-712">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-712">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p246">ワークシートのすべてのピボットテーブル レポートのコレクションを表すオブジェクトを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p246">Returns an object that represents a collection of all the PivotTable reports on a worksheet. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-715">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-715">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName">
          <span data-ttu-id="0d74c-716">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-716">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-717">この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-717">This argument is ignored.</span>
          </span>
          <span data-ttu-id="0d74c-718">
            <b>Post</b>メソッドは、ブックの保存先を指定するかどうかを求めるメッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-718">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-p248">指定されたブックを Exchange のパブリック フォルダーに投稿します。このメソッドは、Exchange サーバーに接続されている Exchange クライアントにだけ使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p248">Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-721">
            <b>True の</b>場合、このブック内の計算が行われます、数値の有効桁数を使用して表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-721">
              <b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed.</span>
          </span>
          <span data-ttu-id="0d74c-722">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-722">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="0d74c-723">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-723">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-724">印刷を開始するページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-724">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="0d74c-725">この引数を省略すると、印刷は先頭から開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-725">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="0d74c-726">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-726">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-727">印刷する最終ページの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-727">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="0d74c-728">この引数を省略すると、最後のページで印刷が終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-728">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="0d74c-729">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-729">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-730">印刷部数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-730">The number of copies to print.</span>
          </span>
          <span data-ttu-id="0d74c-731">この引数を省略すると、1 つのコピーが印刷されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-731">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="0d74c-732">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-732">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-733">
            <b>True</b>オブジェクトを印刷する前に印刷プレビューを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-733">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="0d74c-734">
            <b>False</b>(または省略した場合)、オブジェクトをすぐに印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-734">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="0d74c-735">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-735">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-736">アクティブなプリンターの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-736">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="0d74c-737">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-737">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-738">
            <b>True</b>ファイルに出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-738">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="0d74c-739">場合<paramref name="PrToFileName" />が指定されていない、Microsoft Excel には、出力ファイルの名前を入力するように求めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-739">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="0d74c-740">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-740">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-741">
            <b>True</b> の場合、部単位で印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-741">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="0d74c-742">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-742">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-743">場合<paramref name="PrintToFile" />は、設定に<b>は True</b>、この引数を指定して印刷しファイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-743">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-744">オブジェクトを印刷します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-744">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-745">説明における「ページ」<paramref name="From" />と<paramref name="To" />印刷されたページを参照して、シートまたはブックのページ全体ではありません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-745">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-746">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-746">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="0d74c-747">オブジェクトへの変更を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-747">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-748">オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-748">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="0d74c-749">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-749">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-750">ワークシートまたはブックのパスワードを指定する文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-750">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0d74c-751">この引数を省略すると、保護を解除できます、ワークシートやブックのパスワードを使用せず。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-751">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="0d74c-752">それ以外の場合、ワークシートまたはブックの保護を解除するパスワードを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-752">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0d74c-753">パスワードを忘れた場合に、ワークシートまたはブックの保護を解除できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-753">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="0d74c-754">安全な場所に、パスワードと、対応するドキュメント名のリストを保持することをお勧めします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-754">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="Structure">
          <span data-ttu-id="0d74c-755">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-755">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-756">
            <b>True</b> (シートの相対的な位置) のブックの構造を保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-756">
              <b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span>
          </span>
          <span data-ttu-id="0d74c-757">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-757">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Windows">
          <span data-ttu-id="0d74c-758">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-758">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-759">
            <b>True の</b>ブック ウィンドウを保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-759">
              <b>True</b> to protect the workbook windows.</span>
          </span>
          <span data-ttu-id="0d74c-760">この引数を省略すると、ウィンドウは保護されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-760">If this argument is omitted, the windows aren’t protected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-761">変更できないようにブックを保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-761">Protects a workbook so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-762">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-762">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-763">保存したファイルの名前を示す文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-763">A string indicating the name of the saved file.</span>
          </span>
          <span data-ttu-id="0d74c-764">完全パスを含めることができます。ない場合は、Microsoft Excel は、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-764">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="0d74c-765">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-765">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-766">ファイルに指定する保護パスワードを示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-766">A case-sensitive string indicating the protection password to be given to the file.</span>
          </span>
          <span data-ttu-id="0d74c-767">15 文字以内である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-767">Should be no longer than 15 characters.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="0d74c-768">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-768">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-769">このファイルの書き込みパスワードを示す文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-769">A string indicating the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="0d74c-770">ファイルがパスワード付きで保存、ファイルを開くと、パスワードを入力しない場合は、読み取り専用ファイルを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-770">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="0d74c-771">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-771">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-772">の<b>場合は true。</b>読み取り専用ファイルを開くことを推奨する、ファイルを開くときにメッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-772">
              <b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="0d74c-773">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-773">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-774">バックアップ ファイルを作成するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-774">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="0d74c-775">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-775">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-776">共用としてファイルを保護するときに使用するパスワードを示す文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-776">A string indicating the password to be used to protect the file for sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-777">ブックを保存し、共用として保護します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-777">Saves the workbook and protects it for sharing.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p267">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p267">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-783">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-783">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p268">
            <b>True</b> の場合、指定されたブック内のシート構成を保護しています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p268">
              <b>True</b> if the order of the sheets in the workbook is protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p269">
            <b>True</b> の場合、指定されたブックのウィンドウを保護しています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p269">
              <b>True</b> if the windows of the workbook are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-788">返します、<see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" />コレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-788">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          </span>
          <span data-ttu-id="0d74c-789">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-789">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">
          <span data-ttu-id="0d74c-790">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-790">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0d74c-791">変更ログの変更内容を保持する日数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-791">The number of days that changes in the change log are to be retained.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="0d74c-792">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-792">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-793">共有ブックの保護を解除するパスワードです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-793">The password that unprotects the workbook for sharing.</span>
          </span>
          <span data-ttu-id="0d74c-794">パスワードを使用して共有ブックが保護されているし、この引数を省略すると、パスワードの入力が求められます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-794">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-795">指定されたブックの変更ログからエントリを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-795">Removes entries from the change log for the specified workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p273">指定されたオブジェクトを読み取り専用モードで開いている場合、 <b>True</b> を返します。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p273">Returns <b>True</b> if the object has been opened as read-only. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-798">このプロパティは、SharePoint サイトにリンクしているリストにのみ使用できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-798">This property is used only for lists that are linked to a SharePoint site.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p274">
            <b>True</b> の場合、指定されたブックは、[読み取り専用を推奨する] チェック ボックスをオンにして保存されています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p274">
              <b>True</b> if the workbook was saved as read-only recommended. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-801">[読み取り専用を推奨する] チェック ボックスをオンにして保存されたブックを開こうとすると、読み取り専用で開くことを推奨するメッセージが表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-801">When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-802">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドでこのプロパティを変更します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-802">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-803">前に付けられていないデータに注釈を付けるに自動的に発生すると、フォア グラウンドのスマート タグのチェックが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-803">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-804">ブックの外部データ範囲とピボットテーブル レポートをすべて更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-804">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-805">オブジェクトを持つ、<see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" />プロパティを<b>True</b>に設定がバック グラウンドで更新されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-805">Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="0d74c-806">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-806">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-807">すべての変更が拒否された日時を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-807">Specifies when all the changes are rejected.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="0d74c-808">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-808">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-809">すべての変更を拒否した人を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-809">Specifies by whom all the changes are rejected.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="0d74c-810">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-811">すべての変更が拒否された場所を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-811">Specifies where all the changes are rejected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-812">指定された共有ブックのすべての変更を拒否します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-812">Rejects all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">
          <span data-ttu-id="0d74c-813">必要な<see cref="T:Microsoft.Office.Core.MsoEncoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-813">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          </span>
          <span data-ttu-id="0d74c-814">ブックに適用するエンコードの種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-814">The encoding that is to be applied to the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-815">指定されたドキュメント エンコードを使用して、ブックを HTML ドキュメントとして再読み込みします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-815">Reloads a workbook based on an HTML document, using the specified document encoding.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-816">HTML に適用できること<b>が可能</b>定数だけは、 <b>ReloadAs</b>メソッドを使用して動作します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-816">Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">
          <span data-ttu-id="0d74c-817">いずれか、<see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />削除する情報の種類を示す値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-817">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-818">指定された種類の情報をすべてブックから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-818">Removes all information of the specified type from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p279">
            <b>True</b> の場合、指定されたブックから個人情報を削除できます。既定値は <b>False</b> です。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p279">
              <b>True</b> if personal information can be removed from the specified workbook. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="0d74c-822">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-822">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0d74c-823">ユーザー インデックスを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-823">The user index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-824">指定されたユーザーの接続を共有ブックから解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-824">Disconnects the specified user from the shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p281">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p281">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p282">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p282">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage">
          <span data-ttu-id="0d74c-829">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-829">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-830">
            <b>False</b>は、メッセージは表示されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-830">
              <b>False</b> does not display the message.</span>
          </span>
          <span data-ttu-id="0d74c-831">
            <b>True を指定</b>すると、メッセージが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-831">
              <b>True</b> displays the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-832">校閲用に送信されたブックの作成者に電子メール メッセージを送信し、校閲者がブックの校閲を終わったことを知らせます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-832">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-833">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />ブックの共同校閲を開始するメソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-833">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook.</span>
            </span>
            <span data-ttu-id="0d74c-834">共同校閲サイクルの一部ではないブックで<b>ReplyWithChanges</b>メソッドを実行する場合、エラーがユーザーに表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-834">If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-835">返します、<see cref="T:Microsoft.Office.Interop.Excel.Research" />ブックのリサーチ サービスを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-835">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span>
          </span>
          <span data-ttu-id="0d74c-836">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-836">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-837">
            <b>Research</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-837">
              <b>Research</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-838">色パレットを既定の色に戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-838">Resets the color palette to the default colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-839">共有リストとして開かれているときに、ブックが保存された回数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-839">Returns the number of times the workbook has been saved while open as a shared list.</span>
          </span>
          <span data-ttu-id="0d74c-840">ブックが排他モードで開かれている場合は、このプロパティは 0 (ゼロ) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-840">If the workbook is open in exclusive mode, this property returns 0 (zero).</span>
          </span>
          <span data-ttu-id="0d74c-841">整数型 ( <b>Integer</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-841">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-842">
              <b>RevisionNumber</b>プロパティは、ブックのローカル コピーが保存されたときではなくリモート コピーが保存された場合にのみ更新されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-842">The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-843">ブックの現在の回覧先を使って、ブックを回覧します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-843">Routes the workbook, using the workbook's current routing slip.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-844">ブックの設定をルーティング、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />プロパティを<b>True</b>にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-844">Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p287">
            <b>True</b> の場合、ブックは次の受信者に対して回覧済みです。<b>False</b> の場合、ブックの回覧が必要です。値の取得のみ可能です。ブール型 (<b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p287">
              <b>True</b> if the workbook has been routed to the next recipient. <b>False</b> if the workbook needs to be routed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-848">ブックが現在の受信者に対して回覧されなかった場合 (たとえば、回覧先が設定されていないドキュメントの場合や、作成された直後の回覧先の場合)、このプロパティに必ず <b>False</b> が設定されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-848">If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-849">返します、 <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> 、ブックの回覧先を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-849">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-850">回覧用紙がない場合にこのプロパティを読み取るとエラーが発生 (チェック、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />プロパティ最初)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-850">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span>
          </span>
          <span data-ttu-id="0d74c-851">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-851">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">
          <span data-ttu-id="0d74c-852">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-852">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-853">ブックに添付された Auto_Open、Auto_Close、複数、または最初のマクロを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-853">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-854">このメソッドでは、下位互換性のために含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-854">This method is included for backward compatibility.</span>
          </span>
          <span data-ttu-id="0d74c-855">開く、閉じる、アクティブ化を使用し、これらのマクロの代わりにイベントを非アクティブ化する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-855">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-856">指定されたブックへの変更を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-856">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-857">ブック ファイルを開くを使用して、<see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-857">To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-858">ディスクに書き込まずに保存されたブックのマーク、設定、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />プロパティを<b>True</b>にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-858">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-859">初めてブックを保存するを使用して、 <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 、ファイルの名前を指定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-859">The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-860">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-860">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-861">保存するファイルの名前を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-861">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0d74c-862">完全パスを含めることができます。ない場合は、Microsoft Excel は、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-862">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="0d74c-863">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-863">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-864">ファイルを保存するときに使用するファイル形式です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-864">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="0d74c-865">有効な選択肢のリストを参照してください、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-865">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="0d74c-866">既存のファイルの既定の形式は、最後のファイル形式が指定されています。新しいファイルは、使用されている Excel のバージョンの形式が既定では。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-866">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="0d74c-867">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-867">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-868">保存するファイルに設定する読み取りパスワードを表す文字列を指定します。パスワードは 15 文字以内の文字列で指定し、大文字と小文字が区別されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-868">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="0d74c-869">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-869">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-870">このファイルの書き込みパスワードを表す文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-870">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="0d74c-871">ファイルがパスワード付きで保存、ファイルを開くと、パスワードを入力しない場合は、ファイルが読み取り専用として開かれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-871">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="0d74c-872">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-872">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-873">
            <b>True の</b>とき、ファイルを開くファイルを読み取り専用として開くように勧めるメッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-873">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="0d74c-874">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-874">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-875">バックアップ ファイルを作成するには、 <b>True</b> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-875">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AccessMode">
          <span data-ttu-id="0d74c-876">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-876">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          </span>
        </param>
        <param name="ConflictResolution">
          <span data-ttu-id="0d74c-877">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-877">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="0d74c-878">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-878">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-879">最近使用したファイルの<b>場合は true</b>の一覧にこのブックを追加するのには。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-879">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="0d74c-880">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-880">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="0d74c-881">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-881">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-882">英語の Excel では使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-882">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="0d74c-883">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-883">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-884">英語の Excel では使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-884">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="0d74c-885">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-885">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-886">
            <b>True の場合</b>は、(コントロール パネルの設定を含む)、Microsoft Excel の言語ファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-886">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="0d74c-887">
            <b>False</b>(既定値) ファイルを保存する Visual Basic for Applications の言語 (VBA) では英語 (米国) から Workbooks.Open を実行している VBA プロジェクトが以前の国際化 XL5/95 VBA プロジェクトでない限り)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-887">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-888">ブックへの変更を別のファイルに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-888">Saves changes to the workbook in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-889">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-889">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-890">保存するファイルの名前を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-890">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="0d74c-891">完全パスを含めることができます。ない場合は、Microsoft Excel は、現在のフォルダーにファイルを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-891">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="0d74c-892">必要な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-892">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="0d74c-893">データに対して適用するスキーマ マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-893">The schema map to apply to the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-894">指定された XML スキーマ マップに対してマップされたデータを、XML データ ファイルへエクスポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-894">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-895">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-895">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-896">指定されたスキーマ マップを使用してデータをエクスポートできなかった場合、このメソッドは実行時エラーになります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-896">This method will result in a run-time error if Excel cannot export data with the specified schema map.</span>
            </span>
            <span data-ttu-id="0d74c-897">Excel がデータをエクスポートするのには指定されたスキーマ マップを使用できるかどうかを確認するを使用して、<see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-897">To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="0d74c-898">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-898">Required.</span>
          </span>
          <span data-ttu-id="0d74c-899">ファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-899">Specifies the file name for the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-900">ブックのコピーをファイルに保存します。メモリ上のブックに対しては、変更は行われません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-900">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p304">
            <b>True</b> の場合、ブックは最後に保存された状態から変更されていません。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p304">
              <b>True</b> if no changes have been made to the specified workbook since it was last saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-903">ブックが保存されていない場合、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" />プロパティは空の文字列を返します ("")。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-903">If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-904">
              <b>True</b>にこのプロパティを設定するには、または保存するメッセージが表示されているいずれかを保存せずに変更を加えたブックを閉じる場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-904">You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p305">
            <b>True</b> の場合、対象ブックが外部リンクの値を保存します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p305">
              <b>True</b> if Microsoft Excel saves external link values with the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="0d74c-907">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-907">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="0d74c-908">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-908">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-909">Fax 番号と fax を送信する相手の電子メール アドレスを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-909">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span>
          </span>
          <span data-ttu-id="0d74c-910">複数の受信者をセミコロンで区切ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-910">Separate multiple recipients with a semicolon.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="0d74c-911">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-911">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-912">ファックスされるドキュメントの件名を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-912">A string that represents the subject line for the faxed document.</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="0d74c-913">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-913">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-914">
            <b>True</b> は、送信する前に fax メッセージを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-914">
              <b>True</b> displays the fax message before sending it.</span>
          </span>
          <span data-ttu-id="0d74c-915">
            <b>場合</b> 送信 fax メッセージは表示されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-915">
              <b>False</b> sends the fax without displaying the fax message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-916">ワークシートを fax として指定された受信者に送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-916">Sends a worksheet as a fax to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-917">
              <b>SendFaxOverInternet</b>メソッドを使用するには、ユーザーのコンピューターに fax サービスが有効になっている必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-917">Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-918">Fax 番号を指定するために使用する形式、<paramref name="Recipients" />パラメーターは、いずれかの<paramref name="recipientsfaxnumber@usersfaxprovider" />または<paramref name="recipientsname@recipientsfaxnumber" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-918">The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />.</span>
            </span>
            <span data-ttu-id="0d74c-919">次のレジストリ パスから、ユーザーの FAX プロバイダーの情報にアクセスできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-919">You can access the user's fax provider information using the following registry path:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-920">HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-920">HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-921">このレジストリ パスの FaxAddress キーの値を参照して、宛先に使用する形式を判断できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-921">Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="0d74c-922">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-922">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-923">メッセージを送信する受信者の一覧を表示する文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-923">A string that lists the people to whom to send the message.</span>
          </span>
          <span data-ttu-id="0d74c-924">未解決の名前および電子メールのアドレス帳または完全な電子メール アドレスのエイリアスを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-924">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span>
          </span>
          <span data-ttu-id="0d74c-925">複数の受信者をセミコロン (;) で区切ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-925">Separate multiple recipients with a semicolon (;).</span>
          </span>
          <span data-ttu-id="0d74c-926">空白の場合、 <paramref name="ShowMessage" /><b>は</b>、エラー メッセージが表示され、メッセージは送信されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-926">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="0d74c-927">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-928">メッセージの件名の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-928">A string for the subject of the message.</span>
          </span>
          <span data-ttu-id="0d74c-929">空白の場合、件名になります: を参照してください"<paramref name="filename" />"です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-929">If left blank, the subject will be: Please review "<paramref name="filename" />".</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="0d74c-930">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-930">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-931">メソッドを実行したときにメッセージを表示するかどうかを示すブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-931">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span>
          </span>
          <span data-ttu-id="0d74c-932">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-932">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0d74c-933">
            <b>False</b> に設定すると、最初に送信者にメッセージを表示しないで、受信者に自動的に送信されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-933">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span>
          </span>
        </param>
        <param name="IncludeAttachment">
          <span data-ttu-id="0d74c-934">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-934">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-935">添付ファイルまたはサーバーの場所へのリンクをメッセージに含めるかどうかを示すブール型 ( <b>Boolean</b> ) の値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-935">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span>
          </span>
          <span data-ttu-id="0d74c-936">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-936">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0d74c-937">
            <b>False</b> に設定すると、文書は共有の場所に格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-937">If set to <b>False</b>, the document must be stored at a shared location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-938">校閲用のブックを指定された受信者に電子メール メッセージとして送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-938">Sends a workbook in an e-mail message for review to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-939">
              <b>SendForReview</b> メソッドは、共同校閲サイクルを開始します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-939">The <b>SendForReview</b> method starts a collaborative review cycle.</span>
            </span>
            <span data-ttu-id="0d74c-940">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />校閲サイクルを終了します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-940">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="0d74c-941">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-941">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-942">複数の受信者がある場合は、テキスト、またはテキスト文字列の配列としての受信者の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-942">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span>
          </span>
          <span data-ttu-id="0d74c-943">1 つ以上の受信者を指定する必要があります、および受信者に関するすべての受信者が追加されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-943">At least one recipient must be specified, and all recipients are added as To recipients.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="0d74c-944">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-944">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-945">メッセージの件名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-945">Specifies the subject of the message.</span>
          </span>
          <span data-ttu-id="0d74c-946">この引数を省略すると、ドキュメントの名前が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-946">If this argument is omitted, the document name is used.</span>
          </span>
        </param>
        <param name="ReturnReceipt">
          <span data-ttu-id="0d74c-947">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-947">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-948">
            <b>True の</b>戻り値の受信確認を要求します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-948">
              <b>True</b> to request a return receipt.</span>
          </span>
          <span data-ttu-id="0d74c-949">
            <b>False</b>リターン領収書を要求しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-949">
              <b>False</b> not to request a return receipt.</span>
          </span>
          <span data-ttu-id="0d74c-950">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-950">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-951">組み込まれているメール システムを使うことによって、ブックを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-951">Sends the workbook by using the installed mail system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">
          <span data-ttu-id="0d74c-952">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-952">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Priority">
          <span data-ttu-id="0d74c-953">このパラメーターは Macintosh 専用です。使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-953">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-p318">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p318">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-956">返します、 <see cref="T:Microsoft.Office.Core.ServerPolicy" /> 2nd_OSS_NoVersion を実行するサーバーに保存されているブックに指定されているポリシーを表す 2007。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-956">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span>
          </span>
          <span data-ttu-id="0d74c-957">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-957">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-958">
            <b>ServerPolicy</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-958">
              <b>ServerPolicy</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p320">開発者がサーバー上に表示されるブック内の発行済みオブジェクトの一覧とやりとりができるようにします。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p320">Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-961">このプロパティは、Excel Services に発行できるアイテムのコレクションを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-961">This property returns a collection of the items that could be published to Excel Services.</span>
            </span>
            <span data-ttu-id="0d74c-962">テーブル、ピボット テーブル、名前付き範囲、およびグラフに含めることができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-962">It can include Tables, PivotTables, Named Ranges, and Charts.</span>
            </span>
            <span data-ttu-id="0d74c-963">シートの組み合わせではない限り、シートを含めることも、前述の一覧の前にします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-963">It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-964">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-964">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-965">返されると、DDE または OLE リンクの名前、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-965">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="0d74c-966">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-966">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-967">リンクが更新されたときに実行されるプロシージャの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-967">The name of the procedure to be run when the link is updated.</span>
          </span>
          <span data-ttu-id="0d74c-968">Excel 4.0 のマクロまたは Visual Basic のプロシージャのいずれかを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-968">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span>
          </span>
          <span data-ttu-id="0d74c-969">この引数を空の文字列に設定 ("") をプロシージャが実行されるなしのリンクが更新されたときを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-969">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-970">リンクを更新したときに実行されるプロシージャの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-970">Sets the name of a procedure that runs whenever a DDE link is updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider">
          <span data-ttu-id="0d74c-971">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-971">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-972">暗号化プロバイダーを示す、大文字と小文字を区別する文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-972">A case sensitive string of the encryption provider.</span>
          </span>
        </param>
        <param name="PasswordEncryptionAlgorithm">
          <span data-ttu-id="0d74c-973">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-973">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-974">アルゴリズムの短縮名を示す、大文字と小文字を区別する文字列 (たとえば、"RC4") を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-974">A case sensitive string of the algorithmic short name (i.e. "RC4").</span>
          </span>
        </param>
        <param name="PasswordEncryptionKeyLength">
          <span data-ttu-id="0d74c-975">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-975">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-976">暗号鍵の長さを、40 以上の 8 の乗数で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-976">The encryption key length which is a multiple of 8 (40 or greater).</span>
          </span>
        </param>
        <param name="PasswordEncryptionFileProperties">
          <span data-ttu-id="0d74c-977">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-977">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-978">
            <b>True</b> (既定値) の場合、ファイル プロパティを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-978">
              <b>True</b> (default) to encrypt file properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-979">パスワードを使用するブックの暗号化のオプションを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-979">Sets the options for encrypting workbooks using passwords.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-980">
              <paramref name="PasswordEncryptionProvider" />、 <paramref name="PasswordEncryptionAlgorithm" />、および<paramref name="PasswordEncryptionKeyLength" />は互いに独立しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-980">The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other.</span>
            </span>
            <span data-ttu-id="0d74c-981">選択された暗号化プロバイダーは、一連のアルゴリズムとキーの長さを選択することができますを制限します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-981">A selected encryption provider limits the set of algorithms and key length that can be chosen.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-982">
              <paramref name="PasswordEncryptionKeyLength" />引数を指定のキーの長さの範囲に制限はありません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-982">For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length.</span>
            </span>
            <span data-ttu-id="0d74c-983">範囲は、また、暗号化アルゴリズムを決定する暗号化サービス プロバイダーによって決定されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-983">The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-984">返します、<see cref="T:Microsoft.Office.Core.SharedWorkspace" />を指定したドキュメントが含まれているドキュメント ワークスペースを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-984">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span>
          </span>
          <span data-ttu-id="0d74c-985">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-985">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-986">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべてのシートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-986">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-987">読み取り専用の<b>シート</b>のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-987">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p332">
            <b>True</b> の場合、共有ファイルとして開かれているブックで、コンフリクトの履歴のワークシートを表示しています。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p332">
              <b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-990">指定されたブックが共有リストとして開かれていない場合は、このプロパティは失敗します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-990">If the specified workbook isn't open as a shared list, this property fails.</span>
            </span>
            <span data-ttu-id="0d74c-991">ブックが共有リストとして開かれているかどうかを確認するに、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />プロパティ。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-991">To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-992">このプロパティは、ピボット グラフ フィルター ウィンドウの表示/非表示を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-992">This property controls the visibility of the PivotChart Filter Pane.</span>
          </span>
          <span data-ttu-id="0d74c-993">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-993">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-994">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-994">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-995">このプロパティは、(オン/オフ) は、ピボット グラフ フィルター ウィンドウの表示/非表示を制御します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-995">This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).</span>
            </span>
            <span data-ttu-id="0d74c-996">それを表示するためには、<b>ピボット グラフ</b>オブジェクトを選択してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-996">In order for it to be visible, a <b>PivotChart</b> object must be selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p336">
            <b>True</b> (既定値) の場合、ピボットテーブルのフィールド リストを表示できます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p336">
              <b>True</b> (default) if the PivotTable field list can be shown. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p337">ブックのデジタル署名を返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p337">Returns the digital signatures for a workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SignatureSet" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1001">デジタル Excel2007 ブックを署名すると、それらの他の署名の確認、Microsoft CryptoAPI と固有のデジタル署名証明書を必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1001">To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate.</span>
            </span>
            <span data-ttu-id="0d74c-1002">CryptoAPI は、Microsoft Internet Explorer 4.01 以降にインストールされます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1002">The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later.</span>
            </span>
            <span data-ttu-id="0d74c-1003">デジタル署名証明書は、認証機関から取得できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1003">You can obtain a digital signature certificate from a certification authority.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1004">取得、 <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> 、ブックに関連付けられているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1004">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d74c-1005">
            <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> 、ブックに関連付けられているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1005">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1006">値の取得および設定が可能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1006">Read/write.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1007">返します、<see cref="T:Microsoft.Office.Core.SmartDocument" />スマート ドキュメント ソリューションの設定を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1007">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span>
          </span>
          <span data-ttu-id="0d74c-1008">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1008">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1009">返します、<see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" />は、スマート タグで実行可能なオプションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1009">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1010">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> 、指定されたブックのすべてのスタイルを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1010">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1011">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1011">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1012">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1012">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1013">返します、<see cref="T:Microsoft.Office.Core.Sync" />のドキュメント ワークスペースに含まれるドキュメントのメソッドおよびプロパティへのアクセスを提供するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1013">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1014">返します、 <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> 、作業中のブックで使用するスタイルを参照する現在のブックのコレクション オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1014">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1015">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1015">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1016">プロパティから返された表スタイルを操作できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1016">You can manipulate the table styles returned by the property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p342">
            <b>True</b> の場合、ブックがテンプレートとして保存されるとき、外部データ参照を削除します。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p342">
              <b>True</b> if external data references are removed when the workbook is saved as a template. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p343">現在のブックに適用されるテーマを返します。値の取得のみ可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p343">Returns the theme applied to the current workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.OfficeTheme" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1021">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1021">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1022">フォームのデザイン モードのオンとオフを切り替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1022">Toggles form design mode on or off.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1023">Excel では、フォームのデザイン モードでは、コントロール ツールボックス] ツールバーが表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1023">When Excel is in form design mode, the Control Toolbox toolbar is displayed.</span>
            </span>
            <span data-ttu-id="0d74c-1024">このツールバーを使用すると、コマンド ボタン、スクロール バー、オプション ボタンなどの ActiveX コントロールを挿入します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1024">You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons.</span>
            </span>
            <span data-ttu-id="0d74c-1025">フォームのデザイン モードでイベント プロシージャを実行するには、埋め込みコントロールをクリックすると、コントロールのサイズ変更ハンドルが表示されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1025">In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="0d74c-1026">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1026">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1027">シートまたはブックの保護を解除するパスワードを示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1027">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1028">シートまたはブックがパスワードで保護されていない場合、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1028">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="0d74c-1029">パスワードで保護されているシートに対してこの引数を省略すると、パスワードが要求されるでしょう。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1029">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="0d74c-1030">パスワードで保護されているブックに対してこの引数を省略すると、メソッドは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1030">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-p346">シートまたはブックの保護を解除します。保護されていないシートやブックに対しては、このメソッドは無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p346">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p347">パスワードを忘れると、シートまたはブックの保護を解除できなくなってしまうので注意してください。パスワードおよび対応するブック名またはシート名を一覧表にして、安全な場所に保管しておくことをお勧めします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p347">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword">
          <span data-ttu-id="0d74c-1035">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1035">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1036">ブックのパスワードを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1036">The workbook password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-1037">共有保護を解除し、ブックを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1037">Turns off protection for sharing and saves the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-p349">[!メモ] パスワードには、大文字、小文字、数字、記号を組み合わせた複雑なものを使用してください。これらの文字を混在させたものになっていないパスワードは強固とはいえません。たとえば、Y6dh!et5 は安全性の高いパスワードです。House27 は推測されやすいパスワードです。また、高い安全性を保ちながらも、書き留めておかなくても覚えておくことができるパスワードを使用してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-p349">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p350">メモリ上の読み取り専用ブックを、ディスク上で保存されているものに置き換えます (ディスク上のブックの方が新しい場合)。ブックが開かれてから、ディスク上のブックが変更されていない場合には、更新が行われません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p350">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1045">このメソッドは、ブックが A のユーザーによって読み取り専用として開くし、ユーザー B が読み取り/書き込みとして開かれたときに便利です。ユーザー B は、A する必要があるブックのオープン、ユーザーを閉じると、ブックを再び開くと表示の設定が失われることがなく、更新されたコピーを入手できないときに、ブックの新しいバージョンをディスクに保存します。 場合、</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1045">This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings.</span>
            </span>
            <span data-ttu-id="0d74c-1046">
              <b>UpdateFromFile</b>メソッドは、ブックをディスク ファイルからのメモリ内コピーを更新します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1046">The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="0d74c-1047">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1047">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1048">返された、更新する Excel または DDE または OLE リンクの名前、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1048">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="0d74c-1049">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1049">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-1050">Excel、DDE、OLE のいずれかのリンクを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1050">Updates a Microsoft Excel, DDE, or OLE link (or links).</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1051">
              <b>UpdateLink</b>メソッドはパラメーターなしで呼び出されると、Excel のワークシートのすべてのリンクを更新するのには既定値です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1051">When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1052">値を取得または設定、<see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" />埋め込み OLE リンクの更新について、ブックの設定を示す定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1052">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span>
          </span>
          <span data-ttu-id="0d74c-1053">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1053">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p354">
            <b>True</b> の場合、ブック内のリモート参照を更新します。ブール型 ( <b>Boolean</b> ) を使用します。値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p354">
              <b>True</b> if Microsoft Excel updates remote references in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1056">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1056">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1057">共有リストとして開くには、ブックには各ユーザーに関する情報を提供する、1 から始まる 2 次元の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1057">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span>
          </span>
          <span data-ttu-id="0d74c-1058">2 つ目の次元の最初の要素はユーザー名、2 番目の要素はユーザーがブックを最後に開いた日付と時刻、3 番目の要素はファイルの種類を示します。ファイルの種類は、1 であれば排他、2 であれば共有を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1058">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span>
          </span>
          <span data-ttu-id="0d74c-1059">読み取り専用 <b>オブジェクト</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1059">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1060">
              <b>UserStatus</b>プロパティは、指定したブックを読み取り専用で開かれているユーザーに関する情報を返しません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1060">The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1061">
            <b>True</b>ブックのセルの内容全体に一致する検索パターンを使用している場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1061">
              <b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span>
          </span>
          <span data-ttu-id="0d74c-1062">読み取り専用の<b>ブール型</b>(C# では<b>bool</b> ) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1062">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1063">
            <b>True の</b>場合ブックにより、ワイルドカード文字の文字列の比較と検索のため。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1063">
              <b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span>
          </span>
          <span data-ttu-id="0d74c-1064">読み取り専用の<b>ブール型</b>(C# では<b>bool</b> ) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1064">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p358">
            <b>True</b> の場合、指定されたブックの VBA プロジェクトにはデジタル署名があります。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p358">
              <b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1067">指定されたブックの Visual Basic プロジェクトを表す<b>VBProject</b>オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1067">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1068">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1068">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1069">返します、<see cref="T:Microsoft.Office.Interop.Excel.WebOptions" />コレクションで、文書を Web ページとして保存または Web ページを開くときに Excel で使用されるブック レベルの属性が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1069">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span>
          </span>
          <span data-ttu-id="0d74c-1070">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1070">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1071">指定されたブックが Web ページとして保存されている場合、そのプレビューを Web ページとして表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1071">Displays a preview of the specified workbook as it would look if saved as a Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1072">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 、指定されたブック内のすべてのウィンドウを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1072">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1073">
            <b>Windows</b>オブジェクトの読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1073">Read-only <b>Windows</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1074">このプロパティは、表示および非表示の両方のウィンドウのコレクションを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1074">This property returns a collection of both visible and hidden windows.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1075">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブックのすべてのワークシートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1075">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1076">読み取り専用の<b>シート</b>のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1076">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1077">このプロパティでオブジェクト修飾子を指定しないコードを使用すると、作業中のブックのすべてのワークシートが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1077">Using this property without an object qualifier returns all the worksheets in the active workbook.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-1078">このプロパティはマクロ シートを返しません。使用して、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />プロパティまたは<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />これらのシートを返すプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1078">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1079">ブックの書き込みパスワードの<b>文字列</b>を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1079">Returns or sets a <b>String</b> for the write password of a workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1080">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1080">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-p364">
            <b>True</b> の場合、指定されたブックを書き込み保護 (書き込みパスワードが設定) しています。値の取得のみ可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-p364">
              <b>True</b> if the workbook is write-reserved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1083">使用して、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />このプロパティを設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1083">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1084">ブックの書き込みアクセス許可を現在所有しているユーザーの名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1084">Returns the name of the user who currently has write permission for the workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1085">読み取り専用 <b>文字列</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1085">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="0d74c-1086">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1086">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1087">XML データ ファイルへの Uniform Resource Locator (URL) または汎用名前付け規則 (UNC) パスを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1087">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="0d74c-1088">必要な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1088">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="0d74c-1089">ファイルのインポート時に適用するスキーマ マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1089">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="0d74c-1090">オプションの <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1090">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1091">値が指定されていない場合、<paramref name="Destination" />パラメーターは、このパラメーターで指定されたスキーマ マップにマッピングされているデータを上書きするかどうかを指定します<paramref name="ImportMap" />パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1091">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="0d74c-1092">データまたは<b>false を指定</b>する既存のデータに新しいデータを追加、上書きを<b>True</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1092">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="0d74c-1093">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1093">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1094">値を指定する場合、<paramref name="Destination" />のパラメーターは、このパラメーターは既存のデータを上書きするかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1094">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="0d74c-1095">
            <b>True</b>を設定する既存のデータまたは<b>false を指定</b>するとデータが上書きされますが、インポートをキャンセルを上書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1095">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="0d74c-1096">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1096">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="0d74c-1097">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1097">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="0d74c-1098">データは、指定された範囲にある新しい XML リストにインポートされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1098">The data will be imported into a new XML list at the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-1099">作業中のブックに XML データ ファイルをインポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1099">Imports an XML data file into the current workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1100">返します。 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1100">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1101">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1101">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-1102">値を指定しない、<paramref name="Destination" />パラメーターは、既存のマッピングにデータをインポートする場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1102">Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-1103">
              <b>XMLImport</b>メソッドの実行時エラーを生成するが次の条件になります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1103">The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="0d74c-1104">指定した XML データに構文エラーがある場合。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-1104">The specified XML data contains syntax errors.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-1105">指定したデータがワークシートに収まらないためインポート処理がキャンセルされた場合。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-1105">The import process was cancelled because the specified data cannot fit into the worksheet.</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="0d74c-1106">使用、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />のメソッド、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />がメモリに読み込まれている XML データをインポートするオブジェクトです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1106">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="0d74c-1107">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1107">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1108">インポートするデータを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1108">The data to import.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="0d74c-1109">必要な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1109">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="0d74c-1110">ファイルのインポート時に適用するスキーマ マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1110">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="0d74c-1111">オプションの <b>Boolean</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1111">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1112">値が指定されていない場合、<paramref name="Destination" />パラメーターは、このパラメーターで指定されたスキーマ マップにマッピングされているデータを上書きするかどうかを指定します<paramref name="ImportMap" />パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1112">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="0d74c-1113">データまたは<b>false を指定</b>する既存のデータに新しいデータを追加、上書きを<b>True</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1113">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="0d74c-1114">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1114">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="0d74c-1115">値を指定する場合、<paramref name="Destination" />のパラメーターは、このパラメーターは既存のデータを上書きするかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1115">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="0d74c-1116">
            <b>True</b>を設定する既存のデータまたは<b>false を指定</b>するとデータが上書きされますが、インポートをキャンセルを上書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1116">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="0d74c-1117">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="0d74c-1118">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1118">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="0d74c-1119">データは、指定した範囲に新しい XML リストにインポートされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1119">The data will be imported into a new XML list in the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d74c-1120">メモリに読み込まれている XML データ ストリームをインポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1120">Imports an XML data stream that has been previously loaded into memory.</span>
          </span>
          <span data-ttu-id="0d74c-1121">返します。 <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1121">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1122">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1122">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-1123">値を指定しない、<paramref name="Destination" />パラメーターは、既存のマッピングにデータをインポートする場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1123">Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="0d74c-1124">
              <b>XMLImport</b>メソッドの実行時エラーを生成するが次の条件になります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1124">The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="0d74c-1125">指定した XML データに構文エラーがある場合。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-1125">The specified XML data contains syntax errors.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="0d74c-1126">指定したデータがワークシートに収まらないためインポート処理がキャンセルされた場合。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="0d74c-1126">The import process was cancelled because the specified data cannot fit into the worksheet.</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="0d74c-1127">使用、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />のメソッド、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトを現在のブックに XML データ ファイルをインポートします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1127">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1128">返します、 <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> 、指定されたブックに追加されているスキーマ マップを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1129">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1129">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1130">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1130">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d74c-1131">返します、 <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> 、指定されたブックに含まれている XML 名前空間を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1131">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span>
          </span>
          <span data-ttu-id="0d74c-1132">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d74c-1132">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="0d74c-1133">XML スプレッドシート形式でファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0d74c-1133">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>