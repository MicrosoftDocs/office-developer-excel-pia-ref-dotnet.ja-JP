<Type Name="ProtectedViewWindow" FullName="Microsoft.Office.Interop.Excel.ProtectedViewWindow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e408f0f28015c64503fb4f24fd3d1bb9d13526ce" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20574761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ProtectedViewWindow" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ProtectedViewWindow" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />
  <TypeSignature Language="VB.NET" Value="Public Interface ProtectedViewWindow" />
  <TypeSignature Language="C++ CLI" Value="public interface class ProtectedViewWindow" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244CD-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1cc86-101">[保護されたビュー] ウィンドウを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cc86-101">Represents a Protected View window.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="1cc86-102">
        <para>A の保護されたビューのウィンドウを使用して、安全でない場所からブックを表示します。安全でない場所が、次のように定義されている:</para>
        <list type="number">
          <item>
            <description>、インターネットからファイルを開く</description>
          </item>。
        <item><description>の添付ファイルは、Microsoft Outlook 2010 から開かれている</description></item>。
        <item><description>ファイル ブロックのポリシーによってブロックされているファイル</description></item>。
        <item><description>Office ファイル検証に失敗したファイルです</description></item>。
        <item><description>ファイルが明示的に [開く] ダイアログ ボックスで [開く] ボタンのコマンドを保護されたビューで開く] を使用して保護されたビューで開く</description></item></list>。
      <para>ブックが保護されたビューのウィンドウに表示されますが編集できなくなり、Visual Basic for Applications などのマクロは、データ接続のアクティブ コンテンツの実行が制限されています</para>。1 つを取得する
      <para><see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />からオブジェクト、<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" />コレクション、ProtectedViewWindows(Index) に開くウィンドウのインデックス番号を使用します。アクセスすることも、<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />を使用して保護されたビューの作業中のウィンドウを表すオブジェクト、<see cref="P:Microsoft.Office.Interop.Excel.Application.ActiveProtectedViewWindow" />のプロパティの<see cref="T:Microsoft.Office.Interop.Excel.Application" />オブジェクトです</para>。
      <para>にアクセスした後、<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />オブジェクトは、使用、<see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook" />プロパティにアクセスするのには、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />は、保護されたビューのウィンドウで開いているブックのファイルを表すオブジェクト。保護されたビューのウィンドウが可能性のある悪意のあるコードからユーザーを保護するために設計されているため、操作を実行できますを使用して、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />によって返されるオブジェクトの<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />オブジェクトが制限されます。使用できないほとんどの操作を返す"実行時エラー 1004: このコマンドは、Excel では、サンド ボックス化された場合は使用できません」</para> 。
      <para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="1cc86-102">
          <para>A Protected View window is used to display a workbook from a potentially unsafe location. Unsafe locations are defined as the following:</para>
          <list type="number">
            <item>
              <description>Files opened from the Internet.</description>
            </item>
            <item>
              <description>Attachments opened from Microsoft Outlook 2010.</description>
            </item>
            <item>
              <description>Files blocked by File Block Policy.</description>
            </item>
            <item>
              <description>Files that fail Office File Validation.</description>
            </item>
            <item>
              <description>Files explicitly opened in Protected View by using the Open in Protected View command of the Open button in the Open dialog box.</description>
            </item>
          </list>
          <para>Workbooks displayed in a Protected View window cannot be edited and are restricted from running active content such as Visual Basic for Applications macros and data connections.</para>
          <para>To return a single <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection, use ProtectedViewWindows(Index), where Index is the index number of the window you want to open. You can also access the <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window by using the <see cref="P:Microsoft.Office.Interop.Excel.Application.ActiveProtectedViewWindow" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</para>
          <para>After you access a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object, use the <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook" /> property to access the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook file that is open in the Protected View window. Because a Protected View window is designed to protect the user from potentially malicious code, the operations you can perform by using a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object returned by a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object will be limited. Most operations that are not allowed will return "Run-time error 1004: This command is not available when Excel is sandboxed."</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <span data-ttu-id="1cc86-103">返します。 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-103">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-104">Z オーダーの前面には、保護されたビューのウィンドウを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-104">Brings the Protected View window to the front of the z-order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-105">取得または保護されたビュー] ウィンドウのタイトル バーに表示される名前を表す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-105">Gets or sets a value that represents the name that appears in the title bar of the Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-106">[保護されたビュー] ウィンドウのタイトル バーに表示される名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-106">The name that appears in the title bar of the Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-107">
            <para>読み取り/書き込み。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-107">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Close" />
      <MemberSignature Language="VB.NET" Value="Public Function Close () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-108">指定した保護されたビュー ウィンドウを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-108">Closes the specified Protected View window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1cc86-109">返します。 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-109">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Edit (object WriteResPassword, object UpdateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Edit([in]object WriteResPassword, [in]object UpdateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Edit(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Edit (Optional WriteResPassword As Object, Optional UpdateLinks As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(562)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="WriteResPassword">
          <span data-ttu-id="1cc86-110">読み取り専用のブックへの書き込みに必要なパスワードです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-110">The password required to write to a write-reserved workbook.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="1cc86-111">ファイルで、次の数式では、Budget.xls ブック内の範囲への参照などのように外部参照 (リンク) を指定 = SUM ([Budget.xls] 年間!C10:C25) を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-111">Specifies the way external references (links) in the file, such as the reference to a range in the Budget.xls workbook in the following formula =SUM([Budget.xls]Annual!C10:C25), are updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cc86-112">編集用に指定された保護されたビュー ウィンドウで開いているブックを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-112">Opens the workbook that is open in the specified Protected View window for editing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1cc86-113">返します、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="1cc86-114">
            <para>場合、<paramref name="WriteResPassword" />パラメーターを省略すると、ブックにパスワードが必要ですと、ユーザーはパスワードを求められます</para>。
          <para>場合、<paramref name="UpdateLinks" />パラメーターを省略すると、求めるメッセージがリンクの更新方法を指定します。WKS でファイルを開く、Excel の場合、[WK1 または WK3 の書式を設定し、<paramref name="UpdateLinks" />の引数が 0 で、グラフは作成されません。Excel がファイルに接続されているグラフからグラフを生成するそれ以外の場合です</para>。
          <para>しないように、アプリケーションにハード コーディングされたパスワードを使用しています。ユーザーからパスワードを要求するプロシージャでは、パスワードが必要である場合、変数に格納およびコード内で変数を使用します</para>。
          <para>で、次の表に記載されている値のいずれかを指定することができます、 <paramref name="UpdateLinks" /> 、ブックを開くときに外部参照 (リンク) を更新するかどうかを決定するパラメーターです</para>。
          <list type="table"><item><term>0</term><description>ブックを開いた場合、外部参照 (リンク) は更新されません</description></item>。
            <item><term>3</term><description>外部参照 (リンク) は、ブックを開くときに更新されます</description></item></list>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-114">
              <para>If the <paramref name="WriteResPassword" /> parameter is omitted and the workbook requires a password, the user will be prompted for the password.</para>
              <para>If the <paramref name="UpdateLinks" /> parameter is omitted, the user is prompted to specify how links will be updated. If Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 0, no charts are created; otherwise Excel generates charts from the graphs attached to the file.</para>
              <para>Avoid using hard-coded passwords in your applications. If a password is required in a procedure, request the password from the user, store it in a variable, and then use the variable in your code.</para>
              <para>You can specify one of the values, listed in the following table, in the <paramref name="UpdateLinks" /> parameter to determine whether external references (links) are updated when the workbook is opened.</para>
              <list type="table">
                <item>
                  <term>0</term>
                  <description>External references (links) will not be updated when the workbook is opened.</description>
                </item>
                <item>
                  <term>3</term>
                  <description>External references (links) will be updated when the workbook is opened.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-115">取得または、[保護されたビュー] ウィンドウのサイズを変更できるかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-115">Gets or sets whether the Protected View window can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-116">
            <b>true の</b>場合は、[保護されたビュー] ウィンドウのサイズを変更できます。それ以外の場合、 <b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-116">
              <b>true</b> if the Protected View window can be resized; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-117">
            <para>読み取り/書き込み。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-117">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-118">取得またはポイントは、保護されたビューのウィンドウの高さを表す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-118">Gets or sets a value that represents the height, in points, of the Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-119">保護されたビュー] ウィンドウのポイント単位の高さです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-119">The height, in points, of the Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-120">
            <para>読み取り/書き込み</para>。
          <para>、保護されたビュー] ウィンドウが最大化または最小化されている場合、このプロパティを設定することはできません。使用して、 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 、ウィンドウの状態を確認するにします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-120">
              <para>Read/write.</para>
              <para>You cannot set this property if the Protected View window is maximized or minimized. Use the <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> property to determine the window state.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-121">取得または、保護されたビュー] ウィンドウの左端までのクライアント領域の左端からの距離をポイント単位でを表す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-121">Gets or sets a value that represents the distance, in points, from the left edge of the client area to the left edge of the Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-122">[保護されたビュー] ウィンドウの左端までのクライアント領域の左端からポイント単位での距離です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-122">The distance, in points, from the left edge of the client area to the left edge of the Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-123">
            <para>読み取り/書き込み。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-123">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-124">指定された保護されたビューのウィンドウで開かれているソース ファイルの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-124">Gets the name of the source file that is open in the specified Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-125">指定された保護されたビューのウィンドウで開かれているソース ファイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-125">The name of the source file that is open in the specified Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-126">
            <para>読み取り専用です。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-126">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2993)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-127">指定された保護されたビューのウィンドウで開かれているソース ファイルのパスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-127">Gets the path of the source file that is open in the specified Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-128">指定された保護されたビューのウィンドウで開かれているソース ファイルのパスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-128">The path of the source file that is open in the specified Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-129">
            <para>読み取り専用</para>。
          <para>のパスでは、末尾の区切り文字 (たとえば、C:\MSOffice) は含まれません。使用して、<see cref="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />フォルダーとドライブ文字を区切る文字を追加するプロパティです。使用して、<see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName" />の<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />、パスなしのソース ファイルの名前を返すオブジェクト</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-129">
              <para>Read-only.</para>
              <para>The path does not include a trailing character (for example, "C:\MSOffice"). Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" /> property to add the character that separates folders and drive letters. Use the <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.SourceName" /> of the <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object to return the source file name without the path.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-130">取得または使用可能領域の上端に保護されたビューの指定したウィンドウの上端からの距離をポイント単位でを表す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-130">Gets or sets a value that represents the distance, in points, from the top edge of the specified Protected View window to the top edge of the usable area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-131">使用可能領域の上端に保護されたビューの指定したウィンドウの上端からポイント単位での距離です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-131">The distance, in points, from the top edge of the specified Protected View window to the top edge of the usable area.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-132">
            <para>読み取り/書き込み</para>。
          <para>最大化された保護されたビューのウィンドウに対してこのプロパティを設定することはできません。使用して、 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 、ウィンドウの状態を設定するプロパティ</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-132">
              <para>Read/write.</para>
              <para>You cannot set this property for a maximized Protected View window. Use the <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> property to return or set the state of the window.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-133">取得または指定した保護されたビューのウィンドウが表示されているかどうかを決定する値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-133">Gets or sets a value that determines whether the specified Protected View window is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-134">
            <b>true の</b>場合は、指定した保護されたビューのウィンドウが表示されます。それ以外の場合、 <b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-134">
              <b>true</b> if the specified Protected View window is visible; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-135">
            <para>読み取り/書き込み。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-135">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-136">取得または指定した保護されたビュー ウィンドウのポイント単位での幅を指定する値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-136">Gets or sets a value that specifies the width, in points, of the specified Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-137">保護されたビューの指定したウィンドウのポイント単位の幅です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-137">The width, in points, of the specified Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-138">
            <para>読み取り/書き込み</para>。
          <para>、保護されたビュー] ウィンドウが最大化または最小化されている場合、このプロパティを設定することはできません。使用して、 <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> 、ウィンドウの状態を確認するにします</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-138">
              <para>Read/write.</para>
              <para>You cannot set this property if the Protected View window is maximized or minimized. Use the <see cref="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" /> property to determine the window state.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlProtectedViewWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlProtectedViewWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlProtectedViewWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlProtectedViewWindowState WindowState { Microsoft::Office::Interop::Excel::XlProtectedViewWindowState get(); void set(Microsoft::Office::Interop::Excel::XlProtectedViewWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlProtectedViewWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-139">取得または指定した保護されたビューのウィンドウの状態を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-139">Gets or sets the state of the specified Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-140">保護されたビューの指定したウィンドウの状態です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-140">The state of the specified Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-141">
            <para>読み取り/書き込み。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-141">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Workbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Workbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ProtectedViewWindow.Workbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Workbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(752)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(752)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cc86-142">指定された保護されたビューのウィンドウで開いているブックを表すオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-142">Gets an object that represents the workbook that is open in the specified Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cc86-143">指定された保護されたビューのウィンドウで開かれているブックです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-143">The workbook that is open in the specified Protected View window.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="1cc86-144">
            <para>読み取り専用</para>。
          <para>保護されたビューのウィンドウが可能性のある悪意のあるコードからユーザーを保護するために設計されているため、操作を実行できますを使用して、<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />によって返されるオブジェクトの<see cref="T:Microsoft.Office.Interop.Excel._Workbook" />メソッドは制限されます。許可されていない操作が返されます"実行時エラー 1004: このコマンドは、Excel では、サンド ボックス化された場合は使用できません」</para> 。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1cc86-144">
              <para>Read-only.</para>
              <para>Because a Protected View window is designed to protect the user from potentially malicious code, the operations you can perform by using a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object returned by the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> method will be limited. Any operation that is not allowed will return "Run-time error 1004: This command is not available when Excel is sandboxed."</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>