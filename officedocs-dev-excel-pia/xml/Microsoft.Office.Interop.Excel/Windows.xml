<Type Name="Windows" FullName="Microsoft.Office.Interop.Excel.Windows">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e22f5c32e648c50b21962a902607fb0d77f69c0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20574922" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Windows : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Windows implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Windows" />
  <TypeSignature Language="VB.NET" Value="Public Interface Windows&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Windows : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020892-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c26bd-101">すべてのコレクション、<see cref="T:Microsoft.Office.Interop.Excel.Window" />では、Microsoft Excel のオブジェクトです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c26bd-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objects in Microsoft Excel.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="c26bd-102">
        <para>によって返される<b>ウィンドウ</b>のコレクション、<see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" />のプロパティ、<see cref="T:Microsoft.Office.Interop.Excel.Application" />で<b>ウィンドウ</b>のコレクションが返されますが、オブジェクトがすべての windows アプリケーションでは、含まれています、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />のプロパティの<see cref="T:Microsoft.Office.Interop.Excel.Workbook" />オブジェクトには、ウィンドウのウィンドウだけが含まれています。指定されたブックにします</para>。
      <para><b>ウィンドウ</b>または<b>ブック</b>のオブジェクトの<b>NewWindow</b>メソッドを使用して、新しいウィンドウを作成し、コレクションに追加します</para>。
      <para><b>Windows</b>(<paramref name="index" />)、 <paramref name="index" /> 、ウィンドウ名またはインデックス番号を 1 つの<b>ウィンドウ</b>オブジェクトを取得するには</para>。
      <para>作業中のウィンドウは、常に windows (1) ことに注意してください</para>。
      <para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="c26bd-102">
          <para>The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</para>
          <para>Use the <b>NewWindow</b> method of a <b>Window</b> or <b>Workbook</b> object to create a new window and add it to the collection.</para>
          <para>Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</para>
          <para>Note that the active window is always Windows(1).</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="c26bd-103">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-104">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public object Arrange (Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, object ActiveWorkbook, object SyncHorizontal, object SyncVertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arrange([in]valuetype Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle, [in]object ActiveWorkbook, [in]object SyncHorizontal, [in]object SyncVertical) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arrange (Optional ArrangeStyle As XlArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, Optional ActiveWorkbook As Object, Optional SyncHorizontal As Object, Optional SyncVertical As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(638)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ArrangeStyle" Type="Microsoft.Office.Interop.Excel.XlArrangeStyle" />
        <Parameter Name="ActiveWorkbook" Type="System.Object" />
        <Parameter Name="SyncHorizontal" Type="System.Object" />
        <Parameter Name="SyncVertical" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ArrangeStyle">
          <span data-ttu-id="c26bd-105">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-105">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />.</span>
          </span>
        </param>
        <param name="ActiveWorkbook">
          <span data-ttu-id="c26bd-106">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c26bd-107">の<b>場合は true。</b>作業中のブックの表示のウィンドウのみを配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-107">
              <b>True</b> to arrange only the visible windows of the active workbook.</span>
          </span>
          <span data-ttu-id="c26bd-108">
            <b>False</b>にすべてのウィンドウを整列します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-108">
              <b>False</b> to arrange all windows.</span>
          </span>
          <span data-ttu-id="c26bd-109">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-109">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SyncHorizontal">
          <span data-ttu-id="c26bd-110">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c26bd-111">無視されます<paramref name="ActiveWorkbook" />は<b>false を指定</b>するか省略します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-111">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span>
          </span>
          <span data-ttu-id="c26bd-112">
            <b>True の</b>水平方向のスクロール時に、作業中のブックのウィンドウを同期します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-112">
              <b>True</b> to synchronize the windows of the active workbook when scrolling horizontally.</span>
          </span>
          <span data-ttu-id="c26bd-113">
            <b>偽</b>のウィンドウを同期しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-113">
              <b>False</b> not to synchronize the windows.</span>
          </span>
          <span data-ttu-id="c26bd-114">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-114">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SyncVertical">
          <span data-ttu-id="c26bd-115">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c26bd-116">無視されます<paramref name="ActiveWorkbook" />は<b>false を指定</b>するか省略します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-116">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span>
          </span>
          <span data-ttu-id="c26bd-117">
            <b>True</b>垂直方向にスクロールするときに、作業中のブックのウィンドウを同期します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-117">
              <b>True</b> to synchronize the windows of the active workbook when scrolling vertically.</span>
          </span>
          <span data-ttu-id="c26bd-118">
            <b>偽</b>のウィンドウを同期しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-118">
              <b>False</b> not to synchronize the windows.</span>
          </span>
          <span data-ttu-id="c26bd-119">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-119">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c26bd-120">開かれているすべてのウィンドウを並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-120">Arranges the windows on the screen.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakSideBySide">
      <MemberSignature Language="C#" Value="public bool BreakSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BreakSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.BreakSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Function BreakSideBySide () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BreakSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-121">サイド バイ サイド モードでは、2 つのウィンドウの場合は、サイド バイ サイド モードを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-121">Ends side-by-side mode if two windows are in side-by-side mode.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareSideBySideWith">
      <MemberSignature Language="C#" Value="public bool CompareSideBySideWith (object WindowName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareSideBySideWith([in]object WindowName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.CompareSideBySideWith(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareSideBySideWith (WindowName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompareSideBySideWith(System::Object ^ WindowName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2246)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WindowName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="WindowName">
          <span data-ttu-id="c26bd-122">開くウィンドウの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-122">The name of a window to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c26bd-123">サイド バイ サイド モードでは、2 つのウィンドウを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-123">Opens two windows in side-by-side mode.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="c26bd-124">
            <para>
              <b>CompareSideBySideWith</b>メソッドを使用することはできません、<see cref="T:Microsoft.Office.Interop.Excel._Application" />オブジェクト、または<see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />プロパティ。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-124">
              <para>You cannot use the <b>CompareSideBySideWith</b> method with the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object or the <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-125">コレクション内にあるオブジェクトの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-125">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-126">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-126">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="c26bd-127">
            <para>オブジェクトを Microsoft excel で作成した場合、このプロパティは文字列 XCEL を 16 進数の番号 5843454 C を返します</para>
            <para>
              <b>作成者</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Excel では、クリエーター コード</para>。
          <para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-127">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="c26bd-128">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-128">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="c26bd-129">オブジェクトの名前またはインデックス番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-129">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c26bd-130">コレクションから単一のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-130">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-131">指定されたオブジェクトの親オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-131">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPositionsSideBySide">
      <MemberSignature Language="C#" Value="public void ResetPositionsSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPositionsSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.ResetPositionsSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPositionsSideBySide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPositionsSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-132">並べて比較している 2 つのワークシートのウィンドウの位置をリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-132">Resets the position of two worksheet windows that are being compared side by side.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="c26bd-133">
            <para>並べて比較している 2 つのワークシートの位置をリセットするのにには、 <b>ResetPositionsSideBySide</b>メソッドを使用します。たとえば、ユーザーが最小化したり、比較される 2 つのワークシート ウィンドウのいずれかを最大限に高め場合、は、2 つのウィンドウが表示されるように並べてもう一度<b>ResetPositionsSideBySide</b>メソッドの表示はリセットされます。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-133">
              <para>Use the <b>ResetPositionsSideBySide</b> method to reset the position of two worksheets that are being compared side by side. For example, if a user minimizes or maximizes one of the two worksheet windows being compared, the <b>ResetPositionsSideBySide</b> method resets the display so that the two windows are displayed side by side again.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncScrollingSideBySide">
      <MemberSignature Language="C#" Value="public bool SyncScrollingSideBySide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SyncScrollingSideBySide" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.SyncScrollingSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncScrollingSideBySide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SyncScrollingSideBySide { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c26bd-p105">
            <b>True</b> に設定すると、複数のドキュメントを並べて比較しているときに、各ウィンドウの内容を同時にスクロールできるようになります。 <b>False</b> に設定すると、各ウィンドウを同時にはスクロールできなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c26bd-p105">
              <b>True</b> enables scrolling the contents of windows at the same time when documents are being compared side by side. <b>False</b> disables scrolling the windows at the same time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>