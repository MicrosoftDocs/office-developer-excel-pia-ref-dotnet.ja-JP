<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999631" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="da263-101">これは、対応する COM オブジェクトとの相互運用性を得る目的でマネージ コードで必要とされる COM コクラスのプライマリ インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="da263-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="da263-102">このプライマリ インターフェイスは、使用するメソッドが COM オブジェクトのイベントと同じ名前を共有している場合にのみ使用します。この場合は、このインターフェイスにキャストしてメソッドを呼び出し、最新のイベント インターフェイスにキャストしてイベントに接続します。</span><span class="sxs-lookup"><span data-stu-id="da263-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="da263-103">それ以外の場合は、COM コクラスから派生した .NET インターフェイスを使用して、COM オブジェクトのメソッド、プロパティ、およびイベントにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="da263-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="da263-104">COM オブジェクトの詳細については、以下を参照してください <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-105">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="da263-106">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-106">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-107">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-107">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="da263-108">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary><span data-ttu-id="da263-109">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="da263-110">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-110">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="da263-111">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span></span> <span data-ttu-id="da263-112">アクティブにする Microsoft アプリケーションを指定します。<b>XlMSApplication</b>には、次の<b>XlMSApplication</b>定数のいずれかを指定できます<b>。xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject xlMicrosoftSchedulePlus</b><b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span></span></param>
        <summary><span data-ttu-id="da263-p103">Microsoft のアプリケーションをアクティブにします。実行中のアプリケーションに対して適用されると、そのアプリケーションがアクティブになり、実行中でないアプリケーションに対して適用されると、そのアプリケーションの新しいインスタンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="da263-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-116">アクティブ ウィンドウ (一番上のウィンドウ) または指定したウィンドウのアクティブ セルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span></span> <span data-ttu-id="da263-117">ウィンドウに表示されているワークシートが表示されていない場合は、このプロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="da263-117">If the window isn't displaying a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p105">アクティブ セルと選択セル範囲を混同しないように注意してください。アクティブ セルは、現在の選択セル範囲内の単一セルを指します。選択セル範囲には、複数のセルが含まれる場合がありますが、アクティブ セルはその中の 1 つだけを指します。</span><span class="sxs-lookup"><span data-stu-id="da263-p105">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-121">アクティブなグラフ (埋め込みグラフまたはグラフ シート) を表す <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span></span> <span data-ttu-id="da263-122">埋め込みグラフは、アクティブにされている状態だけではなく、選択されただけの状態でもアクティブと見なされます。</span><span class="sxs-lookup"><span data-stu-id="da263-122">An embedded chart is considered active when it's either selected or activated.</span></span> <span data-ttu-id="da263-123">アクティブなグラフがないときは、 <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-123">When no chart is active, this property returns <b>Nothing</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-124">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-124">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-125">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="da263-126"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="da263-126"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-127">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-127">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-128">使用しているプリンターの名前を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-128">Returns or sets the name of the active printer.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-129">アクティブな <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> [保護されたビュー] ウィンドウ (一番上のウィンドウ) を表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-129">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></summary>
        <value><span data-ttu-id="da263-130">アクティブ <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> な [保護されたビュー] ウィンドウ (一番上のウィンドウ) を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-130">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span></span></value>
        <remarks><para><span data-ttu-id="da263-131">保護ビュー ウィンドウが開いていない場合は、null 参照 (Visual Basic 内の Nothing) を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-131">Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open.</span></span> <span data-ttu-id="da263-132">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-132">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-p108">作業中のブックまたは指定したウィンドウやブックにあるアクティブ シート (一番手前のシート) を表すオブジェクトを返します。アクティブ シートが存在しないときは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-p108">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook. Returns <b>Nothing</b> if no sheet is active.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-135">ブックを複数のウィンドウで表示している場合、異なるウィンドウでは <b>ActiveSheet</b> プロパティの値が異なることがあります。</span><span class="sxs-lookup"><span data-stu-id="da263-135">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-136">アクティブ ウィンドウ (一番上のウィンドウ) を表 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-136">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span></span> <span data-ttu-id="da263-137">開いている <b>ウィンドウがない場合は、Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-137">Returns <b>Nothing</b> if there are no windows open.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-138">アクティブ ウィンドウ (一番上のウィンドウ) 内のブックを表 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-138">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span></span> <span data-ttu-id="da263-139">ウィンドウが 1 つも開かれていないとき、または情報ウィンドウまたはクリップボード ウィンドウのいずれかがアクティブ ウィンドウであるときは、 <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-139">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart"><span data-ttu-id="da263-140">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-140">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-141">新しいグラフのオートフォーマットを適用するときに適用される書式を含むグラフ。</span><span class="sxs-lookup"><span data-stu-id="da263-141">A chart that contains the format that will be applied when the new chart autoformat is applied.</span></span></param>
        <param name="Name"><span data-ttu-id="da263-142">文字列型 (<b>String</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-142">Required <b>String</b>.</span></span> <span data-ttu-id="da263-143">新しいオートフォーマットの名前を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-143">The name of the autoformat.</span></span></param>
        <param name="Description"><span data-ttu-id="da263-144">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-145">ユーザー設定のオートフォーマットの説明を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-145">A description of the custom autoformat.</span></span></param>
        <summary><span data-ttu-id="da263-146">使用可能なグラフ用オートフォーマットの一覧に、ユーザー設定オートフォーマットを追加します。</span><span class="sxs-lookup"><span data-stu-id="da263-146">Adds a custom chart autoformat to the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="da263-147">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-147">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-148">ソース データを文字列の配列またはオブジェクトとして指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-148">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></param>
        <param name="ByRow"><span data-ttu-id="da263-149">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-150">Range オブジェクトの <paramref name="ListArray" /> 場合 <b>にのみ使用</b> します。</span><span class="sxs-lookup"><span data-stu-id="da263-150">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span></span> <span data-ttu-id="da263-151"><b>True</b> を指定すると、ユーザー設定リストがセル範囲内の各行から生成されます。</span><span class="sxs-lookup"><span data-stu-id="da263-151"><b>True</b> to create a custom list from each row in the range.</span></span> <span data-ttu-id="da263-152"><b>False</b> を指定すると、ユーザー設定リストがセル範囲内の各列から生成されます。</span><span class="sxs-lookup"><span data-stu-id="da263-152"><b>False</b> to create a custom list from each column in the range.</span></span> <span data-ttu-id="da263-153">セル範囲内の行数が列数より多いか、または、行と列が同数であるときにこの引数を省略すると、ユーザー設定リストがセル範囲内の各列から生成されます。</span><span class="sxs-lookup"><span data-stu-id="da263-153">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span></span> <span data-ttu-id="da263-154">逆に、セル範囲内の列数が行数より多いときにこの引数を省略すると、ユーザー設定リストがセル範囲内の各行から生成されます。</span><span class="sxs-lookup"><span data-stu-id="da263-154">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span></span></param>
        <summary><span data-ttu-id="da263-155">ユーザー設定のオートフィルとユーザー設定の並べ替え順序のいずれか一方、または両方に使うユーザー設定リストを追加します。</span><span class="sxs-lookup"><span data-stu-id="da263-155">Adds a custom list for custom autofill and/or custom sort.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-156">追加済みのリストを指定したときは、このメソッドは無効になります。</span><span class="sxs-lookup"><span data-stu-id="da263-156">If the list you're trying to add already exists, this method does nothing.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-157">[ツール] ダイアログ ボックス ([ツール] メニュー) に表示Add-Ins <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> を表すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-157">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-158">インストールされているかどうかに関係なく、Excel で現在使用可能または開いているすべてのアドインを表すオブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-158">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span></span></summary>
        <value><span data-ttu-id="da263-159">現在 Excel で使用可能または開いているすべてのアドインを表す <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="da263-159">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span></span></value>
        <remarks><para><span data-ttu-id="da263-160">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-160">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-161"><b>True</b> の 場合は、ドラッグ アンド ドロップの編集操作中に、マークされていないセルを上書きする前にメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-161"><b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-162">代替スタートアップ フォルダーの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-162">Returns or sets the name of the alternate startup folder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-163">メニュー、リボン、およびダイアログ ボックスのテキストにフォントを表示するために ClearType を使用するかどうかを表すブール型 <b>(Boolean)</b> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-163">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span></span> <span data-ttu-id="da263-164">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-164">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-166">Microsoft Windows の設定で ClearType をオフにしている場合でも、このプロパティを <b>True</b> に設定すると、Windows の設定よりも優先され、すべての Microsoft Office アプリケーションで ClearType が使用されます。</span><span class="sxs-lookup"><span data-stu-id="da263-166">Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-167">Microsoft Excel の <see cref="T:Microsoft.Office.Core.AnswerWizard" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-167">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-168">指定したオブジェクトの作成元を表すオブジェクトを返します (OLE オートメーション オブジェクトでこのプロパティを使用すると、そのオブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.Application" /> アプリケーションを取得できます)。</span><span class="sxs-lookup"><span data-stu-id="da263-168">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-169">Microsoft Office Excel の XML 機能が使用可能かどうかを示すブール型 (<b>Boolean</b>) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-169">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-170">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-170">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-171"><b>True</b> の 場合、Microsoft Excel は、リンクを含むファイルを開く際にリンクを更新するユーザーを求めます。</span><span class="sxs-lookup"><span data-stu-id="da263-171"><b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span></span> <span data-ttu-id="da263-172"><b>False</b> の 場合はリンクが自動的に更新され、ダイアログ ボックスはありません。</span><span class="sxs-lookup"><span data-stu-id="da263-172"><b>False</b> if links are automatically updated with no dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-173">ヘルプ ビューアー <see cref="T:Microsoft.Office.Core.IAssistance" /> を表すshort_Excel2007オブジェクトをMicrosoft Officeします。</span><span class="sxs-lookup"><span data-stu-id="da263-173">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span></span> <span data-ttu-id="da263-174">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-174">Read-only.</span></span></summary>
        <value><span data-ttu-id="da263-175"><b>IAssistance</b></span><span class="sxs-lookup"><span data-stu-id="da263-175"><b>IAssistance</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-176"><b>IAssistance</b> オブジェクトを使用すると、Office と共にインストールされるヘルプとカスタム ヘルプを Office ヘルプ ビューアーに表示できます。</span><span class="sxs-lookup"><span data-stu-id="da263-176">The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-177">Microsoft Excel の <see cref="T:Microsoft.Office.Core.Assistant" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-177">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-178">Microsoft Excel オート <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> コレクトの属性を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-179"><b>True</b> (既定値) を入力すると、ハイパーリンクの書式が自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="da263-179"><b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span></span> <span data-ttu-id="da263-180"><b>False</b> を入力すると、Excel が自動的にハイパーリンクの書式を設定しない場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-180"><b>False</b> if Excel does not automatically format hyperlinks as you type.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-181">プログラムでファイルを開く際に使用するセキュリティ モードを表す定数を <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> 設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-181">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p120">このプロパティは、アプリケーションが起動したときに自動的に <b>msoAutomationSecurityLow</b> に設定されます。したがって、この既定値の設定に依存するソリューションの支障とならないように、プログラムからファイルを開いた後でこのプロパティを <b>msoAutomationSecurityLow</b> に戻すように注意する必要があります。また、悪意のある破壊行為を回避するために、このプロパティの設定はプログラムからファイルを開く直前と直後に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-p120">This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started. Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file. Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</span></span></para>
          <para><span data-ttu-id="da263-185">
            <b>MsoAutomationSecurity</b> の値に使用できるのは、 <b>MsoAutomationSecurity</b> クラスの定数のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="da263-185">
            <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="da263-186">
                <b>msoAutomationSecurityByUI</b>   [セキュリティ] ダイアログ ボックスで指定されたセキュリティ<b>設定を</b>使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-186">
                <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-187">
                <b>msoAutomationSecurityForceDisable</b>   セキュリティの警告を表示せずに、プログラムで開いたすべてのファイルのすべてのマクロを無効にします。</span><span class="sxs-lookup"><span data-stu-id="da263-187">
                <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-188">
                <b>msoAutomationSecurityLow</b>   すべてのマクロを有効にする。</span><span class="sxs-lookup"><span data-stu-id="da263-188">
                <b>msoAutomationSecurityLow</b>  Enables all macros.</span></span> <span data-ttu-id="da263-189">アプリケーションが起動されたときの既定値です。</span><span class="sxs-lookup"><span data-stu-id="da263-189">This is the default value when the application is started.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-190"><see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />False<b>に設定</b>しても、警告には影響を与え、セキュリティ警告には影響を与え得ない。</span><span class="sxs-lookup"><span data-stu-id="da263-190">Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings.</span></span> <span data-ttu-id="da263-191">この <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 設定は、セキュリティ警告には適用されません。</span><span class="sxs-lookup"><span data-stu-id="da263-191">The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings.</span></span> <span data-ttu-id="da263-192">たとえば <b>、DisplayAlerts</b> を <b>False</b> に <b>、AutomationSecurity</b> を <b>msoAutomationSecurityByUI</b>に設定し、ユーザーが中程度のセキュリティ レベルにある場合、マクロの実行中にセキュリティ警告が表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-192">For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running.</span></span> <span data-ttu-id="da263-193">これにより、マクロのセキュリティのファイルを開くときに成功したかどうかに警告が表示され、ファイルを開くエラーをトラップできます。</span><span class="sxs-lookup"><span data-stu-id="da263-193">This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-194"><b>True</b> の 場合は、割合として書式設定されたセルのエントリは、入力するとすぐに 100 を自動的に乗算されません。</span><span class="sxs-lookup"><span data-stu-id="da263-194"><b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-195">一定の <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> 間隔ですべてのファイル形式をバックアップするオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-195">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-196">有効な時間間隔は、1 ～ 120 の範囲の整数です。</span><span class="sxs-lookup"><span data-stu-id="da263-196">Valid time intervals are whole numbers from 1 to 120.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-197">Microsoft Excel のビルド番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-197">Returns the Microsoft Excel build number.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-198">通常は、ビルド番号を知る必要がない限り、プロパティをテスト <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> する方が安全です。</span><span class="sxs-lookup"><span data-stu-id="da263-198">It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-199">開いているすべてのブックを計算します。</span><span class="sxs-lookup"><span data-stu-id="da263-199">Calculates all open workbooks</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-200"><b>True</b> の 場合は、ブックがディスクに保存される前に計算されます (プロパティが <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> <b>xlManual に設定されている場合</b>)。</span><span class="sxs-lookup"><span data-stu-id="da263-200"><b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span></span> <span data-ttu-id="da263-201">このプロパティは、プロパティを変更しても保持 <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> されます。</span><span class="sxs-lookup"><span data-stu-id="da263-201">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-202">開かれているすべてのブックに含まれているデータの全計算を実行します。</span><span class="sxs-lookup"><span data-stu-id="da263-202">Forces a full calculation of the data in all open workbooks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-203">開いているすべてのワークシートで、データをすべて計算し、依存を再構築します。</span><span class="sxs-lookup"><span data-stu-id="da263-203">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-p124">依存は、他のセルに依存する数式です。たとえば、"=A1" という数式はセル A1 に依存します。<b>CalculateFullRebuild</b> メソッドは、すべての数式を再入力するのと似ています。</span><span class="sxs-lookup"><span data-stu-id="da263-p124">Dependencies are the formulas that depend on other cells. For example, the formula "=A1" depends on cell A1. The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-207">OLEDB および OLAP データ ソースへの保留中のすべてのクエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="da263-207">Runs all pending queries to OLEDB and OLAP data sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-208">計算モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-208">Returns or sets the calculation mode.</span></span> <span data-ttu-id="da263-209">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-209">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-210">OLAP データ ソースの場合、このプロパティは <b>xlNormal</b> のみ取得および設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-210">For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</span></span></para>
          <para><span data-ttu-id="da263-211">
            <b>使用できる定数</b> は、次に示す <b>XlCalculation 定数</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-211">
            <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-212">
            <b>xlCalculationAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-212">
            <b>xlCalculationAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="da263-213">
            <b>xlCalculationManual</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-213">
            <b>xlCalculationManual</b>
          </span></span></para>
          <para><span data-ttu-id="da263-214">
            <b>xlCalculationSulationmatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-214">
            <b>xlCalculationSemiautomatic</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-215">計算を実行するときに Microsoft Excel を中断できるキーを指定する定数を設定または <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> 取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-215">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-216">
            <b>使用できる定数は、</b> 次に示す <b>XlCalculationInterruptKey</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-216">
            <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-217">
            <b>xlAnyKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-217">
            <b>xlAnyKey</b>
          </span></span></para>
          <para><span data-ttu-id="da263-218">
            <b>xlEscKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-218">
            <b>xlEscKey</b>
          </span></span></para>
          <para><span data-ttu-id="da263-219">
            <b>xlNoKey</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-219">
            <b>xlNoKey</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-220">Microsoft Excel で実行されている計算のアプリケーションの計算状態を示す定数 <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-220">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-221">
            <b>使用できる定数</b> は、次に示す <b>XlCalculationState</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-221">
            <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-222">
            <b>xlCalculating</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-222">
            <b>xlCalculating</b>
          </span></span></para>
          <para><span data-ttu-id="da263-223">
            <b>xlDone</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-223">
            <b>xlDone</b>
          </span></span></para>
          <para><span data-ttu-id="da263-224">
            <b>xlPending</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-224">
            <b>xlPending</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-225">右端の 4 桁がマイナー計算エンジンのバージョン番号で、その他の数字 (左側) が Microsoft Excel のメジャー バージョンである数値を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-225">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-226">ブックが以前のバージョンの Excel で保存され、ブックが完全に再計算されていない場合、このプロパティは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-226">If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="da263-227">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-227">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-228">配列のインデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-228">An index to the array.</span></span> <span data-ttu-id="da263-229">この引数は、プロパティが配列を返す場合にのみ使用されます (詳細については、「備考」セクションを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="da263-229">This argument is used only when the property returns an array (for more information, see the Remarks section).</span></span></param>
        <summary><span data-ttu-id="da263-230">Visual Basic を呼び出した方法についての情報を返します。さらに詳細な情報ついては「備考」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da263-230">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-231">次にプロパティの各値で表される、Visual Basic を呼び出した方法についての情報を示します。</span><span class="sxs-lookup"><span data-stu-id="da263-231">This property returns information about how Visual Basic was called, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-232">単一セルに入力されたユーザー定義関数</span><span class="sxs-lookup"><span data-stu-id="da263-232">A custom function entered in a single cell</span></span></term>
              <description><span data-ttu-id="da263-233">その <see cref="T:Microsoft.Office.Interop.Excel.Range" /> セルを指定するオブジェクト</span><span class="sxs-lookup"><span data-stu-id="da263-233">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-234">セル範囲内の配列数式の一部として入力されたユーザー定義関数</span><span class="sxs-lookup"><span data-stu-id="da263-234">A custom function that is part of an array formula in a range of cells</span></span></term>
              <description><span data-ttu-id="da263-235">そのセル範囲を示す <b>Range</b> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="da263-235">A <b>Range</b> object specifying that range of cells</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-236">Auto_Open、Auto_Close、Auto_Activate、または Auto_Deactivate マクロ</span><span class="sxs-lookup"><span data-stu-id="da263-236">An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</span></span></term>
              <description><span data-ttu-id="da263-237">ドキュメント名を示す文字列</span><span class="sxs-lookup"><span data-stu-id="da263-237">The name of the document as text</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-238">またはプロパティによって設定 <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> された <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> マクロ</span><span class="sxs-lookup"><span data-stu-id="da263-238">A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</span></span></term>
              <description><span data-ttu-id="da263-239">マクロの対象となるグラフ オブジェクトの識別名またはセル参照 (ただし該当する場合のみ)</span><span class="sxs-lookup"><span data-stu-id="da263-239">The name of the chart object identifier or cell reference (if applicable) to which the macro applies</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-240">[マクロ] ダイアログ ボックス ([ツール] - [マクロ] - [マクロ])、または上記以外の呼び出し</span><span class="sxs-lookup"><span data-stu-id="da263-240">The Macro dialog box (Tools menu), or any caller not described above</span></span></term>
              <description><span data-ttu-id="da263-241">#REF!</span><span class="sxs-lookup"><span data-stu-id="da263-241">The #REF!</span></span> <span data-ttu-id="da263-242">エラー値</span><span class="sxs-lookup"><span data-stu-id="da263-242">error value</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-243">このプロパティは、使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="da263-243">This property should not be used.</span></span> <span data-ttu-id="da263-244">サウンド メモは Excel から削除されました。</span><span class="sxs-lookup"><span data-stu-id="da263-244">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-245">このプロパティは、使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="da263-245">This property should not be used.</span></span> <span data-ttu-id="da263-246">サウンド メモは Excel から削除されました。</span><span class="sxs-lookup"><span data-stu-id="da263-246">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-247">メインの Excel ウィンドウのタイトル バーに表示される名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-247">The name that appears in the title bar of the main Microsoft Excel window.</span></span> <span data-ttu-id="da263-248">名前を設定しない場合、または <b>Empty</b> を設定した場合は、"Microsoft Excel" を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-248">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-249">セルのドラッグ アンド ドロップが有効になっている場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-249"><b>True</b> if dragging and dropping cells is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-250">アクティブ ワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のすべてのセルを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-250">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span></span> <span data-ttu-id="da263-251">アクティブ ドキュメントがワークシートではない場合、このプロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="da263-251">If the active document isn’t a worksheet, this property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-252">このプロパティは Range オブジェクトの既定のプロパティなので、Cells キーワードの直後に行と列のインデックス <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> を<b>指定</b>できます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-252">Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="da263-253">詳細については、プロパティを参照 <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> してください。</span><span class="sxs-lookup"><span data-stu-id="da263-253">For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters"><span data-ttu-id="da263-254">必須 <b>の二重</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-254">Required <b>Double</b>.</span></span> <span data-ttu-id="da263-255">変換の対象となる数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-255">Specifies the centimeter value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="da263-256">センチメートル単位の数値を、ポイント (1 ポイントは、0.35 mm) 単位に変換します。</span><span class="sxs-lookup"><span data-stu-id="da263-256">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-257"><b>True</b> の場合、新しく作成したドキュメントに含まれるすべてのグラフでセル参照の追跡動作が使用されます。</span><span class="sxs-lookup"><span data-stu-id="da263-257"><b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span></span> <span data-ttu-id="da263-258"><b>ブール</b> 値 (C# のブール値)。</span><span class="sxs-lookup"><span data-stu-id="da263-258"><b>Boolean</b> (bool in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-259">アクティブブック <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 内のすべてのグラフ シートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort"><span data-ttu-id="da263-260">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-260">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-261">範囲に対して再計算を実行 <b>できます</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-261">Allows recalculation to be performed for a <b>Range</b>.</span></span></param>
        <summary><span data-ttu-id="da263-262">Excel アプリケーションの再計算を停止します。</span><span class="sxs-lookup"><span data-stu-id="da263-262">Stops recalculation in a Microsoft Excel application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word"><span data-ttu-id="da263-263"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-263">Required <b>String</b>.</span></span> <span data-ttu-id="da263-264">チェック対象の単語を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-264">The word you want to check.</span></span></param>
        <param name="CustomDictionary"><span data-ttu-id="da263-265">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-265">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-266">メイン辞書に単語が見つからない場合に調べるユーザー辞書のファイル名を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="da263-266">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="da263-267">この引数を省略すると、現在指定されている辞書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="da263-267">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="da263-268">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-268">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-269">すべて大文字の単語を無視するには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-269"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="da263-270">すべて大文字の単語もスペル チェックの対象にするには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-270"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="da263-271">この引数を省略すると、現在の設定が使われます。</span><span class="sxs-lookup"><span data-stu-id="da263-271">If this argument is omitted, the current setting will be used.</span></span></param>
        <summary><span data-ttu-id="da263-272">指定された単語のスペルをチェックします。</span><span class="sxs-lookup"><span data-stu-id="da263-272">Checks the spelling of a single word.</span></span> <span data-ttu-id="da263-273">単語が <b>辞書</b> の 1 つで見つかった場合はTrue を返します。単語が <b>見</b> つからない場合はFalse を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-273">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="da263-274">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-274">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-275">返す配列の要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-275">The array element to be returned.</span></span> <span data-ttu-id="da263-276">この引数を省略すると、クリップボードに現在保存されている形式が配列として返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-276">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span></span> <span data-ttu-id="da263-277">詳細については、「備考」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da263-277">For more information, see the Remarks section.</span></span></param>
        <summary><span data-ttu-id="da263-278">現在クリップボードに保存されている書式を数値の配列として返します。</span><span class="sxs-lookup"><span data-stu-id="da263-278">Returns the formats that are currently on the Clipboard as an array of numeric values.</span></span> <span data-ttu-id="da263-279">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-279">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-280">このプロパティは、数値の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-280">This property returns an array of numeric values.</span></span> <span data-ttu-id="da263-281">特定の形式がクリップボードにあるかどうかを判断するには、配列の各要素を次のいずれかの定数と <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> 比較します。</span><span class="sxs-lookup"><span data-stu-id="da263-281">To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</span></span></para>
          <para><span data-ttu-id="da263-282">
            <b>xlClipboardFormatBIFF</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-282">
            <b>xlClipboardFormatBIFF</b>
          </span></span></para>
          <para><span data-ttu-id="da263-283">
            <b>xlClipboardFormatBIFF2</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-283">
            <b>xlClipboardFormatBIFF2</b>
          </span></span></para>
          <para><span data-ttu-id="da263-284">
            <b>xlClipboardFormatBIFF3</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-284">
            <b>xlClipboardFormatBIFF3</b>
          </span></span></para>
          <para><span data-ttu-id="da263-285">
            <b>xlClipboardFormatBIFF4</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-285">
            <b>xlClipboardFormatBIFF4</b>
          </span></span></para>
          <para><span data-ttu-id="da263-286">
            <b>xlClipboardFormatBinary</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-286">
            <b>xlClipboardFormatBinary</b>
          </span></span></para>
          <para><span data-ttu-id="da263-287">
            <b>xlClipboardFormatBitmap</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-287">
            <b>xlClipboardFormatBitmap</b>
          </span></span></para>
          <para><span data-ttu-id="da263-288">
            <b>xlClipboardFormatCGM</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-288">
            <b>xlClipboardFormatCGM</b>
          </span></span></para>
          <para><span data-ttu-id="da263-289">
            <b>xlClipboardFormatCSV</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-289">
            <b>xlClipboardFormatCSV</b>
          </span></span></para>
          <para><span data-ttu-id="da263-290">
            <b>xlClipboardFormatDIF</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-290">
            <b>xlClipboardFormatDIF</b>
          </span></span></para>
          <para><span data-ttu-id="da263-291">
            <b>xlClipboardFormatDspText</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-291">
            <b>xlClipboardFormatDspText</b>
          </span></span></para>
          <para><span data-ttu-id="da263-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-292">
            <b>xlClipboardFormatEmbeddedObject</b>
          </span></span></para>
          <para><span data-ttu-id="da263-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-293">
            <b>xlClipboardFormatEmbedSource</b>
          </span></span></para>
          <para><span data-ttu-id="da263-294">
            <b>xlClipboardFormatLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-294">
            <b>xlClipboardFormatLink</b>
          </span></span></para>
          <para><span data-ttu-id="da263-295">
            <b>xlClipboardFormatLinkSource</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-295">
            <b>xlClipboardFormatLinkSource</b>
          </span></span></para>
          <para><span data-ttu-id="da263-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-296">
            <b>xlClipboardFormatLinkSourceDesc</b>
          </span></span></para>
          <para><span data-ttu-id="da263-297">
            <b>xlClipboardFormatMovie</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-297">
            <b>xlClipboardFormatMovie</b>
          </span></span></para>
          <para><span data-ttu-id="da263-298">
            <b>xlClipboardFormatNative</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-298">
            <b>xlClipboardFormatNative</b>
          </span></span></para>
          <para><span data-ttu-id="da263-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-299">
            <b>xlClipboardFormatObjectDesc</b>
          </span></span></para>
          <para><span data-ttu-id="da263-300">
            <b>xlClipboardFormatObjectLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-300">
            <b>xlClipboardFormatObjectLink</b>
          </span></span></para>
          <para><span data-ttu-id="da263-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-301">
            <b>xlClipboardFormatOwnerLink</b>
          </span></span></para>
          <para><span data-ttu-id="da263-302">
            <b>xlClipboardFormatPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-302">
            <b>xlClipboardFormatPICT</b>
          </span></span></para>
          <para><span data-ttu-id="da263-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-303">
            <b>xlClipboardFormatPrintPICT</b>
          </span></span></para>
          <para><span data-ttu-id="da263-304">
            <b>xlClipboardFormatRTF</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-304">
            <b>xlClipboardFormatRTF</b>
          </span></span></para>
          <para><span data-ttu-id="da263-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-305">
            <b>xlClipboardFormatScreenPICT</b>
          </span></span></para>
          <para><span data-ttu-id="da263-306">
            <b>xlClipboardFormatStandardFont</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-306">
            <b>xlClipboardFormatStandardFont</b>
          </span></span></para>
          <para><span data-ttu-id="da263-307">
            <b>xlClipboardFormatStandardScale</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-307">
            <b>xlClipboardFormatStandardScale</b>
          </span></span></para>
          <para><span data-ttu-id="da263-308">
            <b>xlClipboardFormatSYLK</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-308">
            <b>xlClipboardFormatSYLK</b>
          </span></span></para>
          <para><span data-ttu-id="da263-309">
            <b>xlClipboardFormatTable</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-309">
            <b>xlClipboardFormatTable</b>
          </span></span></para>
          <para><span data-ttu-id="da263-310">
            <b>xlClipboardFormatText</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-310">
            <b>xlClipboardFormatText</b>
          </span></span></para>
          <para><span data-ttu-id="da263-311">
            <b>xlClipboardFormatToolFace</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-311">
            <b>xlClipboardFormatToolFace</b>
          </span></span></para>
          <para><span data-ttu-id="da263-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-312">
            <b>xlClipboardFormatToolFacePICT</b>
          </span></span></para>
          <para><span data-ttu-id="da263-313">
            <b>xlClipboardFormatVALU</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-313">
            <b>xlClipboardFormatVALU</b>
          </span></span></para>
          <para><span data-ttu-id="da263-314">
            <b>xlClipboardFormatWK1</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-314">
            <b>xlClipboardFormatWK1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-315">XLL アドインでユーザー定義関数を実行するために使用される高性能コンピューティング (HPC) クラスター コネクタの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-315">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></summary>
        <value><span data-ttu-id="da263-316">XLL アドインでユーザー定義関数を実行するために使用される高性能コンピューティング (HPC) クラスター コネクタの名前。</span><span class="sxs-lookup"><span data-stu-id="da263-316">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span></span></value>
        <remarks><para><span data-ttu-id="da263-317">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-317">Read/write.</span></span></para>
          <para><span data-ttu-id="da263-318">このプロパティの設定は、[Excel のオプション] ダイアログ ボックスの [詳細設定] カテゴリの [数式] の [クラスターの種類] ドロップダウン ボックスに <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-318">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="da263-319">
            <b>注</b>: プロパティを指定するには、高性能コンピューティング (HPC) クラスター コネクタを <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> インストールする必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-319">
            <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="da263-320">クラスター コネクタを使用すると、クラスター セーフな XLL 関数をリモートから HPC クラスターで実行し、性能を高めることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-320">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="da263-321">プロパティを指定する前に、このプロパティを使用して <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 、Microsoft Excel 2010 で XLL アドインでユーザー定義関数を実行できる <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-321">Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-322">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-323">アクティブ ワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のすべての列を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span></span> <span data-ttu-id="da263-324">作業中のドキュメントがワークシートではない場合、 <b>Columns</b> プロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="da263-324">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-325">現在インストールされている COM アドインを表す Microsoft Excel の <see cref="T:Microsoft.Office.Core.COMAddIns" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-325">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-326">Excel のコマンド <see cref="T:Microsoft.Office.Core.CommandBars" /> バーを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-326">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-327">このプロパティは、アプリケーションで使用できる組み込みのコマンド バーとユーザー設定のコマンド バーのセットを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-327">This property returns the set of built-in and custom command bars available to the application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-328">Macintosh 用 Microsoft Excel のコマンドの下線の状態を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-328">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> 使用できる定数は、 <b>次に示す XlCommandUnderlines 定数</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-329">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-330">
            <b>xlCommandUnderlinesOn</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-330">
            <b>xlCommandUnderlinesOn</b>
          </span></span></para>
          <para><span data-ttu-id="da263-331">
            <b>xlCommandUnderlinesOff</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-331">
            <b>xlCommandUnderlinesOff</b>
          </span></span></para>
          <para><span data-ttu-id="da263-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-332">
            <b>xlCommandUnderlinesAutomatic</b>
          </span></span></para>
          <para><span data-ttu-id="da263-333">Windows 版 Excel の場合、このプロパティは常に <b>xlCommandUnderlinesOn</b> を返します。このプロパティを <b>xlCommandUnderlinesOn</b> 以外の値に設定した場合、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="da263-333">In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-334"><b>True</b> の 場合、手書き認識は数字と句読点にのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="da263-334"><b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p145">このプロパティを設定できるのは、Microsoft Windows for Pen Computing を使用している場合だけです。Microsoft Windows for Pen Computing を使用していない場合は、このプロパティの値を設定しようとするとエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="da263-p145">This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-337">Microsoft Excel で右から左に記述する言語に対する制御文字を表示する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-337"><b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-338">このプロパティを設定できるのは、右から左に記述する言語の設定が選択またはセットアップされている場合だけです。</span><span class="sxs-lookup"><span data-stu-id="da263-338">This property can be set only when right to left language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula"><span data-ttu-id="da263-339">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-339">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-340">変換 <b>する</b> 数式を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="da263-340">A <b>String</b> that contains the formula you want to convert.</span></span> <span data-ttu-id="da263-341">必ず有効な数式を指定し、数式の先頭には等号 (=) を付けてください。</span><span class="sxs-lookup"><span data-stu-id="da263-341">This must be a valid formula, and it must begin with an equal sign.</span></span></param>
        <param name="FromReferenceStyle"><span data-ttu-id="da263-342">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-342">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="da263-343">数式の参照スタイルを指定します。<b>使用できる定数</b> は、次に示す <b>XlReferenceStyle</b> クラスの<b>xlA1</b><b>xlR1C1 です。</b></span><span class="sxs-lookup"><span data-stu-id="da263-343">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span></span></param>
        <param name="ToReferenceStyle"><span data-ttu-id="da263-344">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-344">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="da263-345">返される参照スタイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-345">The reference style you want returned.</span></span> <span data-ttu-id="da263-346">この引数を省略すると、参照スタイルは変更されません。数式は、指定されたスタイルのままです <paramref name="FromReferenceStyle" /> 。使用できる定数は、次に示す XlReferenceStyle クラスの定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="da263-346">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span></span> <span data-ttu-id="da263-347"><b>xlA1 </b> <b>xlR1C1</b></span><span class="sxs-lookup"><span data-stu-id="da263-347"><b>xlA1 </b><b>xlR1C1</b></span></span></param>
        <param name="ToAbsolute"><span data-ttu-id="da263-348">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-348">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span> <span data-ttu-id="da263-349">変換された参照の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-349">Specifies the converted reference type.</span></span> <span data-ttu-id="da263-350">この引数を省略すると、参照の種類は変更されません。<b>使用できる定数</b> は、次に示す <b>XlReferenceStyle</b> クラスの<b>定数です。xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span><span class="sxs-lookup"><span data-stu-id="da263-350">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span></span></param>
        <param name="RelativeTo"><span data-ttu-id="da263-351">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-351">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-352">バリアント型 (<b>Variant</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-352">Optional <b>Variant</b>.</span></span> <span data-ttu-id="da263-353">1 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> つのセルを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-353">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span></span> <span data-ttu-id="da263-354">このセルは、相対参照の基点となります。</span><span class="sxs-lookup"><span data-stu-id="da263-354">Relative references relate to this cell.</span></span></param>
        <summary><span data-ttu-id="da263-355">数式内のセル参照を、A1 と R1C1 の参照スタイル間、相対参照と絶対参照の間、または両方に変換します。</span><span class="sxs-lookup"><span data-stu-id="da263-355">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-356"><b>True</b> の 場合は、オブジェクトが切り取り、コピー、抽出、およびセルで並べ替えします。</span><span class="sxs-lookup"><span data-stu-id="da263-356"><b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-357">このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-357">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="da263-358">Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-358">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-359"><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。</span><span class="sxs-lookup"><span data-stu-id="da263-359">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="da263-360">たとえば、Microsoft Excel の作成元コードは XCEL です。</span><span class="sxs-lookup"><span data-stu-id="da263-360">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-361">Microsoft Excel のマウス ポインターの形状を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-361">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> 使用できる定数は、 <b>次に示す XlMousePointer</b> 定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="da263-362">
            <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-363">
            <b>xlDefault</b> 既定のポインター。</span><span class="sxs-lookup"><span data-stu-id="da263-363">
            <b>xlDefault</b> The default pointer.</span></span></para>
          <para><span data-ttu-id="da263-364">
            <b>xlIBeam</b> I 型ポインター。</span><span class="sxs-lookup"><span data-stu-id="da263-364">
            <b>xlIBeam</b> The I-beam pointer.</span></span></para>
          <para><span data-ttu-id="da263-365">
            <b>xlNorthwestArrow</b> 左矢印ポインター。</span><span class="sxs-lookup"><span data-stu-id="da263-365">
            <b>xlNorthwestArrow</b> The northwest arrow pointer.</span></span></para>
          <para><span data-ttu-id="da263-366">
            <b>xlWait</b> 砂時計ポインター。</span><span class="sxs-lookup"><span data-stu-id="da263-366">
            <b>xlWait</b> The hourglass pointer.</span></span></para>
          <para><span data-ttu-id="da263-367">マクロの実行が終了しても、<b>Cursor</b> プロパティは自動的にリセットされません。</span><span class="sxs-lookup"><span data-stu-id="da263-367">The <b>Cursor</b> property isn't reset automatically when the macro stops running.</span></span> <span data-ttu-id="da263-368">マクロの実行終了前に、ポインターの設定を <b>xlDefault</b> に戻すようにしてください。</span><span class="sxs-lookup"><span data-stu-id="da263-368">You should reset the pointer to <b>xlDefault</b> before your macro stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-369">視覚的なカーソルまたは論理カーソルを使用するかどうかを示す値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-369">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span></span> <span data-ttu-id="da263-370">使用できる定数は <b>、xlVisualCursor</b> または <b>xlLogicalCursor です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-370">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-371">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="da263-371">These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-372">定義済みのカスタム リスト (組み込みリストを含む) の数を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-372">Returns the number of defined custom lists (including built-in lists).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-373">切り取りモードまたはコピー モードの状態を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-373">Returns or sets the status of Cut or Copy mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> 使用できる定数は、 <b>次に示す XlCutCopyMode</b> 定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="da263-374">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-375">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-375">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="da263-376">切り取りモードまたはコピー モードではない</span><span class="sxs-lookup"><span data-stu-id="da263-376">Not in Cut or Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-377">
                <b>xlCopy</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-377">
                <b>xlCopy</b>
              </span></span></term>
              <description><span data-ttu-id="da263-378">コピー モード</span><span class="sxs-lookup"><span data-stu-id="da263-378">In Copy mode</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-379">
                <b>xlCut</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-379">
                <b>xlCut</b>
              </span></span></term>
              <description><span data-ttu-id="da263-380">切り取りモード</span><span class="sxs-lookup"><span data-stu-id="da263-380">In Cut mode</span></span></description>
            </item>
          </list>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-381">
                <b>False</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-381">
                <b>False</b>
              </span></span></term>
              <description><span data-ttu-id="da263-382">切り取りモードまたはコピー モードを解除し、点滅している枠線を取り除きます。</span><span class="sxs-lookup"><span data-stu-id="da263-382">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-383">
                <b>True</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-383">
                <b>True</b>
              </span></span></term>
              <description><span data-ttu-id="da263-384">切り取りモードまたはコピー モードを解除し、点滅している枠線を取り除きます。</span><span class="sxs-lookup"><span data-stu-id="da263-384">Cancels Cut or Copy mode and removes the moving border.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-385">次の表に示すように、データ入力モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-385">Returns or sets Data Entry mode, as shown in the table below.</span></span> <span data-ttu-id="da263-386">データ入力モードでは、現在選択されている範囲内のロックされていないセルにのみデータを入力できます。</span><span class="sxs-lookup"><span data-stu-id="da263-386">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="da263-387">
                <b>xlOn</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-387">
                <b>xlOn</b>
              </span></span></term>
              <description><span data-ttu-id="da263-388">データ入力モードがオン</span><span class="sxs-lookup"><span data-stu-id="da263-388">Data Entry mode is turned on.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-389">
                <b>xlOff</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-389">
                <b>xlOff</b>
              </span></span></term>
              <description><span data-ttu-id="da263-390">データ入力モードがオフ</span><span class="sxs-lookup"><span data-stu-id="da263-390">Data Entry mode is turned off.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-391">
                <b>xlStrict</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-391">
                <b>xlStrict</b>
              </span></span></term>
              <description><span data-ttu-id="da263-392">データ入力モードがオンになっていて、Esc キーを押してもオフにされません。</span><span class="sxs-lookup"><span data-stu-id="da263-392">Data Entry mode is turned on and pressing ESC won't turn it off.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-393">Excel が受信した最後の DDE 確認メッセージに含まれているアプリケーション固有の DDE リターン コードを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-393">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="da263-394">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-394">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-395">メソッドによって返されるチャネル <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 番号。</span><span class="sxs-lookup"><span data-stu-id="da263-395">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="String"><span data-ttu-id="da263-396"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-396">Required <b>String</b>.</span></span> <span data-ttu-id="da263-397">受信側のアプリケーションで定義されているメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-397">The message defined in the receiving application.</span></span></param>
        <summary><span data-ttu-id="da263-398">指定された DDE チャネルを経由して、他のアプリケーション内でコマンドまたは動作を実行します。</span><span class="sxs-lookup"><span data-stu-id="da263-398">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-399"><b>DDEExecute メソッドは</b>、コマンドを別のアプリケーションに送信するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="da263-399">The <b>DDEExecute</b> method is designed to send commands to another application.</span></span> <span data-ttu-id="da263-400">別のアプリケーションにキーストロークを送信することもできますが、このメソッドはキーストロークを送信する推奨 <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> 方法です。</span><span class="sxs-lookup"><span data-stu-id="da263-400">You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes.</span></span> <span data-ttu-id="da263-401">引数には、Alt、Ctrl、Shift と組み合わせた 1 つのキー、またはこれらのキーの任意の組み合 <paramref name="String" /> わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-401">The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys.</span></span> <span data-ttu-id="da263-402">各キーは、1 つ以上の文字 (文字 a の場合は "a"、ENTER キーの場合は "{ENTER}") で表されます。</span><span class="sxs-lookup"><span data-stu-id="da263-402">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="da263-p159">Enter キーや Tab キーのように、押しても画面に文字が表示されないキーを指定するときは、次に示すコードを使います。各コードは、キーボードの 1 つのキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-p159">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-405">BackSpace</span><span class="sxs-lookup"><span data-stu-id="da263-405">BACKSPACE</span></span></term>
              <description><span data-ttu-id="da263-406">{BACKSPACE} または {BS}</span><span class="sxs-lookup"><span data-stu-id="da263-406">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-407">Break</span><span class="sxs-lookup"><span data-stu-id="da263-407">BREAK</span></span></term>
              <description><span data-ttu-id="da263-408">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="da263-408">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-409">CapsLock</span><span class="sxs-lookup"><span data-stu-id="da263-409">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="da263-410">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-410">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-411">Clear</span><span class="sxs-lookup"><span data-stu-id="da263-411">CLEAR</span></span></term>
              <description><span data-ttu-id="da263-412">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="da263-412">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-413">Delete または Del</span><span class="sxs-lookup"><span data-stu-id="da263-413">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="da263-414">{DELETE} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="da263-414">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-415">↓</span><span class="sxs-lookup"><span data-stu-id="da263-415">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="da263-416">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="da263-416">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-417">終了</span><span class="sxs-lookup"><span data-stu-id="da263-417">END</span></span></term>
              <description><span data-ttu-id="da263-418">{END}</span><span class="sxs-lookup"><span data-stu-id="da263-418">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-419">Enter</span><span class="sxs-lookup"><span data-stu-id="da263-419">ENTER</span></span></term>
              <description><span data-ttu-id="da263-420">~ (チルダ)</span><span class="sxs-lookup"><span data-stu-id="da263-420">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-421">Enter (テンキー)</span><span class="sxs-lookup"><span data-stu-id="da263-421">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="da263-422">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="da263-422">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-423">Esc</span><span class="sxs-lookup"><span data-stu-id="da263-423">ESC</span></span></term>
              <description><span data-ttu-id="da263-424">{ESCAPE} または {ESC}</span><span class="sxs-lookup"><span data-stu-id="da263-424">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-425">F1 ～ F15</span><span class="sxs-lookup"><span data-stu-id="da263-425">F1 through F15</span></span></term>
              <description><span data-ttu-id="da263-426">{F1} ~ {F15}</span><span class="sxs-lookup"><span data-stu-id="da263-426">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-427">HELP</span><span class="sxs-lookup"><span data-stu-id="da263-427">HELP</span></span></term>
              <description><span data-ttu-id="da263-428">{HELP}</span><span class="sxs-lookup"><span data-stu-id="da263-428">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-429">ホーム</span><span class="sxs-lookup"><span data-stu-id="da263-429">HOME</span></span></term>
              <description><span data-ttu-id="da263-430">{HOME}</span><span class="sxs-lookup"><span data-stu-id="da263-430">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-431">Ins</span><span class="sxs-lookup"><span data-stu-id="da263-431">INS</span></span></term>
              <description><span data-ttu-id="da263-432">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="da263-432">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-433">←</span><span class="sxs-lookup"><span data-stu-id="da263-433">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="da263-434">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="da263-434">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-435">NumLock</span><span class="sxs-lookup"><span data-stu-id="da263-435">NUM LOCK</span></span></term>
              <description><span data-ttu-id="da263-436">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-436">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-437">PageDown</span><span class="sxs-lookup"><span data-stu-id="da263-437">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="da263-438">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="da263-438">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-439">PageUp</span><span class="sxs-lookup"><span data-stu-id="da263-439">PAGE UP</span></span></term>
              <description><span data-ttu-id="da263-440">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="da263-440">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-441">Return</span><span class="sxs-lookup"><span data-stu-id="da263-441">RETURN</span></span></term>
              <description><span data-ttu-id="da263-442">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="da263-442">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-443">→</span><span class="sxs-lookup"><span data-stu-id="da263-443">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="da263-444">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="da263-444">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-445">ScrollLock</span><span class="sxs-lookup"><span data-stu-id="da263-445">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="da263-446">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-446">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-447">Tab</span><span class="sxs-lookup"><span data-stu-id="da263-447">TAB</span></span></term>
              <description><span data-ttu-id="da263-448">{TAB}</span><span class="sxs-lookup"><span data-stu-id="da263-448">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-449">↑</span><span class="sxs-lookup"><span data-stu-id="da263-449">UP ARROW</span></span></term>
              <description><span data-ttu-id="da263-450">{UP}</span><span class="sxs-lookup"><span data-stu-id="da263-450">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-p160">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</span><span class="sxs-lookup"><span data-stu-id="da263-p160">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-453">SHIFT</span><span class="sxs-lookup"><span data-stu-id="da263-453">SHIFT</span></span></term>
              <description><span data-ttu-id="da263-454">+ (正符号)</span><span class="sxs-lookup"><span data-stu-id="da263-454">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-455">Ctrl</span><span class="sxs-lookup"><span data-stu-id="da263-455">CTRL</span></span></term>
              <description><span data-ttu-id="da263-456">^ (キャレット)</span><span class="sxs-lookup"><span data-stu-id="da263-456">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-457">Alt</span><span class="sxs-lookup"><span data-stu-id="da263-457">ALT</span></span></term>
              <description><span data-ttu-id="da263-458">% (パーセント記号)</span><span class="sxs-lookup"><span data-stu-id="da263-458">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App"><span data-ttu-id="da263-459"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-459">Required <b>String</b>.</span></span> <span data-ttu-id="da263-460">アプリケーションの名前を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-460">The application name.</span></span></param>
        <param name="Topic"><span data-ttu-id="da263-461"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-461">Required <b>String</b>.</span></span> <span data-ttu-id="da263-462">チャネルを開くアプリケーション内の何かを記述します。通常は、そのアプリケーションのドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="da263-462">Describes something in the application to which you're opening a channel — usually a document of that application.</span></span></param>
        <summary><span data-ttu-id="da263-463">アプリケーションへの DDE チャネルを開きます。</span><span class="sxs-lookup"><span data-stu-id="da263-463">Opens a DDE channel to an application.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-464">チャネルを開くことに成功すると、<b>DDEInitiate</b> メソッドは開いたチャネルの番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-464">If successful, the <b>DDEInitiate</b> method returns the number of the open channel.</span></span> <span data-ttu-id="da263-465">この番号は、以降 DDE 関数でそのチャネルを指定するときに使われます。</span><span class="sxs-lookup"><span data-stu-id="da263-465">All subsequent DDE functions use this number to specify the channel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="da263-466">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-466">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-467">メソッドによって返されるチャネル <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 番号。</span><span class="sxs-lookup"><span data-stu-id="da263-467">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="da263-468">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-468">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-469">データ送信先の項目名を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-469">The item to which the data is to be sent.</span></span></param>
        <param name="Data"><span data-ttu-id="da263-470">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-470">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-471">アプリケーションに送るデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-471">The data to be sent to the application.</span></span></param>
        <summary><span data-ttu-id="da263-472">アプリケーションにデータを送ります。</span><span class="sxs-lookup"><span data-stu-id="da263-472">Sends data to an application.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-473">メソッドの呼び出しに失敗すると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="da263-473">An error occurs if the method call doesn't succeed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="da263-474">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-474">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-475">メソッドによって返されるチャネル <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 番号。</span><span class="sxs-lookup"><span data-stu-id="da263-475">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <param name="Item"><span data-ttu-id="da263-476"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-476">Required <b>String</b>.</span></span> <span data-ttu-id="da263-477">要求される項目を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-477">The item to be requested.</span></span></param>
        <summary><span data-ttu-id="da263-478">指定されたアプリケーションの情報を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-478">Requests information from the specified application.</span></span> <span data-ttu-id="da263-479">このメソッドは、常に配列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-479">This method always returns an array.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel"><span data-ttu-id="da263-480">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-480">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-481">メソッドによって返されるチャネル <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> 番号。</span><span class="sxs-lookup"><span data-stu-id="da263-481">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span></span></param>
        <summary><span data-ttu-id="da263-482">ほかのアプリケーションへのチャネルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="da263-482">Closes a channel to another application.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-483">文字列 として小数点の記号に使用する文字を取得または設定 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-483">Sets or returns the character used for the decimal separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-484">Excel がファイルを開く際に使用する既定のパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-484">Returns or sets the default path that Microsoft Excel uses when it opens files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-485">ファイルを保存する既定の形式を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-485">Returns or sets the default format for saving files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-486">Excel で新しいウィンドウとワークシートを表示する既定の方向を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-486">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span></span> <span data-ttu-id="da263-487">使用できる定数は <b>、xlRTL</b> (右から左) または <b>xlLTR</b> (左から右) です。</span><span class="sxs-lookup"><span data-stu-id="da263-487">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-488">選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="da263-488">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-489">ドキュメントを Web ページとして保存したり、Web ページを開く場合に Excel で使用される、アプリケーション レベルのグローバル属性を含むオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-489">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-490">VBA コードによってワークシートの計算を行うときに、OLAP データ ソースへの非同期クエリが実行されるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-490">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span></span> <span data-ttu-id="da263-491">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-491">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-492"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-492"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-493"><b>DeferAsyncQueries</b>プロパティを<b>True</b>に設定すると、メソッドが呼び出されるまで、非同期クエリ フォーム <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> は実行されません。</span><span class="sxs-lookup"><span data-stu-id="da263-493">Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="da263-494">文字列型 (<b>String</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-494">Required <b>String</b>.</span></span> <span data-ttu-id="da263-495">削除するユーザー設定オートフォーマットの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-495">The name of the custom autoformat to be removed.</span></span></param>
        <summary><span data-ttu-id="da263-496">使用可能なグラフ用オートフォーマットの一覧から、ユーザー設定のグラフ用オートフォーマットを削除します。</span><span class="sxs-lookup"><span data-stu-id="da263-496">Removes a custom chart autoformat from the list of available chart autoformats.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="da263-497">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-497">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-498">ユーザー設定のリスト番号。</span><span class="sxs-lookup"><span data-stu-id="da263-498">The custom list number.</span></span> <span data-ttu-id="da263-499">この数値は 5 以上である必要があります (Microsoft Excel には、削除できない 4 つの組み込みのカスタム リストがあります)。</span><span class="sxs-lookup"><span data-stu-id="da263-499">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span></span></param>
        <summary><span data-ttu-id="da263-500">ユーザー設定リストを削除します。</span><span class="sxs-lookup"><span data-stu-id="da263-500">Deletes a custom list.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-501">This method generates an error if the list number is less than 5 or if there's no matching custom list.</span><span class="sxs-lookup"><span data-stu-id="da263-501">This method generates an error if the list number is less than 5 or if there's no matching custom list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-502">すべての組 <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> み込みダイアログ ボックスを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-502">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-503">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-503">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-504"><b>True</b> の場合、マクロの実行中に特定の警告やメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-504"><b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-505">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-505">The default value is <b>True</b>.</span></span> <span data-ttu-id="da263-506">プログラムの実行中にプロンプトや警告メッセージの表示を妨げない場合は、このプロパティを <b>False</b> に設定します。メッセージに応答が必要な場合は、Microsoft Excel が既定の応答を選択します。</span><span class="sxs-lookup"><span data-stu-id="da263-506">Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</span></span></para>
          <para><span data-ttu-id="da263-507">このプロパティを <b>False</b>に設定すると、プロセス間コードを実行しない限り、コードの完了時にこのプロパティが <b>True</b> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="da263-507">If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</span></span></para>
          <para><span data-ttu-id="da263-508">ブックのメソッドを使用して既存のファイルを上書きする場合、'Overwrite' アラートの既定値は <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 'No' ですが <b>、DisplayAlerts</b> プロパティが <b>False</b>に設定されている場合は、Excel によって [はい] 応答が選択されます。</span><span class="sxs-lookup"><span data-stu-id="da263-508">When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-509">クリップボードを <b>表示</b> できる場合Microsoft Office True を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-509">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-510">セルにコメントやインジケーターを表示する方法を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-510">Returns or sets the way cells display comments and indicators.</span></span> <span data-ttu-id="da263-511">使用できる定数 <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> は、xlNoIndicator、xlCommentIndicatorOnly、xlCommentAndIndicator<b>です</b>。 <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-511">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-512">True に <b>設定</b> すると、[ドキュメント アクション] 作業ウィンドウが表示されます。[ドキュメント アクション] 作業ウィンドウを非表示にする場合は <b>False</b> に設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-512">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-513">作業中のワークブックがスマート ドキュメントではない場合、このプロパティを <b>True</b> に設定すると、実行時エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="da263-513">Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-514">取得または設定する <b>ブール値</b> ドキュメント情報パネルを表示するかどうかを表す。</span><span class="sxs-lookup"><span data-stu-id="da263-514">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed.</span></span> <span data-ttu-id="da263-515">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="da263-515">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-516"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-516"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-517">Microsoft Excel 4.0 のメニュー バーが表示されている場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-517"><b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-518">セルの数式を作成するときに、関連する関数と定義名の一覧を表示するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-518">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span></span> <span data-ttu-id="da263-519">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-519">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-520"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-520"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-521">数式バーが表示されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-521"><b>True</b> if the formula bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-522"><b>True</b> の 場合は、Microsoft Excel が全画面モードです。</span><span class="sxs-lookup"><span data-stu-id="da263-522"><b>True</b> if Microsoft Excel is in full-screen mode.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p179">全画面表示では、画面全体がアプリケーション ウィンドウになるように表示され、アプリケーションのタイトル バーは非表示になります (Windows の場合)。ツールバー、ステータス バー、および数式バーの設定は、全画面表示モードと通常表示モードでそれぞれ個別に保持されます。</span><span class="sxs-lookup"><span data-stu-id="da263-p179">Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-525">関数のボタン名が表示可能な場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-525"><b>True</b> if function ToolTips can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-526">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-526">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-527">[挿入オプション] ボタンが表示されている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-527"><b>True</b> if the Insert Options button should be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-528"><b>True</b> の 場合は、ノートを含むセルのヒントが表示され、ノート インジケーター (右上隅に小さいドット) が含まれている場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-528"><b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-529"><b>True の</b> 場合、[貼り付けオプション] ボタンを表示できます。</span><span class="sxs-lookup"><span data-stu-id="da263-529"><b>True</b> if the Paste Options button can be displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-530">これは、Microsoft Office 全体についての設定です。</span><span class="sxs-lookup"><span data-stu-id="da263-530">This is a Microsoft Office-wide setting.</span></span> <span data-ttu-id="da263-531">この設定は、他の Microsoft Office アプリケーションのすべてに影響します。</span><span class="sxs-lookup"><span data-stu-id="da263-531">This setting affects all other Microsoft Office applications.</span></span> <span data-ttu-id="da263-532"><b>DisplayPasteOptions</b>プロパティを<b>True</b>に設定すると、Microsoft Excel の [オートフィル オプション] ボタンがオフになります。</span><span class="sxs-lookup"><span data-stu-id="da263-532">Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel.</span></span> <span data-ttu-id="da263-533">[ <b>オートフィル オプション</b>] は Excel にのみ存在するボタンであるのに対し、[ 貼り付けオプション] ボタンは他のすべての Microsoft Office アプリケーションで使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-533">The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-534"><b>True</b> の 場合は、最近使用したファイルの一覧が [ファイル] メニューに表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-534"><b>True</b> if the list of recently used files is displayed on the File menu.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-535">すべてのブックにスクロール バーを表示する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-535"><b>True</b> if scroll bars are visible for all workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-536">ステータス バーが表示されている場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-536"><b>True</b> if the status bar is displayed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap"><span data-ttu-id="da263-537">省略 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> 可能なオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-537">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="da263-538">作業ウィンドウ内で表示する XML マップを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-538">The XML map to display in the task pane.</span></span></param>
        <summary><span data-ttu-id="da263-539">[XML ソース] 作業ウィンドウを開き、引数で指定された XML マップを表示 <paramref name="XmlMap" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-539">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-540">XML 機能は、ファイルを XML スプレッドシート形式で保存する場合を除き、Microsoft Office Professional Edition 2003 および excel 2003 Microsoft Officeでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-540">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-541">DoubleClick メソッドは、アクティブ セルをダブルクリックする操作に相当します。</span><span class="sxs-lookup"><span data-stu-id="da263-541">Equivalent to double-clicking the active cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary><span data-ttu-id="da263-542">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-542">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="da263-543">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-543">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-544">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-544">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-545">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-545">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary><span data-ttu-id="da263-546">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-546">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary><span data-ttu-id="da263-547">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-547">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-548">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-548">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary><span data-ttu-id="da263-549">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-549">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary><span data-ttu-id="da263-550">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-550">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="da263-551"><b>s</b></span><span class="sxs-lookup"><span data-stu-id="da263-551"><b>s</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-552">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-552">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary><span data-ttu-id="da263-553">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-553">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary><span data-ttu-id="da263-554">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-554">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-555">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-555">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-556">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-556">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary><span data-ttu-id="da263-557">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-557">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-558">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-558">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-559">Microsoft Excel でセル内での編集を許可する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-559"><b>True</b> if Microsoft Excel allows editing in cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-560">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="da263-560">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-561">オートコンプリート機能を有効にする場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-561"><b>True</b> if the AutoComplete feature is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-562">ユーザーがプロシージャの実行を中断する CTRL+BREAK (または ESC あるいは COMMAND+PERIOD) の Microsoft Excel による処理を制御します。</span><span class="sxs-lookup"><span data-stu-id="da263-562">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span></span> <span data-ttu-id="da263-563">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-563">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-564">
            <b>使用できる定数は、</b> 次に示す <b>XlEnableCancelKey</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-564">
            <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="da263-565">
                <b>xlDisabled</b>   Cancel key trapping is completely disabled.</span><span class="sxs-lookup"><span data-stu-id="da263-565">
                <b>xlDisabled</b>  Cancel key trapping is completely disabled.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-566">
                <b>xlErrorHandler</b>   割り込みは実行中のプロシージャにエラーとして送信され、On Error GoTo ステートメントで設定されたエラー ハンドラーによってトラップ可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-566">
                <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement.</span></span> <span data-ttu-id="da263-567">エラー コードは 18 です。</span><span class="sxs-lookup"><span data-stu-id="da263-567">The trappable error code is 18.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-568">
                <b>xlInterrupt</b>   現在のプロシージャは中断され、ユーザーはプロシージャをデバッグまたは終了できます。</span><span class="sxs-lookup"><span data-stu-id="da263-568">
                <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-569">このオプションは特に慎重に使用してください。</span><span class="sxs-lookup"><span data-stu-id="da263-569">Use this property very carefully.</span></span> <span data-ttu-id="da263-570"><b>xlDisabled を</b>使用する場合、無限ループや自己終了ではない他のコードを中断する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="da263-570">If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating.</span></span> <span data-ttu-id="da263-571">また、<b>xlErrorHandler</b> を設定すると、エラー処理ルーチンが <b>Resume</b> ステートメントで制御を戻すだけのものの場合はそのプロシージャを止めることができなくなります。</span><span class="sxs-lookup"><span data-stu-id="da263-571">Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</span></span></para>
          <para><span data-ttu-id="da263-p185">実行中のプロシージャがなく、Excel が待機状態にある場合は、常に <b>EnableCancelKey</b> プロパティの値は <b>xlInterrupt</b> になります。取り消しキーをトラップしたり、無効にしたりするには、プロシージャの実行のたびに明示的に <b>EnableCancelKey</b> プロパティに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-p185">The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running. To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-574">True の場合、[ Microsoft Excel がスプレッドシートを表示、編集するための既定のプログラムでない場合に通知する] ダイアログ ボックスが有効になります。</span><span class="sxs-lookup"><span data-stu-id="da263-574">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-575">指定のオブジェクトに対してイベントが発生可能な場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-575"><b>True</b> if events are enabled for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-576">設定または取得するブール<b></b>値 をユーザーが操作を実行しようとするときに、Office 中央の UI で指定されているよりも多くのセルに影響を与える操作を実行する場合に警告メッセージを表示するかどうかを表します。</span><span class="sxs-lookup"><span data-stu-id="da263-576">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span></span> <span data-ttu-id="da263-577">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-577">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-578"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-578"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-579">このプロパティの既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-579">The default value of this property is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-580">プレビューをサポートしている、 <b>ブール値</b> を表示するか、ギャラリーを使用するときに表示されるギャラリーのプレビューを非表示にするかどうかを表すを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-580">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span></span> <span data-ttu-id="da263-581">このプロパティを <b>True に設定すると</b> 、コマンドを適用する前にブックのプレビューが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-581">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span></span> <span data-ttu-id="da263-582">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-582">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-583"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-583"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-584">このプロパティは、[Excel のオプション] ダイアログ ボックスの [Live Preview を有効にする] チェック ボックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-584">This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-585">マクロ アニメーションを有効にするかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="da263-585">Controls whether macro animations are enabled.</span></span> <span data-ttu-id="da263-586">ユーザー インターフェイスのアニメーションまたはグラフ アニメーションが有効になっている場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-586"><b>True</b> if user interface animations or chart animations are enabled.</span></span> <span data-ttu-id="da263-587">既定では <b>False</b> (アニメーションなし) に設定されています。</span><span class="sxs-lookup"><span data-stu-id="da263-587">Is set to <b>False</b> (no animation) by default.</span></span> <span data-ttu-id="da263-588">マクロの実行中に <b>True</b> に設定される場合はアニメーションが有効になり、マクロの実行後に <b>False</b> にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="da263-588">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span></span> <span data-ttu-id="da263-589">読み取り/書<b>き込</b><b>みブール</b>値 ( C# ではブール値)。</span><span class="sxs-lookup"><span data-stu-id="da263-589">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-590">Microsoft Office のサウンドが有効な場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-590"><b>True</b> if sound is enabled for Microsoft Office.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-591">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-591">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-592">アプリケーションの <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> エラー チェック オプションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-592">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="da263-593">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-593">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-594">Excel の名前付け規則に従って、対象オブジェクトの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-594">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="da263-595">使用する名前を、オブジェクトまたは値に変換します。</span><span class="sxs-lookup"><span data-stu-id="da263-595">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-596">このメソッドでは、次のような種類の名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-596">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="da263-p190">A1 形式の参照。単一セルに対する A1 形式の参照であれば、特に制限はありません。ただし、このメソッドでは、参照は常に絶対参照として扱われます。</span><span class="sxs-lookup"><span data-stu-id="da263-p190">A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-p191">範囲。参照と共に使うことのできる演算子には、セル範囲を表す参照演算子 (:)、セル参照の共通部分を表す参照演算子 (スペース)、およびセル参照の複数選択を表す参照演算子 (,) があります。</span><span class="sxs-lookup"><span data-stu-id="da263-p191">Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-p192">定義された名前。コード記述時の言語で定義された名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-p192">Defined names. You can specify any name in the language of the macro.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-604">外部参照。</span><span class="sxs-lookup"><span data-stu-id="da263-604">External references.</span></span> <span data-ttu-id="da263-605">外部参照には、感嘆符 (!) を使います。</span><span class="sxs-lookup"><span data-stu-id="da263-605">You can use the !</span></span> <span data-ttu-id="da263-606">演算子を使用して、セルまたは別のブックで定義されている名前 (Evaluate("[BOOK1.XLS]Sheet1!A1")。</span><span class="sxs-lookup"><span data-stu-id="da263-606">operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-607">
            <b>注</b>: 角かっこ ("[A1:C5]" など) の使用は、文字列引数を指定して <b>Evaluate</b> メソッドを呼び出す場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="da263-607">
            <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument.</span></span> <span data-ttu-id="da263-608">角かっこを使用すると、コードの記述を短くすることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-608">The advantage of using square brackets is that the code is shorter.</span></span> <span data-ttu-id="da263-609"><b>Evaluate</b>を使用する利点は、引数が文字列なので、コードで文字列を作成するか、変数を使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-609">The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-610">指定されたブック内のすべての Microsoft Excel 4.0 国際マクロ シートを表す <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-611">指定された <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> ブックのすべての Microsoft Excel 4.0 マクロ シートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-611">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="da263-612"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-612">Required <b>String</b>.</span></span> <span data-ttu-id="da263-613">Excel 4.0 マクロ言語関数を等号 (=) なしで指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-613">A Microsoft Excel 4.0 macro language function without the equal sign.</span></span> <span data-ttu-id="da263-614">参照はすべて R1C1 の文字列として指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-614">All references must be given as R1C1 strings.</span></span> <span data-ttu-id="da263-615">埋 <paramref name="String" /> め込みの二重引用符が含まれている場合は、それらを 2 倍する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-615">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span></span> <span data-ttu-id="da263-616">たとえば、マクロ関数 =MID("sometext",1,4) を実行するには <paramref name="String" /> 、"MID(""sometext"",1,4)" である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-616">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span></span></param>
        <summary><span data-ttu-id="da263-617">Microsoft Excel 4.0 マクロ関数を実行し、関数の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-617">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span></span> <span data-ttu-id="da263-618">戻り値の型は、関数によって異なります。</span><span class="sxs-lookup"><span data-stu-id="da263-618">The return type depends on the function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-619">Excel 4.0 のマクロは、ブックやシートの状況に応じては評価されません。</span><span class="sxs-lookup"><span data-stu-id="da263-619">The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet.</span></span> <span data-ttu-id="da263-620">したがって、参照は外部参照として、明示的にブック名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-620">This means that any references should be external and should specify an explicit workbook name.</span></span> <span data-ttu-id="da263-621">たとえば、Book1 で Microsoft Excel 4.0 マクロ "My_Macro" を実行するには、"Book1!My_Macro()"</span><span class="sxs-lookup"><span data-stu-id="da263-621">For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()".</span></span> <span data-ttu-id="da263-622">ブック名を指定しないと、このメソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="da263-622">If you don't specify the workbook name, this method fails.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-623"><b>True</b> の 場合、リストに追加される新しいデータに書式と数式が自動的に拡張します。</span><span class="sxs-lookup"><span data-stu-id="da263-623"><b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-624">拡張する場合は、リストの 5 つの行または 5 つの列のリスト内で少なくとも 3 つは書式および数式が、新しい行または列の前に表示されている必要があります。また、データはリストの下側 (行の場合) または右側 (列の場合) に追加します。</span><span class="sxs-lookup"><span data-stu-id="da263-624">To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-625">インストールされていない機能が必要なメソッドやプロパティを呼び出すときに、どのように処理するかをMsoFeatureInstall 定数で設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-625">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span></span> <span data-ttu-id="da263-626">読み取り/書き込み <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-626">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-627">
            <b>使用できる定数は、</b> 次に示す <b>MsoFeatureInstall 定数</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-627">
            <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="da263-628">
                <b>msoFeatureInstallNone</b>   アンインストールされた機能が呼び出された場合、実行時に一般的なオートメーション エラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="da263-628">
                <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called.</span></span> <span data-ttu-id="da263-629">これは既定の定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-629">This is the default constant.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-630">
                <b>msoFeatureInstallOnDemand</b>   ユーザーに新しい機能のインストールを求めるメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-630">
                <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-631">
                <b>msoFeatureInstallOnDemandWithUI</b>   インストール中に進行状況メーターを表示します。は、ユーザーに新しい機能のインストールを求めるメッセージを表示しない。</span><span class="sxs-lookup"><span data-stu-id="da263-631">
                <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-p200">定数 <b>msoFeatureInstallOnDemandWithUI</b> を使用すると、機能のインストール中にアプリケーションが応答しないというユーザーの誤解を避けることができます。開発者だけが機能をインストールできるようにする場合は、定数 <b>msoFeatureInstallNone</b> を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-p200">You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed. Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</span></span></para>
          <para><span data-ttu-id="da263-634">プロパティを False に設定した場合 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>、FeatureInstall</b>プロパティが<b>msoFeatureInstallOnDemand</b>に設定されている場合でも、ユーザーに新機能のインストールを求めるメッセージは表示されません。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-634">If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span> <span data-ttu-id="da263-635">このプロパティが True に設定されている場合 <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> <b>、FeatureInstall</b>プロパティが<b>msoFeatureInstallOnDemand</b>に設定されている場合、インストールの進行状況が表示されます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-635">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="da263-636">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-637">コンバーターの長い名前 (Windows のファイルタイプ検索文字列を含む) ("Lotus 1-2-3 Files (*.wk*)" など)。</span><span class="sxs-lookup"><span data-stu-id="da263-637">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span></span></param>
        <param name="Index2"><span data-ttu-id="da263-638">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-638">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-639">コンバーターとして使用される DLL またはコード リソースのパス名です。</span><span class="sxs-lookup"><span data-stu-id="da263-639">The path of the converter DLL or code resource.</span></span></param>
        <summary><span data-ttu-id="da263-640">インストールされているファイル コンバーターに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-640">Returns information about installed file converters.</span></span> <span data-ttu-id="da263-641">コンバーターが <b>インストール</b> されていない場合は Null を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-641">Returns <b>Null</b> if there are no converters installed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-642">引数を指定しない場合、このプロパティは、インストールされているファイル コンバーターの情報を含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-642">If you don’t specify arguments, this property returns an array that contains information about all the installed file converters.</span></span> <span data-ttu-id="da263-643">配列の各列が示すファイル コンバーターの情報を次に示します。</span><span class="sxs-lookup"><span data-stu-id="da263-643">Each row in the array contains information about a single file converter, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-644">1 </span><span class="sxs-lookup"><span data-stu-id="da263-644">1</span></span></term>
              <description><span data-ttu-id="da263-645">コンバーターの長い形式の名前</span><span class="sxs-lookup"><span data-stu-id="da263-645">The long name of the converter</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-646">2</span><span class="sxs-lookup"><span data-stu-id="da263-646">2</span></span></term>
              <description><span data-ttu-id="da263-647">コンバーターとして使用される DLL またはコード リソースのパス</span><span class="sxs-lookup"><span data-stu-id="da263-647">The path of the converter DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-648">3</span><span class="sxs-lookup"><span data-stu-id="da263-648">3</span></span></term>
              <description><span data-ttu-id="da263-649">ファイル拡張子の検索文字列</span><span class="sxs-lookup"><span data-stu-id="da263-649">The file-extension search string</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType"><span data-ttu-id="da263-650">必須 <see cref="T:Microsoft.Office.Core.MsoFileDialogType" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-650">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span></span> <span data-ttu-id="da263-651">ファイル ダイアログの種類。<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> ユーザーがフォルダーを選択できます。<b>msoFileDialogOpen</b> ユーザーがファイルを開くことを許可します。<b>msoFileDialogSaveAs</b> ユーザーがファイルを保存できます。</span><span class="sxs-lookup"><span data-stu-id="da263-651">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span></span></param>
        <summary><span data-ttu-id="da263-652">ファイル ダイアログの <see cref="T:Microsoft.Office.Core.FileDialog" /> インスタンスを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-652">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-653">Microsoft Excel で <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> 使用できるファイルを保存するためにすべてのファイル コンバーターを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-653">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span></span> <span data-ttu-id="da263-654">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-654">Read-only.</span></span></summary>
        <value><span data-ttu-id="da263-655"><see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-655">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-p208">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="da263-p208">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-658">ファイル検索で <see cref="T:Microsoft.Office.Core.FileSearch" /> 使用するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-658">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span></span> <span data-ttu-id="da263-659">このプロパティは、Microsoft Windows でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-659">This property is available only in Microsoft Windows.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-660">ファイルを開く前にファイルを検証する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-660">Gets or sets how Microsoft Excel will validate files before opening them.</span></span></summary>
        <value><span data-ttu-id="da263-661"><see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-661">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="da263-662">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-662">Read/write.</span></span></para>
          <para><span data-ttu-id="da263-663">ファイルの検証に成功しないは、保護されたビューのウィンドウに表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-663">Files that do not pass validation will be opened in a Protected View window.</span></span> <span data-ttu-id="da263-664">プロパティを設定した場合、その設定はアプリケーションが開いているセッション <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> 全体に対して有効なままです。</span><span class="sxs-lookup"><span data-stu-id="da263-664">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-665">ピボットテーブル レポートのデータ キャッシュの内容を検証する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-665">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span></span></summary>
        <value><span data-ttu-id="da263-666"><see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-666">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="da263-667">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-667">Read/write.</span></span></para>
          <para><span data-ttu-id="da263-668">検証されないデータ キャッシュを含むファイルは、[保護されたビュー] ウィンドウで開きます。</span><span class="sxs-lookup"><span data-stu-id="da263-668">Files that contain data caches that do not validate will be opened in a Protected View window.</span></span> <span data-ttu-id="da263-669">プロパティを設定した場合、その設定はアプリケーションが開いているセッション <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> 全体で有効なままです。</span><span class="sxs-lookup"><span data-stu-id="da263-669">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-670">[開く] ダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-670">Displays the Open dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-671">このメソッドは、[開く] ダイアログ ボックスを表示し、ユーザーがファイルを開くことを許可します。</span><span class="sxs-lookup"><span data-stu-id="da263-671">This method displays the Open dialog box and allows the user to open a file.</span></span> <span data-ttu-id="da263-672">ファイルを正常に開くことができた場合は、 <b>True</b> が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-672">If a new file is opened successfully, this method returns <b>True</b>.</span></span> <span data-ttu-id="da263-673">ダイアログ ボックスをキャンセルした場合は、 <b>False</b> が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-673">If the user cancels the dialog box, this method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-674">セルの書式の検索条件の設定や取得を行います。</span><span class="sxs-lookup"><span data-stu-id="da263-674">Sets or returns the search criteria for the type of cell formats to find.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-675">このプロパティを <b>True</b> に設定した後に入力されたデータはすべて、プロパティによって設定された固定小数点の桁数で書式設定 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> されます。</span><span class="sxs-lookup"><span data-stu-id="da263-675">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-676">プロパティがTrue に設定されている場合に使用する固定小数点の桁数 <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> を設定または返 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-676">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-677"><b>TRUE</b> は、Excel のフラッシュ フィル機能が有効化され、アクティブなことを示します。</span><span class="sxs-lookup"><span data-stu-id="da263-677"><b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span></span> <span data-ttu-id="da263-678"><b>ブール</b> 型 (C#<b>のブール</b> 値) の値の取得および設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-678"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-679">フラッシュ フィルは、ユーザーがデータを変更中に、ブックのその他のデータに適用して自動的に列に結果を格納できるパターンに一致する場合に、それを検出します。</span><span class="sxs-lookup"><span data-stu-id="da263-679">Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-680">フラッシュ フィル機能が有効な場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-680"><b>True</b> if the Flash Fill feature is enabled.</span></span> <span data-ttu-id="da263-681"><b>ブール</b> 型 (C#<b>のブール</b> 値) の値の取得および設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-681"><b>Boolean</b> (<b>bool</b> in C#) Read/Write</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-682">ユーザーが数式バーの高さを行数で指定できるようにします。</span><span class="sxs-lookup"><span data-stu-id="da263-682">Allows the user to specify the height of the formula bar in lines.</span></span> <span data-ttu-id="da263-683">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-683">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-684"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="da263-684"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-685"><b>FormulaBarHeight</b>の指定された値が表示可能なウィンドウ領域より大きい場合、数式バーのサイズはウィンドウの高さに合わせて変更されます。</span><span class="sxs-lookup"><span data-stu-id="da263-685">If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-686">Excel が <b>ピボットテーブル</b> レポート データを取得できる場合はTrue を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-686">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-687">このプロパティは、数式でテーブルを参照する場合に、従来の表記方法または新しい構造化参照表記方法を使用 <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="da263-687">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span></span> <span data-ttu-id="da263-688">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-688">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum"><span data-ttu-id="da263-689">整数型 (<b>Integer</b>) の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-689">Required <b>Integer</b>.</span></span> <span data-ttu-id="da263-690">対象となるリスト番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-690">The list number.</span></span></param>
        <summary><span data-ttu-id="da263-691">ユーザー設定リストを文字列の配列として返します。</span><span class="sxs-lookup"><span data-stu-id="da263-691">Returns a custom list (an array of strings).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray"><span data-ttu-id="da263-692">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-692">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-693">文字列の配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-693">An array of strings.</span></span></param>
        <summary><span data-ttu-id="da263-694">任意の文字列の配列に対応する、ユーザー設定リストの番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-694">Returns the custom list number for an array of strings.</span></span> <span data-ttu-id="da263-695">このメソッドは、組み込みリストとユーザー設定リストの両方で使えます。</span><span class="sxs-lookup"><span data-stu-id="da263-695">You can use this method to match both built-in lists and custom-defined lists.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-696">対応するリストに存在しない配列を指定した場合はエラーになります。</span><span class="sxs-lookup"><span data-stu-id="da263-696">This method generates an error if there's no corresponding list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter"><span data-ttu-id="da263-697">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-697">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-698">ファイル フィルター条件を指定する文字列。この文字列は、ファイル フィルター文字列のペアと MS-DOS ワイルドカード ファイル フィルター仕様で構成され、各部分と各ペアはコンマで区切られます。</span><span class="sxs-lookup"><span data-stu-id="da263-698">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="da263-699">個別のペアはそれぞれ[ファイルの種類]ドロップダウンリストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-699">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="da263-700">たとえば、次の文字列は、テキストとアドインの 2 つのファイル フィルターを指定します。"Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla" です。1 つのファイル フィルターの種類に複数の MS-DOS ワイルドカード式を使用するには、"Visual Basic Files (*.bas;*.txt)、.bas;\**.txt"。省略した場合、この引数の既定値は "All Files (*. ,\*. ". に設定されます *。*</span><span class="sxs-lookup"><span data-stu-id="da263-700">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="da263-701">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-701">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-702">1 から指定されたフィルターの数まで、既定のファイル フィルター条件のインデックス番号を指定します <paramref name="FileFilter" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-702">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="da263-703">この引数を省略するか、ファイル フィルター文字列の数より大きい数値を指定すると、最初のファイル フィルター文字列が既定値となります。</span><span class="sxs-lookup"><span data-stu-id="da263-703">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="da263-704">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-704">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-705">ダイアログ ボックスのタイトルを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-705">Specifies the title of the dialog box.</span></span> <span data-ttu-id="da263-706">この引数を省略すると "ファイルを開く" になります。</span><span class="sxs-lookup"><span data-stu-id="da263-706">If this argument is omitted, the title is "Open."</span></span></param>
        <param name="ButtonText"><span data-ttu-id="da263-707">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-707">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-708">Macintosh でのみ指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-708">Macintosh only.</span></span></param>
        <param name="MultiSelect"><span data-ttu-id="da263-709">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-709">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-710"><b>True</b> を指定すると、複数のファイルを選択できます。</span><span class="sxs-lookup"><span data-stu-id="da263-710"><b>True</b> to allow multiple file names to be selected.</span></span> <span data-ttu-id="da263-711"><b>False</b> を指定すると、1 つのファイルしか選択できません。</span><span class="sxs-lookup"><span data-stu-id="da263-711"><b>False</b> to allow only one file name to be selected.</span></span> <span data-ttu-id="da263-712">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-712">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="da263-713">ユーザーからファイル名を取得するために、[ファイルを開く] ダイアログ ボックスを表示します。ダイアログ ボックスで指定したファイルは、実際には開かれません。</span><span class="sxs-lookup"><span data-stu-id="da263-713">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-714">このメソッドは、ユーザーによって選択、または入力されたファイルの名前とパス名を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-714">This method returns the selected file name or the name entered by the user.</span></span> <span data-ttu-id="da263-715">引数  MultiSelect が True の場合は、選択されたファイルの名前の配列が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-715">The returned name may include a path specification.</span></span> <span data-ttu-id="da263-716">True <paramref name="MultiSelect" /> の <b>場合</b>、戻り値は選択されたファイル名の配列です (ファイル名が 1 つしか選択されている場合でも)。</span><span class="sxs-lookup"><span data-stu-id="da263-716">If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected).</span></span> <span data-ttu-id="da263-717">入力が取り消された場合には <b>False</b> が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-717">Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="da263-718">このメソッドを実行することによって、カレント ドライブやカレント フォルダーが変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-718">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="da263-719">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-719">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-720">ふりがなに変換するテキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-720">Specifies the text to be converted to phonetic text.</span></span> <span data-ttu-id="da263-721">この引数を省略すると、指定した次の文字列 (指定されている場合) が <paramref name="Text" /> 返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-721">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span></span> <span data-ttu-id="da263-722">候補の文字列がない場合は空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-722">If there are no more possible phonetic text strings, an empty string is returned.</span></span></param>
        <summary><span data-ttu-id="da263-p227">指定した文字列の日本語のふりがなを取得します。このメソッドは、Microsoft Office の言語の設定で日本語が選択またはインストールされている場合にのみ利用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-p227">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename"><span data-ttu-id="da263-725">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-725">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-726">既定値として表示するファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-726">Specifies the suggested file name.</span></span> <span data-ttu-id="da263-727">この引数を省略すると、作業中のブックの名前が使われます。</span><span class="sxs-lookup"><span data-stu-id="da263-727">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span></span></param>
        <param name="FileFilter"><span data-ttu-id="da263-728">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-728">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-729">ファイル フィルター条件を指定する文字列。この文字列は、ファイル フィルター文字列のペアと MS-DOS ワイルドカード ファイル フィルター仕様で構成され、各部分と各ペアはコンマで区切られます。</span><span class="sxs-lookup"><span data-stu-id="da263-729">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span></span> <span data-ttu-id="da263-730">個別のペアはそれぞれ[ファイルの種類]ドロップダウンリストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-730">Each separate pair is listed in the Files of type drop-down list box.</span></span> <span data-ttu-id="da263-731">たとえば、次の文字列は、"Text Files (*.txt), *.txt, Add-In Files (*.xla), .xla" という 2 つのファイル フィルターを指定します *。1* つのファイル フィルターの種類に複数の MS-DOS ワイルドカード式を使用するには、"Visual Basic Files ( .bas;*.txt)、.bas;\**.txt"。省略した場合、この引数の既定値は "All Files (*. ,\*. ". に設定されます *。*</span><span class="sxs-lookup"><span data-stu-id="da263-731">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span></span></param>
        <param name="FilterIndex"><span data-ttu-id="da263-732">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-732">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-733">1 から指定されたフィルターの数に、既定のファイル フィルター条件のインデックス番号を指定します <paramref name="FileFilter" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-733">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span></span> <span data-ttu-id="da263-734">この引数を省略するか、ファイル フィルター文字列の数より大きい数値を指定すると、最初のファイル フィルター文字列が既定値となります。</span><span class="sxs-lookup"><span data-stu-id="da263-734">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span></span></param>
        <param name="Title"><span data-ttu-id="da263-735">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-735">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-736">ダイアログ ボックスのタイトルを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-736">Specifies the title of the dialog box.</span></span> <span data-ttu-id="da263-737">この引数を省略すると既定のタイトルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="da263-737">If this argument is omitted, the default title is used.</span></span></param>
        <param name="ButtonText"><span data-ttu-id="da263-738">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-738">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-739">Macintosh でのみ指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-739">Macintosh only.</span></span></param>
        <summary><span data-ttu-id="da263-740">ユーザーからファイル名を取得するために、[名前を付けて保存] ダイアログ ボックスを表示します。ダイアログ ボックスで指定したファイルは、実際には保存されません。</span><span class="sxs-lookup"><span data-stu-id="da263-740">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-p233">このメソッドは、ユーザーによって選択または入力されたファイルの名前とパス名を返します。入力が取り消された場合には <b>False</b> が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-p233">This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</span></span></para>
          <para><span data-ttu-id="da263-744">このメソッドを実行することによって、カレント ドライブやカレント フォルダーが変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-744">This method may change the current drive or folder.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference"><span data-ttu-id="da263-745">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-745">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-746">移動先を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-746">The destination.</span></span> <span data-ttu-id="da263-747">オブジェクト、R1C1 形式のセル参照を含む文字列、またはプロシージャ名を含む文字列Visual Basic <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-747">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span></span> <span data-ttu-id="da263-748">この引数を省略すると、移動先は、直前に <b>Goto</b> メソッドを使ったときのセル範囲になります。</span><span class="sxs-lookup"><span data-stu-id="da263-748">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span></span></param>
        <param name="Scroll"><span data-ttu-id="da263-749">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-749">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-750">移動先セル範囲の左上端がウィンドウの左上端に表示されるようにウィンドウをスクロールするには、 <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-750"><b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span></span> <span data-ttu-id="da263-751">ウィンドウをスクロールしないようにするには、 <b>False</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-751"><b>False</b> to not scroll through the window.</span></span> <span data-ttu-id="da263-752">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-752">The default is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="da263-753">ブック内の任意の範囲Visual Basicプロシージャを選択し、そのブックがアクティブではない場合はアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="da263-753">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-754">このメソッドは、次 <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> の点でメソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="da263-754">This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="da263-755">一番上ではないシートに範囲を指定すると、選択する前にシートに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="da263-755">If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting.</span></span> <span data-ttu-id="da263-756">(一番上ではない<b></b>シートの範囲で Select を使用すると、その範囲は選択されますが、シートはアクティブになりません)。</span><span class="sxs-lookup"><span data-stu-id="da263-756">(If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-757">このメソッドには、 <paramref name="Scroll" /> 移動先のウィンドウをスクロールできる引数があります。</span><span class="sxs-lookup"><span data-stu-id="da263-757">This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-758"><b>Goto</b>メソッドを使用すると<b>、(Goto</b>メソッドを実行する前に) 直前の選択範囲が前の選択範囲の配列に追加されます (詳細については、プロパティを参照 <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> してください)。</span><span class="sxs-lookup"><span data-stu-id="da263-758">When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property).</span></span> <span data-ttu-id="da263-759">この機能を利用すると、最大 4 個の移動先の間を高速移動できます。</span><span class="sxs-lookup"><span data-stu-id="da263-759">You can use this feature to quickly jump between as many as four selections.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="da263-760">Select <b>メソッド</b> には引数 <paramref name="Replace" /> があります <b>。Goto</b> メソッドは引数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-760">The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-761">アプリケーション ウィンドウの高さをポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-761">The height, in points, of the main application window.</span></span> <span data-ttu-id="da263-762">ウィンドウが最小化 (アイコン化) されているときは、このプロパティは値の取得のみ可能で、アイコンの高さを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-762">If the window is minimized, this property is read-only and refers to the height of the icon.</span></span> <span data-ttu-id="da263-763">ウィンドウが最大化されているときは、このプロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="da263-763">If the window is maximized, this property cannot be set.</span></span> <span data-ttu-id="da263-764">このプロパティを <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> 使用してウィンドウの状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="da263-764">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile"><span data-ttu-id="da263-765">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-765">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-766">オンライン ヘルプ ファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-766">The name of the online Help file you want to display.</span></span> <span data-ttu-id="da263-767">この引数を省略すると、Excel のヘルプ ファイルが使われます。</span><span class="sxs-lookup"><span data-stu-id="da263-767">If this argument isn't specified, Microsoft Excel Help is used.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="da263-768">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-768">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-769">ヘルプ トピックのコンテキスト ID を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-769">Specifies the context ID number for the Help topic.</span></span> <span data-ttu-id="da263-770">この引数を指定しない場合は、[ヘルプ トピック] ダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-770">If this argument isn't specified, the Help Topics dialog box is displayed.</span></span></param>
        <summary><span data-ttu-id="da263-771">ヘルプ トピックを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-771">Displays a Help topic.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-772">Excel でグラフィックスの印刷に高品質モードを使用するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-772">Gets or sets whether Excel uses high quality mode to print graphics.</span></span></summary>
        <value><span data-ttu-id="da263-773"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-773"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-774">このプロパティは、[Excel のオプション] ダイアログ ボックスの [詳細設定] カテゴリの [印刷] セクションにある [グラフィックスの高品質モード] チェック ボックスの設定に対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-774">This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-775">Microsoft Excel を呼び出しているインスタンスのインスタンス ハンドルを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-775">Returns the instance handle of the instance that is calling Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-776">指定されたオブジェクトによって表される Microsoft Excel 2010 のインスタンスへのハンドルを取得 <see cref="T:Microsoft.Office.Interop.Excel._Application" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-776">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></summary>
        <value><span data-ttu-id="da263-777">指定されたオブジェクトによって表される Microsoft Excel 2010 のインスタンスへの <see cref="T:Microsoft.Office.Interop.Excel._Application" /> ハンドル。</span><span class="sxs-lookup"><span data-stu-id="da263-777">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="da263-778">読み取り専用のバリアント型 (<b>Variant</b>) の値。</span><span class="sxs-lookup"><span data-stu-id="da263-778">Read-only <b>Variant</b>.</span></span></para>
          <para><span data-ttu-id="da263-779">このプロパティは、32 ビット版と 64 ビット版両方の Excel で適切なハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-779">This property returns a correct handle in both the 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="da263-780">オブジェクトのプロパティの機能が拡張され、32 ビット バージョンの Excel でのみ <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> <see cref="T:Microsoft.Office.Interop.Excel._Application" /> 正しく動作します。</span><span class="sxs-lookup"><span data-stu-id="da263-780">It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</span></span></para>
          <para><span data-ttu-id="da263-781">このプロパティで使用する理想的なデータ型は、<b>LongPtr</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-781">The ideal data type to use with this property is the <b>LongPtr</b> data type.</span></span> <span data-ttu-id="da263-782">このプロパティで取得した値を変数 <b>LongPtr</b> に割り当てると、32 ビット版と 64 ビット版両方の Excel で正常に動作します。</span><span class="sxs-lookup"><span data-stu-id="da263-782">Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel.</span></span> <span data-ttu-id="da263-783">このプロパティは、内部での実装に関する理由で、バリアント型 (<b>Variant</b>) として定義されます。</span><span class="sxs-lookup"><span data-stu-id="da263-783">The property is defined as <b>Variant</b> for internal implementation reasons.</span></span> <span data-ttu-id="da263-784">ただし、常に、32 ビット システム上では 32 ビットの値、64 ビット システム上では 64 ビットの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-784">However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</span></span></para>
          <para><span data-ttu-id="da263-785">このプロパティは Excel 2010 から始まるだけで、64 ビットバージョンの Excel でのみ必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-785">This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel.</span></span> <span data-ttu-id="da263-786">コンパイル エラーを回避するために、以前のバージョンの Excel でも動作するコードを記述する必要がある場合は、#if Win64 条件付きコンパイル ディレクティブの下でこのプロパティを読み取り、#else ディレクティブの下のプロパティを使用します。 <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /></span><span class="sxs-lookup"><span data-stu-id="da263-786">If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</span></span></para>
          <para><span data-ttu-id="da263-787">
            <b>メモ</b>: このプロパティは、Excel 2010 から始まる 32 ビット環境と 64 ビット環境の両方で正常に動作します。</span><span class="sxs-lookup"><span data-stu-id="da263-787">
            <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010.</span></span> <span data-ttu-id="da263-788">したがって、コードが Excel 2010 以降 (32 ビットまたは 64 ビット) でのみ使用することを意図している場合は、条件付きコンパイルなしでこのプロパティを読み取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-788">Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-789">Excel ウィンドウのトップ レベル ウィンドウ ハンドルを示す整数型 <b>(Integer)</b> の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-789">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-790">リモート DDE 要求を無視する場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-790"><b>True</b> if remote DDE requests are ignored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches"><span data-ttu-id="da263-791">必須 <b>の二重</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-791">Required <b>Double</b>.</span></span> <span data-ttu-id="da263-792">変換の対象となる数値です。</span><span class="sxs-lookup"><span data-stu-id="da263-792">Specifies the inch value to be converted to points.</span></span></param>
        <summary><span data-ttu-id="da263-793">インチ単位の数値をポイント単位に変換します。</span><span class="sxs-lookup"><span data-stu-id="da263-793">Converts a measurement from inches to points.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="da263-794">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-794">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-795">ダイアログ ボックスに表示するメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-795">The message to be displayed in the dialog box.</span></span> <span data-ttu-id="da263-796">文字列、数値、日付、またはブール値を <b>指定</b> できます。</span><span class="sxs-lookup"><span data-stu-id="da263-796">This can be a string, a number, a date, or a <b>Boolean</b> value.</span></span></param>
        <param name="Title"><span data-ttu-id="da263-797">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-797">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-798">ダイアログ ボックスのタイトルを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-798">The title for the input box.</span></span> <span data-ttu-id="da263-799">この引数を省略すると、既定値の "入力" がタイトル バーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-799">If this argument is omitted, the default title is "Input."</span></span></param>
        <param name="Default"><span data-ttu-id="da263-800">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-800">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-801">ダイアログ ボックスが最初に表示されるときに、テキスト ボックスに表示される値を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-801">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span></span> <span data-ttu-id="da263-802">この引数を省略すると、テキスト ボックスが空で表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-802">If this argument is omitted, the text box is left empty.</span></span> <span data-ttu-id="da263-803">この値は <b>Range</b> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-803">This value can be a <b>Range</b> object.</span></span></param>
        <param name="Left"><span data-ttu-id="da263-804">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-804">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-805">画面の左上隅を基準にダイアログ ボックスの x 位置をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-805">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="Top"><span data-ttu-id="da263-806">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-806">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-807">画面の左上隅を基準にダイアログ ボックスの y の位置をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-807">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="da263-808">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-809">対象の入力ボックスで使うヘルプ ファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-809">The name of the Help file for this input box.</span></span> <span data-ttu-id="da263-810">引数と <paramref name="HelpFile" /> <paramref name="HelpContextID" /> 引数が指定されている場合は、ダイアログ ボックスに [ヘルプ] ボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-810">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="da263-811">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-811">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-812">ヘルプ トピックのコンテキスト ID 番号 <paramref name="HelpFile" /> です。</span><span class="sxs-lookup"><span data-stu-id="da263-812">The context ID number of the Help topic in <paramref name="HelpFile" />.</span></span></param>
        <param name="Type"><span data-ttu-id="da263-813">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-813">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-814">返されるデータの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-814">Specifies the return data type.</span></span> <span data-ttu-id="da263-815">この引数を省略すると、ダイアログ ボックスは文字列 (テキスト) を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-815">If this argument is omitted, the dialog box returns text.</span></span> <span data-ttu-id="da263-816">次の値の 1 つまたは合計を指定できます。使用可能な値の合計を使用できます <paramref name="Type" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-816">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span></span> <span data-ttu-id="da263-817">たとえば、テキストと数値の両方を入力できる入力ボックスの場合は <paramref name="Type" /> 、1 + 2 に設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-817">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span></span></param>
        <summary><span data-ttu-id="da263-818">ユーザー入力用のダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-818">Displays a dialog box for user input.</span></span> <span data-ttu-id="da263-819">表示したダイアログ ボックスに入力された情報を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-819">Returns the information entered in the dialog box.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-820"><b>InputBox</b> を使用して、マクロで使用する情報を入力できるように簡単なダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-820">Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro.</span></span> <span data-ttu-id="da263-821">ダイアログボックスには、[OK] ボタンと [キャンセル] ボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="da263-821">The dialog box has an OK button and a Cancel button.</span></span> <span data-ttu-id="da263-822">[ OK ] をクリックすると、 <b>InputBox</b> は ダイアログ ボックスに入力された値を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-822">If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box.</span></span> <span data-ttu-id="da263-823">[ キャンセル ] をクリックすると、 <b>InputBox</b> は <b>False</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-823">If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</span></span></para>
          <para><span data-ttu-id="da263-824">0 <paramref name="Type" /> の場合 <b>、InputBox</b> はテキスト形式の数式 ("=2\*PI()/360" など) を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-824">If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360".</span></span> <span data-ttu-id="da263-825">数式に参照がある場合は、A1 形式の参照として返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-825">If there are any references in the formula, they are returned as A1-style references.</span></span> <span data-ttu-id="da263-826">(参照 <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> スタイル間の変換に使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-826">(Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</span></span></para>
          <para><span data-ttu-id="da263-827">8 <paramref name="Type" /> の場合 <b>、InputBox は</b> Range オブジェクトを <b>返</b> します。</span><span class="sxs-lookup"><span data-stu-id="da263-827">If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</span></span></para>
          <para><span data-ttu-id="da263-828"><b>InputBox</b>メソッドを使用してユーザーに数式を求める場合は、このプロパティを使用して数式を Range オブジェクトに割り <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> <b>当てる必要</b>があります。</span><span class="sxs-lookup"><span data-stu-id="da263-828">If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object.</span></span> <span data-ttu-id="da263-829">入力する数式にはユーザーの言語が使用されます。</span><span class="sxs-lookup"><span data-stu-id="da263-829">The input formula will be in the user's language.</span></span></para>
          <para><span data-ttu-id="da263-830">InputBox メソッドは <b>InputBox</b> 関数とは異なります <b>。InputBox</b> メソッドでは、ユーザーの入力を選択的に検証できます。また、Microsoft Excel のオブジェクト、エラー値、数式で使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="da263-830">The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas.</span></span> <span data-ttu-id="da263-831">オブジェクト修飾子がない InputBox は <b>、InputBox 関数を呼び出</b> します。</span><span class="sxs-lookup"><span data-stu-id="da263-831">InputBox with no object qualifier calls the <b>InputBox</b> function.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-832"><b>True の</b> 場合は、Microsoft Excel が対話モードです。このプロパティは、通常は <b>True です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-832"><b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span></span> <span data-ttu-id="da263-833">このプロパティを <b>False</b>に設定すると、キーボードとマウスからの入力はすべてブロックされます (コードで表示されるダイアログ ボックスへの入力は除きます)。</span><span class="sxs-lookup"><span data-stu-id="da263-833">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span></span> <span data-ttu-id="da263-834">ユーザー入力をブロックすると、ユーザーが Microsoft Excel オブジェクトを移動またはアクティブ化するコードを妨げない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-834">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-835">このプロパティは、別のアプリケーションから Microsoft Excel と通信するコードを記述する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="da263-835">This property is useful if you're writing code to communicate with Microsoft Excel from another application.</span></span></para>
          <para><span data-ttu-id="da263-836">ただし、このプロパティに <b>False</b> を設定したときは、マクロの終了前に必ず設定を <b>True</b> に戻してください。</span><span class="sxs-lookup"><span data-stu-id="da263-836">If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>.</span></span> <span data-ttu-id="da263-837">コードの実行が停止しても、このプロパティは自動的に <b>True</b> に戻されません。</span><span class="sxs-lookup"><span data-stu-id="da263-837">Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="da263-838">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-838">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-839">返す情報を表す値を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-839">The setting to be returned.</span></span> <span data-ttu-id="da263-840">使用できる定数は <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> 、次の表に示す定数の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="da263-840">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span></span></param>
        <summary><span data-ttu-id="da263-841">現在の国/地域と国際設定に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-841">Returns information about the current country/region and international settings.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-842">角かっこ ([ ]) と中かっこ ({ })</span><span class="sxs-lookup"><span data-stu-id="da263-842">Brackets and Braces</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-843">
                <b>xlLeftBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-843">
                <b>xlLeftBrace</b>
              </span></span></term>
              <description><span data-ttu-id="da263-844">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-844">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-845">配列リテラルで左側中かっこ ({) の代わりに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-845">Character used instead of the left brace ({) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-846">
                <b>xlLeftBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-846">
                <b>xlLeftBracket</b>
              </span></span></term>
              <description><span data-ttu-id="da263-847">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-847">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-848">R1C1 形式の相対参照で左側角かっこ ([) の代わりに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-848">Character used instead of the left bracket ([) in R1C1-style relative references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-849">
                <b>xlLowerCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-849">
                <b>xlLowerCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="da263-850">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-850">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-851">小文字の列文字。</span><span class="sxs-lookup"><span data-stu-id="da263-851">Lowercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-852">
                <b>xlLowerCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-852">
                <b>xlLowerCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="da263-853">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-853">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-854">小文字の行文字。</span><span class="sxs-lookup"><span data-stu-id="da263-854">Lowercase row letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-855">
                <b>xlRightBrace</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-855">
                <b>xlRightBrace</b>
              </span></span></term>
              <description><span data-ttu-id="da263-856">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-856">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-857">配列リテラルで右側中かっこ (}) の代わりに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-857">Character used instead of the right brace (}) in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-858">
                <b>xlRightBracket</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-858">
                <b>xlRightBracket</b>
              </span></span></term>
              <description><span data-ttu-id="da263-859">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-859">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-860">R1C1 形式の相対参照で右側角かっこ (]) の代わりに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-860">Character used instead of the right bracket (]) in R1C1-style references.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-861">
                <b>xlUpperCaseColumnLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-861">
                <b>xlUpperCaseColumnLetter</b>
              </span></span></term>
              <description><span data-ttu-id="da263-862">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-862">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-863">大文字の列文字。</span><span class="sxs-lookup"><span data-stu-id="da263-863">Uppercase column letter.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-864">
                <b>xlUpperCaseRowLetter</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-864">
                <b>xlUpperCaseRowLetter</b>
              </span></span></term>
              <description><span data-ttu-id="da263-865">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-865">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-866">大文字の行文字 (R1C1 形式のみ)。</span><span class="sxs-lookup"><span data-stu-id="da263-866">Uppercase row letter (for R1C1-style references).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-867">国/地域設定</span><span class="sxs-lookup"><span data-stu-id="da263-867">Country/Region Settings</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-868">
                <b>xlCountryCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-868">
                <b>xlCountryCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-869">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-869">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-870">Microsoft Excel の国/地域のバージョンを表す番号。</span><span class="sxs-lookup"><span data-stu-id="da263-870">Country/Region version of Microsoft Excel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-871">
                <b>xlCountrySetting</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-871">
                <b>xlCountrySetting</b>
              </span></span></term>
              <description><span data-ttu-id="da263-872">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-872">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-873">Windows のコントロール パネルでの現在の国/地域のプロパティの設定。</span><span class="sxs-lookup"><span data-stu-id="da263-873">Current country/region setting in the Windows Control Panel.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-874">
                <b>xlGeneralFormatName</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-874">
                <b>xlGeneralFormatName</b>
              </span></span></term>
              <description><span data-ttu-id="da263-875">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-875">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-876">一般的な数値の表示形式の名前。</span><span class="sxs-lookup"><span data-stu-id="da263-876">Name of the General number format.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-877">通貨</span><span class="sxs-lookup"><span data-stu-id="da263-877">Currency</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-878">
                <b>xlCurrencyBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-878">
                <b>xlCurrencyBefore</b>
              </span></span></term>
              <description><span data-ttu-id="da263-879">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-879">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-880">
                <b>True</b> の場合、通貨記号を金額の前に付けます。 <b>False</b> の場合、後に付けます。</span><span class="sxs-lookup"><span data-stu-id="da263-880">
                <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-881">
                <b>xlCurrencyCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-881">
                <b>xlCurrencyCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-882">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-882">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-883">通貨記号。</span><span class="sxs-lookup"><span data-stu-id="da263-883">Currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-884">
                <b>xlCurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-884">
                <b>xlCurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="da263-885">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-885">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-886">通貨の表示形式に使用される桁数。</span><span class="sxs-lookup"><span data-stu-id="da263-886">Number of decimal digits to be used in currency formats.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-887">
                <b>xlCurrencyLeadingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-887">
                <b>xlCurrencyLeadingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="da263-888">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-888">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-889">
                <b>True</b> の場合、金額の値に先行ゼロを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-889">
                <b>True</b> if leading zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-890">
                <b>xlCurrencyMinusSign</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-890">
                <b>xlCurrencyMinusSign</b>
              </span></span></term>
              <description><span data-ttu-id="da263-891">
                <b>ブール型 (Boolean)</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-891">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-892">
                <b>True</b> の 負の数値の負符号を使用している場合です。 <b>False</b> かっこを使用している場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-892">
                <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-893">
                <b>xlCurrencyNegative</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-893">
                <b>xlCurrencyNegative</b>
              </span></span></term>
              <description><span data-ttu-id="da263-894">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-894">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-895">負の通貨値の通貨書式:0 = (symbolx) または (xsymbol)1 = -symbolx または -xsymbol2 = symbol-x または x-symbol3 = symbolx- または xsymbol-symbol は国または地域の通貨記号です。</span><span class="sxs-lookup"><span data-stu-id="da263-895">Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region.</span></span> <span data-ttu-id="da263-896">Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-896">Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-897">
                <b>xlCurrencySpaceBefore</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-897">
                <b>xlCurrencySpaceBefore</b>
              </span></span></term>
              <description><span data-ttu-id="da263-898">
                <b>ブール型 (Boolean)</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-898">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-899">
                <b>True</b> の場合、通貨記号の前にスペースを付加します。</span><span class="sxs-lookup"><span data-stu-id="da263-899">
                <b>True</b> if a space is added before the currency symbol.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-900">
                <b>xlCurrencyTrailingZeros</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-900">
                <b>xlCurrencyTrailingZeros</b>
              </span></span></term>
              <description><span data-ttu-id="da263-901">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-901">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-902">
                <b>True</b> の場合、金額の値に後続ゼロを表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-902">
                <b>True</b> if trailing zeros are displayed for zero currency values.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-903">
                <b>xlNoncurrencyDigits</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-903">
                <b>xlNoncurrencyDigits</b>
              </span></span></term>
              <description><span data-ttu-id="da263-904">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-904">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-905">通貨以外の形式で使用する 10 進数の桁数。</span><span class="sxs-lookup"><span data-stu-id="da263-905">Number of decimal digits to be used in non-currency formats.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-906">日付と時刻</span><span class="sxs-lookup"><span data-stu-id="da263-906">Date and Time</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-907">
                <b>xl24HourClock</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-907">
                <b>xl24HourClock</b>
              </span></span></term>
              <description><span data-ttu-id="da263-908">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-908">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-909">
                <b>True</b> の 場合は 24 時間を使用しています。 <b>False</b> 12 時間を使用している場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-909">
                <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-910">
                <b>xl4DigitYears</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-910">
                <b>xl4DigitYears</b>
              </span></span></term>
              <description><span data-ttu-id="da263-911">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-911">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-912">
                <b>True</b> の 4 桁の年を使用している場合。 <b>False</b> 2 桁の年を使用している場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-912">
                <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-913">
                <b>xlDateOrder</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-913">
                <b>xlDateOrder</b>
              </span></span></term>
              <description><span data-ttu-id="da263-914">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-914">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-915">日付要素の順番。0 = 月 -日 -年 1 = 日 -月 -年 2 = 年 -月 -日</span><span class="sxs-lookup"><span data-stu-id="da263-915">Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-916">
                <b>xlDateSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-916">
                <b>xlDateSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-917">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-917">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-918">日付の区切り記号 (/)。</span><span class="sxs-lookup"><span data-stu-id="da263-918">Date separator (/).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-919">
                <b>xlDayCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-919">
                <b>xlDayCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-920">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-920">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-921">日を示す記号 (d)。</span><span class="sxs-lookup"><span data-stu-id="da263-921">Day symbol (d).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-922">
                <b>xlDayLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-922">
                <b>xlDayLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="da263-923">
                <b>ブール型 (Boolean)</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-923">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-924">日を表す数値に先行ゼロを表示する場合は True にします。</span><span class="sxs-lookup"><span data-stu-id="da263-924">True if a leading zero is displayed in days.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-925">
                <b>xlHourCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-925">
                <b>xlHourCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-926">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-926">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-927">時間を示す記号 (h)。</span><span class="sxs-lookup"><span data-stu-id="da263-927">Hour symbol (h).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-928">
                <b>xlMDY</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-928">
                <b>xlMDY</b>
              </span></span></term>
              <description><span data-ttu-id="da263-929">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-929">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-930">
                <b>True</b> の場合、日付を長い形式で表示するときに使用する日付の順序は月 - 日 - 年です。 <b>False</b> の場合、日付の順序は日 - 月 - 年です。</span><span class="sxs-lookup"><span data-stu-id="da263-930">
                <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-931">
                <b>xlMinuteCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-931">
                <b>xlMinuteCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-932">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-932">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-933">分を示す記号 (m)。</span><span class="sxs-lookup"><span data-stu-id="da263-933">Minute symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-934">
                <b>xlMonthCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-934">
                <b>xlMonthCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-935">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-935">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-936">月を示す記号 (m)。</span><span class="sxs-lookup"><span data-stu-id="da263-936">Month symbol (m).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-937">
                <b>xlMonthLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-937">
                <b>xlMonthLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="da263-938">
                <b>ブール型 (Boolean)</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-938">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-939">
                <b>True</b> の場合、月を表す数値に先行ゼロ表示を適用します。</span><span class="sxs-lookup"><span data-stu-id="da263-939">
                <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-940">
                <b>xlMonthNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-940">
                <b>xlMonthNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="da263-941">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-941">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-942">以前のバージョンとの互換性を保つため、常に 3 文字を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-942">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="da263-943">Microsoft Windows から読み込まれた省略形の月の名前は任意の長さにすることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-943">Abbreviated month names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-944">
                <b>xlSecondCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-944">
                <b>xlSecondCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-945">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-945">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-946">秒を示す記号 (s)。</span><span class="sxs-lookup"><span data-stu-id="da263-946">Second symbol (s).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-947">
                <b>xlTimeSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-947">
                <b>xlTimeSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-948">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-948">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-949">時刻の区切り記号 (:)。</span><span class="sxs-lookup"><span data-stu-id="da263-949">Time separator (:).</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-950">
                <b>xlTimeLeadingZero</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-950">
                <b>xlTimeLeadingZero</b>
              </span></span></term>
              <description><span data-ttu-id="da263-951">
                <b>ブール型 (Boolean)</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-951">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-952">
                <b>True</b> の場合、時刻に先行ゼロ表示を適用します。</span><span class="sxs-lookup"><span data-stu-id="da263-952">
                <b>True</b> if a leading zero is displayed in times.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-953">
                <b>xlWeekdayNameChars</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-953">
                <b>xlWeekdayNameChars</b>
              </span></span></term>
              <description><span data-ttu-id="da263-954">
                <b>整数</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-954">
                <b>Integer</b>
              </span></span></description>
              <description><span data-ttu-id="da263-955">以前のバージョンとの互換性を保つため、常に 3 文字を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-955">Always returns three characters for backward compatibility.</span></span> <span data-ttu-id="da263-956">Windows から読み込まれた省略の週の名前は任意の長さにすることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-956">Abbreviated weekday names are read from Microsoft Windows and can be any length.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-957">
                <b>xlYearCode</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-957">
                <b>xlYearCode</b>
              </span></span></term>
              <description><span data-ttu-id="da263-958">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-958">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-959">年を示す記号 (y)。</span><span class="sxs-lookup"><span data-stu-id="da263-959">Year symbol in number formats (y).</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-960">計測法</span><span class="sxs-lookup"><span data-stu-id="da263-960">Measurement Systems</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-961">
                <b>xlMetric</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-961">
                <b>xlMetric</b>
              </span></span></term>
              <description><span data-ttu-id="da263-962">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-962">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-963">
                <b>True</b> の 場合は、測定基準システムを使用しています。 <b>False</b> の 場合は、英語の測定システムを使用しています。</span><span class="sxs-lookup"><span data-stu-id="da263-963">
                <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-964">
                <b>xlNonEnglishFunctions</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-964">
                <b>xlNonEnglishFunctions</b>
              </span></span></term>
              <description><span data-ttu-id="da263-965">
                <b>Boolean</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-965">
                <b>Boolean</b>
              </span></span></description>
              <description><span data-ttu-id="da263-966">
                <b>True</b> の 場合は、英語で関数を表示します。</span><span class="sxs-lookup"><span data-stu-id="da263-966">
                <b>True</b> if you’re not displaying functions in English.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-967">区切り記号</span><span class="sxs-lookup"><span data-stu-id="da263-967">Separators</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-968">
                <b>xlAlternateArraySeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-968">
                <b>xlAlternateArraySeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-969">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-969">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-970">小数点記号と同じ文字が配列区切り記号として使用される場合に、代替として使用される配列区切り記号。</span><span class="sxs-lookup"><span data-stu-id="da263-970">Alternate array item separator to be used if the current array separator is the same as the decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-971">
                <b>xlColumnSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-971">
                <b>xlColumnSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-972">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-972">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-973">配列リテラルで列区切りに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-973">Character used to separate columns in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-974">
                <b>xlDecimalSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-974">
                <b>xlDecimalSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-975">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-975">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-976">小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="da263-976">Decimal separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-977">
                <b>xlListSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-977">
                <b>xlListSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-978">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-978">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-979">区切り記号。</span><span class="sxs-lookup"><span data-stu-id="da263-979">List separator.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-980">
                <b>xlRowSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-980">
                <b>xlRowSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-981">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-981">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-982">配列リテラルで行区切りに使用する文字。</span><span class="sxs-lookup"><span data-stu-id="da263-982">Character used to separate rows in array literals.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-983">
                <b>xlThousandsSeparator</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-983">
                <b>xlThousandsSeparator</b>
              </span></span></term>
              <description><span data-ttu-id="da263-984">
                <b>文字列</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-984">
                <b>String</b>
              </span></span></description>
              <description><span data-ttu-id="da263-985">0 (ゼロ) または桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="da263-985">Zero or thousands separator.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-986">前の表に示した記号、区切り記号、通貨形式は、言語または地理的な場所で使用されている書式とは異なる場合があります。また、選択またはインストールされている言語の設定 (たとえば、日本語) によっては使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="da263-986">Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="da263-987">必須 <b>の範囲 です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-987">Required <b>Range</b>.</span></span> <span data-ttu-id="da263-988">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-988">The intersecting ranges.</span></span> <span data-ttu-id="da263-989">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-989">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="da263-990">必須 <b>の範囲 です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-990">Required <b>Range</b>.</span></span> <span data-ttu-id="da263-991">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-991">The intersecting ranges.</span></span> <span data-ttu-id="da263-992">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-992">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="da263-993">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-993">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-994">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-994">The intersecting ranges.</span></span> <span data-ttu-id="da263-995">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-995">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="da263-996">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-996">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-997">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-997">The intersecting ranges.</span></span> <span data-ttu-id="da263-998">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-998">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="da263-999">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-999">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1000">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1000">The intersecting ranges.</span></span> <span data-ttu-id="da263-1001">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1001">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="da263-1002">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1002">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1003">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1003">The intersecting ranges.</span></span> <span data-ttu-id="da263-1004">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1004">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="da263-1005">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1005">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1006">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1006">The intersecting ranges.</span></span> <span data-ttu-id="da263-1007">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1007">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="da263-1008">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1008">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1009">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1009">The intersecting ranges.</span></span> <span data-ttu-id="da263-1010">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1010">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="da263-1011">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1011">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1012">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1012">The intersecting ranges.</span></span> <span data-ttu-id="da263-1013">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1013">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="da263-1014">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1014">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1015">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1015">The intersecting ranges.</span></span> <span data-ttu-id="da263-1016">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1016">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="da263-1017">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1017">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1018">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1018">The intersecting ranges.</span></span> <span data-ttu-id="da263-1019">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1019">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="da263-1020">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1020">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1021">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1021">The intersecting ranges.</span></span> <span data-ttu-id="da263-1022">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1022">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="da263-1023">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1023">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1024">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1024">The intersecting ranges.</span></span> <span data-ttu-id="da263-1025">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1025">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="da263-1026">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1026">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1027">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1027">The intersecting ranges.</span></span> <span data-ttu-id="da263-1028">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1028">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="da263-1029">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1029">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1030">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1030">The intersecting ranges.</span></span> <span data-ttu-id="da263-1031">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1031">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="da263-1032">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1032">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1033">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1033">The intersecting ranges.</span></span> <span data-ttu-id="da263-1034">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1034">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="da263-1035">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1035">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1036">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1036">The intersecting ranges.</span></span> <span data-ttu-id="da263-1037">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1037">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="da263-1038">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1038">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1039">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1039">The intersecting ranges.</span></span> <span data-ttu-id="da263-1040">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1040">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="da263-1041">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1041">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1042">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1042">The intersecting ranges.</span></span> <span data-ttu-id="da263-1043">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1043">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="da263-1044">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1044">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1045">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1045">The intersecting ranges.</span></span> <span data-ttu-id="da263-1046">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1046">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="da263-1047">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1047">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1048">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1048">The intersecting ranges.</span></span> <span data-ttu-id="da263-1049">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1049">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="da263-1050">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1050">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1051">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1051">The intersecting ranges.</span></span> <span data-ttu-id="da263-1052">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1052">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="da263-1053">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1053">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1054">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1054">The intersecting ranges.</span></span> <span data-ttu-id="da263-1055">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1055">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="da263-1056">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1056">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1057">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1057">The intersecting ranges.</span></span> <span data-ttu-id="da263-1058">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1058">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="da263-1059">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1059">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1060">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1060">The intersecting ranges.</span></span> <span data-ttu-id="da263-1061">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1061">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="da263-1062">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1062">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1063">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1063">The intersecting ranges.</span></span> <span data-ttu-id="da263-1064">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1064">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="da263-1065">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1065">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1066">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1066">The intersecting ranges.</span></span> <span data-ttu-id="da263-1067">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1067">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="da263-1068">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1068">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1069">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1069">The intersecting ranges.</span></span> <span data-ttu-id="da263-1070">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1070">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="da263-1071">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1071">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1072">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1072">The intersecting ranges.</span></span> <span data-ttu-id="da263-1073">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1073">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="da263-1074">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1074">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1075">セル範囲 (Range オブジェクト) の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1075">The intersecting ranges.</span></span> <span data-ttu-id="da263-1076">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1076">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="da263-1077">2 つ <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 以上の範囲の長方形の交差を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1077">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1078">指定されたブックが [保護されたビュー] ウィンドウで開いているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-1078">Gets whether the specified workbook is open in a Protected View window.</span></span></summary>
        <value><span data-ttu-id="da263-1079"><b>指定された</b> ブックが [保護されたビュー] ウィンドウで開いている場合は true。それ以外の場合は <b>false です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1079"><b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1080">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="da263-1080">Read-only</span></span></para>
          <para><span data-ttu-id="da263-1081">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> を使用して、ブックが [保護されたビュー] ウィンドウで開いているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="da263-1081">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1082">Microsoft Excel で反復計算を使用して循環参照を解決する場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1082"><b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1083">Microsoft Excel の <see cref="T:Microsoft.Office.Core.LanguageSettings" /> 言語設定に関する情報を含むオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1083">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1084">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1084">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1085">操作時に警告が発生される基準となるセルの最大数を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1085">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span></span> <span data-ttu-id="da263-1086">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1086">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-1087"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="da263-1087"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1088">画面の左側からメインの Excel ウィンドウの左側までの距離をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1088">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1089">ウィンドウが最大化されている場合、このプロパティはウィンドウ枠の幅に基づいて変化する負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1089">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="da263-1090">このプロパティを 0 (ゼロ) に設定すると、アプリケーション ウィンドウが最大化されている場合よりもウィンドウが小さくて少し小さになります。</span><span class="sxs-lookup"><span data-stu-id="da263-1090">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="da263-1091">つまり、このプロパティが 0 (ゼロ) の場合、メインの Microsoft Excel ウィンドウの左罫線は画面にはほとんど表示されません。</span><span class="sxs-lookup"><span data-stu-id="da263-1091">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1092">最後の区切り記号を含めずに、ライブラリ フォルダーへのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1092">Returns the path to the Library folder but without the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="da263-1093">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1093">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1094">マクロ名またはユーザー定義関数 (UDF) を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1094">The macro name or the name of a user defined function (UDF).</span></span></param>
        <param name="Description"><span data-ttu-id="da263-1095">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1095">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1096">マクロの説明を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1096">The macro description.</span></span></param>
        <param name="HasMenu"><span data-ttu-id="da263-1097">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1097">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1098">この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1098">This argument is ignored.</span></span></param>
        <param name="MenuText"><span data-ttu-id="da263-1099">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1099">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1100">この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1100">This argument is ignored.</span></span></param>
        <param name="HasShortcutKey"><span data-ttu-id="da263-1101">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1101">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1102"><b>True マクロ</b> にショートカット キーを割り当てるには ( <paramref name="ShortcutKey" /> も指定する必要があります)。</span><span class="sxs-lookup"><span data-stu-id="da263-1102"><b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span></span> <span data-ttu-id="da263-1103">この引数に <b>False を指定</b>すると、マクロにショートカット キーは割り当てられていない。</span><span class="sxs-lookup"><span data-stu-id="da263-1103">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span></span> <span data-ttu-id="da263-1104">マクロに既にショートカット キーがある場合、この引数を <b>False</b> に設定すると、ショートカット キーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1104">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span></span> <span data-ttu-id="da263-1105">既定値は <b>False</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1105">The default value is <b>False</b>.</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="da263-1106">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1106">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1107">True の <paramref name="HasShortcutKey" /> 場合は <b>必須。</b>それ以外の場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1107">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span></span> <span data-ttu-id="da263-1108">ショートカット キー。</span><span class="sxs-lookup"><span data-stu-id="da263-1108">The shortcut key.</span></span></param>
        <param name="Category"><span data-ttu-id="da263-1109">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1109">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span><span class="sxs-lookup"><span data-stu-id="da263-1110">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span></span> <span data-ttu-id="da263-1111">組み込みのカテゴリにマップされている整数を確認するには、「備考」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="da263-1111">See the remarks section to determine the integers that are mapped to the built-in categories.</span></span> <span data-ttu-id="da263-1112">You can also specify a string for a custom category.</span><span class="sxs-lookup"><span data-stu-id="da263-1112">You can also specify a string for a custom category.</span></span> <span data-ttu-id="da263-1113">文字列を指定すると、[関数の挿入] ダイアログ ボックスに表示されるカテゴリ名として扱います。</span><span class="sxs-lookup"><span data-stu-id="da263-1113">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span></span> <span data-ttu-id="da263-1114">If the category name has never been used, a new category is defined with that name.</span><span class="sxs-lookup"><span data-stu-id="da263-1114">If the category name has never been used, a new category is defined with that name.</span></span> <span data-ttu-id="da263-1115">組み込みの名前と同じカテゴリ名を使用すると、Excel はユーザー定義関数をその組み込みカテゴリにマップします。</span><span class="sxs-lookup"><span data-stu-id="da263-1115">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span></span></param>
        <param name="StatusBar"><span data-ttu-id="da263-1116">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1116">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1117">マクロ実行時に表示されるステータス バー テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1117">The status bar text for the macro.</span></span></param>
        <param name="HelpContextID"><span data-ttu-id="da263-1118">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1118">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1119">マクロに登録するヘルプ トピックのコンテキスト ID を、整数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1119">An integer that specifies the context ID for the Help topic assigned to the macro.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="da263-1120">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1121">定義されているヘルプ トピックを含むヘルプ ファイルの名前 <paramref name="HelpContextId" /> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1121">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span></span></param>
        <summary><span data-ttu-id="da263-1122">[マクロオプション] ダイアログ ボックスのオプションに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-1122">Corresponds to options in the Macro Options dialog box.</span></span> <span data-ttu-id="da263-1123">このメソッドを使用すると、[ 関数の挿入] ダイアログ ボックスの組み込みの分類または新しい分類にユーザー定義関数 (UDF) を追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="da263-1123">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1124">次の表に、Category パラメーターで使用できる組み込みのカテゴリにマップされる整数を示します。</span><span class="sxs-lookup"><span data-stu-id="da263-1124">The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1125">1 </span><span class="sxs-lookup"><span data-stu-id="da263-1125">1</span></span></term>
              <description><span data-ttu-id="da263-1126">
                <b>財務</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1126">
                <b>Financial</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1127">2</span><span class="sxs-lookup"><span data-stu-id="da263-1127">2</span></span></term>
              <description><span data-ttu-id="da263-1128">
                <b>日付 &amp; /時刻</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1128">
                <b>Date &amp; Time</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1129">3</span><span class="sxs-lookup"><span data-stu-id="da263-1129">3</span></span></term>
              <description><span data-ttu-id="da263-1130">
                <b>Math &amp; Trig</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1130">
                <b>Math &amp; Trig</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1131">4 </span><span class="sxs-lookup"><span data-stu-id="da263-1131">4</span></span></term>
              <description><span data-ttu-id="da263-1132">
                <b>統計</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1132">
                <b>Statistical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1133">5 </span><span class="sxs-lookup"><span data-stu-id="da263-1133">5</span></span></term>
              <description><span data-ttu-id="da263-1134">
                <b>参照 &amp; 参照</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1134">
                <b>Lookup &amp; Reference</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1135">6 </span><span class="sxs-lookup"><span data-stu-id="da263-1135">6</span></span></term>
              <description><span data-ttu-id="da263-1136">
                <b>データベース</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1136">
                <b>Database</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1137">7 </span><span class="sxs-lookup"><span data-stu-id="da263-1137">7</span></span></term>
              <description><span data-ttu-id="da263-1138">
                <b>テキスト</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1138">
                <b>Text</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1139">8 </span><span class="sxs-lookup"><span data-stu-id="da263-1139">8</span></span></term>
              <description><span data-ttu-id="da263-1140">
                <b>論理</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1140">
                <b>Logical</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1141">9 </span><span class="sxs-lookup"><span data-stu-id="da263-1141">9</span></span></term>
              <description><span data-ttu-id="da263-1142">
                <b>情報</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1142">
                <b>Information</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1143">10 </span><span class="sxs-lookup"><span data-stu-id="da263-1143">10</span></span></term>
              <description><span data-ttu-id="da263-1144">
                <b>コマンド</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1144">
                <b>Commands</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1145">11 </span><span class="sxs-lookup"><span data-stu-id="da263-1145">11</span></span></term>
              <description><span data-ttu-id="da263-1146">
                <b>カスタマイズ</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1146">
                <b>Customizing</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1147">12 </span><span class="sxs-lookup"><span data-stu-id="da263-1147">12</span></span></term>
              <description><span data-ttu-id="da263-1148">
                <b>マクロ コントロール</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1148">
                <b>Macro Control</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1149">13 </span><span class="sxs-lookup"><span data-stu-id="da263-1149">13</span></span></term>
              <description><span data-ttu-id="da263-1150">
                <b>DDE/External</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1150">
                <b>DDE/External</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1151">14 </span><span class="sxs-lookup"><span data-stu-id="da263-1151">14</span></span></term>
              <description><span data-ttu-id="da263-1152">
                <b>ユーザー定義</b>
              </span><span class="sxs-lookup"><span data-stu-id="da263-1152">
                <b>User Defined</b>
              </span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1153">15 </span><span class="sxs-lookup"><span data-stu-id="da263-1153">15</span></span></term>
              <description><span data-ttu-id="da263-1154">1 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1154">First custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1155">16 </span><span class="sxs-lookup"><span data-stu-id="da263-1155">16</span></span></term>
              <description><span data-ttu-id="da263-1156">2 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1156">Second custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1157">17 </span><span class="sxs-lookup"><span data-stu-id="da263-1157">17</span></span></term>
              <description><span data-ttu-id="da263-1158">3 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1158">Third custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1159">18 </span><span class="sxs-lookup"><span data-stu-id="da263-1159">18</span></span></term>
              <description><span data-ttu-id="da263-1160">4 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1160">Fourth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1161">19</span><span class="sxs-lookup"><span data-stu-id="da263-1161">19</span></span></term>
              <description><span data-ttu-id="da263-1162">5 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1162">Fifth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1163">20</span><span class="sxs-lookup"><span data-stu-id="da263-1163">20</span></span></term>
              <description><span data-ttu-id="da263-1164">6 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1164">Sixth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1165"> 21</span><span class="sxs-lookup"><span data-stu-id="da263-1165">21</span></span></term>
              <description><span data-ttu-id="da263-1166">7 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1166">Seventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1167">22</span><span class="sxs-lookup"><span data-stu-id="da263-1167">22</span></span></term>
              <description><span data-ttu-id="da263-1168">8 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1168">Eighth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1169">23</span><span class="sxs-lookup"><span data-stu-id="da263-1169">23</span></span></term>
              <description><span data-ttu-id="da263-1170">9 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1170">Ninth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1171">24</span><span class="sxs-lookup"><span data-stu-id="da263-1171">24</span></span></term>
              <description><span data-ttu-id="da263-1172">10 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1172">Tenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1173">25</span><span class="sxs-lookup"><span data-stu-id="da263-1173">25</span></span></term>
              <description><span data-ttu-id="da263-1174">11 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1174">Eleventh custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1175">26</span><span class="sxs-lookup"><span data-stu-id="da263-1175">26</span></span></term>
              <description><span data-ttu-id="da263-1176">12 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1176">Twelfth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1177">27</span><span class="sxs-lookup"><span data-stu-id="da263-1177">27</span></span></term>
              <description><span data-ttu-id="da263-1178">13 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1178">Thirteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1179">28</span><span class="sxs-lookup"><span data-stu-id="da263-1179">28</span></span></term>
              <description><span data-ttu-id="da263-1180">14 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1180">Fourteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1181">29</span><span class="sxs-lookup"><span data-stu-id="da263-1181">29</span></span></term>
              <description><span data-ttu-id="da263-1182">15 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1182">Fifteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1183">30</span><span class="sxs-lookup"><span data-stu-id="da263-1183">30</span></span></term>
              <description><span data-ttu-id="da263-1184">16 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1184">Sixteenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1185">31</span><span class="sxs-lookup"><span data-stu-id="da263-1185">31</span></span></term>
              <description><span data-ttu-id="da263-1186">17 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1186">Seventeenth custom category</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1187">32</span><span class="sxs-lookup"><span data-stu-id="da263-1187">32</span></span></term>
              <description><span data-ttu-id="da263-1188">18 番目のユーザー設定の分類</span><span class="sxs-lookup"><span data-stu-id="da263-1188">Eighteenth custom category</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary><span data-ttu-id="da263-1189">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1189">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-1190">Excel で確立した MAPI メール セッションを終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1190">Closes a MAPI mail session established by Microsoft Excel.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="da263-1191">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1191">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1192">メール アカウント名、または Exchange のプロファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1192">The mail account name or Microsoft Exchange profile name.</span></span> <span data-ttu-id="da263-1193">この引数を省略すると、既定のメール アカウント名が使われます。</span><span class="sxs-lookup"><span data-stu-id="da263-1193">If this argument is omitted, the default mail account name is used.</span></span></param>
        <param name="Password"><span data-ttu-id="da263-1194">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1194">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1195">メール アカウントのパスワードを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1195">The mail account password.</span></span> <span data-ttu-id="da263-1196">Exchange では、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1196">This argument is ignored in Microsoft Exchange.</span></span></param>
        <param name="DownloadNewMail"><span data-ttu-id="da263-1197">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1198"><b>True</b> を指定すると、メールは即時にダウンロードされます。</span><span class="sxs-lookup"><span data-stu-id="da263-1198"><b>True</b> to download new mail immediately.</span></span></param>
        <summary><span data-ttu-id="da263-p311">MAPI Mail または Exchange にログ インして、メール セッションを確立します。Mail が起動されていない場合は、メールやドキュメントの回覧機能を使う前に、このメソッドでメール セッションを確立しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-p311">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1201">このメソッドは、新規メール セッションを確立する前に、現在までに Excel で確立したメール セッションをログ オフします。</span><span class="sxs-lookup"><span data-stu-id="da263-1201">Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</span></span></para>
          <para><span data-ttu-id="da263-1202">To piggyback on the system default mail session, omit both the name and password parameters.</span><span class="sxs-lookup"><span data-stu-id="da263-1202">To piggyback on the system default mail session, omit both the name and password parameters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1203">MAPI メール セッション番号を 16 進数の文字列として返します (アクティブなセッションがある場合)、セッションがない場合は <b>Null</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1203">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1204">このプロパティは、Excel で確立されたメール セッションにだけ使用できます。Mail のメール セッション番号は返されません。</span><span class="sxs-lookup"><span data-stu-id="da263-1204">This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</span></span></para>
          <para><span data-ttu-id="da263-1205">PowerTalk メール システムでは、このプロパティを使用できません。</span><span class="sxs-lookup"><span data-stu-id="da263-1205">This property isn't used on PowerTalk mail systems.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1206">ホスト コンピューターにインストールされているメール システムを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1206">Returns the mail system that's installed on the host machine.</span></span> <span data-ttu-id="da263-1207">読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" /> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1207">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1208">
            <b>使用できる定数</b> は、次に示す <b>XlMailSystem</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-1208">
            <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-1209">
            <b>xlMAPI</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1209">
            <b>xlMAPI</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1210">
            <b>xlNoMailSystem</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1210">
            <b>xlNoMailSystem</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1211">
            <b>xlPowerTalk</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1211">
            <b>xlPowerTalk</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1212"><b>True</b> の 場合は別の国/地域 (たとえば、A4) の標準的な用紙サイズ用に書式設定されたドキュメントが自動的に調整され、国/地域の標準用紙サイズ (レターなど) に正しく印刷されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1212"><b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1213">数値演算コプロセッサが利用可能な場合は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1213"><b>True</b> if a math coprocessor is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1214">Microsoft Excel が循環参照を解決する各反復処理の間の最大変更量を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1214">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1215">このプロパティは、循環参照を解決するときに Excel で使用できる反復の最大数 <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1215">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1216">循環参照を解決するために Excel で使用できる最大反復回数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1216">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1217">このプロパティは、Microsoft Excel が循環参照を解決する際の反復ごとに変更の最大値 <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1217">The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1218">アプリケーションで使用する寸法の単位を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1218">Specifies the measurement unit used in the application.</span></span> <span data-ttu-id="da263-1219">列挙の定数に対応する整数型 <b>(Integer)</b> の値を読み取り/書き込 <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> み。</span><span class="sxs-lookup"><span data-stu-id="da263-1219">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="da263-1220"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="da263-1220"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1221">Excel で引き続き使用できるメモリ容量をバイト単位で返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1221">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1222">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-1222">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1223">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1223">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1224">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1224">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1225">アプリケーションの複数のインスタンスを 1 つのインスタンスにマージするには、True を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1225">True to merge multiple instances of the application into a single instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1226">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1226">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1227">マウスが使用可能な場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1227"><b>True</b> if a mouse is available.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1228"><b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span><span class="sxs-lookup"><span data-stu-id="da263-1228"><b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1229">このプロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> を使用して、アクティブ セルを移動する方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1229">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1230">Enter キーを押すとアクティブ セルを移動する方向を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1230">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span></span> <span data-ttu-id="da263-1231">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-1231">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1232">
            <b>使用できる定数</b> は、次に示 <b>す XlDirection</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-1232">
            <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-1233">
            <b>xlDown</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1233">
            <b>xlDown</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1234">
            <b>xlToLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1234">
            <b>xlToLeft</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1235">
            <b>xlToRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1235">
            <b>xlToRight</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1236">
            <b>xlUp</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1236">
            <b>xlUp</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1237">プロパティが <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> <b>False</b>の場合 <b>、MoveAfterReturnDirection</b> プロパティの設定方法に関係なく、選択範囲は移動します。</span><span class="sxs-lookup"><span data-stu-id="da263-1237">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1238">Excel 2007 の新しいマルチスレッド再計算設定を制御するオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1238">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span></span> <span data-ttu-id="da263-1239">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-1239">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1240">オブジェクトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1240">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1241">アクティブなブック <see cref="T:Microsoft.Office.Interop.Excel.Names" /> のすべての名前を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1241">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1242">テンプレートが格納されているネットワーク パスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1242">Returns the network path where templates are stored.</span></span> <span data-ttu-id="da263-1243">ネットワーク パスが存在しない場合、このプロパティは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1243">If the network path doesn’t exist, this property returns an empty string.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1244"><b>NewFile オブジェクトを返</b>します。</span><span class="sxs-lookup"><span data-stu-id="da263-1244">Returns a <b>NewFile</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-p317">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span><span class="sxs-lookup"><span data-stu-id="da263-p317">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1247">最新のクエリ テーブルまたはピボットテーブル レポート操作によって生成された ODBC エラーを含む <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1247">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1248">同時に複数のクエリが実行されている場合、最後に終了したクエリの ODBC エラーが <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> コレクションに含まれています。</span><span class="sxs-lookup"><span data-stu-id="da263-1248">If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1249">ODBC クエリの時間制限を秒で設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1249">Returns or sets the ODBC query time limit in seconds.</span></span> <span data-ttu-id="da263-1250">既定値は 45 秒です。</span><span class="sxs-lookup"><span data-stu-id="da263-1250">The default value is 45 seconds.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1251">値が 0 (ゼロ) のときは、時間制限がないことを示します。</span><span class="sxs-lookup"><span data-stu-id="da263-1251">The value 0 (zero) indicates an indefinite time limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1252">コレクションを返します。このコレクションは、最新の OLE DB クエリによって返される <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> エラー情報を表します。</span><span class="sxs-lookup"><span data-stu-id="da263-1252">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1253">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-1253">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1254">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1254">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1255">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1255">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1256">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1256">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="da263-1257"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1257">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1258">押すキーを示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1258">A string indicating the key to be pressed.</span></span></param>
        <param name="Procedure"><span data-ttu-id="da263-1259">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1259">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1260">実行するプロシージャ名を示す文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1260">A string indicating the name of the procedure to be run.</span></span> <span data-ttu-id="da263-1261">"" <paramref name="Procedure" /> (空のテキスト) の場合、押された場合 <paramref name="Key" /> は何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="da263-1261">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span></span> <span data-ttu-id="da263-1262">この形式の <b>OnKey は</b> 、Microsoft Excel でのキーストロークの通常の結果を変更します。</span><span class="sxs-lookup"><span data-stu-id="da263-1262">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span></span> <span data-ttu-id="da263-1263">省略すると、Microsoft Excel の通常の結果に戻り、以前の OnKey メソッドで行われた特殊なキーの割り当 <paramref name="Procedure" /> <paramref name="Key" /> てがクリアされます。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-1263">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span></span></param>
        <summary><span data-ttu-id="da263-1264">特定のキー、またはキーの組み合わせを押したときに、指定されたプロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="da263-1264">Runs a specified procedure when a particular key or key combination is pressed.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1265">引数には、Alt、Ctrl、Shift と組み合わせた 1 つのキー、またはこれらのキーの任意の組み合 <paramref name="Key" /> わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1265">The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys.</span></span> <span data-ttu-id="da263-1266">各キーは、1 つ以上の文字 (文字 a の場合は "a"、ENTER キーの場合は "{ENTER}" など) で表されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1266">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="da263-p322">Enter キーや Tab キーのように、押しても画面に文字が表示されないキーを指定するときは、次に示すコードを使います。各コードは、キーボードの 1 つのキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-p322">To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1269">BackSpace</span><span class="sxs-lookup"><span data-stu-id="da263-1269">BACKSPACE</span></span></term>
              <description><span data-ttu-id="da263-1270">{BACKSPACE} または {BS}</span><span class="sxs-lookup"><span data-stu-id="da263-1270">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1271">Break</span><span class="sxs-lookup"><span data-stu-id="da263-1271">BREAK</span></span></term>
              <description><span data-ttu-id="da263-1272">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="da263-1272">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1273">CapsLock</span><span class="sxs-lookup"><span data-stu-id="da263-1273">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="da263-1274">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1274">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1275">Clear</span><span class="sxs-lookup"><span data-stu-id="da263-1275">CLEAR</span></span></term>
              <description><span data-ttu-id="da263-1276">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="da263-1276">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1277">Delete または Del</span><span class="sxs-lookup"><span data-stu-id="da263-1277">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="da263-1278">{DELETE} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="da263-1278">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1279">↓</span><span class="sxs-lookup"><span data-stu-id="da263-1279">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="da263-1280">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="da263-1280">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1281">終了</span><span class="sxs-lookup"><span data-stu-id="da263-1281">END</span></span></term>
              <description><span data-ttu-id="da263-1282">{END}</span><span class="sxs-lookup"><span data-stu-id="da263-1282">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1283">Enter</span><span class="sxs-lookup"><span data-stu-id="da263-1283">ENTER</span></span></term>
              <description><span data-ttu-id="da263-1284">~ (チルダ)</span><span class="sxs-lookup"><span data-stu-id="da263-1284">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1285">Enter (テンキー)</span><span class="sxs-lookup"><span data-stu-id="da263-1285">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="da263-1286">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="da263-1286">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1287">Esc</span><span class="sxs-lookup"><span data-stu-id="da263-1287">ESC</span></span></term>
              <description><span data-ttu-id="da263-1288">{ESCAPE} または {ESC}</span><span class="sxs-lookup"><span data-stu-id="da263-1288">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1289">F1 ～ F15</span><span class="sxs-lookup"><span data-stu-id="da263-1289">F1 through F15</span></span></term>
              <description><span data-ttu-id="da263-1290">{F1} ~ {F15}</span><span class="sxs-lookup"><span data-stu-id="da263-1290">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1291">HELP</span><span class="sxs-lookup"><span data-stu-id="da263-1291">HELP</span></span></term>
              <description><span data-ttu-id="da263-1292">{HELP}</span><span class="sxs-lookup"><span data-stu-id="da263-1292">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1293">ホーム</span><span class="sxs-lookup"><span data-stu-id="da263-1293">HOME</span></span></term>
              <description><span data-ttu-id="da263-1294">{HOME}</span><span class="sxs-lookup"><span data-stu-id="da263-1294">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1295">Ins</span><span class="sxs-lookup"><span data-stu-id="da263-1295">INS</span></span></term>
              <description><span data-ttu-id="da263-1296">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="da263-1296">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1297">←</span><span class="sxs-lookup"><span data-stu-id="da263-1297">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="da263-1298">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="da263-1298">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1299">NumLock</span><span class="sxs-lookup"><span data-stu-id="da263-1299">NUM LOCK</span></span></term>
              <description><span data-ttu-id="da263-1300">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1300">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1301">PageDown</span><span class="sxs-lookup"><span data-stu-id="da263-1301">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="da263-1302">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="da263-1302">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1303">PageUp</span><span class="sxs-lookup"><span data-stu-id="da263-1303">PAGE UP</span></span></term>
              <description><span data-ttu-id="da263-1304">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="da263-1304">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1305">Return</span><span class="sxs-lookup"><span data-stu-id="da263-1305">RETURN</span></span></term>
              <description><span data-ttu-id="da263-1306">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="da263-1306">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1307">→</span><span class="sxs-lookup"><span data-stu-id="da263-1307">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="da263-1308">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="da263-1308">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1309">ScrollLock</span><span class="sxs-lookup"><span data-stu-id="da263-1309">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="da263-1310">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1310">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1311">Tab</span><span class="sxs-lookup"><span data-stu-id="da263-1311">TAB</span></span></term>
              <description><span data-ttu-id="da263-1312">{TAB}</span><span class="sxs-lookup"><span data-stu-id="da263-1312">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1313">↑</span><span class="sxs-lookup"><span data-stu-id="da263-1313">UP ARROW</span></span></term>
              <description><span data-ttu-id="da263-1314">{UP}</span><span class="sxs-lookup"><span data-stu-id="da263-1314">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-p323">任意のキーを Alt キー、Ctrl キー、Shift キーのいずれか 1 つまたは複数と組み合わせて指定できます。任意のキーをほかのキーと組み合わせるときは、次に示すコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-p323">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1317">SHIFT</span><span class="sxs-lookup"><span data-stu-id="da263-1317">SHIFT</span></span></term>
              <description><span data-ttu-id="da263-1318">+ (正符号)</span><span class="sxs-lookup"><span data-stu-id="da263-1318">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1319">Ctrl</span><span class="sxs-lookup"><span data-stu-id="da263-1319">CTRL</span></span></term>
              <description><span data-ttu-id="da263-1320">^ (キャレット)</span><span class="sxs-lookup"><span data-stu-id="da263-1320">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1321">Alt</span><span class="sxs-lookup"><span data-stu-id="da263-1321">ALT</span></span></term>
              <description><span data-ttu-id="da263-1322">% (パーセント記号)</span><span class="sxs-lookup"><span data-stu-id="da263-1322">% (percent sign)</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-1323">プロシージャを特殊文字 (+、^、% など) に登録するときは、文字を中かっこ ({ }) で囲みます。</span><span class="sxs-lookup"><span data-stu-id="da263-1323">To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="da263-1324"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1324">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1325">[繰り返し] コマンド ([編集] メニュー) と一緒に表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="da263-1325">The text that appears with the Repeat command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="da263-1326"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1326">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1327">[繰り返し] コマンド ([編集] メニュー) を選択すると実行されるプロシージャの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1327">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="da263-1328">[繰り返し] メニュー項目と、このプロパティを設定するプロシージャの実行後に [繰り返し] コマンド ([編集] メニュー) を選択した場合に実行されるプロシージャの名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1328">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1329">プロシージャで <b>OnRepeat</b> メソッドを使用しない場合は、[繰り返し] コマンドを実行すると、最近実行されたプロシージャが繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1329">If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</span></span></para>
          <para><span data-ttu-id="da263-1330">プロシージャでは <b>、OnRepeat</b> とメソッドを最後に使用して、プロシージャ内の後続のアクションによって繰り返しプロシージャと元に戻すプロシージャが上書きされるのを <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> 防ぐ必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1330">The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1331">内部使用のために予約されています。 </span><span class="sxs-lookup"><span data-stu-id="da263-1331">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1332">内部使用のために予約されています。</span><span class="sxs-lookup"><span data-stu-id="da263-1332">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime"><span data-ttu-id="da263-1333">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1333">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1334">プロシージャを実行する時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1334">The time when you want this procedure to be run.</span></span></param>
        <param name="Procedure"><span data-ttu-id="da263-1335"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1335">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1336">実行するプロシージャを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1336">The name of the procedure to be run.</span></span></param>
        <param name="LatestTime"><span data-ttu-id="da263-1337">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1337">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1338">プロシージャの実行が可能になる最も遅い時刻。</span><span class="sxs-lookup"><span data-stu-id="da263-1338">The latest time at which the procedure can be run.</span></span> <span data-ttu-id="da263-1339">たとえば、+30 に設定され、別のプロシージャが実行されている状態で Excel が <paramref name="LatestTime" /> <paramref name="EarliestTime" /> Ready、Copy、Cut、または Find モードではない場合、最初のプロシージャが完了するまで <paramref name="EarliestTime" /> 30 秒間待機します。</span><span class="sxs-lookup"><span data-stu-id="da263-1339">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span></span> <span data-ttu-id="da263-1340">Microsoft Excel が 30 日以内に準備完了モードではない場合、プロシージャは実行されません。</span><span class="sxs-lookup"><span data-stu-id="da263-1340">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span></span> <span data-ttu-id="da263-1341">この引数を省略すると、Microsoft Excel はプロシージャが実行できるようになるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="da263-1341">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span></span></param>
        <param name="Schedule"><span data-ttu-id="da263-1342">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1342">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1343"><b>True 新</b> しい <b>OnTime プロシージャをスケジュール</b> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1343"><b>True</b> to schedule a new <b>OnTime</b> procedure.</span></span> <span data-ttu-id="da263-1344">以前に設定したプロシージャを解除する場合は <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1344"><b>False</b> to clear a previously set procedure.</span></span> <span data-ttu-id="da263-1345">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1345">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="da263-1346">指定された時刻 (特定の日時、または特定の期間の経過後) にプロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="da263-1346">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1347">Now+ TimeValue(time) を使用して、特定の時間 (今からカウント) が経過した場合に実行するスケジュールを設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1347">Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed.</span></span> <span data-ttu-id="da263-1348">指定した特定の時刻に処理を実行させるときは、TimeValue(time) を使います。</span><span class="sxs-lookup"><span data-stu-id="da263-1348">Use TimeValue(time) to schedule something to be run a specific time.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="da263-1349"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1349">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1350">[元に戻す] コマンド ([編集] メニュー) と一緒に表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="da263-1350">The text that appears with the Undo command (Edit menu).</span></span></param>
        <param name="Procedure"><span data-ttu-id="da263-1351"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1351">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1352">[元に戻す] コマンド ([編集] メニュー) を選択すると実行されるプロシージャの名前。</span><span class="sxs-lookup"><span data-stu-id="da263-1352">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span></span></param>
        <summary><span data-ttu-id="da263-1353">このプロパティを設定するプロシージャを実行した後、[元に戻す] コマンド ([編集] メニュー) を選択した場合に実行されるプロシージャの名前と"元に戻す" のテキストを設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1353">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1354">プロシージャで <b>OnUndo</b> メソッドを使用しない場合、[元に戻す] コマンドは無効になります。</span><span class="sxs-lookup"><span data-stu-id="da263-1354">If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</span></span></para>
          <para><span data-ttu-id="da263-1355">プロシージャでは、プロシージャ内の後続のアクションによって繰り返しプロシージャと元に戻すプロシージャが上書きされるのを防ぐために、最後に、メソッドと <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> <b>OnUndo</b> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1355">The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1356">ウィンドウをアクティブ化するたびに実行されるプロシージャの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1356">Returns or sets the name of the procedure that’s run whenever you activate a window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1357">このプロパティで指定したプロシージャは、マウスでウィンドウをクリックした場合など、ユーザーの動作に応答して実行されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1357">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span></span> <span data-ttu-id="da263-1358">代わりに、マウスでウィンドウをクリックしたり、[編集] メニューの [移動] をクリックしたりなど、ユーザーの操作に応答します。</span><span class="sxs-lookup"><span data-stu-id="da263-1358">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span></span></para>
          <para><span data-ttu-id="da263-1359">ワークシートまたはマクロ シートに Auto_Activate または Auto_Deactivate マクロが定義されている場合、これらのマクロは <b>OnWindow</b> プロパティで指定されたプロシージャの後で実行されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1359">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1360">"Windows (32 ビット) 4.00" や "Macintosh 7.00" など、現在のオペレーティング システムの名前とバージョン番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1360">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1361">登録済みの組織名を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1361">Returns the registered organization name.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1362">指定されたオブジェクトの親オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1362">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1363">アプリケーションの最後の区切り記号と名前を除く、アプリケーションへの完全なパスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1363">Returns the complete path to the application, excluding the final separator and name of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1364">パスの区切り記号 (" ) を返します \" 。</span><span class="sxs-lookup"><span data-stu-id="da263-1364">Returns the path separator character ("\").</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1365">ピボットテーブル レポートが選択範囲を使用する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1365"><b>True</b> if PivotTable reports use structured selection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="da263-1366">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1366">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1367">セル範囲または名前の配列のインデックス (1 ～ 4) を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1367">The index number (from 1 to 4) of the previous range or name.</span></span></param>
        <summary><span data-ttu-id="da263-1368">選択した最後の 4 つの範囲または名前の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1368">Returns an array of the last four ranges or names selected.</span></span> <span data-ttu-id="da263-1369">配列内の各要素はオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1369">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1370">[名前] ボックスまたは [移動] コマンド ([編集] メニュー) を使用して範囲またはセルに移動するか、マクロがメソッドを呼び出すたび、前の範囲が要素番号 1 としてこの配列に追加され、配列内の他の項目が下に移動します。 <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="da263-1370">Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1371">プリンターとの通信が有効になっているかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1371">Gets or sets whether communication with the printer is turned on.</span></span></summary>
        <value><span data-ttu-id="da263-1372">プリンターとの通信がオンになっている場合は<b>true。</b>それ以外の場合は<b>false です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1372"><b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1373">
            <b>boolean</b> 読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="da263-1373">
            <b>boolean</b> Read/write.</span></span></para>
          <para><span data-ttu-id="da263-1374"><see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />PageSetup プロパティを<b>設定する</b>コードの実行を高速化するには、プロパティを false に設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1374">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties.</span></span> <span data-ttu-id="da263-1375">すべてのキャッシュ <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> された PageSetup <b>コマンドをコミット</b> するプロパティを設定した後、プロパティを true に設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1375">Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1376">Microsoft Excel のグローバル一意識別子 (GUID) を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1376">Returns the globally unique identifier (GUID) for Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1377">ファイルの初回保存時に Microsoft Excel が文書情報を要求する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1377"><b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1378">アプリケーションで開いているすべての保護ビュー ウィンドウを表 <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-1378">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></summary>
        <value><span data-ttu-id="da263-1379">アプリケーション <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> で開いているすべての保護ビュー ウィンドウを表すコレクションです。</span><span class="sxs-lookup"><span data-stu-id="da263-1379">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1380">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-1380">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1381">アプリケーションの <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> クイック分析オプションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-1382">Excel を終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1382">Quits Microsoft Excel.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1383">このメソッドを使うとき、開いているブックをまだ保存していない場合は、変更を保存するかどうかを確認するダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1383">If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes.</span></span> <span data-ttu-id="da263-1384">これは、Quit メソッドを使用する前にすべてのブック<b></b>を保存するか、プロパティを False に設定することで <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> 回避<b>できます</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1384">You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="da263-1385">このプロパティが <b>False</b> に設定されていると、確認メッセージは表示されず、変更したブックを保存しないで Excel を終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1385">When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</span></span></para>
          <para><span data-ttu-id="da263-1386">ブックをディスクに保存せずにブックのプロパティを True に設定すると、ブックの保存を求めずに Excel <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> が終了します。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-1386">If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1387">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1387">Reserved for internal use.</span></span></summary>
        <value><span data-ttu-id="da263-1388"><see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1388">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="da263-1389">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1389">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1390">範囲の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1390">The name of the range.</span></span> <span data-ttu-id="da263-1391">A1 形式の参照をコード記述時の言語で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1391">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="da263-1392">範囲名には、範囲を表す演算子 (:)、共通部分を表す演算子 (スペース)、または複数の範囲を表す演算子 (,) を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-1392">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="da263-1393">また、ドル記号を含めできますが、無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1393">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="da263-1394">範囲の任意の部分には、ローカルに定義した名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1394">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="da263-1395">名前を使用する場合、その名前はコード記述時の言語で表されたものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="da263-1395">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="da263-1396">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1396">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1397">セル範囲の左上隅と右下隅のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1397">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="da263-1398">各引数には、単一のセル、列全体、または行全体を含む <b>Range</b> オブジェクト、あるいはコード記述時の言語で単一のセルの名前を示す文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1398">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="da263-1399">セルまたは <see cref="T:Microsoft.Office.Interop.Excel.Range" /> セル範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1399">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1400">このプロパティは <b>、Range</b> オブジェクトを基準にしています。</span><span class="sxs-lookup"><span data-stu-id="da263-1400">The property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="da263-1401">たとえば、選択範囲がセル C3 の場合、Selection.Range("B1") は、プロパティによって返される<b>Range</b>オブジェクトを基準にしたセル D3 を返します。 <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /></span><span class="sxs-lookup"><span data-stu-id="da263-1401">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="da263-1402">一方、ActiveSheet.Range("B1") というコードでは、常にセル B1 が取得されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1402">On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1403">Microsoft Excel <b>アプリケーションの</b> 準備ができたときにTrue を返します。 <b>False</b> Excel アプリケーションの準備ができていない場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-1403">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1404">最近使用した <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> ファイルの一覧を表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1404">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode"><span data-ttu-id="da263-1405">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1405">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1406">マクロ記録の記録先が Visual Basic モジュールである場合に記録されるべき Visual Basic コードを、文字列として指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1406">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span></span> <span data-ttu-id="da263-1407">この文字列は、1 行として記録されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1407">The string will be recorded on one line.</span></span> <span data-ttu-id="da263-1408">ただし、キャリッジ リターン (ASCII 文字コード 10、コードでは Chr$(10)) が含まれているときは、文字列は複数行にわたって記録されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1408">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span></span></param>
        <param name="XlmCode"><span data-ttu-id="da263-1409">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1409">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1410">この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1410">This argument is ignored.</span></span></param>
        <summary><span data-ttu-id="da263-1411">マクロ記録機能がオンであれば、コードを記録します。</span><span class="sxs-lookup"><span data-stu-id="da263-1411">Records code if the macro recorder is on.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1412"><b>RecordMacro</b> メソッドで、アクティブ モジュール (<b>RecordMacro</b> メソッドがあるモジュール) にコードを記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="da263-1412">The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</span></span></para>
          <para><span data-ttu-id="da263-1413">2 つの引数に空の文字列 ("") を指定すると、コードは記録されません。ユーザーがダイアログ ボックスをキャンセルした場合などで、記録を禁止するときに便利です。</span><span class="sxs-lookup"><span data-stu-id="da263-1413">To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1414"><b>True の</b> 場合は、マクロが相対参照を使用して記録されます。 <b>False 記録</b> が絶対値の場合です。</span><span class="sxs-lookup"><span data-stu-id="da263-1414"><b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1415">セル参照と行見出しおよび列見出しを A1 または R1C1 参照スタイルで表示する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1415">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span></span> <span data-ttu-id="da263-1416">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-1416">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1417">
            <b>使用できる定数は、</b> 次に示す <b>XlReferenceStyle</b> クラスの定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-1417">
            <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-1418">
            <b>xlA1</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1418">
            <b>xlA1</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1419">
            <b>xlR1C1</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1419">
            <b>xlR1C1</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1"><span data-ttu-id="da263-1420">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1420">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1421">DLL またはコード リソースの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1421">The name of the DLL or code resource.</span></span></param>
        <param name="Index2"><span data-ttu-id="da263-1422">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1422">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1423">関数名を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1423">The name of the function.</span></span></param>
        <summary><span data-ttu-id="da263-1424">REGISTER 関数またはマクロ関数に登録されたダイナミック リンク ライブラリ (DLL) またはコード リソースの関数に関する情報REGISTER.IDします。</span><span class="sxs-lookup"><span data-stu-id="da263-1424">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1425">これらの引数を指定しない場合、このプロパティは登録されている関数のリストを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1425">If you don’t specify these arguments, this property returns an array that contains a list of all registered functions.</span></span> <span data-ttu-id="da263-1426">配列内の各行には、次の表に示すように、1 つの関数についての情報が入っています。</span><span class="sxs-lookup"><span data-stu-id="da263-1426">Each row in the array contains information about a single function, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1427">1 </span><span class="sxs-lookup"><span data-stu-id="da263-1427">1</span></span></term>
              <description><span data-ttu-id="da263-1428">DLL またはコード リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="da263-1428">The name of the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1429">2</span><span class="sxs-lookup"><span data-stu-id="da263-1429">2</span></span></term>
              <description><span data-ttu-id="da263-1430">DLL またはコード リソース内のプロシージャ名。</span><span class="sxs-lookup"><span data-stu-id="da263-1430">The name of the procedure in the DLL or code resource</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1431">3</span><span class="sxs-lookup"><span data-stu-id="da263-1431">3</span></span></term>
              <description><span data-ttu-id="da263-1432">戻り値のデータ型、および引数の数とデータ型を指定する文字列</span><span class="sxs-lookup"><span data-stu-id="da263-1432">Strings specifying the data types of the return values and the number and data types of the arguments</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-1433">登録されている関数がない場合、このプロパティは Null を返 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1433">If there are no registered functions, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="da263-1434"><b>文字列</b> が必要です。</span><span class="sxs-lookup"><span data-stu-id="da263-1434">Required <b>String</b>.</span></span> <span data-ttu-id="da263-1435">読み込む XLL ファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1435">Specifies the name of the XLL to be loaded.</span></span></param>
        <summary><span data-ttu-id="da263-1436">XLL ファイルのコード リソースを読み込み、その中に含まれた関数とコマンドを自動的に登録します。</span><span class="sxs-lookup"><span data-stu-id="da263-1436">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-1437">読み込みが成功すると <b>True</b> を返します。失敗すると <b>False</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1437">This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-1438">最後のユーザー インターフェイス操作を繰り返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1438">Repeats the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1439">このメソッドは、プロシージャを実行する前にユーザーが実行した最後のアクションのみを繰り返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1439">This method repeats only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="da263-1440">プロシージャの最初の行である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1440">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1441">セルの書式を置換する際の、置換の基準を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1441">Sets the replacement criteria to use in replacing cell formats.</span></span> <span data-ttu-id="da263-1442">置換条件は、オブジェクトのメソッドの後続の呼び出 <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> しで使用 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1442">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-1443">(同じ受信者の一覧と配信情報を使用して) 同じスリップで新しいルーティングを開始できるよう、ルーティング スリップをリセットします。</span><span class="sxs-lookup"><span data-stu-id="da263-1443">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information).</span></span> <span data-ttu-id="da263-1444">このメソッドを使用する前に、回覧が完了している必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1444">The routing must be completed before you use this method.</span></span> <span data-ttu-id="da263-1445">このメソッドを使用すると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="da263-1445">Using this method at other times causes an error.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><para><span data-ttu-id="da263-1446">次の使用例は、ルーティングが完了した場合Book1.xlsの出し込み時間をリセットします。</span><span class="sxs-lookup"><span data-stu-id="da263-1446">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="da263-1447">次の使用例は、ルーティングが完了した場合Book1.xlsの出し込み時間をリセットします。</span><span class="sxs-lookup"><span data-stu-id="da263-1447">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="da263-1448">次の使用例は、ルーティングが完了した場合Book1.xlsの出し込み時間をリセットします。</span><span class="sxs-lookup"><span data-stu-id="da263-1448">This example resets the routing slip for Book1.xls if routing has been completed.</span></span></para>
          <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1449">IntelliMouse でスクロールではなくズーム機能を実行する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1449"><b>True</b> if the IntelliMouse zooms instead of scrolling.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1450">アクティブ ワークシート <see cref="T:Microsoft.Office.Interop.Excel.Range" /> のすべての行を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1450">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span></span> <span data-ttu-id="da263-1451">アクティブ ドキュメントがワークシートではない場合 <b>、Rows</b> プロパティは失敗します。</span><span class="sxs-lookup"><span data-stu-id="da263-1451">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1452">複数のセル範囲を含む <b>Range</b> オブジェクトに対してこのプロパティを使用すると、選択範囲の中で最初に選択した領域の行が返されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1452">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span> <span data-ttu-id="da263-1453">たとえば、<b>Range</b> オブジェクトに A1:B2 および C3:D4 の 2 つのセル範囲が含まれているとき、Selection.Rows.Count プロパティは 4 ではなく 2 を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1453">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4.</span></span> <span data-ttu-id="da263-1454">複数のセル範囲を選択している可能性があるときは、このプロパティを使用する前に <b>Areas.Count</b> を実行し、範囲に複数の領域が含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="da263-1454">To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection.</span></span> <span data-ttu-id="da263-1455">その場合は、範囲内の各領域をループします。</span><span class="sxs-lookup"><span data-stu-id="da263-1455">If it is, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1456">オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1456">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro"><span data-ttu-id="da263-1457">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1457">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1458">実行するマクロを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1458">The macro to run.</span></span> <span data-ttu-id="da263-1459">これは、マクロ名を持つ文字列、関数が存在する場所を示すオブジェクト、または登録済み DLL (XLL) 関数の登録 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ID のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="da263-1459">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span></span> <span data-ttu-id="da263-1460">マクロ名を示す文字列を指定すると、アクティブ シートの状態に応じて評価されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1460">If a string is used, the string will be evaluated in the context of the active sheet.</span></span></param>
        <param name="Arg1"><span data-ttu-id="da263-1461">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1461">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1462">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1462">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="da263-1463">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1463">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1464">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1464">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="da263-1465">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1465">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1466">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1466">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="da263-1467">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1467">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1468">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1468">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="da263-1469">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1469">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1470">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1470">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="da263-1471">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1471">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1472">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1472">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="da263-1473">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1473">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1474">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1474">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="da263-1475">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1475">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1476">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1476">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="da263-1477">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1477">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1478">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1478">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="da263-1479">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1479">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1480">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1480">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="da263-1481">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1481">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1482">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1482">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="da263-1483">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1483">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1484">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1484">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="da263-1485">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1485">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1486">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1486">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="da263-1487">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1487">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1488">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1488">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="da263-1489">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1489">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1490">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1490">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="da263-1491">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1491">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1492">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1492">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="da263-1493">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1493">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1494">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1494">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="da263-1495">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1495">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1496">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1496">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="da263-1497">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1497">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1498">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1498">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="da263-1499">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1499">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1500">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1500">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="da263-1501">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1501">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1502">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1502">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="da263-1503">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1503">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1504">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1504">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="da263-1505">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1505">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1506">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1506">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="da263-1507">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1507">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1508">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1508">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="da263-1509">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1509">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1510">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1510">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="da263-1511">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1511">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1512">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1512">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="da263-1513">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1513">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1514">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1514">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="da263-1515">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1515">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1516">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1516">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="da263-1517">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1517">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1518">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1518">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="da263-1519">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1519">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1520">関数に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="da263-1520">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="da263-1521">マクロの実行または関数の呼び出しを行います。</span><span class="sxs-lookup"><span data-stu-id="da263-1521">Runs a macro or calls a function.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-1522">このメソッドの引数では、名前を使用できません。</span><span class="sxs-lookup"><span data-stu-id="da263-1522">You cannot use named arguments with this method.</span></span> <span data-ttu-id="da263-1523">引数には、位置のパスで必ず指定してください。</span><span class="sxs-lookup"><span data-stu-id="da263-1523">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="da263-1524"><b>Run</b> メソッドは、呼び出し先マクロが返す内容を返します。 </span><span class="sxs-lookup"><span data-stu-id="da263-1524">The <b>Run</b> method returns whatever the called macro returns.</span></span> <span data-ttu-id="da263-1525">マクロに引数として渡されたオブジェクトは、(プロパティをオブジェクトに適用することによって) 値 <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> に変換されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1525">Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object).</span></span> <span data-ttu-id="da263-1526">そのため、 <b>Run</b> メソッドを使用する場合は、マクロにオブジェクトを引数として渡すことはできません。</span><span class="sxs-lookup"><span data-stu-id="da263-1526">This means that you cannot pass objects to macros by using the <b>Run</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="da263-1527">指定されたブックへの変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="da263-1527">Saves changes to the specified workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1528">ブック ファイルを開く場合は、このメソッドを使用 <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1528">To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="da263-1529">ブックをディスクに書き込みせずに保存済みとしてマークするには、そのプロパティを <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> <b>True</b>に設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1529">To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</span></span></para>
          <para> </para>
          <para><span data-ttu-id="da263-1530">初めてブックを保存する場合は、この <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> メソッドを使用してファイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1530">The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="da263-1531">次の使用例は、作業中のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="da263-1531">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="da263-1532">次の使用例は、開かれているすべてのブックを保存して Excel を終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1532">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="da263-1533">次の使用例は、作業中のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="da263-1533">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="da263-1534">次の使用例は、開かれているすべてのブックを保存して Excel を終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1534">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
        <example><para><span data-ttu-id="da263-1535">次の使用例は、作業中のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="da263-1535">This example saves the active workbook.</span></span></para>
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
          <para><span data-ttu-id="da263-1536">次の使用例は、開かれているすべてのブックを保存して Excel を終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-1536">This example saves all open workbooks and then closes Microsoft Excel.</span></span></para>
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1537">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="da263-1537">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary><span data-ttu-id="da263-1538">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="da263-1538">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1539">画面の更新が有効の場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1539"><b>True</b> if screen updating is turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1540">画面の更新をオフにし、コードを高速化します。</span><span class="sxs-lookup"><span data-stu-id="da263-1540">Turn screen updating off to speed up your code.</span></span> <span data-ttu-id="da263-1541">コードの動作を確認できないが、実行速度が速くなる。</span><span class="sxs-lookup"><span data-stu-id="da263-1541">You won't be able to see what the code is doing, but it will run faster.</span></span></para>
          <para><span data-ttu-id="da263-1542">コードが終了したら <b>、ScreenUpdating</b> プロパティを <b>True</b> に戻してください。</span><span class="sxs-lookup"><span data-stu-id="da263-1542">Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1543">アクティブ ウィンドウで選択されているオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1543">Returns the selected object in the active window.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1544">返されるオブジェクトの種類は、現在の選択範囲によって異なります (たとえば、セルが選択されている場合、このプロパティはオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します)。</span><span class="sxs-lookup"><span data-stu-id="da263-1544">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span></span> <span data-ttu-id="da263-1545">何も選択していないとき、<b>Selection</b> プロパティは <b>Nothing</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1545">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys"><span data-ttu-id="da263-1546">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1546">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1547">アプリケーションにテキストとして送信するキーまたはキーの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="da263-1547">The key or key combination you want to send to the application as text.</span></span></param>
        <param name="Wait"><span data-ttu-id="da263-1548">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1548">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1549"><b>True</b> にすると、キーが処理されてから、マクロに制御が戻ります。</span><span class="sxs-lookup"><span data-stu-id="da263-1549"><b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span></span> <span data-ttu-id="da263-1550"><b>False</b> にすると (または省略した場合)、キーが処理されるのを待つことなくマクロの実行が続行されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1550"><b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span></span></param>
        <summary><span data-ttu-id="da263-1551">アクティブなアプリケーションにキーボード操作を送信します。</span><span class="sxs-lookup"><span data-stu-id="da263-1551">Sends keystrokes to the active application.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-p390">SendKeys メソッドは、キー コードをキー バッファーに入れます。そのため、キー コードを使うメソッドを呼び出す前に、SendKeys メソッドを呼び出さなくてはならない場合があります。たとえば、パスワードをダイアログ ボックスに送るときには、ダイアログ ボックスを表示する前に <b>SendKeys</b> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-p390">This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</span></span></para>
          <para><span data-ttu-id="da263-1555">引数 <paramref name="Keys" /> には、任意の 1 つのキーまたは任意のキーを Alt、Ctrl、または Shift (またはこれらのキーの任意の組み合わせ) と組み合わせて指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1555">The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="da263-1556">各キーは、1 つ以上の文字 (文字 a の場合は "a"、ENTER キーの場合は "{ENTER}") で表されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1556">Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</span></span></para>
          <para><span data-ttu-id="da263-p392">Enter キーや Tab キーのように、押しても画面に文字が表示されないキーを指定するときは、次に示すコードを使います。各コードは、キーボードの 1 つのキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-p392">To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1559">BackSpace</span><span class="sxs-lookup"><span data-stu-id="da263-1559">BACKSPACE</span></span></term>
              <description><span data-ttu-id="da263-1560">{BACKSPACE} または {BS}</span><span class="sxs-lookup"><span data-stu-id="da263-1560">{BACKSPACE} or {BS}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1561">Break</span><span class="sxs-lookup"><span data-stu-id="da263-1561">BREAK</span></span></term>
              <description><span data-ttu-id="da263-1562">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="da263-1562">{BREAK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1563">CapsLock</span><span class="sxs-lookup"><span data-stu-id="da263-1563">CAPS LOCK</span></span></term>
              <description><span data-ttu-id="da263-1564">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1564">{CAPSLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1565">Clear</span><span class="sxs-lookup"><span data-stu-id="da263-1565">CLEAR</span></span></term>
              <description><span data-ttu-id="da263-1566">{CLEAR}</span><span class="sxs-lookup"><span data-stu-id="da263-1566">{CLEAR}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1567">Delete または Del</span><span class="sxs-lookup"><span data-stu-id="da263-1567">DELETE or DEL</span></span></term>
              <description><span data-ttu-id="da263-1568">{DELETE} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="da263-1568">{DELETE} or {DEL}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1569">↓</span><span class="sxs-lookup"><span data-stu-id="da263-1569">DOWN ARROW</span></span></term>
              <description><span data-ttu-id="da263-1570">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="da263-1570">{DOWN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1571">終了</span><span class="sxs-lookup"><span data-stu-id="da263-1571">END</span></span></term>
              <description><span data-ttu-id="da263-1572">{END}</span><span class="sxs-lookup"><span data-stu-id="da263-1572">{END}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1573">Enter</span><span class="sxs-lookup"><span data-stu-id="da263-1573">ENTER</span></span></term>
              <description><span data-ttu-id="da263-1574">~ (チルダ)</span><span class="sxs-lookup"><span data-stu-id="da263-1574">~ (tilde)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1575">Enter (テンキー)</span><span class="sxs-lookup"><span data-stu-id="da263-1575">ENTER (numeric keypad)</span></span></term>
              <description><span data-ttu-id="da263-1576">{ENTER}</span><span class="sxs-lookup"><span data-stu-id="da263-1576">{ENTER}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1577">Esc</span><span class="sxs-lookup"><span data-stu-id="da263-1577">ESC</span></span></term>
              <description><span data-ttu-id="da263-1578">{ESCAPE} または {ESC}</span><span class="sxs-lookup"><span data-stu-id="da263-1578">{ESCAPE} or {ESC}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1579">F1 ～ F15</span><span class="sxs-lookup"><span data-stu-id="da263-1579">F1 through F15</span></span></term>
              <description><span data-ttu-id="da263-1580">{F1} ~ {F15}</span><span class="sxs-lookup"><span data-stu-id="da263-1580">{F1} through {F15}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1581">HELP</span><span class="sxs-lookup"><span data-stu-id="da263-1581">HELP</span></span></term>
              <description><span data-ttu-id="da263-1582">{HELP}</span><span class="sxs-lookup"><span data-stu-id="da263-1582">{HELP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1583">ホーム</span><span class="sxs-lookup"><span data-stu-id="da263-1583">HOME</span></span></term>
              <description><span data-ttu-id="da263-1584">{HOME}</span><span class="sxs-lookup"><span data-stu-id="da263-1584">{HOME}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1585">Ins</span><span class="sxs-lookup"><span data-stu-id="da263-1585">INS</span></span></term>
              <description><span data-ttu-id="da263-1586">{INSERT}</span><span class="sxs-lookup"><span data-stu-id="da263-1586">{INSERT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1587">←</span><span class="sxs-lookup"><span data-stu-id="da263-1587">LEFT ARROW</span></span></term>
              <description><span data-ttu-id="da263-1588">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="da263-1588">{LEFT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1589">NumLock</span><span class="sxs-lookup"><span data-stu-id="da263-1589">NUM LOCK</span></span></term>
              <description><span data-ttu-id="da263-1590">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1590">{NUMLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1591">PageDown</span><span class="sxs-lookup"><span data-stu-id="da263-1591">PAGE DOWN</span></span></term>
              <description><span data-ttu-id="da263-1592">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="da263-1592">{PGDN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1593">PageUp</span><span class="sxs-lookup"><span data-stu-id="da263-1593">PAGE UP</span></span></term>
              <description><span data-ttu-id="da263-1594">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="da263-1594">{PGUP}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1595">Return</span><span class="sxs-lookup"><span data-stu-id="da263-1595">RETURN</span></span></term>
              <description><span data-ttu-id="da263-1596">{RETURN}</span><span class="sxs-lookup"><span data-stu-id="da263-1596">{RETURN}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1597">→</span><span class="sxs-lookup"><span data-stu-id="da263-1597">RIGHT ARROW</span></span></term>
              <description><span data-ttu-id="da263-1598">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="da263-1598">{RIGHT}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1599">ScrollLock</span><span class="sxs-lookup"><span data-stu-id="da263-1599">SCROLL LOCK</span></span></term>
              <description><span data-ttu-id="da263-1600">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="da263-1600">{SCROLLLOCK}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1601">Tab</span><span class="sxs-lookup"><span data-stu-id="da263-1601">TAB</span></span></term>
              <description><span data-ttu-id="da263-1602">{TAB}</span><span class="sxs-lookup"><span data-stu-id="da263-1602">{TAB}</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1603">↑</span><span class="sxs-lookup"><span data-stu-id="da263-1603">UP ARROW</span></span></term>
              <description><span data-ttu-id="da263-1604">{UP}</span><span class="sxs-lookup"><span data-stu-id="da263-1604">{UP}</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="da263-p393">任意のキーを Alt キー、Ctrl キー、Shift キーのいずれか 1 つまたは複数と組み合わせて指定できます。任意のキーをほかのキーと組み合わせるときは、次に示すコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-p393">You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="da263-1607">SHIFT</span><span class="sxs-lookup"><span data-stu-id="da263-1607">SHIFT</span></span></term>
              <description><span data-ttu-id="da263-1608">+ (正符号)</span><span class="sxs-lookup"><span data-stu-id="da263-1608">+ (plus sign)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1609">Ctrl</span><span class="sxs-lookup"><span data-stu-id="da263-1609">CTRL</span></span></term>
              <description><span data-ttu-id="da263-1610">^ (キャレット)</span><span class="sxs-lookup"><span data-stu-id="da263-1610">^ (caret)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="da263-1611">Alt</span><span class="sxs-lookup"><span data-stu-id="da263-1611">ALT</span></span></term>
              <description><span data-ttu-id="da263-1612">% (パーセント記号)</span><span class="sxs-lookup"><span data-stu-id="da263-1612">% (percent sign)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName"><span data-ttu-id="da263-1613">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1613">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1614">カスタムオートフォーマットの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1614">Specifies the name of a custom autoformat.</span></span> <span data-ttu-id="da263-1615">この名前には、カスタムオートフォーマットに名前を付ける文字列を指定するか、組み込みのグラフ テンプレートを指定する特別な定数 <b>xlBuiltIn</b> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1615">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span></span></param>
        <param name="Gallery"><span data-ttu-id="da263-1616">省略可能なオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da263-1616">Optional Object.</span></span> <span data-ttu-id="da263-1617">ギャラリーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1617">Specifies the name of a gallery.</span></span></param>
        <summary><span data-ttu-id="da263-1618">新しいグラフを作成するときに使用するグラフ テンプレートの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1618">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl"><span data-ttu-id="da263-1619">チェックするサイトの URL を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1619">The URL of site to check.</span></span></param>
        <summary><span data-ttu-id="da263-1620">指定した URL のサイトで実行されている SharePoint Foundation インスタンスのバージョン番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1620">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span></span></summary>
        <returns><span data-ttu-id="da263-1621"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="da263-1621"><b>Integer</b></span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1622">アクティブなブック <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> のすべてのシートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1622">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1623">新しいブックに自動的に挿入するシート数を設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1623">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="da263-1624">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1624">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1625">グラフにグラフのヒント名が表示される場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1625"><b>True</b> if charts show chart tip names.</span></span> <span data-ttu-id="da263-1626">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1626">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1627">グラフがグラフのヒントの値を表示する場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1627"><b>True</b> if charts show chart tip values.</span></span> <span data-ttu-id="da263-1628">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1628">The default value is <b>True</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1629">取得または <b>設定するブール</b> 値 をリボンに [開発] タブが表示されるかどうかを表します。</span><span class="sxs-lookup"><span data-stu-id="da263-1629">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span></span> <span data-ttu-id="da263-1630">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1630">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-1631"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-1631"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-1632">このプロパティは、[Excel のオプション] ダイアログ ボックスの [リボン] チェック ボックスの [開発時に表示] タブに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-1632">This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1633">ブール値 を表<b></b>すユーザーがブック ウィンドウで右クリックするとミニ ツールバーを表示するかどうかを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1633">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span></span> <span data-ttu-id="da263-1634">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1634">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-1635"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-1635"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1636">選択時にクイック分析のコンテキスト ユーザー インターフェイスを表示するかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="da263-1636">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span></span> <span data-ttu-id="da263-1637"><b>TRUE</b> にすると、クイック分析ボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1637"><b>TRUE</b> means the Quick Analysis button will show.</span></span> <span data-ttu-id="da263-1638">[ファイル] メニュー、[オプション <b>]、Excel</b>の [オプション]、および [全般] タブにある [選択項目にクイック分析オプションを表示する] チェック ボックスに対応します。値の設定および設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1638">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span></span> <span data-ttu-id="da263-1639"><b>ブール</b> 値 ( C# では<b>ブール</b> 値)。</span><span class="sxs-lookup"><span data-stu-id="da263-1639"><b>Boolean</b> (<b>bool</b> in C#).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1640">ユーザーがテキストを選択するときにミニ ツールバーが表示されるかどうかを表すブール型 <b>(Boolean)</b> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1640">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span></span> <span data-ttu-id="da263-1641">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1641">Read/write.</span></span></summary>
        <value><span data-ttu-id="da263-1642"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-1642"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="da263-1643">[Excel のオプション] ダイアログ ボックスの [選択時にミニバーを表示する] チェック ボックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-1643">Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1644">Microsoft Excel <b>アプリケーションの</b> [新しいブック] 作業ウィンドウが表示される場合は True (既定値) を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1644">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1645">ヒントが有効になっている場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1645"><b>True</b> if ToolTips are turned on.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1646">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="da263-1646">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1647">アプリケーションに現在読み込まれている色スタイルのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-1647">Gets the set of color styles that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="da263-1648">アプリケーションに現在読み込まれている色スタイルのセット。</span><span class="sxs-lookup"><span data-stu-id="da263-1648">The set of color styles that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1649">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-1649">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1650">アプリケーションに現在読み込まれている SmartArt レイアウトのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-1650">Gets the set of SmartArt layouts that are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="da263-1651">アプリケーションに現在読み込まれている SmartArt レイアウトのセット。</span><span class="sxs-lookup"><span data-stu-id="da263-1651">The set of SmartArt layouts that are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1652">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-1652">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1653">アプリケーションに現在読み込まれている SmartArt クイック スタイルのセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="da263-1653">Gets the set of SmartArt quick styles which are currently loaded in the application.</span></span></summary>
        <value><span data-ttu-id="da263-1654">アプリケーションに現在読み込まれている SmartArt クイック スタイルのセット。</span><span class="sxs-lookup"><span data-stu-id="da263-1654">The set of SmartArt quick styles which are currently loaded in the application.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1655">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da263-1655">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1656">アプリケーションの <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1656">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1657">オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1657">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1658">アプリケーションの <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> スペル チェックオプションを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1658">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1659">標準フォントの名前を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1659">Returns or sets the name of the standard font.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1660">このプロパティで標準フォントを変更した場合、Excel を再起動するまでは変更が反映されません。</span><span class="sxs-lookup"><span data-stu-id="da263-1660">If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1661">標準フォント サイズをポイント数で設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1661">Returns or sets the standard font size, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1662">このプロパティで標準フォント サイズを変更した場合、Excel を再起動するまでは変更が反映されません。</span><span class="sxs-lookup"><span data-stu-id="da263-1662">If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1663">最後の区切り記号を除くスタートアップ フォルダーの完全なパスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1663">Returns the complete path of the startup folder excluding the final separator.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1664">ステータス バーのテキストを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1664">Returns or sets the text in the status bar.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p402">Excel 側でステータス バーを制御しているとき、このプロパティは <b>False</b> を返します。ステータス バーの文字列を既定値に戻すには、プロパティに <b>False</b> を設定します。ステータス バーが非表示の状態でも、この設定によって文字列は既定値に戻ります。</span><span class="sxs-lookup"><span data-stu-id="da263-p402">This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary><span data-ttu-id="da263-1667">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1667">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1668">テンプレートが保存されているローカル パスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1668">Returns the local path where templates are stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1669">ユーザー定義関数が呼び出されているセルをオブジェクトとして返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1669">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p403">ユーザー定義関数の内部では、ユーザーは <b>Range</b> オブジェクトのプロパティまたはメソッドにアクセスしないでください。ユーザーは、<b>Range</b> オブジェクトを後で使用するためにキャッシュし、再計算が終了したときに追加の操作を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="da263-p403">Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function. Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1672">現在のマクロ <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> コードが実行されているブックを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1672">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1673">このプロパティを使用して、マクロ コードを含むブックを参照します。</span><span class="sxs-lookup"><span data-stu-id="da263-1673">Use this property to refer to the workbook that contains your macro code.</span></span> <span data-ttu-id="da263-1674"><b>ThisWorkbook</b> は、アドイン自体からアドイン ブックを参照する唯一の方法です。</span><span class="sxs-lookup"><span data-stu-id="da263-1674"><b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself.</span></span> <span data-ttu-id="da263-1675"><b>ActiveWorkbook</b> プロパティはアドイン ブックではなく、アドインを呼び出しているブックを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1675">The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in.</span></span> <span data-ttu-id="da263-1676">アドインの作成時にブック名が変更された可能性が高いので、プロパティが <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> 失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1676">The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in.</span></span> <span data-ttu-id="da263-1677"><b>ThisWorkbook</b> は、常にコードが実行されているブックを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1677"><b>ThisWorkbook</b> always returns the workbook in which the code is running.</span></span></para>
          <para><span data-ttu-id="da263-1678">このプロパティは、Excel 内からのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da263-1678">This property can be used only from inside Excel.</span></span> <span data-ttu-id="da263-1679">他のアプリケーションから、このプロパティを使用してブックにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="da263-1679">You cannot use it to access a workbook from any other application.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1680">文字列 として桁区切り記号に使用する文字を取得または設定 <b>します</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1680">Sets or returns the character used for the thousands separator as a <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1681">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1681">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1682">画面の上端からメインの Excel ウィンドウの上端までの距離をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1682">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span></span> <span data-ttu-id="da263-1683">ウィンドウが最小化されている場合、このプロパティは画面上でのウィンドウのアイコンの位置を表します。</span><span class="sxs-lookup"><span data-stu-id="da263-1683">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1684">Microsoft Excel メニューまたはヘルプのキー (通常は "/") を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1684">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1685">Microsoft Excel のメニュー キーが押された場合に実行されるアクションを設定または返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1685">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span></span> <span data-ttu-id="da263-1686">使用できる値は <b>、xlExcelMenus または</b> <b>xlLotusHelp です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1686">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1687">Lotus 1-2-3 形式のキー操作がアクティブである場合は <b>True</b> を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1687"><b>True</b> if transition navigation keys are active.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1688">内部使用のため予約済みです。</span><span class="sxs-lookup"><span data-stu-id="da263-1688">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da263-1689">ユーザー インターフェイスの最後の操作を取り消します。</span><span class="sxs-lookup"><span data-stu-id="da263-1689">Cancels the last user interface action.</span></span></summary>
        <remarks><para><span data-ttu-id="da263-1690">このメソッドは、プロシージャを実行する前にユーザーが実行した最後の操作のみを元に戻します。</span><span class="sxs-lookup"><span data-stu-id="da263-1690">This method undoes only the last action taken by the user before running the procedure.</span></span> <span data-ttu-id="da263-1691">プロシージャの最初の行である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1691">It must be the first line in the procedure.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="da263-1692">必須 <b>の範囲です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1692">Required <b>Range</b>.</span></span> <span data-ttu-id="da263-1693">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1693">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg2"><span data-ttu-id="da263-1694">必須 <b>の範囲です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1694">Required <b>Range</b>.</span></span> <span data-ttu-id="da263-1695">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1695">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg3"><span data-ttu-id="da263-1696">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1696">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1697">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1697">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg4"><span data-ttu-id="da263-1698">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1698">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1699">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1699">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg5"><span data-ttu-id="da263-1700">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1700">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1701">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1701">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg6"><span data-ttu-id="da263-1702">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1702">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1703">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1703">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg7"><span data-ttu-id="da263-1704">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1704">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1705">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1705">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg8"><span data-ttu-id="da263-1706">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1706">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1707">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1707">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg9"><span data-ttu-id="da263-1708">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1708">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1709">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1709">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg10"><span data-ttu-id="da263-1710">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1710">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1711">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1711">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg11"><span data-ttu-id="da263-1712">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1712">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1713">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1713">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg12"><span data-ttu-id="da263-1714">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1714">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1715">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1715">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg13"><span data-ttu-id="da263-1716">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1716">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1717">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1717">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg14"><span data-ttu-id="da263-1718">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1718">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1719">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1719">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg15"><span data-ttu-id="da263-1720">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1720">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1721">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1721">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg16"><span data-ttu-id="da263-1722">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1722">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1723">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1723">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg17"><span data-ttu-id="da263-1724">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1724">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1725">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1725">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg18"><span data-ttu-id="da263-1726">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1726">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1727">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1727">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg19"><span data-ttu-id="da263-1728">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1728">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1729">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1729">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg20"><span data-ttu-id="da263-1730">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1730">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1731">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1731">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg21"><span data-ttu-id="da263-1732">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1732">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1733">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1733">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg22"><span data-ttu-id="da263-1734">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1734">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1735">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1735">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg23"><span data-ttu-id="da263-1736">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1736">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1737">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1737">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg24"><span data-ttu-id="da263-1738">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1738">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1739">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1739">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg25"><span data-ttu-id="da263-1740">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1740">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1741">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1741">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg26"><span data-ttu-id="da263-1742">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1742">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1743">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1743">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg27"><span data-ttu-id="da263-1744">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1744">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1745">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1745">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg28"><span data-ttu-id="da263-1746">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1746">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1747">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1747">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg29"><span data-ttu-id="da263-1748">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1748">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1749">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1749">At least two <b>Range</b> objects must be specified.</span></span></param>
        <param name="Arg30"><span data-ttu-id="da263-1750">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1750">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1751">複数の <b>Range</b> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1751">At least two <b>Range</b> objects must be specified.</span></span></param>
        <summary><span data-ttu-id="da263-1752">2 つ以上のセル範囲の集合を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1752">Returns the union of two or more ranges.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1753">ウィンドウがアプリケーション ウィンドウ領域で占有できるスペースの最大の高さをポイント単位で返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1753">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1754">アプリケーション ウィンドウ領域内でウィンドウが占有できる領域の幅の最大値をポイント単位で返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1754">Returns the maximum width of the space that a window can occupy in the application window area in points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1755">XLL アドインのユーザー定義関数を計算クラスターで実行できるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1755">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span></span></summary>
        <value><span data-ttu-id="da263-1756">Excel が XLL アドインのユーザー定義関数を計算クラスターで実行できる場合は<b>true。</b>それ以外の場合、 <b>false です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1756"><b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span></span></value>
        <remarks><para><span data-ttu-id="da263-1757">値の取得と設定が可能です。</span><span class="sxs-lookup"><span data-stu-id="da263-1757">Read/write.</span></span></para>
          <para><span data-ttu-id="da263-1758">Excel が XLL アドインのユーザー定義関数を計算クラスターで実行できる場合は
            <b>true。</b>それ以外の場合<b>は false です</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1758">
            <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>.</span></span> <span data-ttu-id="da263-1759">このプロパティの設定は、[Excel のオプション] ダイアログ ボックスの [詳細設定] カテゴリの [数式] の [計算クラスターでユーザー定義 XLL 関数を実行できる] チェック ボックスに <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 対応します。</span><span class="sxs-lookup"><span data-stu-id="da263-1759">The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</span></span></para>
          <para><span data-ttu-id="da263-1760">
            <b>メモ</b>: このプロパティを <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> 有効にするには、高性能コンピューティング (HPC) クラスター コネクタをインストールする必要があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1760">
            <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector.</span></span> <span data-ttu-id="da263-1761">クラスター コネクタを使用すると、クラスター セーフな XLL 関数をリモートから HPC クラスターで実行し、性能を高めることができます。</span><span class="sxs-lookup"><span data-stu-id="da263-1761">A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</span></span></para>
          <para><span data-ttu-id="da263-1762">プロパティを設定 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> した後、プロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> を使用して、使用する HPC クラスター コネクタを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1762">After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1763">ブックに割 <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> り当てられているオブジェクトを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1763">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1764"><b>アプリケーション</b> が表示されている場合、またはアプリケーションがユーザーによって作成または開始された場合は True。</span><span class="sxs-lookup"><span data-stu-id="da263-1764"><b>True</b> if the application is visible or if it was created or started by the user.</span></span> <span data-ttu-id="da263-1765"><b>False</b> を指定すると <b>、CreateObject</b> 関数または <b>GetObject</b> 関数を使用してプログラムでアプリケーションを作成または開始した場合、アプリケーションは非表示になります。</span><span class="sxs-lookup"><span data-stu-id="da263-1765"><b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-p442">オブジェクトに対し、<b>UserControl</b> プロパティが <b>False</b> のときに、オブジェクトの最後のプログラム参照が解放される場合、このオブジェクトも解放されます。このプロパティに <b>False</b> を設定している場合、セッションの最後のオブジェクトが解放され、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="da263-p442">When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released. If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1768">COM アドインがインストールされているユーザーのコンピューター上の場所へのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1768">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1769">現在のユーザー名を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1769">Returns or sets the name of the current user.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1770"><b>True</b> (既定値) を指定すると、Excel のシステム区切り記号が有効になります。</span><span class="sxs-lookup"><span data-stu-id="da263-1770"><b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1771">"Microsoft Excel" を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1771">Returns "Microsoft Excel".</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1772">Visual Basic エディターを表す <b>VBE</b> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1772">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1773">Microsoft Excel のバージョン番号を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1773">Returns the Microsoft Excel version number.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1774">オブジェクトを表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1774">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile"><span data-ttu-id="da263-1775">省略 <b>可能なオブジェクト</b>です。</span><span class="sxs-lookup"><span data-stu-id="da263-1775">Optional <b>Object</b>.</span></span> <span data-ttu-id="da263-1776"><b>True</b> を指定すると、その関数は自動再計算関数になります。</span><span class="sxs-lookup"><span data-stu-id="da263-1776"><b>True</b> to mark the function as volatile.</span></span> <span data-ttu-id="da263-1777"><b>False</b> を指定すると、非自動再計算関数となります。</span><span class="sxs-lookup"><span data-stu-id="da263-1777"><b>False</b> to mark the function as nonvolatile.</span></span> <span data-ttu-id="da263-1778">既定値は <b>True</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1778">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="da263-p444">ユーザー定義関数を自動再計算関数にします。自動再計算関数は、ワークシートのいずれかのセルで計算が行われるたびに再計算を行います。これに対して非自動再計算関数では、入力した変数の値が変わったときにだけ再計算を行います。このメソッドは、ワークシートのセルを計算するユーザー定義関数の内部で使わなければ効果がありません。</span><span class="sxs-lookup"><span data-stu-id="da263-p444">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time"><span data-ttu-id="da263-1783">Required <b>Object</b>.</span><span class="sxs-lookup"><span data-stu-id="da263-1783">Required <b>Object</b>.</span></span> <span data-ttu-id="da263-1784">マクロを Excel の日付形式で再開する時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1784">The time at which you want the macro to resume in Microsoft Excel date format.</span></span></param>
        <summary><span data-ttu-id="da263-1785">実行中のマクロを指定の時刻まで停止します。</span><span class="sxs-lookup"><span data-stu-id="da263-1785">Pauses a running macro until a specified time.</span></span> <span data-ttu-id="da263-1786">指定の時間に達した場合、<b>True</b> を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1786">Returns <b>True</b> if the specified time has arrived.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="da263-1787">
            <b>重要</b>: <b>Wait</b> メソッドは、すべての Microsoft Excel アクティビティを中断し <b>、Wait</b> が有効な間、コンピューターで他の操作を実行することが妨げる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da263-1787">
            <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect.</span></span> <span data-ttu-id="da263-1788">ただし、印刷や再計算などのバックグラウンド処理は続行されます。</span><span class="sxs-lookup"><span data-stu-id="da263-1788">However, background processes such as printing and recalculation continue.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1789">このプロパティを True に設定すると、開発者が既存の関数名を使用して新しい関数を作成しようとすると警告 <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> が発生します。 <b></b></span><span class="sxs-lookup"><span data-stu-id="da263-1789">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span></span> <span data-ttu-id="da263-1790">読み取り/書き込みが可能な <b>Boolean</b> です。</span><span class="sxs-lookup"><span data-stu-id="da263-1790">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="da263-1791"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="da263-1791"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1792">ワークシートの <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> 再計算時に追跡される範囲を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1792">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1793">アプリケーション ウィンドウの左側からその右端までの距離をポイント数で指定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1793">The distance, in points, from the left edge of the application window to its right edge.</span></span> <span data-ttu-id="da263-1794">ウィンドウが最小化されている場合、このプロパティは読み取り専用で、ウィンドウ アイコンの幅を返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1794">If the window is minimized, this property is read-only and returns the width of the window icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1795">すべてのブック <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> のすべてのウィンドウを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1796">このプロパティは、表示および非表示の両方のウィンドウのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1796">This property returns a collection of both visible and hidden windows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1797">コンピューターが Microsoft Windows for Pen Computing で実行している場合は <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="da263-1797"><b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1798">ウィンドウの状態を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="da263-1798">Returns or sets the state of the window.</span></span> <span data-ttu-id="da263-1799">読み取り/書き込み <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" /> 。</span><span class="sxs-lookup"><span data-stu-id="da263-1799">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1800">
            <b>使用できる定数</b> は、次に示す <b>XlWindowState</b> 定数です。</span><span class="sxs-lookup"><span data-stu-id="da263-1800">
            <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</span></span></para>
          <para><span data-ttu-id="da263-1801">
            <b>xlMaximized</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1801">
            <b>xlMaximized</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1802">
            <b>xlNormal</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1802">
            <b>xlNormal</b>
          </span></span></para>
          <para><span data-ttu-id="da263-1803">
            <b>xlMinimized</b>
          </span><span class="sxs-lookup"><span data-stu-id="da263-1803">
            <b>xlMinimized</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1804">開いている <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> すべてのブックを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1804">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1805"><b>Workbooks</b> プロパティで返されるコレクションに、開いているアドイン (一種の非表示のブック) は含まれません。</span><span class="sxs-lookup"><span data-stu-id="da263-1805">The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook.</span></span> <span data-ttu-id="da263-1806">ただしファイル名を指定すると、1 つの開いているアドインを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="da263-1806">You can, however, return a single open add-in if you know the file name.</span></span> <span data-ttu-id="da263-1807">たとえば、Workbooks("Oscar.xla") は、"Oscar.xla" という名前の開いているアドインを Workbook オブジェクトとして <b>返</b> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1807">For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1808">オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> します。</span><span class="sxs-lookup"><span data-stu-id="da263-1808">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da263-1809">アクティブブック <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 内のすべてのワークシートを表すコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="da263-1809">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="da263-1810">このプロパティはマクロ シートを返します。これらのシート <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> を取得するには <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> 、プロパティまたはプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="da263-1810">This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
