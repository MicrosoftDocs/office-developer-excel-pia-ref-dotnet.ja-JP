<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587788" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bd89b-101">これは、対応する COM オブジェクトと相互運用するためのマネージ コードで必要とされる COM コクラス内のプライマリ インターフェイスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd89b-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="bd89b-102">メソッドを使用する COM オブジェクトのイベントと同じ名前を共有する場合にのみ、この主要なインタ フェースを使用します。メソッドを呼び出すには、このインターフェイスにこの例では、キャストし、イベントに接続するための最新のイベント インターフェイスにキャストします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd89b-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="bd89b-103">それ以外の場合、メソッド、プロパティ、および COM オブジェクトのイベントにアクセスする COM コクラスから派生した .NET インターフェイスを使用します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd89b-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="bd89b-104">COM オブジェクトの詳細についてを参照してください<see cref="T:Microsoft.Office.Interop.Excel.Application" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd89b-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-105">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-106">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-107">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-108">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-109">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-110">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-110">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="bd89b-111">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span>
          </span>
          <span data-ttu-id="bd89b-112">アクティブにする Microsoft アプリケーションを指定します。<b>XlMSApplication</b>には、これらの<b>XlMSApplication</b>定数のいずれかを指定できます:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p103">Microsoft のアプリケーションをアクティブにします。実行中のアプリケーションに対して適用されると、そのアプリケーションがアクティブになり、実行中でないアプリケーションに対して適用されると、そのアプリケーションの新しいインスタンスを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-116">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />作業中のウィンドウ (一番上にあるウィンドウ) 内のアクティブ セルを表すオブジェクトまたは指定されたウィンドウです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span>
          </span>
          <span data-ttu-id="bd89b-117">ウィンドウは、ワークシートに表示されない、このプロパティは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-117">If the window isn't displaying a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-118">
            <para>アクティブ セルと選択範囲を区別するのには注意が必要です。アクティブ セルは、現在の選択範囲内の単一のセルです。選択範囲が複数のセルを含めることが 1 つだけアクティブなセルです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-118">
              <para>Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-119">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 、アクティブなグラフ (埋め込みグラフまたはグラフ シート) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="bd89b-120">埋め込みグラフは選択されているまたは、アクティブと見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-120">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="bd89b-121">アクティブなグラフがないときは、このプロパティは<b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-121">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-122">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-122">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-123">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-123">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-124">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-124">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-125">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-125">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-126">アクティブ プリンターの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-126">Returns or sets the name of the active printer.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-127">取得、<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />保護されたビューのアクティブなウィンドウ (一番上にあるウィンドウ) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-127">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-128">A<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" />保護されたビューのアクティブなウィンドウ (一番上にあるウィンドウ) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-128">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-129">
            <para>は、開いているウィンドウの保護されたビューがない場合に null 参照 (Visual Basic では Nothing) を返します。読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-129">
              <para>Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open. Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-130">作業中のブック、または指定されたウィンドウまたはブックのアクティブ シート (一番手前のシート) を表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="bd89b-131">アクティブ シートがない場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-132">
            <para>ブックは、複数のウィンドウに表示されたら場合、によって<b>ActiveSheet</b>プロパティの異なる場合があります別の windows で</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-132">
              <para>If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-133">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Window" /> 、アクティブなウィンドウ (一番上にあるウィンドウ) を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-133">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span>
          </span>
          <span data-ttu-id="bd89b-134">開いているウィンドウがない場合は、 <b>Nothing</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-134">Returns <b>Nothing</b> if there are no windows open.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-135">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> (上部にあるウィンドウ) に、作業中のウィンドウ内のブックを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-135">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span>
          </span>
          <span data-ttu-id="bd89b-136">
            <b>何も</b>ない場合は windows を開くかどうか、情報ウィンドウまたはクリップボード ウィンドウのいずれかがアクティブなウィンドウを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-136">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart">
          <span data-ttu-id="bd89b-137">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-137">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-138">新しいグラフ オート フォーマットが適用されたときに適用される書式を含むグラフです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-138">A chart that contains the format that will be applied when the new chart autoformat is applied.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="bd89b-139">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-139">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-140">オート フォーマットの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-140">The name of the autoformat.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="bd89b-141">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-141">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-142">ユーザー設定のオート フォーマットの説明です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-142">A description of the custom autoformat.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-143">使用可能なグラフ用オートフォーマットの一覧に、ユーザー設定オートフォーマットを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-143">Adds a custom chart autoformat to the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="bd89b-144">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-144">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-145">ソース データを指定するか、文字列の配列として、または<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-145">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </param>
        <param name="ByRow">
          <span data-ttu-id="bd89b-146">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-147">場合にのみ使用される<paramref name="ListArray" />は、 <b>Range</b>オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-147">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="bd89b-148">
            <b>True の</b>範囲内の各行からのカスタム リストを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-148">
              <b>True</b> to create a custom list from each row in the range.</span>
          </span>
          <span data-ttu-id="bd89b-149">
            <b>False を指定</b>範囲内の各列からユーザー設定リストを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-149">
              <b>False</b> to create a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="bd89b-150">この引数を省略するし、範囲内にある列数より行数 (行数と列数が等しい)、Microsoft Excel は、範囲内の各列からユーザー設定リストを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-150">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="bd89b-151">この引数を省略するし、範囲内の行数より列数が、Microsoft Excel は、範囲内の各行からのユーザー設定リストを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-151">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-152">ユーザー設定のオートフィルとユーザー設定の並べ替え順序のいずれか一方、または両方に使うユーザー設定リストを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-152">Adds a custom list for custom autofill and/or custom sort.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-153">
            <para>を既に追加しているリストが存在する場合、このメソッドは何です</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-153">
              <para>If the list you're trying to add already exists, this method does nothing.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-154">返します、<see cref="T:Microsoft.Office.Interop.Excel.AddIns" />すべてのアドインを表すコレクションは、[アドイン] ダイアログ ボックス ([ツール] メニュー) に記載されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-154">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-155">コレクションを取得する<see cref="T:Microsoft.Office.Interop.Excel.AddIns2" />すべてのアドインがインストールされているかどうかに関係なく、Excel で開く] または [使用していることを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-155">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-156">コレクションの<see cref="T:Microsoft.Office.Interop.Excel.AddIns2" />すべてのアドインは、現在利用可能なまたは Excel で開かれていることを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-156">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-157">
            <para>読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-157">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-158">
            <b>True の</b>場合、Microsoft Excel では、ドラッグ アンド ドロップ編集操作中に空白でないセルを上書きする前にメッセージが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-158">
              <b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-159">代替起動フォルダーの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-159">Returns or sets the name of the alternate startup folder.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-160">
            <b>ブール値</b>を表す ClearType を使用して、メニューのリボン、ダイアログ ボックスのテキストのフォントを表示するかどうかを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-160">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span>
          </span>
          <span data-ttu-id="bd89b-161">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-161">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-162">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-162">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-163">
            <para>ClearType の Microsoft Windows の設定を無効にすると、場合でもこのプロパティを<b>True</b>に設定 Windows の設定をオーバーライドしてすべての Microsoft Office アプリケーションで ClearType を使用しています</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-163">
              <para>Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-164">返します、 <see cref="T:Microsoft.Office.Core.AnswerWizard" /> Microsoft Excel のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-164">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-165">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> (ことができますこのプロパティを使用する OLE オートメーション オブジェクトとそのオブジェクトのアプリケーションを取得)、指定したオブジェクトの作成者を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-165">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-166">Microsoft Excel での XML 機能を利用するかどうかを示す<b>ブール</b>値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-166">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-167">
            <para>、XML スプレッドシート形式で、ファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-167">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-168">
            <b>True</b>場合は Microsoft Excel のリンクを持つファイルを開くときにリンクを更新するようユーザーに要求します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-168">
              <b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span>
          </span>
          <span data-ttu-id="bd89b-169">場合は<b>false を指定</b>] ダイアログ ボックスは表示されませんとのリンクが自動的に更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-169">
              <b>False</b> if links are automatically updated with no dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-170">返します、 <see cref="T:Microsoft.Office.Core.IAssistance" /> 、Microsoft Office ヘルプ ビューアーを表す short_Excel2007 のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-170">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span>
          </span>
          <span data-ttu-id="bd89b-171">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-171">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-172">
            <b>IAssistance</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-172">
              <b>IAssistance</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-173">
            <para>
              <b>IAssistance</b>オブジェクトにより、開発者は、カスタム ヘルプと Office ヘルプ ビューアーでの Office と共にインストールされるヘルプを表示します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-173">
              <para>The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-174">返します、 <see cref="T:Microsoft.Office.Core.Assistant" /> Microsoft Excel のオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-174">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-175">返します、 <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> 、Microsoft Excel のオート コレクトを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-175">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-176">
            <b>場合は true。</b>(既定値) を入力するとハイパーリンクは自動的に書式がある場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-176">
              <b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span>
          </span>
          <span data-ttu-id="bd89b-177">
            <b>False</b>場合は、Excel が自動的にフォーマットしないハイパーリンクを入力するとします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-177">
              <b>False</b> if Excel does not automatically format hyperlinks as you type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-178">値を取得または設定、<see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" />プログラムを使用してファイルを開くときに Microsoft Excel のセキュリティ モードを表す定数を使用しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-178">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-179">
            <para>このプロパティは、アプリケーションが起動したときに自動的に<b>msoAutomationSecurityLow</b>に設定されます。したがって、既定の設定に依存するソリューションの分割を避けるため、注意が必要プログラムを使用してファイルを開いた後、このプロパティを<b>msoAutomationSecurityLow</b>にリセットします。また、この必要がありますプロパティ直前と直後にファイルを開くプログラムを使用して悪意を持った攻撃を避けるためにします</para>。
          <para><b>MsoAutomationSecurity</b>には、これらの<b>MsoAutomationSecurity</b>定数のいずれかを指定できます:</para><list type="bullet"><item><description><b>msoAutomationSecurityByUI</b>は、[<b>セキュリティ</b>] ダイアログ ボックスで指定したセキュリティ設定を使用します</description></item>。
            <item><description><b>msoAutomationSecurityForceDisable</b>セキュリティ警告を表示せずにプログラムによって起動されたすべてのファイル内のすべてのマクロを無効にします</description></item>。
            <item><description><b>msoAutomationSecurityLow</b>は、すべてのマクロを有効にします。これは、アプリケーションが起動したときの既定値</description></item></list>。
          <para>設定<see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />を<b>False</b>にはアラートには影響されずがないに影響を与えるセキュリティの警告です。<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />の設定は、セキュリティの警告には適用されません。たとえば、設定した場合、ユーザー<b>変更</b><b>msoAutomationSecurityByUI</b>、 <b>false を指定</b>し、 <b>AutomationSecurity</b>と同じユーザーが中程度のセキュリティ レベルにあるときに、しがありますセキュリティの警告マクロが実行中です。これにより、マクロのセキュリティのファイルを開くときに成功したかどうかに警告が表示され、ファイルを開くエラーをトラップします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-179">
              <para>This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started. Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file. Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</para>
              <para>
                <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityLow</b>  Enables all macros. This is the default value when the application is started.</description>
                </item>
              </list>
              <para>Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings. The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings. For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running. This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-180">
            <b>True の</b>ように入力されているとすぐに、割合は 100 を掛けた値に自動的にセル内のエントリがフォーマットされている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-180">
              <b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-181">返します、<see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" />オブジェクトは、一定の間隔ですべてのファイル形式のバックアップを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-182">
            <para>有効な時間間隔は、1 から 120 までの整数の値</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-182">
              <para>Valid time intervals are whole numbers from 1 to 120.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-183">Microsoft Excel のビルド番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-183">Returns the Microsoft Excel build number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-184">
            <para>をテストするのには通常安全である、<see cref="P:Microsoft.Office.Interop.Excel._Application.Version" />プロパティは、ビルド番号を知る必要がある場合を除いて、</para> 。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-184">
              <para>It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-185">すべての開いているブックを計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-185">Calculates all open workbooks</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-186">
            <b>True の</b>場合、ブックを保存する前に計算がディスクに (場合は、<see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" />プロパティの設定<b>を行います</b>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-186">
              <b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span>
          </span>
          <span data-ttu-id="bd89b-187">変更した場合でも、このプロパティは保持されます、<see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-187">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-188">開かれているすべてのブックに含まれているデータの全計算を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-188">Forces a full calculation of the data in all open workbooks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-189">開いているすべてのワークシートで、データをすべて計算し、依存を再構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-189">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-190">
            <para>の依存関係は、他のセルに依存する数式です。たとえば、数式「= A1」は、セル A1 に依存します。<b>CalculateFullRebuild</b>メソッドは、すべての数式を再入力するのに似ています</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-190">
              <para>Dependencies are the formulas that depend on other cells. For example, the formula "=A1" depends on cell A1. The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-191">OLEDB および OLAP データ ソースへの保留中のすべてのクエリを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-191">Runs all pending queries to OLEDB and OLAP data sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-192">計算モードを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-192">Returns or sets the calculation mode.</span>
          </span>
          <span data-ttu-id="bd89b-193">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-193">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-194">
            <para>OLAP データ ソースの場合、このプロパティのみを返すことができますまたは<b>xlNormal</b>に設定します</para>。
          <para><b>XlCalculation</b>には、これらの<b>XlCalculation</b>定数のいずれかを指定できます:</para><para><b>xlCalculationAutomatic</b></para><para><b>xlCalculationManual</b></para><para><b>xlCalculationSemiautomatic</b></para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-194">
              <para>For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</para>
              <para>
                <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</para>
              <para>
                <b>xlCalculationAutomatic</b>
              </para>
              <para>
                <b>xlCalculationManual</b>
              </para>
              <para>
                <b>xlCalculationSemiautomatic</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-195">取得または設定、<see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" />の計算を実行する場合、Microsoft Excel を中断できるキーを指定する定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-195">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-196">
            <para>
              <b>XlCalculationInterruptKey</b>には、これらの<b>XlCalculationInterruptKey</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlAnyKey</b>
            </para>
            <para>
              <b>xlEscKey</b>
            </para>
            <para>
              <b>xlNoKey</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-196">
              <para>
                <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</para>
              <para>
                <b>xlAnyKey</b>
              </para>
              <para>
                <b>xlEscKey</b>
              </para>
              <para>
                <b>xlNoKey</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-197">返します、<see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" />を Microsoft Excel で実行されている任意の計算のためのアプリケーションの計算状態を示す定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-197">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-198">
            <para>
              <b>XlCalculationState</b>には、これらの<b>XlCalculationState</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlCalculating</b>
            </para>
            <para>
              <b>xlDone</b>
            </para>
            <para>
              <b>xlPending</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-198">
              <para>
                <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</para>
              <para>
                <b>xlCalculating</b>
              </para>
              <para>
                <b>xlDone</b>
              </para>
              <para>
                <b>xlPending</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-199">4 桁の右端には、マイナー バージョン番号、および (左側) には、他の桁の数が返されます Microsoft Excel のメジャー バージョンです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-199">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-200">
            <para>以前のバージョンの Excel でブックを保存し、ブックを完全に再計算されていない場合、このプロパティは 0 を返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-200">
              <para>If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="bd89b-201">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-202">配列のインデックスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-202">An index to the array.</span>
          </span>
          <span data-ttu-id="bd89b-203">プロパティが配列を返す場合にのみ、この引数を指定 (詳細については、「解説」を参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-203">This argument is used only when the property returns an array (for more information, see the Remarks section).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-204">Visual Basic を呼び出した方法についての情報を返します。さらに詳細な情報ついては「備考」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-204">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-205">
            <para>このプロパティは、次の表に示すように、Visual Basic の呼び出し方法に関する情報を返します</para>。
          <list type="table"><item><term>ユーザー定義関数が 1 つのセルに入力された</term><description>A<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトがそのセルを指定する</description></item><item><term>A のユーザー定義関数がセル範囲に配列数式の一部で、</term><description>そのセル範囲を表す<b>Range</b>オブジェクト</description></item><item><term>「Auto_Open、Auto_Close、複数、または最初マクロ</term>の
              <description>テキスト文書の名前</description></item><item><term>いずれかの方法で設定したマクロ、<see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />または<see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />プロパティ</term><description>グラフ オブジェクトの名前識別子またはマクロを適用する (必要な場合) を参照するセル</description></item><item><term>[マクロ] ダイアログ ボックス ([ツール] メニュー)、または上記以外の呼び出し</term><description>、#REF! エラー値</description></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-205">
              <para>This property returns information about how Visual Basic was called, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>A custom function entered in a single cell</term>
                  <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</description>
                </item>
                <item>
                  <term>A custom function that is part of an array formula in a range of cells</term>
                  <description>A <b>Range</b> object specifying that range of cells</description>
                </item>
                <item>
                  <term>An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</term>
                  <description>The name of the document as text</description>
                </item>
                <item>
                  <term>A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</term>
                  <description>The name of the chart object identifier or cell reference (if applicable) to which the macro applies</description>
                </item>
                <item>
                  <term>The Macro dialog box (Tools menu), or any caller not described above</term>
                  <description>The #REF! error value</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-p121">このプロパティは、使用しないでください。サウンド メモは Excel から削除されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p121">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-p122">このプロパティは、使用しないでください。サウンド メモは Excel から削除されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p122">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-210">Microsoft Excel のメイン ウィンドウのタイトル バーに表示される名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-210">The name that appears in the title bar of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="bd89b-211">名前を設定しない場合、または名前を<b>空</b>に設定する場合は、このプロパティは、"Microsoft Excel"を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-211">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-212">
            <b>True の</b>場合、ドラッグ アンド ドロップのセルになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-212">
              <b>True</b> if dragging and dropping cells is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-213">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />作業中のワークシート上のすべてのセルを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span>
          </span>
          <span data-ttu-id="bd89b-214">作業中の文書には、ワークシートがない場合は、このプロパティは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-214">If the active document isn’t a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-215">
            <para>のため、<see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />プロパティは<b>Range</b>オブジェクトの既定のプロパティ、 <b>Cells</b>キーワードの後にすぐに行および列のインデックスを指定することができます。詳細についてを参照してください、<see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />プロパティ</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-215">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters">
          <span data-ttu-id="bd89b-216">
            <b>二重</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-216">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="bd89b-217">変換の対象となる数値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-217">Specifies the centimeter value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-218">センチメートル単位の数値を、ポイント (1 ポイントは、0.35 mm) 単位に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-218">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-219">
            <b>True</b>すべてのグラフの動作を追跡するセル参照を使用する新しく作成されたドキュメントになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-219">
              <b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span>
          </span>
          <span data-ttu-id="bd89b-220">
            <b>ブール値</b>(C# では bool) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-220">
              <b>Boolean</b> (bool in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-221">返します、<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />作業中のブック内のすべてのグラフ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort">
          <span data-ttu-id="bd89b-222">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-222">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-223">
            <b>範囲</b>に対して実行する計算を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-223">Allows recalculation to be performed for a <b>Range</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-224">Excel アプリケーションの再計算を停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-224">Stops recalculation in a Microsoft Excel application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word">
          <span data-ttu-id="bd89b-225">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-225">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-226">チェックする単語。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-226">The word you want to check.</span>
          </span>
        </param>
        <param name="CustomDictionary">
          <span data-ttu-id="bd89b-227">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-228">メイン辞書で単語が見つからない場合に調べるカスタム辞書のファイル名を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-228">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="bd89b-229">この引数を省略すると、現在指定されている辞書が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-229">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="bd89b-230">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-231">
            <b>True</b>をすべて大文字の単語を無視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-231">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="bd89b-232">
            <b>False を指定</b>して、Microsoft Excel チェック単語がすべて大文字であります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-232">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="bd89b-233">この引数を省略した場合は、現在の設定が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-233">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-234">指定された単語のスペルをチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-234">Checks the spelling of a single word.</span>
          </span>
          <span data-ttu-id="bd89b-235">辞書のいずれかの単語が見つかった場合<b>は True</b>を返します。単語が見つからない場合は<b>False</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-235">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="bd89b-236">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-237">返される配列要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-237">The array element to be returned.</span>
          </span>
          <span data-ttu-id="bd89b-238">この引数を省略すると、プロパティは、現在クリップボード上にある形式の全体の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-238">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span>
          </span>
          <span data-ttu-id="bd89b-239">詳細については、「解説」セクションを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-239">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-240">数値の配列としてクリップボードには、現在の形式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-240">Returns the formats that are currently on the Clipboard as an array of numeric values.</span>
          </span>
          <span data-ttu-id="bd89b-241">クリップボードに特定の形式があるかどうかを確認するのには、「解説」に記載されている適切な定数を持つ、配列の各要素を比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-241">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-242">
            <para>このプロパティは、数値の配列を返します。クリップボードに特定の形式があるかどうかを決定するには、次のいずれかで配列の各要素を比較<see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" />定数:</para>
            <para>
              <b>xlClipboardFormatBIFF</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF2</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF3</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF4</b>
            </para>
            <para>
              <b>xlClipboardFormatBinary</b>
            </para>
            <para>
              <b>xlClipboardFormatBitmap</b>
            </para>
            <para>
              <b>xlClipboardFormatCGM</b>
            </para>
            <para>
              <b>xlClipboardFormatCSV</b>
            </para>
            <para>
              <b>xlClipboardFormatDIF</b>
            </para>
            <para>
              <b>xlClipboardFormatDspText</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbeddedObject</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbedSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLink</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSourceDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatMovie</b>
            </para>
            <para>
              <b>xlClipboardFormatNative</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectLink</b>
            </para>
            <para>
              <b>xlClipboardFormatOwnerLink</b>
            </para>
            <para>
              <b>xlClipboardFormatPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatPrintPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatRTF</b>
            </para>
            <para>
              <b>xlClipboardFormatScreenPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardFont</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardScale</b>
            </para>
            <para>
              <b>xlClipboardFormatSYLK</b>
            </para>
            <para>
              <b>xlClipboardFormatTable</b>
            </para>
            <para>
              <b>xlClipboardFormatText</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFace</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFacePICT</b>
            </para>
            <para>
              <b>xlClipboardFormatVALU</b>
            </para>
            <para>
              <b>xlClipboardFormatWK1</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-242">
              <para>This property returns an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</para>
              <para>
                <b>xlClipboardFormatBIFF</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF2</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF3</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF4</b>
              </para>
              <para>
                <b>xlClipboardFormatBinary</b>
              </para>
              <para>
                <b>xlClipboardFormatBitmap</b>
              </para>
              <para>
                <b>xlClipboardFormatCGM</b>
              </para>
              <para>
                <b>xlClipboardFormatCSV</b>
              </para>
              <para>
                <b>xlClipboardFormatDIF</b>
              </para>
              <para>
                <b>xlClipboardFormatDspText</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbeddedObject</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbedSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLink</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSourceDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatMovie</b>
              </para>
              <para>
                <b>xlClipboardFormatNative</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectLink</b>
              </para>
              <para>
                <b>xlClipboardFormatOwnerLink</b>
              </para>
              <para>
                <b>xlClipboardFormatPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatPrintPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatRTF</b>
              </para>
              <para>
                <b>xlClipboardFormatScreenPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardFont</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardScale</b>
              </para>
              <para>
                <b>xlClipboardFormatSYLK</b>
              </para>
              <para>
                <b>xlClipboardFormatTable</b>
              </para>
              <para>
                <b>xlClipboardFormatText</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFace</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFacePICT</b>
              </para>
              <para>
                <b>xlClipboardFormatVALU</b>
              </para>
              <para>
                <b>xlClipboardFormatWK1</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-243">取得または XLL アドインで、ユーザー定義関数を実行するために使用される高パフォーマンス コンピューティング (HPC) クラスター コネクタの名前を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-243">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-244">XLL アドインで、ユーザー定義関数を実行するために使用される高パフォーマンス コンピューティング (HPC) クラスター コネクタの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-244">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-245">
            <para>読み取り/書き込み</para>。
          <para>の設定、<see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />クラスター型」ドロップ ダウン ボックスに数式の下にある [詳細設定] カテゴリで Excel のオプション] ダイアログ ボックスのプロパティが対応しています</para>。
          <para><b>注</b>: を指定するのには、<see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />プロパティが高パフォーマンス コンピューティング (HPC) クラスター コネクタをインストールする必要があります。クラスター コネクタを使用すると、パフォーマンス向上のため、HPC クラスター上でクラスター セーフな XLL 関数をリモートで実行します</para>。
          <para>を指定する前に、<see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />プロパティを使用する必要がある、 <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> XLL アドインで、ユーザー定義関数を実行するのには Microsoft Excel 2010 を有効にするプロパティ</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-245">
              <para>Read/write.</para>
              <para>The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-246">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-246">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-247">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />作業中のワークシート上のすべての列を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span>
          </span>
          <span data-ttu-id="bd89b-248">作業中の文書には、ワークシートがない場合は、 <b>Columns</b>プロパティは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-248">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-249">返します、<see cref="T:Microsoft.Office.Core.COMAddIns" />の Microsoft Excel は、現在インストールされている COM アドインを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-249">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-250">返します、 <see cref="T:Microsoft.Office.Core.CommandBars" /> 、Excel のコマンド バーを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-250">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-251">
            <para>このプロパティは、アプリケーションに使用可能な組み込みおよびカスタム コマンド バーのセットを返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-251">
              <para>This property returns the set of built-in and custom command bars available to the application.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-252">返すまたは、Macintosh 用の Microsoft Excel のコマンドの下線の状態を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-252">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-253">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" />
              <b>XlCommandUnderlines</b>定数のいずれか:</para>
            <para>
              <b>xlCommandUnderlinesOn</b>
            </para>
            <para>
              <b>xlCommandUnderlinesOff</b>
            </para>
            <para>
              <b>xlCommandUnderlinesAutomatic</b>
            </para>
            <para>Microsoft Excel で常にこのプロパティを読み取り、Windows の<b>を返します。xlCommandUnderlinesOn</b>、し、エラーは、このプロパティを<b>xlCommandUnderlinesOn</b>以外の値に設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-253">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</para>
              <para>
                <b>xlCommandUnderlinesOn</b>
              </para>
              <para>
                <b>xlCommandUnderlinesOff</b>
              </para>
              <para>
                <b>xlCommandUnderlinesAutomatic</b>
              </para>
              <para>In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-254">
            <b>True</b>場合、手書き認識機能が数字と記号だけに制限します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-254">
              <b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-255">
            <para>このプロパティは、ペン コンピューティングの Microsoft Windows を使用している場合にのみ使用します。その他のオペレーティング システムには、このプロパティを設定しようとすると、エラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-255">
              <para>This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-256">
            <b>True の</b>場合は右から左言語の制御文字が表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-256">
              <b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-257">
            <para>右、左の言語をサポートしています選択した場合にのみ、このプロパティを設定することができます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-257">
              <para>This property can be set only when right to left language support has been installed and selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula">
          <span data-ttu-id="bd89b-258">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-258">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-259">変換する数式を含む<b>文字列</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-259">A <b>String</b> that contains the formula you want to convert.</span>
          </span>
          <span data-ttu-id="bd89b-260">有効な数式を入力しなければ、等号 (=) で始めてください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-260">This must be a valid formula, and it must begin with an equal sign.</span>
          </span>
        </param>
        <param name="FromReferenceStyle">
          <span data-ttu-id="bd89b-261">必要な<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-261">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="bd89b-262">数式の参照スタイルです。<b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます<b>xlA1</b><b>xlR1C1</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-262">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span>
          </span>
        </param>
        <param name="ToReferenceStyle">
          <span data-ttu-id="bd89b-263">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-263">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="bd89b-264">参照スタイルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-264">The reference style you want returned.</span>
          </span>
          <span data-ttu-id="bd89b-265">この引数を省略すると、参照形式は変更されません。数式で指定されたスタイルのままになる<paramref name="FromReferenceStyle" />。可能には、これらが可能定数のいずれかを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-265">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span>
          </span>
          <span data-ttu-id="bd89b-266">
            <b>xlA1</b>
            <b>xlR1C1</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-266">
              <b>xlA1 </b>
              <b>xlR1C1</b>
            </span>
          </span>
        </param>
        <param name="ToAbsolute">
          <span data-ttu-id="bd89b-267">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-267">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="bd89b-268">変換後の参照の種類を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-268">Specifies the converted reference type.</span>
          </span>
          <span data-ttu-id="bd89b-269">この引数を省略すると、参照型は変更されません。<b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-269">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="bd89b-270">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-270">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-271">省略可能な<b>バリアント型</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-271">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="bd89b-272">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 1 つのセルを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-272">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span>
          </span>
          <span data-ttu-id="bd89b-273">相対参照は、このセルに関連します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-273">Relative references relate to this cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-274">A1 や R1C1 参照スタイルの間で、相対参照と絶対参照、またはその両方の数式でセル参照に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-274">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-275">
            <b>True</b>場合は、オブジェクトの切り取り、コピー、抽出、およびセルと一緒に並べ替え。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-275">
              <b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-276">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-276">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="bd89b-277">オブジェクトは、Microsoft Excel で作成されている場合を返します文字列 XCEL を 16 進数の 5843454c に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-277">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-278">
            <para>
              <b>作成者</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Excel では、クリエーター コード</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-278">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-279">Microsoft Excel でマウス ポインターの外観を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-279">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-280">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" />
              <b>XlMousePointer</b>定数のいずれか:</para>
            <para>
              <b>xlDefault</b>既定のポインターです</para>。
          <para><b>xlIBeam</b> [i ビーム ポインター</para> 。
          <para><b>xlNorthwestArrow</b>北西部の矢印のポインターです</para>。
          <para><b>xlWait</b>砂時計のポインター</para> 。
          <para><b>カーソル</b>のプロパティは、マクロの実行が停止すると自動的にリセットされません。マクロの実行が停止する前に、 <b>xlDefault</b>にポインターをリセットする必要があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-280">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</para>
              <para>
                <b>xlDefault</b> The default pointer.</para>
              <para>
                <b>xlIBeam</b> The I-beam pointer.</para>
              <para>
                <b>xlNorthwestArrow</b> The northwest arrow pointer.</para>
              <para>
                <b>xlWait</b> The hourglass pointer.</para>
              <para>The <b>Cursor</b> property isn't reset automatically when the macro stops running. You should reset the pointer to <b>xlDefault</b> before your macro stops running.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-281">ビジュアル カーソルまたはロジカル カーソルを使用するかどうかを示す値を設定を取得または取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-281">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span>
          </span>
          <span data-ttu-id="bd89b-282">使用できる定数は、次のいずれか: <b>xlVisualCursor</b>または<b>xlLogicalCursor</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-282">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-283">
            <para>これらの定数を選択またはインストールされている言語サポート (たとえば、日本語) によっては使用できない可能性があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-283">
              <para>These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-284">(組み込みのリストを含む)、定義済みのユーザー設定リストの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-284">Returns the number of defined custom lists (including built-in lists).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-285">切り取りモードまたはコピー モードの状態を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-285">Returns or sets the status of Cut or Copy mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-286">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />
              <b>XlCutCopyMode</b>定数のいずれかをすることができます</para>。
          <list type="table"><item><description>切り取りモードまたはコピー モードではなく</description><term><b>false</b></term></item><item><term><b>xlCopy</b></term><description>でコピー ・ モード</description></item><item><term><b>xlCut</b></term><description>で切り取りモード</description></item></list><list type="table"><item><term><b>偽</b></term><description>キャンセルをカットまたはコピー モードと削除、移動枠線します</description></item>。
            <item><term><b>真</b></term><description>キャンセルをカットまたはコピー モードと削除、移動枠線します</description></item></list>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-286">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</para>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Not in Cut or Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCopy</b>
                  </term>
                  <description>In Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCut</b>
                  </term>
                  <description>In Cut mode</description>
                </item>
              </list>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
                <item>
                  <term>
                    <b>True</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-287">次の表に示すように、データ入力モードを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-287">Returns or sets Data Entry mode, as shown in the table below.</span>
          </span>
          <span data-ttu-id="bd89b-288">データ入力モードでは、現在選択されている範囲内でロックされていないセルにのみデータを入力できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-288">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-289">
            <list type="table">
              <item>
                <term>
                  <b>xlOn</b>
                </term>
                <description>データ入力モードがオンになっている</description>
              </item>。
            <item><term><b>xlOff</b></term><description>モードは、データ入力がオフになっています。</description></item><item><term><b>xlStrict</b></term><description>データ入力モードがオンになっているし esc キーを押しても電源をオフ</description></item></list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-289">
              <list type="table">
                <item>
                  <term>
                    <b>xlOn</b>
                  </term>
                  <description>Data Entry mode is turned on.</description>
                </item>
                <item>
                  <term>
                    <b>xlOff</b>
                  </term>
                  <description>Data Entry mode is turned off.</description>
                </item>
                <item>
                  <term>
                    <b>xlStrict</b>
                  </term>
                  <description>Data Entry mode is turned on and pressing ESC won't turn it off.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-290">最後の DDE でリターンが含まれているコードをアプリケーション固有の DDE リターンは、Excel を使用して受信したメッセージを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-290">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="bd89b-291">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-291">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-292">によって返されるチャネル番号、<see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-292">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="String">
          <span data-ttu-id="bd89b-293">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-293">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-294">受信側のアプリケーションで定義されているメッセージを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-294">The message defined in the receiving application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-295">指定された DDE チャネルを経由して、他のアプリケーション内でコマンドまたは動作を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-295">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-296">
            <para>
              <b>DDEExecute</b>メソッドは、別のアプリケーションにコマンドを送信するよう設計されています。使用することも、別のアプリケーションにキーストロークを送信するためですが、 <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> 、キーストロークを送信する推奨される方法です。<paramref name="String" />の引数は、alt キーを押し、ctrl キーまたは shift キーを押し、またはこれらのキーの任意の組み合わせと共に、1 つのキーを指定できます。各キーは、文字"a"など、1 つまたは複数の文字で表されます、"{}"の入力、ENTER キーまたは</para>。(たとえば、ENTER キーまたは TAB)、対応するキーを押したときに表示されていない文字を使用して、次の表に示すコードを指定するのには
          <para>です。テーブル内の各コードは、キーボードのキーが 1 つを表します</para>。
          <list type="table"><item><term>バック</term><description>{backspace キー} または {BS}</description></item><item><description>{分割}</description><term>分割</term></item><item><term>CAPS LOCK</term><description>{CAPSLOCK}</description></item><item><term>クリア</term><description>{クリア}</description></item><item><term>DEL キーまたは</term><description>{削除} または {DEL}</description></item><item><term>↓</term><description>{ダウン}</description></item><item><term>終了</term><description>{終了}</description></item><item><term>ENTER</term><description>~ (チルダ)</description></item><item><description>指定}</description>の
              <term>入力 (テンキー)</term></item><item><term>ESC</term><description>{エスケープ} または {ESC}</description></item><item><term>F15 を通じて F1</term><description>{F1} から {F15}</description></item><item><description>{ヘルプ}</description><term>ヘルプ</term></item><item><description>{ホーム}</description><term>ホーム</term></item><item><term>INS</term>は
              <description>{挿入}</description></item><item><term>左向き矢印</term><description>{左}</description></item><item><term>NUM LOCK</term><description>{NUMLOCK}</description></item><item><term>ページ ダウン</term><description>{しました。</description></item><item><term>ページ アップ</term><description>{PGUP}</description></item><item><description>{返す}</description><term>を返します</term></item><item><term>右向き矢印</term><description>{右}</description></item><item><term>スクロール ロック</term><description>{SCROLLLOCK}</description></item><item><term>タブ</term><description>] タブ {}</description></item><item><term>↑</term><description>{を}</description></item></list><para>Shift キーや ctrl キーと alt キーと組み合わせるキーを指定することもできます。1 つまたは複数のキーと組み合わせるキーを指定するには、次の表を使用します</para>。
          <list type="table"><item><term>SHIFT</term><description>+ (プラス記号)</description></item><item><term>CTRL</term><description>^ (キャレット)</description></item><item><description>% (パーセント記号)</description>の
              <term>alt キーを押し</term></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-296">
              <para>The <b>DDEExecute</b> method is designed to send commands to another application. You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes. The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App">
          <span data-ttu-id="bd89b-297">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-297">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-298">アプリケーションの名前を示す文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-298">The application name.</span>
          </span>
        </param>
        <param name="Topic">
          <span data-ttu-id="bd89b-299">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-299">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-300">アプリケーション内の、チャネルを開く要素を示す文字列を指定します。通常は、そのアプリケーションの文書を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-300">Describes something in the application to which you're opening a channel — usually a document of that application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-301">アプリケーションへの DDE チャネルを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-301">Opens a DDE channel to an application.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-302">
            <para>の正常終了した場合、 <b>DDEInitiate</b>メソッドは、開いているチャネルの数を返します。以降のすべての DDE 関数は、チャネルを指定するのにはこの番号を使用します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-302">
              <para>If successful, the <b>DDEInitiate</b> method returns the number of the open channel. All subsequent DDE functions use this number to specify the channel.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="bd89b-303">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-303">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-304">によって返されるチャネル番号、<see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-304">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="bd89b-305">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-305">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-306">データ送信先の項目名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-306">The item to which the data is to be sent.</span>
          </span>
        </param>
        <param name="Data">
          <span data-ttu-id="bd89b-307">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-307">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-308">アプリケーションに送るデータを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-308">The data to be sent to the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-309">アプリケーションにデータを送ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-309">Sends data to an application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-310">
            <para>メソッドの呼び出しが成功しない場合にエラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-310">
              <para>An error occurs if the method call doesn't succeed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="bd89b-311">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-311">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-312">によって返されるチャネル番号、<see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-312">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="bd89b-313">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-313">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-314">要求される項目を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-314">The item to be requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p152">指定されたアプリケーションの情報を返します。このメソッドは、常に配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p152">Requests information from the specified application. This method always returns an array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="bd89b-317">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-317">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-318">によって返されるチャネル番号、<see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />メソッドです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-318">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-319">ほかのアプリケーションへのチャネルを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-319">Closes a channel to another application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-320">小数点区切り文字を<b>文字列</b>として使用する文字を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-320">Sets or returns the character used for the decimal separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-321">Microsoft Excel がファイルを開くときに使用する既定のパスを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-321">Returns or sets the default path that Microsoft Excel uses when it opens files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-322">ファイルを保存するための既定の書式を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-322">Returns or sets the default format for saving files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-323">新しいウィンドウまたはワークシートに Excel が表示される既定の方向を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-323">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span>
          </span>
          <span data-ttu-id="bd89b-324">使用できる定数は、次のいずれか: (右から左) は、 <b>xlRTL</b>または<b>xlLTR</b> (左右から)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-324">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-325">
            <para>が選択またはインストールされている言語サポート (たとえば、日本語) によっては使用ができないこれらの定数のいくつかがあります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-325">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-326">返します、<see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" />文書を Web ページとして保存するか、Web ページを開くたびに、Excel で使用されるグローバル アプリケーション レベルの属性を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-326">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-327">取得または VBA コードによってワークシートを計算するときに OLAP データ ソースへの非同期クエリが実行されるかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-327">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span>
          </span>
          <span data-ttu-id="bd89b-328">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-328">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-329">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-329">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-330">
            <para>により、非同期クエリ フォームを実行するまで、 <b>DeferAsyncQueries</b>プロパティを<b>True</b>に設定します<see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />メソッドが呼び出されます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-330">
              <para>Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="bd89b-331">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-331">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-332">削除するユーザー設定オート フォーマットの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-332">The name of the custom autoformat to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-333">使用可能なグラフ用オートフォーマットの一覧から、ユーザー設定のグラフ用オートフォーマットを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-333">Removes a custom chart autoformat from the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="bd89b-334">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-334">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-335">ユーザー設定リストの数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-335">The custom list number.</span>
          </span>
          <span data-ttu-id="bd89b-336">この数が 5 以上にする必要があります (Microsoft Excel では、4 つの組み込みカスタム リストを削除できませんが)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-336">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-337">ユーザー設定リストを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-337">Deletes a custom list.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-338">
            <para>リスト数が 5 未満である場合、または一致するユーザー設定のリストがない場合、このメソッドはエラーを生成します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-338">
              <para>This method generates an error if the list number is less than 5 or if there's no matching custom list.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-339">返します、<see cref="T:Microsoft.Office.Interop.Excel.Dialogs" />すべての組み込みダイアログ ボックスを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-339">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-340">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-340">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-341">
            <b>True の</b>特定を Microsoft Excel が表示される場合警告やメッセージ、マクロの実行中にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-341">
              <b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-342">
            <para>既定値は、 <b>true を指定</b>します。プロンプトや警告メッセージで、プログラムの実行中にしない場合、このプロパティを<b>False</b>に設定します。いつでもメッセージに応答する必要があります、Microsoft Excel は、既定の応答を選択します</para>。
          <para>を<b>False</b>にこのプロパティを設定する場合 Excel このプロパティを<b>True</b>に設定、コードが完了したら、クロスを実行している場合を除き、コードを処理します</para>。
          <para>を使用する場合、<see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />ブックのファイルを上書きする方法、上書きの警告が既定値は [いいえ]、 <b>DisplayAlerts</b>プロパティが<b>False</b>に設定すると Excel で [はい] 応答を選択しています</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-342">
              <para>The default value is <b>True</b>. Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</para>
              <para>If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</para>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-343">Microsoft Office クリップボードを表示できる場合は<b>True</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-343">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-344">セルのコメントとインジケーターの表示方法を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-344">Returns or sets the way cells display comments and indicators.</span>
          </span>
          <span data-ttu-id="bd89b-345">次のいずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" />定数: <b>xlNoIndicator</b>、 <b>xlCommentIndicatorOnly</b>、または<b>xlCommentAndIndicator</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-345">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-346">ドキュメント アクション作業ウィンドウを表示するのには<b>True</b>に設定します。ドキュメント アクション作業ウィンドウを非表示にするのには<b>False</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-346">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-347">
            <para>を<b>True</b>にこのプロパティを設定すると、実行時エラーの作業中のブックは、スマート ドキュメントではない場合</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-347">
              <para>Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-p159">取得または設定する <b>ブール値</b> ドキュメント情報パネルを表示するかどうかを表す。読み取り/書き込み。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p159">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-350">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-350">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-351">
            <b>True</b>場合は、Excel 4.0 のメニュー バーを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-351">
              <b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-352">取得またはセルの数式を作成するときに、関連する関数と定義された名前の一覧を表示するかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-352">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span>
          </span>
          <span data-ttu-id="bd89b-353">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-353">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-354">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-354">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-355">
            <b>True</b>場合は、数式バーが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-355">
              <b>True</b> if the formula bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-356">
            <b>True の</b>場合は全画面表示モードでは、Microsoft Excel です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-356">
              <b>True</b> if Microsoft Excel is in full-screen mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-357">
            <para>全画面表示モードでは、画面全体を入力し、アプリケーションのタイトル バーを非表示にするようにアプリケーション ウィンドウが最大化します。ツールバー、ステータス バー、および数式バーが全画面表示モードと標準モードの別の表示設定を維持します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-357">
              <para>Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-358">
            <b>True の</b>場合、関数のボタン名を表示できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-358">
              <b>True</b> if function ToolTips can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-359">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-359">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-360">
            <b>True の</b>場合は、[挿入オプション] ボタンを表示する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-360">
              <b>True</b> if the Insert Options button should be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-361">
            <b>True の</b>ノートを含むセルがセルのヒントを表示して、メモ マークを付け、右上隅の) が含まれている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-361">
              <b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-362">
            <b>True の</b>場合は、[貼り付けオプション] ボタンを表示することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-362">
              <b>True</b> if the Paste Options button can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-363">
            <para>これは、Microsoft Office の設定です。この設定は、他のすべての Microsoft Office アプリケーションに影響します。プロパティを<b>True</b>に<b>DisplayPasteOptions</b>を設定する Microsoft Excel で [オート フィル オプション] ボタンをオンにします。<b>オート フィル オプション</b>] ボタンは、Excel でのみ、ですが、他のすべての Microsoft Office アプリケーションでは、貼り付けのオプションです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-363">
              <para>This is a Microsoft Office-wide setting. This setting affects all other Microsoft Office applications. Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel. The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-364">
            <b>True の</b>場合は、[ファイル] メニューの最近使用したファイルの一覧が表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-364">
              <b>True</b> if the list of recently used files is displayed on the File menu.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-365">
            <b>True の</b>場合、スクロール バーをすべてのブックの表示です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-365">
              <b>True</b> if scroll bars are visible for all workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-366">
            <b>True</b>場合は、ステータス バーが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-366">
              <b>True</b> if the status bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap">
          <span data-ttu-id="bd89b-367">省略可能な<see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-367">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="bd89b-368">作業ウィンドウ内で表示する XML マップを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-368">The XML map to display in the task pane.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-369">[XML ソース] 作業ウィンドウを開きで指定された XML の対応付けが表示されます、<paramref name="XmlMap" />の引数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-369">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-370">
            <para>、XML スプレッドシート形式で、ファイルを保存する以外の XML 機能は、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-370">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-371">DoubleClick メソッドは、アクティブ セルをダブルクリックする操作に相当します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-371">Equivalent to double-clicking the active cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-372">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-372">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-373">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-373">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-374">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-374">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-375">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-375">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-376">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-376">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-377">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-377">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-378">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-378">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-379">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-379">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-380">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-380">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd89b-381">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-381">
              <b>s</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-382">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-382">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-383">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-383">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-384">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-384">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-385">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-385">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-386">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-386">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-387">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-387">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-388">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-388">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-389">
            <b>True の</b>場合、セル内編集を。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-389">
              <b>True</b> if Microsoft Excel allows editing in cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-390">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-390">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-391">
            <b>True の</b>オートコンプリート機能が有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-391">
              <b>True</b> if the AutoComplete feature is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-392">Microsoft Excel が実行中のプロシージャに、CTRL キーを押しながら BREAK キーを押して (または esc キーまたは [閉じる]) のユーザー割り込みを処理する方法を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-392">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span>
          </span>
          <span data-ttu-id="bd89b-393">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-393">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-394">
            <para>
              <b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>xlDisabled</b> [キャンセル] をキーのトラップが完全に無効にします</description>
              </item>。
            <item><description><b>xlErrorHandler</b> 、On Error GoTo ステートメントを使用してセットアップのエラー ハンドラーによってトラップ可能なエラーとしては、割り込みを実行中のプロシージャに送信されます。18 では、トラップ可能なエラー コードです</description></item>。
            <item><description><b>xlInterrupt</b>現在のプロシージャを中断し、ユーザーがデバッグしたり、プロシージャを終了します</description></item></list>。
          <para>非常に慎重にこのプロパティを使用します。<b>プロパティを xldisabled</b>する場合ランナウェイ ループまたは自己終了していないその他のコードを中断する方法はありません。同様に、 <b>xlErrorHandler</b>を使用する場合は、 <b>Resume</b>ステートメントを使用してエラー ハンドラーを常に返しますがないランナウェイ コードを停止します</para>。
          <para><b>EnableCancelKey</b>プロパティは、Microsoft Excel がアイドル状態に戻すし、コードが実行されていないときに常に<b>xlInterrupt</b>にリセットされます。トラップまたは、プロシージャを無効にするには、する変更が必要明示的に<b>EnableCancelKey</b>プロパティ プロシージャが呼び出されるたびにします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-394">
              <para>
                <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlDisabled</b>  Cancel key trapping is completely disabled.</description>
                </item>
                <item>
                  <description>
                    <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement. The trappable error code is 18.</description>
                </item>
                <item>
                  <description>
                    <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</description>
                </item>
              </list>
              <para>Use this property very carefully. If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating. Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</para>
              <para>The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running. To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-395">Microsoft Excel での表示と編集] ダイアログ ボックスのワークシートの既定のプログラムがない場合に確認する] を有効にする場合は true です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-395">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-396">
            <b>True の</b>場合は、指定したオブジェクトに対してイベントが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-396">
              <b>True</b> if events are enabled for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-397">
            <b>ブール値</b>を場合、ユーザーに警告メッセージを表示しようとすると Office センターで指定されたよりもセル数の増大に影響する操作を実行するかどうかを表すを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-397">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span>
          </span>
          <span data-ttu-id="bd89b-398">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-398">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-399">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-399">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-400">
            <para>このプロパティの既定値は<b>True</b>です</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-400">
              <para>The default value of this property is <b>True</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-401">プレビューをサポートしている、 <b>ブール値</b> を表示するか、ギャラリーを使用するときに表示されるギャラリーのプレビューを非表示にするかどうかを表すを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-401">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span>
          </span>
          <span data-ttu-id="bd89b-402">コマンドを適用する前にブックのプレビューを表示するこのプロパティを<b>True</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-402">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span>
          </span>
          <span data-ttu-id="bd89b-403">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-403">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-404">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-404">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-405">
            <para>このプロパティは、[Excel のオプション] ダイアログ ボックスで [ライブ プレビューを有効にする] チェック ボックスに対応します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-405">
              <para>This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-406">マクロのアニメーションを有効にするかどうかを制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-406">Controls whether macro animations are enabled.</span>
          </span>
          <span data-ttu-id="bd89b-407">
            <b>True</b>ユーザー インターフェイスのアニメーションやグラフのアニメーションが有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-407">
              <b>True</b> if user interface animations or chart animations are enabled.</span>
          </span>
          <span data-ttu-id="bd89b-408">既定で<b>False</b> (アニメーションなし) に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-408">Is set to <b>False</b> (no animation) by default.</span>
          </span>
          <span data-ttu-id="bd89b-409">場合は<b>True</b>に設定すると、マクロの実行中に、アニメーションが有効にして、<b>し、False</b>にリセットされます、マクロを実行した後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-409">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span>
          </span>
          <span data-ttu-id="bd89b-410">読み取り/書き込み<b>ブール型</b>(C# では<b>bool</b> )。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-410">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-411">
            <b>True</b>の Microsoft Office サウンドが有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-411">
              <b>True</b> if sound is enabled for Microsoft Office.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-412">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-412">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-413">返します、<see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" />オブジェクトで、アプリケーションのオプションをチェックするエラーを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-413">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="bd89b-414">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-414">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-415">Excel の名前付け規則に従って、対象オブジェクトの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-415">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-416">使用する名前を、オブジェクトまたは値に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-416">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-417">
            <para>このメソッドを使用して Microsoft Excel 内の名前の次の種類を使用することができます:</para>
            <list type="bullet">
              <item>
                <description>A1 スタイルの参照。A1 形式の表記法の 1 つのセルへの参照を使用することができます。すべての参照は絶対参照と見なされます</description>
              </item>。
            <item><description>の範囲です。範囲を使用する、交差すると union 演算子 (コロン、スペース、コンマ、それぞれ) を参照します</description></item>。
            <item><description>定義の名前です。マクロの言語で任意の名前を指定することができます</description></item>。外部参照を
            <item><description>。使用することができます、!セルまたは別のブックで定義された名前を参照する演算子、Evaluate ("[BOOK1 たとえば。XLS] Sheet1!A1") です</description></item></list>。
          <para><b>注</b>: 角かっこで (たとえば、"[a1: c5]") を使用して、文字列引数を指定して<b>評価</b>メソッドの呼び出しと同じです。角かっこを使用する利点は、コードが短いことです。<b>評価</b>を使用する利点は、引数が文字列の場合は、コード内で文字列を構築するか、変数を使用するようにします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-417">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</description>
                </item>
                <item>
                  <description>Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</description>
                </item>
                <item>
                  <description>Defined names. You can specify any name in the language of the macro.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</description>
                </item>
              </list>
              <para>
                <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument. The advantage of using square brackets is that the code is shorter. The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-418">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべての Excel 4.0 インターナショナル マクロ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-418">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-419">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> 、指定されたブック内のすべての Excel 4.0 マクロ シートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-419">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="bd89b-420">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-420">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-421">Microsoft Excel 4.0 マクロ言語関数を等号 (=) なし。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-421">A Microsoft Excel 4.0 macro language function without the equal sign.</span>
          </span>
          <span data-ttu-id="bd89b-422">すべての参照は、R1C1 の文字列として指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-422">All references must be given as R1C1 strings.</span>
          </span>
          <span data-ttu-id="bd89b-423">場合<paramref name="String" />埋め込まれた二重引用符が含まれる二重にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-423">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span>
          </span>
          <span data-ttu-id="bd89b-424">たとえば、マクロ関数を実行する = MID("sometext",1,4)、 <paramref name="String" /> "MID(""sometext"",1,4)"をする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-424">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-425">Microsoft Excel 4.0 マクロ関数を実行し、関数の結果を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-425">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span>
          </span>
          <span data-ttu-id="bd89b-426">戻り値の型は、関数に依存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-426">The return type depends on the function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-427">
            <para>、Microsoft Excel 4.0 のマクロは、現在のブックやシートのコンテキストでは評価されません。つまり、すべての参照が外部にある必要があり、明示的にブック名を指定する必要があります。たとえば、Book1 で、"My_Macro"Microsoft Excel 4.0 マクロを実行する必要がありますを使用する"Book1!My_Macro()"です。ブック名を指定しない場合、このメソッドは失敗します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-427">
              <para>The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet. This means that any references should be external and should specify an explicit workbook name. For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()". If you don't specify the workbook name, this method fails.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-428">
            <b>True の</b>場合の書式および数式を新しいデータを自動的に拡張が一覧に追加されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-428">
              <b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-429">
            <para>形式を拡張すると 5 つのリストの行または列の新しい行または列の前の少なくとも 3 つの数式を表示する必要がありの下に、またはリストの右側にデータを追加する必要があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-429">
              <para>To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-430">返すまたは、Microsoft Excel がまだインストールされていない機能を必要とするメソッドおよびプロパティへの呼び出しを処理する方法を指定する値 (定数) を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-430">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span>
          </span>
          <span data-ttu-id="bd89b-431">読み取り/書き込み<see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-431">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-432">
            <para>
              <b>可能</b>には、<b>これらの可能</b>のいずれかを指定できます:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>msoFeatureInstallNone</b>インストールされていない機能が呼び出されたとき、実行時に一般オートメーション エラーが生成されます。これは、既定の定数です</description>
              </item>。
            <item><description><b>msoFeatureInstallOnDemand</b>新機能をインストールするユーザーを求められます</description></item>。
            <item><description><b>msoFeatureInstallOnDemandWithUI</b>インストール時に進行状況インジケーターが表示されます;、新機能をインストールするのにはユーザーにメッセージを表示しません</description></item></list>。
          <para>機能のインストール中に、アプリケーションが応答していないことを考えることからユーザーを防ぐために、定数<b>msoFeatureInstallOnDemandWithUI</b>を使用できます。開発者は機能をインストールすることが自分だけのことをする場合は、定数<b>msoFeatureInstallNone</b>を使用します</para>。
          <para>がある場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティを<b>False</b>に設定されてユーザーを<b>呼び出したとき</b>は、 <b>msoFeatureInstallOnDemand</b>に設定されている場合でも、新しい機能をインストールするのには求められるはありません。場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティが<b>True</b>に設定されて、<b>呼び出したとき</b>のプロパティが<b>msoFeatureInstallOnDemand</b>に設定されている場合、インストールの進行状況インジケーターが表示されます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-432">
              <para>
                <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called. This is the default constant.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</description>
                </item>
              </list>
              <para>You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed. Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</para>
              <para>If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>. If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="bd89b-433">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-433">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-434">Windows では、たとえば、[Lotus 1-2-3 ファイル (*.wk*)] ファイルの種類の検索文字列を含む、コンバーターの長い名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-434">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="bd89b-435">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-436">コンバーターとして使用される DLL またはコード リソースのパス名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-436">The path of the converter DLL or code resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-437">インストールされているファイル コンバーターの情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-437">Returns information about installed file converters.</span>
          </span>
          <span data-ttu-id="bd89b-438">コンバーターがインストールされてない場合は<b>Null</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-438">Returns <b>Null</b> if there are no converters installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-439">
            <para>引数を指定しない場合、このプロパティは、すべてのファイルがインストールされているコンバーターに関する情報を格納している配列を返します。配列内の各行は、次の表に示すように 1 つのファイル コンバーターでは、に関する情報を格納します</para>。
          <list type="table"><item><description>コンバーターの長い形式の名前</description>である
              <term>1</term></item><item><term>2</term><description>コンバーター DLL またはコード リソース</description></item>の
            <item><description>ファイル拡張子の検索文字列</description>の
              <term>3</term></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-439">
              <para>If you don’t specify arguments, this property returns an array that contains information about all the installed file converters. Each row in the array contains information about a single file converter, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The long name of the converter</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The path of the converter DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>The file-extension search string</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType">
          <span data-ttu-id="bd89b-440">必要な<see cref="T:Microsoft.Office.Core.MsoFileDialogType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-440">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span>
          </span>
          <span data-ttu-id="bd89b-441">ファイル ダイアログの種類です。<b>MsoFileDialogType</b>には、これらの<b>MsoFileDialogType</b>定数のいずれかを指定できます:<b>msoFileDialogFilePicker</b>ユーザーがファイルを選択します。<b>msoFileDialogFolderPicker</b>フォルダーを選択できます。<b>msoFileDialogOpen</b>ユーザー ファイルを開くことができます。<b>msoFileDialogSaveAs</b>ファイルを保存するユーザーを使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-441">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-442">返します、 <see cref="T:Microsoft.Office.Core.FileDialog" /> 、ファイル ダイアログのインスタンスを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-442">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-443">返します、<see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />を保存するためのすべてのファイル コンバーターを表すファイルを Microsoft Excel で使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-443">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span>
          </span>
          <span data-ttu-id="bd89b-444">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-444">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-445">返します。 <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-445">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-p175">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p175">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-448">返します、<see cref="T:Microsoft.Office.Core.FileSearch" />でファイルの検索に使用するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-448">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span>
          </span>
          <span data-ttu-id="bd89b-449">このプロパティは、Microsoft Windows でのみ利用可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-449">This property is available only in Microsoft Windows.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-450">取得または Microsoft Excel が開く前にファイルを検証する方法を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-450">Gets or sets how Microsoft Excel will validate files before opening them.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-451">A<see cref="T:Microsoft.Office.Core.MsoFileValidationMode" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-451">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-452">
            <para>読み取り/書き込み</para>。検証エラー
          <para>ファイルは、保護されたビュー ウィンドウに表示します。設定する場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />プロパティで、設定が有効のままセッション全体を通して、アプリケーションが開いているのです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-452">
              <para>Read/write.</para>
              <para>Files that do not pass validation will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-453">取得または Microsoft Excel でピボット テーブル レポートのデータ キャッシュの内容を検証する方法を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-453">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-454">A<see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-454">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-455">
            <para>読み取り/書き込み</para>。確認を行わずにデータ キャッシュが含まれている
          <para>ファイルは、保護されたビュー ウィンドウに表示します。設定する場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />プロパティで、設定が有効のままセッション全体を通して、アプリケーションが開いているのです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-455">
              <para>Read/write.</para>
              <para>Files that contain data caches that do not validate will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-456">[開く] ダイアログ ボックスが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-456">Displays the Open dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-457">
            <para>このメソッドは、[開く] ダイアログ ボックスを表示し、ファイルを開くことができます。新しいファイルが正常に開かれると、このメソッドは<b>True</b>を返します。ユーザーは、ダイアログ ボックスをキャンセルした場合このメソッドは<b>False</b>を返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-457">
              <para>This method displays the Open dialog box and allows the user to open a file. If a new file is opened successfully, this method returns <b>True</b>. If the user cancels the dialog box, this method returns <b>False</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-458">セルの書式の検索条件の設定や取得を行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-458">Sets or returns the search criteria for the type of cell formats to find.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-459">このプロパティが<b>True</b>に設定した後に入力されたすべてのデータは、小数点位置を固定して設定の数でフォーマットされているが、<see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-459">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-460">場合に使用する小数点以下の桁数を固定数の設定を取得または設定、<see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />プロパティが<b>True</b>に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-460">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-461">
            <b>TRUE</b>は、Excel で塗りつぶしフラッシュ機能が有効でアクティブなされていることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-461">
              <b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
          <span data-ttu-id="bd89b-462">
            <b>ブール値</b>(C# では<b>bool</b> )読み取り/書き込み</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-462">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-463">
            <para>フラッシュ塗りつぶしを入力して、ブック内の追加のデータに適用できるパターンに合致するデータを変更するときを検出し、結果の列を自動的に入力します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-463">
              <para>Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-464">
            <b>True の</b>塗りつぶしのフラッシュ機能が有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-464">
              <b>True</b> if the Flash Fill feature is enabled.</span>
          </span>
          <span data-ttu-id="bd89b-465">
            <b>ブール値</b>(C# では<b>bool</b> )読み取り/書き込み</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-465">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-466">明細行で、数式バーの高さを指定することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-466">Allows the user to specify the height of the formula bar in lines.</span>
          </span>
          <span data-ttu-id="bd89b-467">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-467">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-468">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-468">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-469">
            <para>
              <b>FormulaBarHeight</b>の指定された値が表示可能なウィンドウ領域より大きい場合は、数式バーのサイズが変更、ウィンドウの高さと同じにする</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-469">
              <para>If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-470">Microsoft Excel はピボット テーブル レポートのデータを取得できる場合は<b>True</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-470">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-471">
            <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />プロパティでは、従来の表記方法や、新しい構造化参照表記方法を使用して数式でテーブルを参照するのかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-471">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span>
          </span>
          <span data-ttu-id="bd89b-472">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-472">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="bd89b-473">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-473">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="bd89b-474">対象となるリスト番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-474">The list number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-475">ユーザー設定リストを文字列の配列として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-475">Returns a custom list (an array of strings).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="bd89b-476">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-476">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-477">文字列の配列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-477">An array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p183">任意の文字列の配列に対応する、ユーザー設定リストの番号を返します。このメソッドは、組み込みリストとユーザー設定リストの両方で使えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p183">Returns the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-480">
            <para>は、対応するリストがない場合、このメソッドはエラーを生成します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-480">
              <para>This method generates an error if there's no corresponding list.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter">
          <span data-ttu-id="bd89b-481">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-482">ファイルのフィルター条件を指定する文字列。この文字列は、ファイル フィルター文字列は、MS-DOS ワイルドカード、各部品に続いてのペア、コンマで区切られたそれぞれのペアで構成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-482">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="bd89b-483">区切り、各ペアは、[ファイルの種類] ドロップ ダウン リスト ボックスに表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-483">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="bd89b-484">たとえば、次の文字列は 2 つのファイル フィルターを指定、テキストとアドイン:"テキスト ファイル (*.txt)、*.txt ファイル、アドインのファイル (*.xla)、*.xla」。1 つのファイル フィルターの種類の複数の MS-DOS のワイルドカードを使用するのにはセミコロンで区切りますワイルドカード表現、たとえば、「Visual Basic ファイル (*.bas です。*.txt)、*.bas;*。txt"です。省略した場合、この引数の既定値は、すべてのファイル (*.*)、*.* にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-484">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="bd89b-485">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-486">ファイルで指定されているフィルターの数を 1 から、フィルターの条件の既定値のインデックス番号を指定する<paramref name="FileFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-486">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="bd89b-487">この引数は省略するか、存在するフィルターの数より大きい場合は、最初のファイル フィルターが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-487">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="bd89b-488">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-488">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-489">ダイアログ ボックスのタイトルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-489">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="bd89b-490">この引数を省略すると、タイトルは、[開く] にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-490">If this argument is omitted, the title is "Open."</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="bd89b-491">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-491">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-492">Macintosh Edition の Word でのみサポートされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-492">Macintosh only.</span>
          </span>
        </param>
        <param name="MultiSelect">
          <span data-ttu-id="bd89b-493">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-494">
            <b>True</b>を選択する複数のファイル名を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-494">
              <b>True</b> to allow multiple file names to be selected.</span>
          </span>
          <span data-ttu-id="bd89b-495">
            <b>False</b>を選択するファイル名を 1 つだけを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-495">
              <b>False</b> to allow only one file name to be selected.</span>
          </span>
          <span data-ttu-id="bd89b-496">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-496">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-497">標準の [開く] ダイアログ ボックスを表示し、実際には任意のファイルを開くことがなく、ユーザーからファイル名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-497">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-498">
            <para>このメソッドは、選択したファイル名またはユーザーが入力した名前を返します。返される名前は、パス指定を含む場合があります。場合<paramref name="MultiSelect" />が<b>True の</b>場合でも 1 つだけのファイル名が選択されている場合) は、選択したファイル名の配列を返します。ユーザー ダイアログ ボックスをキャンセルする場合は<b>False</b>を返します</para>。
          <para>このメソッドは、現在のドライブまたはフォルダーを変更可能性があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-498">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected). Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="bd89b-499">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-499">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-500">ルビ文字列に変換するテキストを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-500">Specifies the text to be converted to phonetic text.</span>
          </span>
          <span data-ttu-id="bd89b-501">以前に指定したに次のふりがな候補文字列 (存在する場合)、この引数を省略した場合は、<paramref name="Text" />が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-501">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span>
          </span>
          <span data-ttu-id="bd89b-502">ふりがなテキストの文字列がなくなる可能性がある場合は、空の文字列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-502">If there are no more possible phonetic text strings, an empty string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p190">指定した文字列の日本語のふりがなを取得します。このメソッドは、Microsoft Office の言語の設定で日本語が選択またはインストールされている場合にのみ利用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p190">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename">
          <span data-ttu-id="bd89b-505">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-506">推奨されるファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-506">Specifies the suggested file name.</span>
          </span>
          <span data-ttu-id="bd89b-507">この引数を省略すると、Microsoft Excel は、作業中のブックの名前を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-507">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span>
          </span>
        </param>
        <param name="FileFilter">
          <span data-ttu-id="bd89b-508">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-508">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-509">ファイルのフィルター条件を指定する文字列。この文字列は、ファイル フィルター文字列は、MS-DOS ワイルドカード、各部品に続いてのペア、コンマで区切られたそれぞれのペアで構成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-509">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="bd89b-510">区切り、各ペアは、[ファイルの種類] ドロップ ダウン リスト ボックスに表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-510">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="bd89b-511">次の文字列が 2 種類のフィルター、テキスト、およびアドインのファイルを指定するたとえば、:"テキスト ファイル (*.txt) *.txt ファイル、アドインのファイル (*.xla)、 *.xla」です。1 つのファイル フィルターの種類の複数の MS-DOS のワイルドカードを使用するのにはセミコロンで区切りますワイルドカード表現、たとえば、「Visual Basic ファイル (*.bas です。*.txt)、*.bas;*。txt"です。省略した場合、この引数の既定値は、すべてのファイル (*.*)、*.* にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-511">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="bd89b-512">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-513">既定のインデックス番号で指定されているフィルターの数を 1 から、フィルターの条件のファイルを指定する<paramref name="FileFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-513">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="bd89b-514">この引数は省略するか、存在するフィルターの数より大きい場合は、最初のファイル フィルターが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-514">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="bd89b-515">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-516">ダイアログ ボックスのタイトルを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-516">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="bd89b-517">この引数を省略すると、既定のタイトルが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-517">If this argument is omitted, the default title is used.</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="bd89b-518">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-519">Macintosh Edition の Word でのみサポートされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-519">Macintosh only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-520">標準的な名前を付けて保存] ダイアログ ボックスを表示し、実際にすべてのファイルを保存せず、ユーザーからファイル名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-520">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-521">
            <para>このメソッドは、選択したファイル名またはユーザーが入力した名前を返します。返される名前は、パス指定を含む場合があります。ユーザー ダイアログ ボックスをキャンセルする場合は<b>False</b>を返します</para>。
          <para>このメソッドは、現在のドライブまたはフォルダーを変更可能性があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-521">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference">
          <span data-ttu-id="bd89b-522">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-522">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-523">先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-523">The destination.</span>
          </span>
          <span data-ttu-id="bd89b-524">ことができます、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト、r1c1 形式の表記法でのセル参照を含む文字列、または Visual Basic のプロシージャ名を含む文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-524">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span>
          </span>
          <span data-ttu-id="bd89b-525">この引数を省略すると、移動先は最後の範囲を選択するのには、 <b>Goto</b>メソッドを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-525">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span>
          </span>
        </param>
        <param name="Scroll">
          <span data-ttu-id="bd89b-526">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-527">
            <b>True の</b>範囲の左上隅がウィンドウの左上隅に表示されるようにウィンドウをスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-527">
              <b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span>
          </span>
          <span data-ttu-id="bd89b-528">
            <b>偽</b>のウィンドウをスクロールしないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-528">
              <b>False</b> to not scroll through the window.</span>
          </span>
          <span data-ttu-id="bd89b-529">既定では <b>False です</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-529">The default is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-530">任意のブック内の範囲または Visual Basic プロシージャを選択し、アクティブになっていない場合、そのブックをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-530">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-531">
            <para>このメソッドとは異なります、<see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />メソッドを次のように:</para>
            <list type="bullet">
              <item>
                <description>が前面にないワークシートの範囲を指定する場合、Microsoft Excel はそのシートに切り替えて選択する前にします。(が前面にないワークシートの範囲の<b>選択</b>を使用する場合、範囲が選択されますが、シートがアクティブになることはありません).</description>
              </item>
              <item>
                <description>このメソッドは、<paramref name="Scroll" />引数を使用することが対象となるウィンドウをスクロールします</description>
              </item>。以前の選択の配列を
            <item><description>、前の選択範囲 ( <b>Goto</b>メソッドが実行される) 前に、 <b>Goto</b>メソッドを使用する場合が表示されます (詳細についてを参照してください、<see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />プロパティ)。最大 4 個の間ですばやく移動するのにはこの機能を使用することができます</description></item>。
            <item><description><b>Select</b>メソッドには、<paramref name="Replace" />引数; <b>Goto</b>メソッドがありません</description></item></list>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-531">
              <para>This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</para>
              <list type="bullet">
                <item>
                  <description>If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting. (If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</description>
                </item>
                <item>
                  <description>This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</description>
                </item>
                <item>
                  <description>When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property). You can use this feature to quickly jump between as many as four selections.</description>
                </item>
                <item>
                  <description>The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-532">アプリケーションのメイン ウィンドウのポイント単位の高さです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-532">The height, in points, of the main application window.</span>
          </span>
          <span data-ttu-id="bd89b-533">ウィンドウが最小化されている場合、このプロパティは読み取り専用で、アイコンの高さを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-533">If the window is minimized, this property is read-only and refers to the height of the icon.</span>
          </span>
          <span data-ttu-id="bd89b-534">ウィンドウを最大化すると場合、は、このプロパティを設定することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-534">If the window is maximized, this property cannot be set.</span>
          </span>
          <span data-ttu-id="bd89b-535">使用して、 <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> 、ウィンドウの状態を確認するにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-535">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile">
          <span data-ttu-id="bd89b-536">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-537">表示するオンライン ヘルプ ファイルの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-537">The name of the online Help file you want to display.</span>
          </span>
          <span data-ttu-id="bd89b-538">この引数を省略すると、Microsoft Excel のヘルプが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-538">If this argument isn't specified, Microsoft Excel Help is used.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="bd89b-539">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-539">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-540">ヘルプ トピックのコンテキスト ID 番号を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-540">Specifies the context ID number for the Help topic.</span>
          </span>
          <span data-ttu-id="bd89b-541">この引数を指定しない場合、[ヘルプ トピック] ダイアログ ボックスが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-541">If this argument isn't specified, the Help Topics dialog box is displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-542">ヘルプ トピックを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-542">Displays a Help topic.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-543">取得または Excel では、高画質モードを使用して、グラフィックスを印刷するかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-543">Gets or sets whether Excel uses high quality mode to print graphics.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-544">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-544">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-545">
            <para>このプロパティは、グラフィックス] チェック ボックス、[Excel のオプション] ダイアログ ボックスの詳細設定] の [印刷] セクションでの高画質モードの設定に対応します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-545">
              <para>This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-546">Microsoft Excel を呼び出しているインスタンスのインスタンス ハンドルを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-546">Returns the instance handle of the instance that is calling Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-547">指定されたによって表される、Microsoft Excel 2010 のインスタンスへのハンドルを取得する<see cref="T:Microsoft.Office.Interop.Excel._Application" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-547">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-548">指定されたによって表される、Microsoft Excel 2010 のインスタンスへのハンドル<see cref="T:Microsoft.Office.Interop.Excel._Application" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-548">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-549">
            <para>読み取り専用<b>バリアント</b></para>。
          <para>このプロパティは、両方の 32 ビットおよび 64 ビット バージョンの Excel で適切なハンドルを返します。機能を拡張して、<see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />のプロパティ、<see cref="T:Microsoft.Office.Interop.Excel._Application" />オブジェクトで、32 ビット バージョンの Excel でのみ正しく動作します</para>。
          <para>理想的なデータ型でこのプロパティを使用する、 <b>LongPtr</b>データ型です。<b>LongPtr</b>変数に、このプロパティによって返される値を割り当てることが期待どおりに両方の 32 ビットおよび 64 ビット バージョンの Excel で。プロパティは、内部実装上の理由から、<b>バリアント型</b>として定義されます。ただし、常に 32 ビットの値を返す 32 ビット システムと 64 ビット システムで 64 ビットの値にします</para>。
          <para>このプロパティのみ動作する Excel 2010 で始まるとは、64 ビット版の Excel が必要です。#If Win64 条件付きコンパイル ディレクティブでは、[このプロパティを読み取る場合は、コンパイル エラーを回避するためにも、Excel の以前のバージョンで動作するコードを記述する必要がありを使用して、<see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />の下のプロパティ、#else ディレクティブ</para>。
          <para><b>注</b>: このプロパティは Excel 2010 で始まる 2 つの 32 ビットおよび 64 ビット環境で正常に動作します。したがって、以降の Excel 2010 でのみ使用するもので、コードは場合、32 ビットまたは 64 ビット、読み取ることが条件付きコンパイルせずにこのプロパティです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-549">
              <para>Read-only <b>Variant</b>.</para>
              <para>This property returns a correct handle in both the 32- and 64-bit versions of Excel. It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</para>
              <para>The ideal data type to use with this property is the <b>LongPtr</b> data type. Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel. The property is defined as <b>Variant</b> for internal implementation reasons. However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</para>
              <para>This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel. If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</para>
              <para>
                <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010. Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-550">Excel ウィンドウの最上位のウィンドウ ハンドルを示す<b>整数</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-550">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-551">
            <b>True</b>と、リモート DDE 要求が無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-551">
              <b>True</b> if remote DDE requests are ignored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches">
          <span data-ttu-id="bd89b-552">
            <b>二重</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-552">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="bd89b-553">変換の対象となる数値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-553">Specifies the inch value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-554">インチ単位の数値をポイント単位に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-554">Converts a measurement from inches to points.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <span data-ttu-id="bd89b-555">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-555">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-556">ダイアログ ボックスに表示するメッセージを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-556">The message to be displayed in the dialog box.</span>
          </span>
          <span data-ttu-id="bd89b-557">文字列、数値、日付、または<b>ブール</b>値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-557">This can be a string, a number, a date, or a <b>Boolean</b> value.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="bd89b-558">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-559">ボックスのタイトルを入力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-559">The title for the input box.</span>
          </span>
          <span data-ttu-id="bd89b-560">この引数を省略すると、既定のタイトルは、「入力」にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-560">If this argument is omitted, the default title is "Input."</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="bd89b-561">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-561">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-562">ダイアログ ボックスが最初に表示されるときに、テキスト ボックスに表示される値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-562">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span>
          </span>
          <span data-ttu-id="bd89b-563">この引数を省略すると、テキスト ボックスが空で表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-563">If this argument is omitted, the text box is left empty.</span>
          </span>
          <span data-ttu-id="bd89b-564">この値は <b>Range</b> オブジェクトを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-564">This value can be a <b>Range</b> object.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="bd89b-565">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-565">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-566">画面の左上隅を基準にしてダイアログ ボックスの x 座標をポイント単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-566">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="Top">
          <span data-ttu-id="bd89b-567">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-567">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-568">画面の左上隅を基準にしてダイアログ ボックスの y 座標をポイント単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-568">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="bd89b-569">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-570">対象の入力ボックスで使うヘルプ ファイルの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-570">The name of the Help file for this input box.</span>
          </span>
          <span data-ttu-id="bd89b-571">場合、<paramref name="HelpFile" />と<paramref name="HelpContextID" />引数がある場合、ダイアログ ボックスで、[ヘルプ] ボタンが表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-571">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="bd89b-572">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-572">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-573">ヘルプ トピックのコンテキスト ID 番号<paramref name="HelpFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-573">The context ID number of the Help topic in <paramref name="HelpFile" />.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="bd89b-574">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-574">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-575">戻り値の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-575">Specifies the return data type.</span>
          </span>
          <span data-ttu-id="bd89b-576">この引数を省略すると、ダイアログ ボックスは、テキストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-576">If this argument is omitted, the dialog box returns text.</span>
          </span>
          <span data-ttu-id="bd89b-577">1 つまたは次の値の合計を指定できます。許容値の合計を使用することができます<paramref name="Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-577">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span>
          </span>
          <span data-ttu-id="bd89b-578">たとえば、テキストと数値の両方を受け入れることができる入力ボックスは、次のように設定します。 <paramref name="Type" /> 1 + 2 にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-578">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p210">ユーザー入力用のダイアログ ボックスを表示します。表示したダイアログ ボックスに入力された情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p210">Displays a dialog box for user input. Returns the information entered in the dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-581">
            <para>
              <b>Inputbox メソッドは、マクロで使用される情報を入力できるように、簡単なダイアログ ボックスを表示します。</b>ダイアログ ボックスには、[ok] ボタンと [キャンセル] ボタン。<b>[OK] を選択した場合、ダイアログ ボックスに入力した値が返されます。</b>[キャンセル] ボタンをクリックすると、 <b>InputBox</b>は<b>False</b>を返します</para>。
          <para>場合<paramref name="Type" />は 0、<b>文字列の形式で数式が返されます</b>-たとえば、"= 2 \* PI ()/360」。数式内の参照がある場合は、A1 形式の参照として返されます。(使用<see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />との間の参照のスタイルに変換する)</para> 。
          <para>場合<paramref name="Type" />8 では、 <b><b>Range</b>オブジェクトが返されます</b></para>。<b>InputBox</b>メソッドを使用して数式の入力を促す場合は、
          <para>を使用する必要がある、<see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />数式を<b>Range</b>オブジェクトに割り当てるプロパティです。ユーザーの言語で入力する数式になります</para>。
          <para><b>InputBox</b>メソッドは、そのことができます、ユーザーの入力の検証を選択し、Microsoft Excel のオブジェクト、エラー値、および数式を使用できます、 <b>InputBox</b>関数とは異なります。InputBox オブジェクト修飾子を指定しないと、 <b>InputBox</b>関数が呼び出されます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-581">
              <para>Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro. The dialog box has an OK button and a Cancel button. If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box. If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</para>
              <para>If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360". If there are any references in the formula, they are returned as A1-style references. (Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</para>
              <para>If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</para>
              <para>If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object. The input formula will be in the user's language.</para>
              <para>The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas. InputBox with no object qualifier calls the <b>InputBox</b> function.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-582">
            <b>True の</b>場合、Microsoft Excel が対話モードではこのプロパティは、通常<b>は True</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-582">
              <b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span>
          </span>
          <span data-ttu-id="bd89b-583">
            <b>False</b>にこのプロパティを設定する場合、Microsoft Excel はキーボードとマウス、コードによって表示されるダイアログ ボックスへの入力) からの入力をブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-583">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span>
          </span>
          <span data-ttu-id="bd89b-584">ユーザーの入力をブロックは、ユーザーに干渉しないようにコード移動または Microsoft Excel オブジェクトをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-584">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-585">
            <para>このプロパティは、Microsoft Excel を使用して別のアプリケーションとやり取りするためのコードを記述する場合に便利です</para>。
          <para>を<b>False</b>にこのプロパティを設定する場合<b>は True</b>に設定することを忘れないでください。Microsoft Excel は、自動的に、コードが実行を停止したときに<b>True</b>にこのプロパティを設定はありません</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-585">
              <para>This property is useful if you're writing code to communicate with Microsoft Excel from another application.</para>
              <para>If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>. Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="bd89b-586">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-586">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-587">返される設定です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-587">The setting to be returned.</span>
          </span>
          <span data-ttu-id="bd89b-588">いずれかの<see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" />定数は、次の表に記載されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-588">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-589">現在の国または地域と言語の設定に関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-589">Returns information about the current country/region and international settings.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-590">
            <para>角かっこと中かっこ</para>
            <list type="table">
              <item>
                <term>
                  <b>xlLeftBrace</b>
                </term>
                <description>
                  <b>文字列</b>
                </description>
                <description>文字の配列リテラルで左側中かっこ ({}) の代わりに使用します</description>
              </item>。
            <item><term><b>xlLeftBracket</b></term><description><b>文字列</b></description><description>r1c1 形式の相対参照で左側角かっこ () の代わりに使用される文字</description></item>。
            <item><term><b>xlLowerCaseColumnLetter</b></term><description><b>文字列</b></description><description>小文字の列文字</description></item>。
            <item><term><b>xlLowerCaseRowLetter</b></term><description><b>文字列</b></description><description>小文字の行文字</description></item>。
            <item><term><b>xlRightBrace</b></term><description><b>文字列</b></description><description>文字の配列リテラルで右側中かっこ (}) の代わりに使用します</description></item>。
            <item><term><b>xlRightBracket</b></term><description><b>文字列</b></description><description>r1c1 形式の参照で右側角かっこ (]) の代わりに使用される文字</description></item>。
            <item><term><b>xlUpperCaseColumnLetter</b></term><description><b>文字列</b></description><description>大文字の列文字</description></item>。
            <item><term><b>xlUpperCaseRowLetter</b></term><description><b>文字列</b></description><description>大文字の行文字 (r1c1 形式の参照).</description></item></list>
            <para>国/地域の設定</para>
            <list type="table">
              <item>
                <term>
                  <b>xlCountryCode</b>
                </term>
                <description>
                  <b>整数</b>
                </description>
                <description>国のバージョンの Microsoft Excel</description>
              </item> 。
            <item><term><b>xlCountrySetting</b></term><description><b>整数</b></description><description>Windows コントロール パネルの [現在の国または地域の設定します</description></item>。
            <item><term><b>xlGeneralFormatName</b></term><description><b>文字列</b></description><description>標準の数値形式の名前</description></item></list>。
          <para>通貨</para><description><b>ブール値</b></description>の
                <b>True の</b>場合、通貨記号、通貨値の前に
              <description><list type="table"><item><term><b>xlCurrencyBefore</b></term><b>False を指定</b>する場合
            </item></list>。
            <item><term><b>xlCurrencyCode</b></term><description><b>文字列</b></description><description>通貨記号です</description></item>。
            <item><term><b>xlCurrencyDigits</b></term><description><b>整数</b></description><description>通貨書式で使用する 10 進数</description></item>。
            <item><term><b>xlCurrencyLeadingZeros</b></term><description><b>ブール</b></description><description><b>True の</b>場合、先行するゼロは、通貨の値に表示されます</description></item>。
              <description><b>ブール値</b></description><b>True の</b>場合は負の数にマイナス記号を使用している
              <description><item><term><b>xlCurrencyMinusSign</b></term><b>False を指定</b>するかっこを使用している場合
            </item></description>。
            <item><term><b>xlCurrencyNegative</b></term><description>0: 通貨の負の値を通貨形式の
              <description><b>整数</b></description>= (symbolx) または (xsymbol) 1 - symbolx または xsymbol2 を = = 記号 x または x symbol3 = symbolx- または xsymbol-どこの通貨記号は、国または地域です。<b>XlCurrencyBefore</b>で通貨記号の位置を確認することに注意してください</description></item>。
            <item><term><b>xlCurrencySpaceBefore</b></term>の
              <description><b>ブール値</b></description><description>の
                <b>True の</b>場合、通貨記号の前にスペースを追加します</description></item>。
            <item><term><b>xlCurrencyTrailingZeros</b></term>の
              <description><b>ブール値</b></description><description>の
                <b>True の</b>場合、末尾のゼロを通貨の値に表示されます</description></item>。
            <item><term><b>xlNoncurrencyDigits</b></term><description><b>整数</b></description><description>以外の通貨書式で使用する 10 進数</description></item>。
          <para>日付と時刻</para><description><b>ブール値</b></description>の
                <b>True の</b>場合、24 時間制を使用している
              <description><list type="table"><item><term><b>xl24HourClock</b></term><b>False</b>場合は、12 時間制を使用している
            </item></list>。
              <description><b>ブール値</b></description><b>True の</b>場合は 4 桁年を使用している
              <description><item><term><b>xl4DigitYears</b></term><b>False</b> 2 桁の年を使用している場合
            </item></description>。
            <item><term><b>xlDateOrder</b></term><description><b>整数</b></description><description>順序の日付の要素: 0 = 月-日-year1 = 日-月-year2 = 年-月-日</description></item><item><term><b>xlDateSeparator</b></term><description><b>文字列</b></description><description>の日付の区切り記号 (/) です</description></item>。
            <item><term><b>xlDayCode</b></term><description><b>文字列</b></description><description>の日のシンボル (d) です</description></item>。
            <item><term><b>xlDayLeadingZero</b></term><description><b>ブール</b></description><description>日で、先頭にゼロが表示されている場合に true を設定します</description></item>。
            <item><term><b>xlHourCode</b></term><description><b>文字列</b></description><description>時間 (h) の記号です</description></item>。
              <description><b>ブール値</b></description>の
                <b>True の</b>場合、日付の順序は月-日-年の
              <description><item><term><b>xlMDY</b></term>の日付を長い形式で表示されます。場合は<b>false を指定</b>日付の順序は日-月-年です
            </item></description>。
            <item><term><b>xlMinuteCode</b></term><description><b>文字列</b></description><description>分の記号 (m) です</description></item>。
            <item><term><b>xlMonthCode</b></term><description><b>文字列</b></description><description>の月の記号 (m) です</description></item>。
            <item><term><b>xlMonthLeadingZero</b></term>の
              <description><b>ブール値</b></description><description>の
                <b>True の</b>場合 (、月を表す数値として) の月に先行するゼロが表示されます</description></item>。
            <item><term><b>xlMonthNameChars</b></term><description>の
              <description><b>整数</b></description>常にでは、下位互換性のための 3 つの文字を返します。月の省略名は、Windows から読み取られ、任意の長さにすることができます</description></item>。
            <item><term><b>xlSecondCode</b></term><description><b>文字列</b></description><description>2 番目の記号 (s) です</description></item>。
            <item><term><b>xlTimeSeparator</b></term><description><b>文字列</b></description><description>時刻の区切り記号 (:).</description></item><item><term><b>xlTimeLeadingZero</b></term><description><b>ブール</b></description><description>場合は
                <b>true を指定</b>時刻に先行ゼロを表示します</description></item>。
            <item><term><b>xlWeekdayNameChars</b></term><description>の
              <description><b>整数</b></description>常にでは、下位互換性のための 3 つの文字を返します。曜日の省略名は、Windows から読み取られ、任意の長さにすることができます</description></item>。
            <item><term><b>xlYearCode</b></term><description><b>文字列</b></description><description>(y) の表示形式での年のシンボルです</description></item>。
          <para>測定システム</para><description><b>ブール値</b></description><b>True</b>メトリック システムを使用する場合は
              <description><list type="table"><item><term><b>xlMetric</b></term><b>False</b>場合は、英語の測定システムを使用している
            </item></list>。
            <item><term><b>xlNonEnglishFunctions</b></term><description><b>ブール</b></description><description><b>True の</b>場合は英語でない関数を表示している</description></item>。
          <para>区切り記号</para><list type="table"><item><term><b>xlAlternateArraySeparator</b></term><description><b>文字列</b></description><description>現在の配列の区切り文字は、小数点の記号と同じ場合に使用される代替配列区切り</description></item>。
            <item><term><b>xlColumnSeparator</b></term><description><b>文字列</b></description><description>配列リテラルで列の区切り文字を使用します</description></item>。
            <item><term><b>xlDecimalSeparator</b></term><description><b>文字列</b></description><description>桁区切り記号</description></item>。
            <item><term><b>xlListSeparator</b></term><description><b>文字列</b></description><description>リストの区切り記号</description></item>。
            <item><term><b>xlRowSeparator</b></term><description><b>文字列</b></description><description>配列リテラルで行区切り文字を使用します</description></item>。
            <item><term><b>xlThousandsSeparator</b></term><description><b>文字列</b></description><description>桁区切り記号</description></item></list>。
          <para>記号、区切り記号、および通貨の書式が上記の表に示すように、言語や地理的な場所で使用するものと異なる場合があり、選択した言語サポート (たとえば、日本語) によっては使用できない場合がありますかインストールします</para>。
          <para></para></description></description></description></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-590">
              <para>Brackets and Braces</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlLeftBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left brace ({) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlLeftBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left bracket ([) in R1C1-style relative references.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase row letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right brace (}) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right bracket (]) in R1C1-style references.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase row letter (for R1C1-style references).</description>
                </item>
              </list>
              <para>Country/Region Settings</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCountryCode</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Country/Region version of Microsoft Excel.</description>
                </item>
                <item>
                  <term>
                    <b>xlCountrySetting</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Current country/region setting in the Windows Control Panel.</description>
                </item>
                <item>
                  <term>
                    <b>xlGeneralFormatName</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Name of the General number format.</description>
                </item>
              </list>
              <para>Currency</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCurrencyBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in currency formats.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyLeadingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if leading zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyMinusSign</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyNegative</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencySpaceBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a space is added before the currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyTrailingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if trailing zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlNoncurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in non-currency formats.</description>
                </item>
              </list>
              <para>Date and Time</para>
              <list type="table">
                <item>
                  <term>
                    <b>xl24HourClock</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</description>
                </item>
                <item>
                  <term>
                    <b>xl4DigitYears</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</description>
                </item>
                <item>
                  <term>
                    <b>xlDateOrder</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</description>
                </item>
                <item>
                  <term>
                    <b>xlDateSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Date separator (/).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Day symbol (d).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>True if a leading zero is displayed in days.</description>
                </item>
                <item>
                  <term>
                    <b>xlHourCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Hour symbol (h).</description>
                </item>
                <item>
                  <term>
                    <b>xlMDY</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</description>
                </item>
                <item>
                  <term>
                    <b>xlMinuteCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Minute symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Month symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlSecondCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Second symbol (s).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Time separator (:).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in times.</description>
                </item>
                <item>
                  <term>
                    <b>xlWeekdayNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlYearCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Year symbol in number formats (y).</description>
                </item>
              </list>
              <para>Measurement Systems</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlMetric</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</description>
                </item>
                <item>
                  <term>
                    <b>xlNonEnglishFunctions</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re not displaying functions in English.</description>
                </item>
              </list>
              <para>Separators</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlAlternateArraySeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlColumnSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate columns in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlDecimalSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlListSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>List separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlRowSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate rows in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlThousandsSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Zero or thousands separator.</description>
                </item>
              </list>
              <para>Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="bd89b-591">
            <b>範囲</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-591">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="bd89b-592">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-592">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-593">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-593">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="bd89b-594">
            <b>範囲</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-594">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="bd89b-595">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-595">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-596">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-596">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="bd89b-597">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-597">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-598">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-598">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-599">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-599">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="bd89b-600">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-600">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-601">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-601">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-602">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-602">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="bd89b-603">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-603">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-604">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-604">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-605">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-605">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="bd89b-606">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-607">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-607">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-608">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-608">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="bd89b-609">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-609">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-610">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-610">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-611">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-611">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="bd89b-612">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-612">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-613">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-613">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-614">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-614">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="bd89b-615">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-615">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-616">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-616">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-617">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-617">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="bd89b-618">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-618">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-619">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-619">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-620">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-620">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="bd89b-621">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-621">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-622">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-622">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-623">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-623">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="bd89b-624">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-624">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-625">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-625">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-626">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-626">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="bd89b-627">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-627">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-628">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-628">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-629">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-629">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="bd89b-630">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-630">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-631">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-631">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-632">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-632">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="bd89b-633">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-633">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-634">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-634">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-635">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-635">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="bd89b-636">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-636">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-637">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-637">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-638">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-638">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="bd89b-639">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-639">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-640">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-640">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-641">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-641">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="bd89b-642">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-642">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-643">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-643">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-644">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-644">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="bd89b-645">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-645">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-646">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-646">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-647">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-647">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="bd89b-648">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-648">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-649">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-649">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-650">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-650">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="bd89b-651">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-651">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-652">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-652">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-653">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-653">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="bd89b-654">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-654">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-655">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-655">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-656">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-656">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="bd89b-657">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-657">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-658">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-658">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-659">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-659">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="bd89b-660">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-660">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-661">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-661">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-662">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-662">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="bd89b-663">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-663">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-664">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-664">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-665">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-665">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="bd89b-666">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-666">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-667">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-667">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-668">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-668">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="bd89b-669">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-669">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-670">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-670">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-671">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-671">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="bd89b-672">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-672">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-673">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-673">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-674">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-674">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="bd89b-675">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-675">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-676">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-676">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-677">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-677">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="bd89b-678">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-678">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-679">交差する範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-679">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="bd89b-680">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-680">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-681">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />を 2 つ以上の範囲の四角形の交差部分を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-681">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-682">保護されたビューのウィンドウで、指定されたブックが開いているかどうかを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-682">Gets whether the specified workbook is open in a Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-683">
            <b>true の</b>場合は、保護されたビュー] ウィンドウで、指定されたブックが開いています。それ以外の場合、 <b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-683">
              <b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-684">
            <para>読み取り専用</para>
            <para>使用、 <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> 、保護されたビュー] ウィンドウで、ブックが開いたかどうかを決定するプロパティ</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-684">
              <para>Read-only</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-685">
            <b>True の</b>Microsoft Excel が循環参照を解決するのには反復処理を使用する場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-685">
              <b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-686">返します、<see cref="T:Microsoft.Office.Core.LanguageSettings" />オブジェクトで、Microsoft Excel の言語設定に関する情報が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-686">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-687">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-687">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-688">返すまたは、警告が発生する以外の操作で必要なセルの最大数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-688">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span>
          </span>
          <span data-ttu-id="bd89b-689">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-689">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-690">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-690">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-691">Microsoft Excel のメイン ウィンドウの左端から画面の左端からポイント単位での距離です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-691">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-692">
            <para>ウィンドウが最大化されている場合、このプロパティは、ウィンドウの境界線の幅に基づいて、変化する負の数を返します。このプロパティを 0 (ゼロ) に設定すると、ウィンドウがアプリケーション ウィンドウを最大表示したかどうかはそれよりも少し小さくなります。つまり、このプロパティが 0 (ゼロ) の場合は、Microsoft Excel のメイン ウィンドウの左枠線だけではほとんど表示されません、画面にします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-692">
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-693">最後の区切り記号が [ライブラリ] フォルダーには、パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-693">Returns the path to the Library folder but without the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="bd89b-694">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-695">マクロ名またはユーザー定義関数 (UDF) を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-695">The macro name or the name of a user defined function (UDF).</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="bd89b-696">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-697">マクロの説明を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-697">The macro description.</span>
          </span>
        </param>
        <param name="HasMenu">
          <span data-ttu-id="bd89b-698">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-698">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-699">この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-699">This argument is ignored.</span>
          </span>
        </param>
        <param name="MenuText">
          <span data-ttu-id="bd89b-700">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-700">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-701">この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-701">This argument is ignored.</span>
          </span>
        </param>
        <param name="HasShortcutKey">
          <span data-ttu-id="bd89b-702">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-702">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-703">
            <b>真</b>のマクロにショートカット キーを割り当てるには (<paramref name="ShortcutKey" />も指定する必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-703">
              <b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span>
          </span>
          <span data-ttu-id="bd89b-704">この引数が<b>False</b>の場合は、マクロをショートカット キーは割り当てられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-704">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span>
          </span>
          <span data-ttu-id="bd89b-705">マクロでは、ショートカット キーが割り当てられている場合は、この引数を<b>False</b>に設定するとショートカット キーが削除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-705">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span>
          </span>
          <span data-ttu-id="bd89b-706">既定値は <b>False</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-706">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="bd89b-707">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-707">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-708">必要な場合<paramref name="HasShortcutKey" />は<b>True</b>です。それ以外の場合は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-708">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span>
          </span>
          <span data-ttu-id="bd89b-709">ショートカット キーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-709">The shortcut key.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="bd89b-710">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-710">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-711">既存のマクロ関数のカテゴリを指定する整数 (財務、日付&amp;時間、またはユーザー定義など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-711">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span>
          </span>
          <span data-ttu-id="bd89b-712">組み込みのカテゴリに割り当てられている整数値の「解説」セクションを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-712">See the remarks section to determine the integers that are mapped to the built-in categories.</span>
          </span>
          <span data-ttu-id="bd89b-713">ユーザー設定のカテゴリを示す文字列を指定することもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-713">You can also specify a string for a custom category.</span>
          </span>
          <span data-ttu-id="bd89b-714">文字列を指定する場合は、関数の挿入] ダイアログ ボックスに表示されるカテゴリ名として扱われます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-714">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span>
          </span>
          <span data-ttu-id="bd89b-715">カテゴリ名が使用されていない場合は、その名前の新しいカテゴリが定義されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-715">If the category name has never been used, a new category is defined with that name.</span>
          </span>
          <span data-ttu-id="bd89b-716">カテゴリ名を使用すると、組み込みの名前と同じが組み込みのカテゴリにユーザー定義関数がマップされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-716">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span>
          </span>
        </param>
        <param name="StatusBar">
          <span data-ttu-id="bd89b-717">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-718">マクロ実行時に表示されるステータス バー テキストを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-718">The status bar text for the macro.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="bd89b-719">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-719">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-720">マクロに登録するヘルプ トピックのコンテキスト ID を、整数で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-720">An integer that specifies the context ID for the Help topic assigned to the macro.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="bd89b-721">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-721">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-722">定義されているヘルプ トピックを含むヘルプ ファイルの名前<paramref name="HelpContextId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-722">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-723">マクロ オプション] ダイアログ ボックスのオプションに対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-723">Corresponds to options in the Macro Options dialog box.</span>
          </span>
          <span data-ttu-id="bd89b-724">関数の挿入] ダイアログ ボックス内の組み込みまたは新しいカテゴリのユーザー定義関数 (UDF) を表示するのにはこのメソッドを使用することもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-724">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-725">
            <para>次の表に整数値とそれは、Category パラメーターで使用できる組み込みのカテゴリにマップされます</para>。
          <list type="table"><item><term>1</term><description><b>財務</b></description></item><item><term>2</term><description><b>日付&amp;時間</b></description></item><item><term>3</term><description><b>マス&amp;三角</b></description></item><item><term>4</term><description><b>統計</b></description></item><item><term>5</term><description><b>検索&amp;参照</b></description></item><item><item><term>6</term><description><b>データベース</b></description></item><item><term>7</term><description><b>テキスト</b></description></item><term>8</term><description><b>論理</b></description></item><item><description><b>情報</b></description>の
              <term>9</term></item><item><term>10</term><description><b>コマンド</b></description></item><item><item><description><b>をカスタマイズする</b></description><term>11</term>の
            </item><term>12</term><description><b>マクロ コントロール</b></description></item><item><term>13</term><description><b>DDE および外部</b></description></item>の
            <item><term>14</term>の
              <description><b>ユーザー定義</b></description></item><item><term>15</term><description>最初ユーザー設定のカテゴリ</description></item><item><term>16</term><description>2 番目のユーザー設定のカテゴリ</description></item><item><description>3 番目のユーザー設定のカテゴリ</description>である
              <term>17</term></item><item><term>18</term><description>4 番目のユーザー設定のカテゴリ</description></item><item><term>19</term><description>5 番目のユーザー設定カテゴリ</description></item><item><term>20</term><description>6 番目のユーザー設定のカテゴリ</description></item><item><term>21</term><description>7 番目のユーザー設定のカテゴリ</description>の
            </item><item><description>8 番目のユーザー設定のカテゴリ</description>である
              <term>22</term></item><item><term>23</term><description>9 番目のユーザー設定カテゴリ</description></item><item><term>24</term><description>10 番目のユーザー設定の分類</description></item><item><description>11 番目のユーザー設定のカテゴリ</description>である
              <term>25</term></item><item><term>26</term><description>12 番目のユーザー設定のカテゴリ</description></item><item><term>27</term><description>Thirteenthユーザー設定のカテゴリ</description></item><item><term>28</term><description>14 番目のユーザー設定の分類</description></item><item><description>15 番目のユーザー設定のカテゴリ</description>である
              <term>29</term></item><item><term>30</term><description>16 番目のユーザー設定のカテゴリ</description></item><item><term>31</term><description>17 番目のユーザー設定のカテゴリ</description></item><item><term>32</term><description>18 番目のユーザー設定のカテゴリ</description></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-725">
              <para>The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>
                    <b>Financial</b>
                  </description>
                </item>
                <item>
                  <term>2</term>
                  <description>
                    <b>Date &amp; Time</b>
                  </description>
                </item>
                <item>
                  <term>3</term>
                  <description>
                    <b>Math &amp; Trig</b>
                  </description>
                </item>
                <item>
                  <term>4</term>
                  <description>
                    <b>Statistical</b>
                  </description>
                </item>
                <item>
                  <term>5</term>
                  <description>
                    <b>Lookup &amp; Reference</b>
                  </description>
                </item>
                <item>
                  <term>6</term>
                  <description>
                    <b>Database</b>
                  </description>
                </item>
                <item>
                  <term>7</term>
                  <description>
                    <b>Text</b>
                  </description>
                </item>
                <item>
                  <term>8</term>
                  <description>
                    <b>Logical</b>
                  </description>
                </item>
                <item>
                  <term>9</term>
                  <description>
                    <b>Information</b>
                  </description>
                </item>
                <item>
                  <term>10</term>
                  <description>
                    <b>Commands</b>
                  </description>
                </item>
                <item>
                  <term>11</term>
                  <description>
                    <b>Customizing</b>
                  </description>
                </item>
                <item>
                  <term>12</term>
                  <description>
                    <b>Macro Control</b>
                  </description>
                </item>
                <item>
                  <term>13</term>
                  <description>
                    <b>DDE/External</b>
                  </description>
                </item>
                <item>
                  <term>14</term>
                  <description>
                    <b>User Defined</b>
                  </description>
                </item>
                <item>
                  <term>15</term>
                  <description>First custom category</description>
                </item>
                <item>
                  <term>16</term>
                  <description>Second custom category</description>
                </item>
                <item>
                  <term>17</term>
                  <description>Third custom category</description>
                </item>
                <item>
                  <term>18</term>
                  <description>Fourth custom category</description>
                </item>
                <item>
                  <term>19</term>
                  <description>Fifth custom category</description>
                </item>
                <item>
                  <term>20</term>
                  <description>Sixth custom category</description>
                </item>
                <item>
                  <term>21</term>
                  <description>Seventh custom category</description>
                </item>
                <item>
                  <term>22</term>
                  <description>Eighth custom category</description>
                </item>
                <item>
                  <term>23</term>
                  <description>Ninth custom category</description>
                </item>
                <item>
                  <term>24</term>
                  <description>Tenth custom category</description>
                </item>
                <item>
                  <term>25</term>
                  <description>Eleventh custom category</description>
                </item>
                <item>
                  <term>26</term>
                  <description>Twelfth custom category</description>
                </item>
                <item>
                  <term>27</term>
                  <description>Thirteenth custom category</description>
                </item>
                <item>
                  <term>28</term>
                  <description>Fourteenth custom category</description>
                </item>
                <item>
                  <term>29</term>
                  <description>Fifteenth custom category</description>
                </item>
                <item>
                  <term>30</term>
                  <description>Sixteenth custom category</description>
                </item>
                <item>
                  <term>31</term>
                  <description>Seventeenth custom category</description>
                </item>
                <item>
                  <term>32</term>
                  <description>Eighteenth custom category</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-726">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-726">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-727">Excel で確立した MAPI メール セッションを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-727">Closes a MAPI mail session established by Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="bd89b-728">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-728">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-729">メール アカウント名または Microsoft Exchange のプロファイル名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-729">The mail account name or Microsoft Exchange profile name.</span>
          </span>
          <span data-ttu-id="bd89b-730">この引数を省略した場合は、既定のメール アカウント名が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-730">If this argument is omitted, the default mail account name is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="bd89b-731">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-731">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-732">メール アカウントのパスワードを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-732">The mail account password.</span>
          </span>
          <span data-ttu-id="bd89b-733">Microsoft Exchange では、この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-733">This argument is ignored in Microsoft Exchange.</span>
          </span>
        </param>
        <param name="DownloadNewMail">
          <span data-ttu-id="bd89b-734">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-735">
            <b>True</b> を指定すると、メールは即時にダウンロードされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-735">
              <b>True</b> to download new mail immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p258">MAPI Mail または Exchange にログ インして、メール セッションを確立します。Mail が起動されていない場合は、メールやドキュメントの回覧機能を使う前に、このメソッドでメール セッションを確立しておく必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p258">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-738">
            <para>Microsoft Excel が新しいセッションを確立する前に、以前に確立して、メール セッションをログオフします</para>。
          <para>をシステムの既定のメール セッションに便乗すると、名前とパスワードの両方のパラメーターを省略します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-738">
              <para>Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</para>
              <para>To piggyback on the system default mail session, omit both the name and password parameters.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-739">MAPI メール セッション番号を 16 進数 (アクティブなセッションがある場合)、文字列として返しますか、セッションが存在しない場合は<b>Null</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-739">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-740">
            <para>このプロパティは、(Microsoft Mail のメール セッション番号は返されません)、Microsoft Excel で作成されたメール セッションにだけ適用されます</para>。
          <para>メールのメール システムでこのプロパティは使用されません</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-740">
              <para>This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</para>
              <para>This property isn't used on PowerTalk mail systems.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-741">ホスト マシンにインストールされているメール システムを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-741">Returns the mail system that's installed on the host machine.</span>
          </span>
          <span data-ttu-id="bd89b-742">読み取り専用<see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-742">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-743">
            <para>
              <b>可能</b>には、これらの<b>可能</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlMAPI</b>
            </para>
            <para>
              <b>xlNoMailSystem</b>
            </para>
            <para>
              <b>xlPowerTalk</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-743">
              <para>
                <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</para>
              <para>
                <b>xlMAPI</b>
              </para>
              <para>
                <b>xlNoMailSystem</b>
              </para>
              <para>
                <b>xlPowerTalk</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-744">
            <b>True の</b>場合は別の国/地域 (たとえば、A4) の標準の用紙サイズの書式化された文書が自動的に調整、国/地域の標準用紙サイズ (レターなど) で正しく印刷できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-744">
              <b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-745">
            <b>真</b>数値演算コプロセッサがある場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-745">
              <b>True</b> if a math coprocessor is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-746">Microsoft Excel が循環参照を解決するよう、各繰り返しの間の変化の最大の値を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-746">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-747">
            <para>、<see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />プロパティは、Microsoft Excel が循環参照を解決するときに使用できるイテレーションの最大数を設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-747">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-748">返すまたは、Microsoft Excel が循環参照を解決するのには使用できるイテレーションの最大数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-748">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-749">
            <para>、<see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />プロパティは、Microsoft Excel が循環参照を解決するときは、各繰り返しの間の変化の最大の値を設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-749">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-750">アプリケーションで使用する測定単位を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-750">Specifies the measurement unit used in the application.</span>
          </span>
          <span data-ttu-id="bd89b-751">読み取り/書き込みの<b>整数</b>値の定数に対応する、<see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" />列挙体です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-751">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-752">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-752">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-753">(バイト単位) を使用する Microsoft Excel をまだ使用可能なメモリ量を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-753">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-754">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-754">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-755">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-755">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-756">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-756">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-757">アプリケーションの複数のインスタンスを 1 つのインスタンスにマージする場合は true です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-757">True to merge multiple instances of the application into a single instance.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-758">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-758">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-759">
            <b>True の</b>場合、マウスが利用可能なです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-759">
              <b>True</b> if a mouse is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-760">
            <b>True</b>を入力してください (RETURN) キーが押されるとすぐにアクティブ セルを移動する場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-760">
              <b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-761">
            <para>使用して、<see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />は、アクティブ セルの移動方向を指定するプロパティ</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-761">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-762">ユーザーが ENTER を押したときにアクティブなセルが移動する方向を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-762">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span>
          </span>
          <span data-ttu-id="bd89b-763">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-763">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-764">
            <para>
              <b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlDown</b>
            </para>
            <para>
              <b>xlToLeft</b>
            </para>
            <para>
              <b>xlToRight</b>
            </para>
            <para>
              <b>xlUp</b>
            </para>
            <para>場合、<see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />プロパティは<b>false を指定</b>、選択範囲が、まったく移動しない方法に関係なく<b>MoveAfterReturnDirection</b>プロパティを設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-764">
              <para>
                <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</para>
              <para>
                <b>xlDown</b>
              </para>
              <para>
                <b>xlToLeft</b>
              </para>
              <para>
                <b>xlToRight</b>
              </para>
              <para>
                <b>xlUp</b>
              </para>
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-765">返します、 <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> Excel 2007 で新しく導入されたマルチ スレッド再計算設定を制御するオブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-765">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span>
          </span>
          <span data-ttu-id="bd89b-766">読み取り専用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-766">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-767">オブジェクトの名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-767">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-768">返します、<see cref="T:Microsoft.Office.Interop.Excel.Names" />作業中のブックのすべての名前を表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-768">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-769">テンプレートが保存されているネットワーク パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-769">Returns the network path where templates are stored.</span>
          </span>
          <span data-ttu-id="bd89b-770">ネットワーク パスが存在しない場合、このプロパティは空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-770">If the network path doesn’t exist, this property returns an empty string.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-771">
            <b>NewFile</b>オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-771">Returns a <b>NewFile</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-p264">指定された Visual Basic キーワードは Macintosh でのみ使用されます。このキーワードに関する詳細については、 Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p264">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-774">返します、 <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> 、最新のクエリ テーブルまたはピボット テーブル レポートの操作によって生成されたすべての ODBC エラーを含むコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-774">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-775">
            <para>、同時に実行する 1 つ以上のクエリがある場合、<see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" />コレクションには、前回終了したクエリの ODBC エラーが含まれています</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-775">
              <para>If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-776">ODBC クエリの時間制限を秒単位で設定を取得または取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-776">Returns or sets the ODBC query time limit in seconds.</span>
          </span>
          <span data-ttu-id="bd89b-777">既定値は、45 秒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-777">The default value is 45 seconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-778">
            <para>値が 0 (ゼロ) が時間制限がないことを示します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-778">
              <para>The value 0 (zero) indicates an indefinite time limit.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-779">返します、<see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" />コレクションを最新の OLE DB クエリによって返されるエラー情報を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-779">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-780">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-780">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-781">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-781">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-782">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-782">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-783">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-783">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="bd89b-784">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-784">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-785">押すキーを示す文字列を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-785">A string indicating the key to be pressed.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="bd89b-786">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-787">実行するプロシージャの名前を示す文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-787">A string indicating the name of the procedure to be run.</span>
          </span>
          <span data-ttu-id="bd89b-788">場合<paramref name="Procedure" />は""(空文字列)、何も起こりませんと<paramref name="Key" />が押されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-788">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span>
          </span>
          <span data-ttu-id="bd89b-789">
            <b>OnKey</b>のこのフォームは、Microsoft Excel では、キーストロークの通常の結果を変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-789">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="bd89b-790">場合<paramref name="Procedure" />を省略すると、 <paramref name="Key" /> 、Microsoft Excel、 <b>OnKey</b>メソッドで行った割り当てをオフにする、特殊なキーで、通常の結果を元に戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-790">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-791">特定のキー、またはキーの組み合わせを押したときに、指定されたプロシージャを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-791">Runs a specified procedure when a particular key or key combination is pressed.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-792">
            <para>
              <paramref name="Key" />の引数は、alt キーを押し、ctrl キーまたは shift キーを押し、またはこれらのキーの任意の組み合わせと共に、1 つのキーを指定できます。各キーは、文字"a"など、1 つまたは複数の文字で表されます、"{}"の入力、ENTER キーまたは</para>。
          <para>(ENTER キーまたは TAB など)、対応するキーを押したときに表示されていない文字を指定するのには次の表に記載されているコードを使用します。テーブル内の各コードは、キーボードのキーが 1 つを表します</para>。
          <list type="table"><item><term>バック</term><description>{backspace キー} または {BS}</description></item><item><description>{分割}</description><term>分割</term></item><item><term>CAPS LOCK</term><description>{CAPSLOCK}</description></item><item><term>クリア</term><description>{クリア}</description></item><item><term>DEL キーまたは</term><description>{削除} または {DEL}</description></item><item><description>{ダウン}</description><term>↓</term></item><item><term>終了</term><description>{終了}</description></item><item><term>ENTER</term><description>~ (チルダ)</description></item><item><description>指定}</description>の
              <term>入力 (テンキー)</term></item><item><term>ESC</term><description>{エスケープ} または {ESC}</description></item><item><term>F15 を通じて F1</term><description>{F1} から {F15}</description></item><item><description>{ヘルプ}</description><term>ヘルプ</term></item><item><description>{ホーム}</description><term>ホーム</term></item><item><term>INS</term>は
              <description>{挿入}</description></item><item><term>左向き矢印</term><description>{左}</description></item><item><term>NUM LOCK</term><description>{NUMLOCK}</description></item><item><term>ページ ダウン</term><description>{しました。</description></item><item><term>ページ アップ</term><description>{PGUP}</description></item><item><description>{返す}</description><term>を返します</term></item><item><term>右向き矢印</term><description>{右}</description></item><item><term>スクロール ロック</term><description>{SCROLLLOCK}</description></item><item><term>タブ</term><description>] タブ {}</description></item><item><term>↑</term><description>{を}</description></item></list><para>Shift キーや ctrl キーと alt キーと組み合わせるキーを指定することもできます。別のキーと組み合わせるキーを指定するには、次の表を使用します</para>。
          <list type="table"><item><term>SHIFT</term><description>+ (プラス記号)</description></item><item><term>CTRL</term><description>^ (キャレット)</description></item><item><description>% (パーセント記号)</description>の
              <term>alt キーを押し</term></item></list><para>には、特殊文字のいずれかのプロシージャを割り当てるには (+、^、% というように)、文字を中かっこで囲みます</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-792">
              <para>The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para>To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="bd89b-793">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-793">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-794">繰り返し] コマンド ([編集] メニュー) に表示されるテキストです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-794">The text that appears with the Repeat command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="bd89b-795">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-795">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-796">繰り返し] コマンド ([編集] メニュー) を選択するときに実行するプロシージャの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-796">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-797">このプロパティを設定する手順を実行した後、[繰り返し] コマンド ([編集] メニュー) を選択した場合に実行されるプロシージャの名前、[繰り返し] メニュー項目を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-797">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-798">
            <para>最近実行されたプロシージャを繰り返しコマンドが繰り返されます場合は、プロシージャは、 <b>OnRepeat</b>メソッドを使用していない、します</para>。
          <para>プロシージャは、 <b>OnRepeat</b>を使用する必要があり、<see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />の繰り返しを防止し、プロシージャで実行されるプロシージャの元に戻す、メソッドの最後です</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-798">
              <para>If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</para>
              <para>The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-799">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-799">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-800">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-800">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime">
          <span data-ttu-id="bd89b-801">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-801">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-802">プロシージャを実行する時刻を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-802">The time when you want this procedure to be run.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="bd89b-803">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-803">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-804">実行するプロシージャを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-804">The name of the procedure to be run.</span>
          </span>
        </param>
        <param name="LatestTime">
          <span data-ttu-id="bd89b-805">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-805">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-806">プロシージャを実行できる最も遅い時刻です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-806">The latest time at which the procedure can be run.</span>
          </span>
          <span data-ttu-id="bd89b-807">などの場合<paramref name="LatestTime" />に設定されて<paramref name="EarliestTime" />30 と Microsoft Excel では準備完了、コピー、切り取り、または検索モードで + <paramref name="EarliestTime" /> Microsoft Excel で 30 秒間の最初の手順を完了を待ってから別のプロシージャを実行するため。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-807">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span>
          </span>
          <span data-ttu-id="bd89b-808">Microsoft Excel でない場合モードで 30 秒以内では、プロシージャが実行されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-808">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span>
          </span>
          <span data-ttu-id="bd89b-809">この引数を省略すると、Microsoft Excel は、プロシージャを実行するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-809">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span>
          </span>
        </param>
        <param name="Schedule">
          <span data-ttu-id="bd89b-810">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-811">
            <b>True</b>新しい<b>OnTime</b>プロシージャをスケジュールするのには。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-811">
              <b>True</b> to schedule a new <b>OnTime</b> procedure.</span>
          </span>
          <span data-ttu-id="bd89b-812">
            <b>False を指定</b>するをオフに設定したプロシージャです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-812">
              <b>False</b> to clear a previously set procedure.</span>
          </span>
          <span data-ttu-id="bd89b-813">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-813">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-814">指定された時刻 (特定の日時、または特定の期間の経過後) にプロシージャを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-814">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-815">今から数えた時間の特定の金額の有効期限が経過したときに実行するようスケジュールするのには Now+TimeValue(time) の使用を<para>。TimeValue(time) を使用して特定の時刻に実行するようスケジュールを設定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-815">
              <para>Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed. Use TimeValue(time) to schedule something to be run a specific time.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="bd89b-816">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-816">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-817">[元に戻す] コマンド ([編集] メニュー) に表示されるテキストです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-817">The text that appears with the Undo command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="bd89b-818">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-818">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-819">[元に戻す] コマンド ([編集] メニュー) を選択するときに実行されるプロシージャの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-819">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-820">このプロパティを設定する手順を実行した後、元に戻す] コマンド ([編集] メニュー) を選択するときに実行されるプロシージャの名前、元に戻す操作のテキストを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-820">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-821">
            <para>プロシージャは、 <b>OnUndo</b>メソッドを使用していない、元に戻すコマンドが無効になります</para>。
          <para>プロシージャを使用する必要があります、 <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> 、 <b>OnUndo</b>メソッド最後、繰り返しを防止し、プロシージャで実行されるプロシージャの元に戻す</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-821">
              <para>If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</para>
              <para>The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-822">ウィンドウをアクティブにするたびに実行されるプロシージャの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-822">Returns or sets the name of the procedure that’s run whenever you activate a window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-823">
            <para>その他のプロシージャが、ウィンドウまたはウィンドウに切り替えるには、コマンドが DDE チャネルを通じて受信したときに切り替えると、このプロパティで指定したプロシージャは実行されません。代わりに、プロシージャがユーザーのアクションに応答、マウスでウィンドウをクリックしてをクリックするとジャンプ [編集] メニューとにします</para>。
          <para><b>OnWindow</b>プロパティで指定された手順の後、マクロが実行されますワークシートまたはマクロ シートに定義されて、複数、または最初のマクロがある場合</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-823">
              <para>The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel. Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</para>
              <para>If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-824">現在のオペレーティング システム、たとえば、「Windows (32 ビット) 4.00」の名前とバージョン番号を返しますまたは「Macintosh 7.00 ドルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-824">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-825">登録されている組織の名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-825">Returns the registered organization name.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-826">指定されたオブジェクトの親オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-826">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-827">アプリケーションの名前と最後の区切り記号を除く、アプリケーションの完全なパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-827">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-828">パス区切り文字を返します ("\")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-828">Returns the path separator character ("\").</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-829">
            <b>True の</b>場合、ピボット テーブル レポートには、選択範囲が構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-829">
              <b>True</b> if PivotTable reports use structured selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="bd89b-830">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-830">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-831">セル範囲または名前の配列のインデックス (1 ～ 4) を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-831">The index number (from 1 to 4) of the previous range or name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-832">最後の 4 つの範囲または選択した名前の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-832">Returns an array of the last four ranges or names selected.</span>
          </span>
          <span data-ttu-id="bd89b-833">配列の各要素は、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-833">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-834">
            <para>たびに移動するセルまたは範囲名] ボックスまたは、[ジャンプ] コマンド ([編集] メニュー) を使用して、またはマクロを呼び出すたびに、<see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />メソッドでは、前の範囲は、1 番目の要素として配列に追加し、配列内の他の項目は下に移動します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-834">
              <para>Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-835">取得またはプリンターとの通信がオンになっているかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-835">Gets or sets whether communication with the printer is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-836">
            <b>true の</b>場合は、プリンターとの通信になっています。それ以外の場合、 <b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-836">
              <b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-837">
            <para>
              <b>ブール値</b>読み取り/書き込み</para>。
          <para>セット、<see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />プロパティを<b>false</b> PageSetup プロパティを設定するコードの実行を高速化します。設定、<see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />プロパティに<b>は true</b> PageSetup コマンドがキャッシュされるすべてをコミットするためのプロパティを設定します。</para> 。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-837">
              <para>
                <b>boolean</b> Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties. Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-838">Microsoft Excel のグローバル一意識別子 (GUID) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-838">Returns the globally unique identifier (GUID) for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-839">
            <b>True の</b>Excel ファイルが最初に概要情報の保存を求められた場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-839">
              <b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-840">取得、<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" />アプリケーションで開いているすべての保護されたビューのウィンドウを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-840">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-841">A<see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" />アプリケーションで開いているすべての保護されたビューのウィンドウを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-841">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-842">
            <para>読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-842">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-843">返します、 <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> 、アプリケーションの迅速な分析オプションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-843">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-844">Excel を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-844">Quits Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-845">
            <para>このメソッドを使用すると、開いているブックを保存していない場合、Excel には、変更を保存するかどうかを確認するダイアログ ボックスが表示されます。<b>Quit</b>メソッドを使用する前にすべてのブックを保存することによって、または設定することによって回避することができます、<see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />プロパティを<b>False</b>にします。ブックを保存しないで終了すると、このプロパティが<b>False</b>の場合 Microsoft Excel ではダイアログ ボックスを表示しません。保存せず終了します</para>。
          <para>を設定する場合、<see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />ディスクに Microsoft Excel ブックを保存せず<b>に</b>ブックのプロパティは、ブックを保存するように要求することがなく終了します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-845">
              <para>If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes. You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</para>
              <para>If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-846">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-846">Reserved for internal use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-847">返します。 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-847">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="bd89b-848">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-848">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-849">範囲の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-849">The name of the range.</span>
          </span>
          <span data-ttu-id="bd89b-850">マクロの言語での A1 形式の参照でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-850">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="bd89b-851">それは、範囲演算子 (コロン)、交差演算子 (スペース)、または union 演算子 (コンマ) を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-851">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="bd89b-852">ドル記号 ($) を含めることもできますが、無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-852">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="bd89b-853">範囲の任意の部分でローカルに定義された名前を使用することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-853">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="bd89b-854">名を使用する場合、名前は、マクロの言語であると見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-854">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="bd89b-855">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-855">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-856">範囲の左上隅と右下隅のセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-856">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="bd89b-857">
            <b>Range</b>オブジェクトを含む、1 つのセル、列全体、または全体の行、またはマクロの言語で単一のセルの名前を示す文字列にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-857">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-858">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 、セルまたはセル範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-858">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-859">プロパティは<b>Range</b>オブジェクトを基準にして、 <para>。たとえば、選択範囲がセル C3 の場合は、Selection.Range("B1") を返します。 セル D3 から返された<b>Range</b>オブジェクトを基準にすることがあるため、<see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" />プロパティ。その一方で、コードの ActiveSheet.Range("B1") を常に返します、セル B1</para> 。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-859">
              <para>The property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-860">Microsoft Excel アプリケーションは準備が完了するとき<b>は True</b>を返します。<b>False</b> Excel アプリケーションの準備ができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-860">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-861">返します、<see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" />最近使用したファイルのリストを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-861">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode">
          <span data-ttu-id="bd89b-862">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-862">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-863">Visual Basic モジュールにマクロの記録を記録する場合に記録される Visual Basic コードを指定する文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-863">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span>
          </span>
          <span data-ttu-id="bd89b-864">文字列が 1 行に記録されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-864">The string will be recorded on one line.</span>
          </span>
          <span data-ttu-id="bd89b-865">文字列にキャリッジ リターン (ASCII 文字 10、またはコード内の Chr$(10)) が含まれている場合は、複数の行に記録されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-865">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span>
          </span>
        </param>
        <param name="XlmCode">
          <span data-ttu-id="bd89b-866">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-866">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-867">この引数は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-867">This argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-868">マクロ記録機能がオンであれば、コードを記録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-868">Records code if the macro recorder is on.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-869">
            <para>
              <b>RecordMacro</b>メソッドは、作業中のモジュールに記録できません ( <b>RecordMacro</b>メソッドが存在するモジュール).</para>
            <para>(たとえば、ユーザーは、ダイアログ ボックスをキャンセルした) 場合は、録画を防ぐためには、2 つの空の文字列では、この関数を呼び出します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-869">
              <para>The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</para>
              <para>To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-870">
            <b>True の</b>場合、相対参照を使用してマクロを記録<b>False</b>を記録する場合は絶対です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-870">
              <b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-871">A1 または R1C1 参照形式で、Microsoft Excel がセル参照および行と列の見出しを表示する方法を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-871">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span>
          </span>
          <span data-ttu-id="bd89b-872">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-872">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-873">
            <para>
              <b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlA1</b>
            </para>
            <para>
              <b>xlR1C1</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-873">
              <para>
                <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</para>
              <para>
                <b>xlA1</b>
              </para>
              <para>
                <b>xlR1C1</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="bd89b-874">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-874">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-875">DLL またはコード リソースの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-875">The name of the DLL or code resource.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="bd89b-876">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-876">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-877">関数の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-877">The name of the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-878">いずれかのダイナミック リンク ライブラリ (Dll) の関数についての情報を取得またはコード リソースのレジスタまたは REGISTER.ID のマクロ関数を使用して登録されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-878">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-879">
            <para>これらの引数を指定しない場合、このプロパティは、すべての登録されている関数の一覧を格納する配列を返します。次の表に示すように、配列内の各行に 1 つの関数についての情報が含まれています</para>。
          <list type="table"><item><term>1</term><description>DLL またはコード リソースの名前</description></item><item><description>の DLL またはコード リソースのプロシージャの名前</description>である
              <term>2</term></item><item><term>3</term><description>の戻り値の値と番号、およびデータ型のデータ型を指定する文字列引数</description></item></list><para>登録された関数がない場合、このプロパティは<b>Null</b>を返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-879">
              <para>If you don’t specify these arguments, this property returns an array that contains a list of all registered functions. Each row in the array contains information about a single function, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The name of the DLL or code resource</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The name of the procedure in the DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Strings specifying the data types of the return values and the number and data types of the arguments</description>
                </item>
              </list>
              <para>If there are no registered functions, this property returns <b>Null</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="bd89b-880">
            <b>文字列</b> が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-880">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="bd89b-881">読み込む XLL ファイルの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-881">Specifies the name of the XLL to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-882">XLL ファイルのコード リソースを読み込み、その中に含まれた関数とコマンドを自動的に登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-882">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-883">
            <para>コード リソースが正常に読み込まれている場合、このメソッドが<b>True</b>を返します; それ以外の場合、メソッドは<b>False</b>を返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-883">
              <para>This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-884">最後のユーザー インターフェイスの操作を繰り返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-884">Repeats the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-885">
            <para>このメソッドには、プロシージャを実行する前にユーザーが行った最後の操作だけが繰り返されます。プロシージャの最初の行である必要があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-885">
              <para>This method repeats only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-886">セルの書式を置換する際の交換条件を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-886">Sets the replacement criteria to use in replacing cell formats.</span>
          </span>
          <span data-ttu-id="bd89b-887">置換の基準を使用して、後続の呼び出しで、<see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />のメソッドの<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-887">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-888">(同じ受信者リストと提供情報を使用して) 同じ明細で新規のルーティングを開始できるように、回覧先をリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-888">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information).</span>
          </span>
          <span data-ttu-id="bd89b-889">このメソッドを使用する前に、ルーティングを完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-889">The routing must be completed before you use this method.</span>
          </span>
          <span data-ttu-id="bd89b-890">それ以外の場合にこのメソッドを使用すると、エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-890">Using this method at other times causes an error.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="bd89b-891">
            <para>次の使用例は、回覧が完了している場合、book1.xls ブックの回覧先をリセットします。</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-891">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="bd89b-892">
            <para>次の使用例は、回覧が完了している場合、book1.xls ブックの回覧先をリセットします。</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-892">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="bd89b-893">
            <para>次の使用例は、回覧が完了している場合、book1.xls ブックの回覧先をリセットします。</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-893">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-894">場合は<b>true</b>インテリ マウスがスクロールではなく拡大します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-894">
              <b>True</b> if the IntelliMouse zooms instead of scrolling.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-895">返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />作業中のワークシート上のすべての行を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-895">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span>
          </span>
          <span data-ttu-id="bd89b-896">作業中の文書には、ワークシートがない場合は、 <b>Rows</b>プロパティは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-896">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-897">
            <para>は、複数の選択範囲を<b>Range</b>オブジェクトに適用する場合は、このプロパティは、範囲の最初の領域のみからの行を返します。<b>範囲</b>オブジェクトに 2 つの領域がある場合など、a1: b2 および C3:D4-Selection.Rows.Count が 2、4 がありませんを返します。このプロパティを使用して、複数の選択範囲を含めることができる範囲で、範囲が複数選択するかどうかを確認するのに<b>Areas.Count</b>をテストします。である場合は、範囲の領域ごとにループします。</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-897">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4. To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection. If it is, loop over each area in the range.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-898">返します、<see cref="T:Microsoft.Office.Interop.Excel.RTD" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-898">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="bd89b-899">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-899">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-900">マクロが実行されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-900">The macro to run.</span>
          </span>
          <span data-ttu-id="bd89b-901">マクロの名前を持つ文字列は、これを<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトの場所を示す関数、または登録されている DLL (XLL) 関数のレジスタ ID です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-901">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span>
          </span>
          <span data-ttu-id="bd89b-902">文字列を使用する場合、文字列はアクティブ シートのコンテキストで評価されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-902">If a string is used, the string will be evaluated in the context of the active sheet.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="bd89b-903">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-903">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-904">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-904">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="bd89b-905">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-905">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-906">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-906">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="bd89b-907">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-907">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-908">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-908">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="bd89b-909">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-909">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-910">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-910">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="bd89b-911">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-911">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-912">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-912">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="bd89b-913">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-913">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-914">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-914">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="bd89b-915">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-915">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-916">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-916">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="bd89b-917">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-917">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-918">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-918">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="bd89b-919">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-919">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-920">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-920">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="bd89b-921">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-921">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-922">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-922">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="bd89b-923">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-923">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-924">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-924">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="bd89b-925">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-925">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-926">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-926">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="bd89b-927">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-928">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-928">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="bd89b-929">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-929">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-930">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-930">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="bd89b-931">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-931">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-932">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-932">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="bd89b-933">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-933">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-934">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-934">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="bd89b-935">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-935">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-936">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-936">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="bd89b-937">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-938">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-938">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="bd89b-939">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-939">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-940">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-940">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="bd89b-941">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-941">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-942">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-942">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="bd89b-943">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-943">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-944">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-944">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="bd89b-945">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-945">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-946">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-946">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="bd89b-947">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-947">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-948">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-948">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="bd89b-949">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-949">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-950">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-950">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="bd89b-951">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-951">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-952">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-952">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="bd89b-953">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-953">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-954">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-954">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="bd89b-955">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-955">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-956">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-956">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="bd89b-957">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-957">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-958">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-958">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="bd89b-959">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-959">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-960">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-960">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="bd89b-961">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-961">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-962">関数に渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-962">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-963">マクロの実行または関数を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-963">Runs a macro or calls a function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-964">
            <para>はこのメソッドを使用して名前付き引数を使用することはできません。位置による引数を渡す必要があります</para>。
          <para>を<b>実行</b>するメソッドは、呼び出されるマクロを返しますを返します。マクロに引数として渡されたオブジェクトが値に変換されます (適用することにより、<see cref="P:Microsoft.Office.Interop.Excel._Application.Value" />オブジェクトのプロパティ)。つまり、オブジェクトの<b>Run</b>メソッドを使用してマクロに渡すことはできません</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-964">
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns. Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object). This means that you cannot pass objects to macros by using the <b>Run</b> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-965">指定されたブックへの変更を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-965">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-966">
            <para>ブック ファイルを開くを使用して、<see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" />メソッドです</para>。
          <para></para><para>ディスクに書き込まずに保存されたブックのマーク、設定、<see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" />プロパティを<b>True</b>にします</para>。
          <para></para><para>、ブックを保存する最初の時間を使用して、 <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> 、ファイルの名前を指定します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-966">
              <para>To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</para>
              <para></para>
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</para>
              <para></para>
              <para>The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</para>
              <para></para>
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="bd89b-967">
            <para>次の使用例は、作業中のブックを保存します</para>。
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code><para>次の使用例は、開いているすべてのブックを保存して、Excel を終了します</para>。
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-967">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="bd89b-968">
            <para>次の使用例は、作業中のブックを保存します</para>。
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code><para>次の使用例は、開いているすべてのブックを保存して、Excel を終了します</para>。
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-968">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="bd89b-969">
            <para>次の使用例は、作業中のブックを保存します</para>。
          <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code><para>次の使用例は、開いているすべてのブックを保存して、Excel を終了します</para>。
          <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-969">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-970">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-970">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-971">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-971">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-972">
            <b>True</b>画面の更新が有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-972">
              <b>True</b> if screen updating is turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-973">
            <para>を有効にする画面は、コードを高速化を更新します。コードが何を参照してくださいすることはできませんより速く実行されます</para>。
          <para>コードが終了したときに<b>True</b> 、 <b>ScreenUpdating</b>プロパティを設定するのには注意してください</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-973">
              <para>Turn screen updating off to speed up your code. You won't be able to see what the code is doing, but it will run faster.</para>
              <para>Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-974">作業中のウィンドウで選択したオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-974">Returns the selected object in the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-975">
            <para>が返されるオブジェクトの型は、現在の選択内容によって異なります。 (たとえば、セルが選択した場合、このプロパティを返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクト)。<b><b>選択</b>オブジェクトが返されます何も選択されて</b>います</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-975">
              <para>The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object). The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="bd89b-976">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-976">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-977">テキストとしてアプリケーションに送信するキーまたはキーの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-977">The key or key combination you want to send to the application as text.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="bd89b-978">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-978">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-979">
            <b>True の</b>Microsoft Excel のマクロに制御を戻す前に処理するためのキーを待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-979">
              <b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span>
          </span>
          <span data-ttu-id="bd89b-980">
            <b>False</b>(または省略した場合) を処理するためのキーを待たずにマクロの実行を続行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-980">
              <b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-981">アクティブなアプリケーションにキー コードを転送します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-981">Sends keystrokes to the active application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-982">
            <para>このメソッドは、キー バッファーにキー入力を配置します。キーストロークを使用するメソッドを呼び出す前にいくつかの場合、このメソッドを呼び出す必要があります。<b>たとえば、ダイアログ ボックスにパスワードを送信する必要があります SendKeys</b>メソッドを呼び出すダイアログ ボックスを表示する前にします</para>。
          <para>、<paramref name="Keys" />の引数は、いずれか 1 つのキーまたは alt キーを押し、ctrl キーまたは shift キーを押し (またはこれらのキーの任意の組み合わせ) と組み合わせて、任意のキーを指定できます。各キーは、文字"a"など、1 つまたは複数の文字で表されます、"{}"の入力、ENTER キーまたは</para>。(たとえば、ENTER キーまたは TAB)、対応するキーを押したときに表示されていない文字を使用して、次の表に示すコードを指定するのには
          <para>です。テーブル内の各コードは、キーボードのキーが 1 つを表します</para>。
          <list type="table"><item><term>バック</term><description>{backspace キー} または {BS}</description></item><item><description>{分割}</description><term>分割</term></item><item><term>CAPS LOCK</term><description>{CAPSLOCK}</description></item><item><term>クリア</term><description>{クリア}</description></item><item><term>DEL キーまたは</term><description>{削除} または {DEL}</description></item><item><term>↓</term><description>{ダウン}</description></item><item><term>終了</term><description>{終了}</description></item><item><term>ENTER</term><description>~ (チルダ)</description></item><item><description>指定}</description>の
              <term>入力 (テンキー)</term></item><item><term>ESC</term><description>{エスケープ} または {ESC}</description></item><item><term>F15 を通じて F1</term><description>{F1} から {F15}</description></item><item><description>{ヘルプ}</description><term>ヘルプ</term></item><item><description>{ホーム}</description><term>ホーム</term></item><item><term>INS</term>は
              <description>{挿入}</description></item><item><term>左向き矢印</term><description>{左}</description></item><item><term>NUM LOCK</term><description>{NUMLOCK}</description></item><item><term>ページ ダウン</term><description>{しました。</description></item><item><term>ページ アップ</term><description>{PGUP}</description></item><item><description>{返す}</description><term>を返します</term></item><item><term>右向き矢印</term><description>{右}</description></item><item><term>スクロール ロック</term><description>{SCROLLLOCK}</description></item><item><term>タブ</term><description>] タブ {}</description></item><item><term>↑</term><description>{を}</description></item></list><para>Shift キーや ctrl キーと alt キーと組み合わせるキーを指定することもできます。別のキーと組み合わせるキーを指定するには、次の表を使用します</para>。
          <list type="table"><item><term>SHIFT</term><description>+ (プラス記号)</description></item><item><term>CTRL</term><description>^ (キャレット)</description></item><item><description>% (パーセント記号)</description>の
              <term>alt キーを押し</term></item></list><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-982">
              <para>This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</para>
              <para>The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName">
          <span data-ttu-id="bd89b-983">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-983">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-984">ユーザー設定のオート フォーマットの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-984">Specifies the name of a custom autoformat.</span>
          </span>
          <span data-ttu-id="bd89b-985">この名前は、ユーザー設定オート フォーマットを示す文字列または組み込みグラフ テンプレートを指定する特別な定数<b>xlBuiltIn</b>を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-985">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="bd89b-986">オプションのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-986">Optional Object.</span>
          </span>
          <span data-ttu-id="bd89b-987">ギャラリーの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-987">Specifies the name of a gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-988">新しいグラフを作成するときに Microsoft Excel を使用するグラフ テンプレートの名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-988">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl">
          <span data-ttu-id="bd89b-989">チェックするサイトの URL を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-989">The URL of site to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-990">指定した URL のサイトで実行されている SharePoint Foundation インスタンスのバージョン番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-990">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd89b-991">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-991">
              <b>Integer</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-992">返します、<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />作業中のブックのすべてのシートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-992">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-993">返すまたは、Microsoft Excel は、新しいブックに自動的に挿入されるシート数を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-993">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-994">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-994">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-995">
            <b>True の</b>場合、グラフにヒント名を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-995">
              <b>True</b> if charts show chart tip names.</span>
          </span>
          <span data-ttu-id="bd89b-996">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-996">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-997">
            <b>True の</b>場合、グラフにヒント値を表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-997">
              <b>True</b> if charts show chart tip values.</span>
          </span>
          <span data-ttu-id="bd89b-998">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-998">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-999">取得または設定する<b>ブール値</b>をリボンに [開発] タブが表示されるかどうかを表す。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-999">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span>
          </span>
          <span data-ttu-id="bd89b-1000">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1000">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1001">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1001">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1002">
            <para>このプロパティは、[開発] タブで、[Excel のオプション] ダイアログ ボックスで、[リボン] チェック ボックスに対応します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1002">
              <para>This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1003">
            <b>ブール値</b>を表す、ブック ウィンドウ内を右クリックしたときにミニ ツールバーを表示するかどうかを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1003">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span>
          </span>
          <span data-ttu-id="bd89b-1004">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1004">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1005">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1005">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1006">選択項目の迅速な分析のコンテキストのユーザー インターフェイスが表示されるかどうかを制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1006">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span>
          </span>
          <span data-ttu-id="bd89b-1007">クイック分析ボタンを表示する<b>場合は TRUE</b>を意味します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1007">
              <b>TRUE</b> means the Quick Analysis button will show.</span>
          </span>
          <span data-ttu-id="bd89b-1008">迅速な分析を表示するオプション、ファイル] メニューの [<b>オプション]、[Excel のオプション</b>で、[全般] タブの読み取り/書き込みにあるチェック ボックスの選択に対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1008">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span>
          </span>
          <span data-ttu-id="bd89b-1009">
            <b>ブール値</b>(<b>bool</b>では C#) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1009">
              <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1010">値を取得または設定する<b>ブール値</b>を表す、ユーザーがテキストを選択したときにミニ ツールバーを表示するかどうか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1010">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span>
          </span>
          <span data-ttu-id="bd89b-1011">値の取得および設定が可能です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1011">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1012">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1012">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1013">
            <para>の表示時にミニ バー、[Excel のオプション] ダイアログ ボックスでの選択] チェック ボックスと対応します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1013">
              <para>Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1014">Microsoft Excel のアプリケーションに、[新しいブック] 作業ウィンドウが表示される場合は<b>True</b> (既定値) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1014">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1015">
            <b>True</b>ツール ヒントが有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1015">
              <b>True</b> if ToolTips are turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1016">このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1016">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1017">アプリケーションで現在読み込まれている色のスタイルのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1017">Gets the set of color styles that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1018">アプリケーションで現在読み込まれている色のスタイルのセットです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1018">The set of color styles that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1019">
            <para>読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1019">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1020">アプリケーションで現在読み込まれている SmartArt レイアウトのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1020">Gets the set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1021">アプリケーションで現在読み込まれている SmartArt レイアウトのセットです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1021">The set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1022">
            <para>読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1022">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1023">アプリケーションで現在読み込まれている SmartArt クイック スタイルのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1023">Gets the set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1024">アプリケーションで現在読み込まれている SmartArt クイック スタイルのセットです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1024">The set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1025">
            <para>読み取り専用</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1025">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1026">返します、<see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" />アプリケーションのコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1026">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1027">返します、<see cref="T:Microsoft.Office.Interop.Excel.Speech" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1027">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1028">返します、 <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> 、アプリケーションのスペル チェックのオプションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1029">標準のフォントの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1029">Returns or sets the name of the standard font.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1030">
            <para>このプロパティを使用するには、標準のフォントを変更する場合、変更が反映されません Excel を再起動するまでです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1030">
              <para>If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1031">標準のフォント サイズをポイント単位で設定を取得または取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1031">Returns or sets the standard font size, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1032">
            <para>このプロパティを使用して、標準のフォント サイズを変更する場合、変更が反映されません Excel を再起動するまでです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1032">
              <para>If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1033">最後の区切り記号を除く、[スタートアップ] フォルダーの絶対パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1033">Returns the complete path of the startup folder excluding the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1034">取得またはステータス バーのテキストを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1034">Returns or sets the text in the status bar.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1035">
            <b>
              <para>このプロパティは false 場合は、Excel のステータス バー コントロールには。既定のステータス バーのテキストを復元するにプロパティを設定する<b>場合は False</b>です。これは、ステータス バーが表示されていない場合でも機能します</para>
            </b>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1035">
              <para>This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="bd89b-1036">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1036">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1037">テンプレートが保存されるローカル パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1037">Returns the local path where templates are stored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1038">としてセルのユーザー定義関数を呼び出しているを返します、<see cref="T:Microsoft.Office.Interop.Excel.Range" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1038">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1039">
            <para>プロパティまたはメソッド<b>については、ユーザー定義関数の内部で</b>、ユーザーがアクセスしないようにします。ユーザーは後で使用できる<b>範囲</b>のオブジェクトをキャッシュし、再計算が完了したら、追加アクションを実行します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1039">
              <para>Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function. Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1040">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> 、現在のマクロ コードが実行されているブックを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1040">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1041">
            <para>このプロパティを使用して、マクロ コードを含むブックを参照してください。<b>ThisWorkbook</b>では、アドイン ブックをアドイン自体の内部を参照する唯一の方法です。<b>ActiveWorkbook</b>プロパティはアドイン ブックを返しません。アドインを呼び出しているブックを返します。<see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />プロパティが失敗する可能性があります、 <b>ThisWorkbook</b>がコードを実行しているブックを常に返しますので、ブック名が変更されたはおそらく、アドインを作成したときにします</para>。のみこのプロパティを使用する
          <para>Excel 内。ブックをほかのアプリケーションからアクセスするのには使用できません</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1041">
              <para>Use this property to refer to the workbook that contains your macro code. <b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself. The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in. The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in. <b>ThisWorkbook</b> always returns the workbook in which the code is running.</para>
              <para>This property can be used only from inside Excel. You cannot use it to access a workbook from any other application.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1042">数千に使用する文字を取得または設定<b>の文字列</b>の区切り記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1042">Sets or returns the character used for the thousands separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1043">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1043">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1044">Microsoft Excel のメイン ウィンドウの上端から画面の上端からポイント単位での距離です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1044">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="bd89b-1045">ウィンドウが最小化されている場合、このプロパティは画面上でのウィンドウのアイコンの位置を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1045">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1046">値を取得または設定、Excel メニュー キー、通常は「/」。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1046">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1047">Microsoft Excel のメニュー キーが押されたときに実行されるアクションを設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1047">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span>
          </span>
          <span data-ttu-id="bd89b-1048">
            <b>XlExcelMenus</b>または<b>xlLotusHelp</b>のいずれかを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1048">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1049">
            <b>真</b>の遷移のナビゲーション キーがアクティブな場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1049">
              <b>True</b> if transition navigation keys are active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1050">内部使用のため予約済みです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1050">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1051">最後のユーザー インターフェイスの操作をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1051">Cancels the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="bd89b-1052">
            <para>このメソッドでは、プロシージャを実行する前にユーザーが行った最後の操作だけを元に戻します。プロシージャの最初の行である必要があります</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1052">
              <para>This method undoes only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="bd89b-1053">
            <b>範囲</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1053">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1054">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1054">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="bd89b-1055">
            <b>範囲</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1055">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1056">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1056">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="bd89b-1057">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1057">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1058">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1058">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="bd89b-1059">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1059">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1060">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1060">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="bd89b-1061">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1061">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1062">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1062">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="bd89b-1063">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1063">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1064">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1064">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="bd89b-1065">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1065">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1066">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1066">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="bd89b-1067">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1067">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1068">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1068">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="bd89b-1069">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1069">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1070">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1070">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="bd89b-1071">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1071">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1072">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1072">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="bd89b-1073">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1073">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1074">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1074">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="bd89b-1075">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1075">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1076">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1076">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="bd89b-1077">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1077">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1078">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1078">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="bd89b-1079">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1079">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1080">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1080">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="bd89b-1081">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1081">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1082">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1082">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="bd89b-1083">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1083">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1084">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1084">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="bd89b-1085">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1085">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1086">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1086">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="bd89b-1087">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1087">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1088">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1088">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="bd89b-1089">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1089">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1090">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1090">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="bd89b-1091">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1091">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1092">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1092">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="bd89b-1093">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1093">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1094">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1094">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="bd89b-1095">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1095">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1096">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1096">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="bd89b-1097">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1097">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1098">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1098">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="bd89b-1099">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1099">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1100">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1100">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="bd89b-1101">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1101">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1102">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1102">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="bd89b-1103">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1103">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1104">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1104">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="bd89b-1105">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1105">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1106">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1106">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="bd89b-1107">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1107">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1108">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1108">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="bd89b-1109">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1109">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1110">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1110">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="bd89b-1111">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1111">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1112">複数の <b>Range</b> オブジェクトを指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1112">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-1113">2 つ以上のセル範囲の集合を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1113">Returns the union of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1114">ウィンドウで、アプリケーション ウィンドウ領域で、ポイントで使用できる領域の高さの最大値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1114">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1115">ポイント単位でのアプリケーションのウィンドウ領域で、ウィンドウが占有できる領域の最大幅を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1115">Returns the maximum width of the space that a window can occupy in the application window area in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1116">取得または Microsoft Excel でユーザー定義関数は、XLL アドインを使用して計算クラスター上で実行するかどうかを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1116">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1117">
            <b>true の</b>場合、Excel でユーザー定義関数は XLL アドインを使用して計算クラスター上で実行する、それ以外の場合、 <b>false を指定</b>します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1117">
              <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="bd89b-1118">
            <para>読み取り/書き込み</para>。
          <para>の
            <b>true の</b>場合、Excel でユーザー定義関数は XLL アドインを使用して計算クラスター上で実行する、; それ以外の場合は<b>false を指定</b>します。設定、<see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />プロパティは、[Excel のオプション] ダイアログ ボックスの詳細設定] カテゴリで [数式] 計算クラスター チェック ボックス上で実行できるようにするユーザー定義 XLL 関数に対応します</para>。
          <para><b>注</b>: を有効にするのには、<see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />プロパティが高パフォーマンス コンピューティング (HPC) クラスター コネクタをインストールする必要があります。クラスター コネクタを使用すると、パフォーマンス向上のため、HPC クラスター上でクラスター セーフな XLL 関数をリモートで実行します</para>。
          <para>設定後、<see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />プロパティを使用して、 <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> 、HPC クラスターへのコネクタを使用してを指定するプロパティ</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1118">
              <para>Read/write.</para>
              <para>
                <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>. The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1119">返します、<see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" />のブックに割り当てられたオブジェクトを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1120">
            <b>True</b>の場合、アプリケーションが表示、または作成またはユーザーによって開始されたことです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1120">
              <b>True</b> if the application is visible or if it was created or started by the user.</span>
          </span>
          <span data-ttu-id="bd89b-1121">
            <b>False</b>を作成または、 <b>CreateObject</b>または<b>GetObject</b>関数と、アプリケーションを使用してプログラムを使用してアプリケーションを起動する場合は表示されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1121">
              <b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1122">
            <para>オブジェクトは、そのオブジェクトの<b>UserControl</b>プロパティが<b>False</b>の場合は、オブジェクトへの最後のプログラム参照が解放されるときに解放されます。セッションの最後のオブジェクトが解放されるときにこのプロパティが<b>False</b>の場合は、Microsoft Excel が終了します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1122">
              <para>When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released. If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1123">場所に、COM アドインがインストールされているユーザーのコンピューター上のパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1123">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1124">現在のユーザーの名前を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1124">Returns or sets the name of the current user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1125">
            <b>場合は true。</b>(既定) Microsoft Excel のシステムの桁区切りが有効になっている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1125">
              <b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1126">"Microsoft Excel"を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1126">Returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1127">Visual Basic エディターを表す <b>VBE</b> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1127">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1128">Microsoft Excel のバージョン番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1128">Returns the Microsoft Excel version number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1129">オブジェクトを表示するかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1129">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile">
          <span data-ttu-id="bd89b-1130">省略可能な<b>オブジェクト</b>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1131">
            <b>True</b>として揮発性関数をマークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1131">
              <b>True</b> to mark the function as volatile.</span>
          </span>
          <span data-ttu-id="bd89b-1132">
            <b>False を指定</b>する関数では、不揮発性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1132">
              <b>False</b> to mark the function as nonvolatile.</span>
          </span>
          <span data-ttu-id="bd89b-1133">既定値は <b>True</b> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1133">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-p364">ユーザー定義関数を自動再計算関数にします。自動再計算関数は、ワークシートのいずれかのセルで計算が行われるたびに再計算を行います。これに対して非自動再計算関数では、入力した変数の値が変わったときにだけ再計算を行います。このメソッドは、ワークシートのセルを計算するユーザー定義関数の内部で使わなければ効果がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-p364">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">
          <span data-ttu-id="bd89b-1138">
            <b>オブジェクト</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1138">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="bd89b-1139">マクロを Microsoft Excel の日付に再開する時刻の書式を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1139">The time at which you want the macro to resume in Microsoft Excel date format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd89b-1140">指定した時刻までには、実行中のマクロを停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1140">Pauses a running macro until a specified time.</span>
          </span>
          <span data-ttu-id="bd89b-1141">指定した時間に達した場合に<b>True</b>を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1141">Returns <b>True</b> if the specified time has arrived.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="bd89b-1142">
            <para>
              <b>重要</b>: <b>Wait</b>メソッドは、Microsoft Excel のすべてのアクティビティを一時中断し、<b>待機</b>の実行中に、コンピューター上の他の操作を実行することが防止されます。ただし、バック グラウンド ・ プロセス印刷や再計算を続行します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1142">
              <para>
                <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect. However, background processes such as printing and recalculation continue.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1143">
            <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />プロパティを<b>True</b>に設定するとは、開発者は既存の関数名を使用して新しい関数を作成しようとする場合にアラートを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1143">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span>
          </span>
          <span data-ttu-id="bd89b-1144">ブール型 ( <b>Boolean</b>) の値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1144">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd89b-1145">
            <b>ブール型 (Boolean)</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1145">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1146">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> 、ワークシートを再計算するときに追跡される範囲を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1147">アプリケーション ウィンドウの右側の枠の左端からポイント単位での距離です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1147">The distance, in points, from the left edge of the application window to its right edge.</span>
          </span>
          <span data-ttu-id="bd89b-1148">ウィンドウが最小化されている場合、このプロパティは読み取り専用で、ウィンドウのアイコンの幅を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1148">If the window is minimized, this property is read-only and returns the width of the window icon.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1149">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> 、すべてのブック内のすべてのウィンドウを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1149">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1150">
            <para>このプロパティの表示と非表示の両方の windows コレクションを返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1150">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1151">
            <b>True</b>ペン コンピューティングの Microsoft Windows でコンピューターが実行されている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1151">
              <b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1152">ウィンドウの状態を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1152">Returns or sets the state of the window.</span>
          </span>
          <span data-ttu-id="bd89b-1153">読み取り/書き込み<see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1153">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1154">
            <para>
              <b>可能</b>には、これら<b>が可能</b>定数のいずれかを指定できます:</para>
            <para>
              <b>xlMaximized</b>
            </para>
            <para>
              <b>xlNormal</b>
            </para>
            <para>
              <b>xlMinimized</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1154">
              <para>
                <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</para>
              <para>
                <b>xlMaximized</b>
              </para>
              <para>
                <b>xlNormal</b>
              </para>
              <para>
                <b>xlMinimized</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1155">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> 、すべての開いているブックを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1155">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1156">
            <para>
              <b>ブック</b>プロパティによって返されるコレクションには、アドインでは特殊な非表示のブックが含まれていません。できます、ただし、表示、1 つ開いているアドインをファイル名がわかっている場合。などの開いているアドインの<b>ブック</b>オブジェクトとして"Oscar.xla"という名前の Workbooks("Oscar.xla") を返します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1156">
              <para>The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook. You can, however, return a single open add-in if you know the file name. For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1157">返します、<see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1157">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd89b-1158">返します、<see cref="T:Microsoft.Office.Interop.Excel.Sheets" />作業中のブックのすべてのワークシートを表すコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1158">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="bd89b-1159">
            <para>このプロパティは、マクロ シートを返しませんので、<see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />プロパティまたは<see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />これらのシートを返すプロパティです</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd89b-1159">
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>