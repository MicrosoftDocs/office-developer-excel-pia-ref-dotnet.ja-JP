<Type Name="ConnectorFormat" FullName="Microsoft.Office.Interop.Excel.ConnectorFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15dfc4a010303c9d647a7f5b002c66763a3fdc79" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20586115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ConnectorFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ConnectorFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ConnectorFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ConnectorFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0de34-101">コネクタに設定されるプロパティとメソッドが含まれます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0de34-101">Contains properties and methods that apply to connectors.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="0de34-102">
        <para>A コネクタは、接続点と呼ばれる時点で他の 2 つの図形を接続する線です。接続されている図形の配置を変更する場合コネクタのジオメトリは自動的に調整する図形の接続を維持するためです</para>。使用の
      <para>、 <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> 、 <b>ConnectorFormat</b>オブジェクトを取得するプロパティです。使用して、<see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />と<see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />の文書の他の図形にコネクタの端を接続するためのメソッドです。使用して、 <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> 、コネクタで接続されている 2 つの図形間の最短経路を自動的に検出する方法です。使用して、 <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> 、図形がコネクタであるかどうかを確認するプロパティ</para>。
      <para>を割り当てることの大きさと位置にコネクタを追加すると、メモ、<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />コレクションですが、サイズと位置が自動的に調整先頭と、コネクタの終点をコレクション内の他の図形に接続するとします。したがって、他の図形にコネクタを接続する場合は、初期のサイズと位置を指定する、関係ありません。同様に、指定するコネクタを接続するが、接続されているコネクタの後、 <b>RerouteConnections</b>メソッドを使用するときにコネクタを接続する図形には、どの接続サイト コネクタの接続には、どの接続サイトを変更することがあります。無関係なサイトの接続の選択を作成します</para>。
      <para>接続サイトは一般に次の表に示す規則に従って番号が付けられます</para>。
      <list type="table"><item><term>オートシェイプ、ワードアート、ピクチャ、および OLE オブジェクト</term><description>接続サイトは、上から、反時計回りに進行中に番号が付けられます</description></item>。
        <item><term>フリー フォーム</term><description>接続サイトには、頂点と頂点番号に対応します</description></item></list>。
      <para></para></span>
      <span class="sxs-lookup">
        <span data-stu-id="0de34-102">
          <para>A connector is a line that attaches two other shapes at points called connection sites. If you rearrange shapes that are connected, the geometry of the connector will be automatically adjusted so that the shapes remain connected.</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> property to return a <b>ConnectorFormat</b> object. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> and <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> methods to attach the ends of the connector to other shapes in the document. Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method to automatically find the shortest path between the two shapes connected by the connector. Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> property to see whether a shape is a connector.</para>
          <para>Note that you assign a size and a position when you add a connector to the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection, but the size and position are automatically adjusted when you attach the beginning and end of the connector to other shapes in the collection. Therefore, if you intend to attach a connector to other shapes, the initial size and position you specify are irrelevant. Likewise, you specify which connection sites on a shape to attach the connector to when you attach the connector, but using the <b>RerouteConnections</b> method after the connector is attached may change which connection sites the connector attaches to, making your original choice of connection sites irrelevant.</para>
          <para>Connection sites are generally numbered according to the rules presented in the following table.</para>
          <list type="table">
            <item>
              <term>AutoShapes, WordArt, pictures, and OLE objects</term>
              <description>The connection sites are numbered starting at the top and proceeding counterclockwise.</description>
            </item>
            <item>
              <term>Freeforms</term>
              <description>The connection sites are the vertices, and they correspond to the vertex numbers.</description>
            </item>
          </list>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-103">返します、 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 、Microsoft Excel アプリケーションを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public void BeginConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="0de34-104">必要な<see cref="T:Microsoft.Office.Interop.Excel.Shape" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-104">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="0de34-105">コネクタの始点を接続する図形を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-105">The shape to attach the beginning of the connector to.</span>
          </span>
          <span data-ttu-id="0de34-106">指定された<b>Shape</b>オブジェクトが同じである必要があります<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />コネクタとしてのコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-106">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="0de34-107">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-107">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0de34-108">指定された図形上の接続サイト<paramref name="ConnectedShape" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-108">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="0de34-109">1 ~ によって返される整数の整数にする必要があります、 <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> 、指定した図形のプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-109">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="0de34-110">コネクタが自動的に接続する 2 つの図形間の最短経路を検索する場合は、この引数に有効な整数を指定しを使用して、<see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" />メソッドで図形にコネクタを接続した後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-110">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0de34-111">指定されたコネクタの始点を指定された図形に接続します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-111">Attaches the beginning of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0de34-112">
            <para>別の図形とコネクタの始点との間の接続が既に存在して、その接続は解除されます。コネクタの始点を指定した結合点に位置していない場合、このメソッドは、コネクタの始点を結合点に移動し、サイズとコネクタの位置を調整します。使用して、 <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> 、コネクタの終点を図形に接続します</para>。
          <para>ために必要な場合にサイズとコネクタの位置を自動的に調整オブジェクトにコネクタを接続するとします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-112">
              <para>If there’s already a connection between the beginning of the connector and another shape, that connection is broken. If the beginning of the connector isn’t already positioned at the specified connecting site, this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the end of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState BeginConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState BeginConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState BeginConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-113">
            <b>True</b>指定されたコネクタの始点が図形に接続されている場合です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-113">
              <b>True</b> if the beginning of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-114">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />
              <b>msotristate クラス</b>の定数は次のいずれか:</para>
            <para>
              <b>msoCTrue</b>
            </para>
            <para>
              <b>msoFalse</b>
            </para>
            <para>
              <b>msoTriStateMixed</b>
            </para>
            <para>
              <b>msoTriStateToggle</b>
            </para>
            <para>
              <b>msoTrue</b>指定したコネクタの始点が図形に接続します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-114">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoCTrue</b>
              </para>
              <para>
                <b>msoFalse</b>
              </para>
              <para>
                <b>msoTriStateMixed</b>
              </para>
              <para>
                <b>msoTriStateToggle</b>
              </para>
              <para>
                <b>msoTrue</b> The beginning of the specified connector is connected to a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape BeginConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape BeginConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ BeginConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-115">返します、<see cref="T:Microsoft.Office.Interop.Excel.Shape" />に指定されたコネクタの始点が接続されている図形を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-115">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-116">
            <para>場合は、指定されたコネクタの始点が図形に接続されていない、このエラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-116">
              <para>If the beginning of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectionSite">
      <MemberSignature Language="C#" Value="public int BeginConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeginConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BeginConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-117">コネクタの終点が接続されている結合点を表す整数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-117">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-118">
            <para>場合は、指定されたコネクタの終点が図形に接続されていない、このエラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-118">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public void BeginDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1753)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0de34-119">接続している図形から指定したコネクタの始点をデタッチします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-119">Detaches the beginning of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0de34-120">
            <para>
              <b>BeginDisconnect</b>メソッドは、コネクタの配置やサイズを変更しません。コネクタの始点がそのまま残りますが、接続が接続されていません。使用、 <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> 、図形からコネクタの終点にします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-120">
              <para>The <b>BeginDisconnect</b> method doesn’t alter the size or position of the connector. The beginning of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> method to detach the end of the connector from a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-121">現在のオブジェクトが作成されたアプリケーションを示す 32 ビットの整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-122">
            <para>オブジェクトを Microsoft excel で作成した場合、このプロパティは文字列 XCEL を 16 進数の番号 5843454 C を返します</para>
            <para>
              <b>作成者</b>プロパティは、各アプリケーションが 4 文字のクリエーター コードを持つ Macintosh の Excel で使用するよう設計されています。たとえば、Excel では、クリエーター コード</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-122">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1754)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">
          <span data-ttu-id="0de34-123">必要な<see cref="T:Microsoft.Office.Interop.Excel.Shape" />オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-123">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span>
          </span>
          <span data-ttu-id="0de34-124">コネクタの終点を接続する図形を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-124">The shape to attach the end of the connector to.</span>
          </span>
          <span data-ttu-id="0de34-125">指定された<b>Shape</b>オブジェクトが同じである必要があります<see cref="T:Microsoft.Office.Interop.Excel.Shapes" />コネクタとしてのコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-125">The specified <b>Shape</b> object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection as the connector.</span>
          </span>
        </param>
        <param name="ConnectionSite">
          <span data-ttu-id="0de34-126">
            <b>整数</b>が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-126">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="0de34-127">指定された図形上の接続サイト<paramref name="ConnectedShape" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-127">A connection site on the shape specified by <paramref name="ConnectedShape" />.</span>
          </span>
          <span data-ttu-id="0de34-128">1 ~ によって返される整数の整数にする必要があります、 <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> 、指定した図形のプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-128">Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> property of the specified shape.</span>
          </span>
          <span data-ttu-id="0de34-129">コネクタが自動的に接続する 2 つの図形間の最短経路を検索する場合は、この引数に有効な整数を指定しを使用して、<see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" />メソッドで図形にコネクタを接続した後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-129">If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> method after the connector is attached to shapes at both ends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0de34-130">指定されたコネクタの終点を指定された図形に接続します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-130">Attaches the end of the specified connector to a specified shape.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0de34-131">
            <para>別の図形とコネクタの終点の間の接続が既に存在して、その接続は解除されます。コネクタの終点指定した結合点に位置していない場合、このメソッドは、コネクタの終点を接続しているサイトに移動し、サイズとコネクタの位置を調整します。使用して、 <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> 、コネクタの始点を図形に接続します</para>。
          <para>ために必要な場合にサイズとコネクタの位置を自動的に調整オブジェクトにコネクタを接続するとします</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-131">
              <para>If there’s already a connection between the end of the connector and another shape, that connection is broken. If the end of the connector isn’t already positioned at the specified connecting site, this method moves the end of the connector to the connecting site and adjusts the size and position of the connector. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> method to attach the beginning of the connector to a shape.</para>
              <para>When you attach a connector to an object, the size and position of the connector are automatically adjusted if necessary.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState EndConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState EndConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState EndConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-132">
            <b>msoTrue</b>指定したコネクタの終点が図形に接続されている場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-132">
              <b>msoTrue</b> if the end of the specified connector is connected to a shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-133">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoTriState" />以下の<b>msotristate クラス</b>の定数のいずれか:</para>
            <para>
              <b>msoFalse</b>指定したコネクタの終点が図形に接続できません</para>。
          <para><b>msoTrue</b>指定したコネクタの終点が図形に接続します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-133">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoTriState" /> can be one of the following <b>MsoTriState</b> constants:</para>
              <para>
                <b>msoFalse</b> The end of the specified connector is not connected to a shape.</para>
              <para>
                <b>msoTrue</b> The end of the specified connector is connected to a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape EndConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape EndConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ EndConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-134">返します、<see cref="T:Microsoft.Office.Interop.Excel.Shape" />に指定されたコネクタの終点が接続されている図形を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-134">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape that the end of the specified connector is attached to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-135">
            <para>場合は、指定されたコネクタの終点が図形に接続されていない、このエラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-135">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectionSite">
      <MemberSignature Language="C#" Value="public int EndConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-136">コネクタの終点が接続されている結合点を表す整数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-136">Returns an integer that specifies the connection site that the end of a connector is connected to.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-137">
            <para>場合は、指定されたコネクタの終点が図形に接続されていない、このエラーが発生します</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-137">
              <para>If the end of the specified connector isn’t attached to a shape, this property generates an error.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1755)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0de34-138">指定したコネクタに接続している図形の終点を切り離します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-138">Detaches the end of the specified connector from the shape it’s attached to.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="0de34-139">
            <para>このメソッドは、コネクタの配置やサイズを変更しません。 コネクタの終点はそのまま残りますが、接続が接続されていません。使用して、<see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />図形からコネクタの始点をデタッチする方法です</para>。
          <para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-139">
              <para>This method doesn’t alter the size or position of the connector; the end of the connector remains positioned at a connection site but is no longer connected. Use the <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> method to detach the beginning of the connector from a shape.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-140">指定されたオブジェクトの親オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-140">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoConnectorType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoConnectorType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As MsoConnectorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoConnectorType Type { Microsoft::Office::Core::MsoConnectorType get(); void set(Microsoft::Office::Core::MsoConnectorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoConnectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0de34-141">コネクタの書式の種類を設定または返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-141">Returns or sets the connector format type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="0de34-142">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoConnectorType" />
              <b>MsoConnectorType</b>定数は、次のいずれか:</para>
            <para>
              <b>msoConnectorCurve</b>
            </para>
            <para>
              <b>msoConnectorElbow</b>
            </para>
            <para>
              <b>msoConnectorStraight</b>
            </para>
            <para>
              <b>msoConnectorTypeMixed</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0de34-142">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> can be one of the following <b>MsoConnectorType</b> constants:</para>
              <para>
                <b>msoConnectorCurve</b>
              </para>
              <para>
                <b>msoConnectorElbow</b>
              </para>
              <para>
                <b>msoConnectorStraight</b>
              </para>
              <para>
                <b>msoConnectorTypeMixed</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>